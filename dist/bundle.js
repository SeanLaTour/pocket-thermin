/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var t={948:(t,e,n)=>{var s=n(140),r=n(980),i=n(730),a=n(405),o=n(26),l=n(865),u=n(721);u.alea=s,u.xor128=r,u.xorwow=i,u.xorshift7=a,u.xor4096=o,u.tychei=l,t.exports=u},140:function(t,e,n){var s;!function(t,r,i){function a(t){var e,n=this,s=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var s=.02519603282416938*(e+=t.charCodeAt(n));s-=e=s>>>0,e=(s*=e)>>>0,e+=4294967296*(s-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(t),n.s0<0&&(n.s0+=1),n.s1-=s(t),n.s1<0&&(n.s1+=1),n.s2-=s(t),n.s2<0&&(n.s2+=1),s=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function l(t,e){var n=new a(t),s=e&&e.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.alea=l}(0,t=n.nmd(t),n.amdD)},865:function(t,e,n){var s;!function(t,r,i){function a(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,s=e.d,r=e.a;return t=t<<25^t>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-s|0,e.d=s<<16^n>>>16^r,e.a=r-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var s=0;s<n.length+20;s++)e.b^=0|n.charCodeAt(s),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function l(t,e){var n=new a(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.tychei=l}(0,t=n.nmd(t),n.amdD)},980:function(t,e,n){var s;!function(t,r,i){function a(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var s=0;s<n.length+64;s++)e.x^=0|n.charCodeAt(s),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function l(t,e){var n=new a(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xor128=l}(0,t=n.nmd(t),n.amdD)},26:function(t,e,n){var s;!function(t,r,i){function a(t){var e=this;e.next=function(){var t,n,s=e.w,r=e.X,i=e.i;return e.w=s=s+1640531527|0,n=r[i+34&127],t=r[i=i+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=r[i]=n^t,e.i=i,n+(s^s>>>16)|0},function(t,e){var n,s,r,i,a,o=[],l=128;for(e===(0|e)?(s=e,e=null):(e+="\0",s=0,l=Math.max(l,e.length)),r=0,i=-32;i<l;++i)e&&(s^=e.charCodeAt((i+32)%e.length)),0===i&&(a=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,i>=0&&(a=a+1640531527|0,r=0==(n=o[127&i]^=s+a)?r+1:0);for(r>=128&&(o[127&(e&&e.length||0)]=-1),r=127,i=512;i>0;--i)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;t.w=a,t.X=o,t.i=r}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&(s.X&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xor4096=l}(0,t=n.nmd(t),n.amdD)},405:function(t,e,n){var s;!function(t,r,i){function a(t){var e=this;e.next=function(){var t,n,s=e.x,r=e.i;return t=s[r],n=(t^=t>>>7)^t<<24,n^=(t=s[r+1&7])^t>>>10,n^=(t=s[r+3&7])^t>>>3,n^=(t=s[r+4&7])^t<<7,t=s[r+7&7],n^=(t^=t<<13)^t<<9,s[r]=n,e.i=r+1&7,n},function(t,e){var n,s=[];if(e===(0|e))s[0]=e;else for(e=""+e,n=0;n<e.length;++n)s[7&n]=s[7&n]<<15^e.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],t.x=s,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&(s.x&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xorshift7=l}(0,t=n.nmd(t),n.amdD)},730:function(t,e,n){var s;!function(t,r,i){function a(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var s=0;s<n.length+64;s++)e.x^=0|n.charCodeAt(s),s==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function l(t,e){var n=new a(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xorwow=l}(0,t=n.nmd(t),n.amdD)},721:(t,e,n)=>{var s;!function(r,i){var a,o=this,l=256,u="random",c=i.pow(l,6),h=i.pow(2,52),p=2*h,d=l-1;function f(t,e,n){var s=[],d=b(y((e=1==e?{entropy:!0}:e||{}).entropy?[t,x(r)]:null==t?function(){try{var t;return a&&(t=a.randomBytes)?t=t(l):(t=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(t)),x(t)}catch(t){var e=o.navigator,n=e&&e.plugins;return[+new Date,o,n,o.screen,x(r)]}}():t,3),s),f=new m(s),v=function(){for(var t=f.g(6),e=c,n=0;t<h;)t=(t+n)*l,e*=l,n=f.g(1);for(;t>=p;)t/=2,e/=2,n>>>=1;return(t+n)/e};return v.int32=function(){return 0|f.g(4)},v.quick=function(){return f.g(4)/4294967296},v.double=v,b(x(f.S),r),(e.pass||n||function(t,e,n,s){return s&&(s.S&&g(s,f),t.state=function(){return g(f,{})}),n?(i[u]=t,e):t})(v,d,"global"in e?e.global:this==i,e.state)}function m(t){var e,n=t.length,s=this,r=0,i=s.i=s.j=0,a=s.S=[];for(n||(t=[n++]);r<l;)a[r]=r++;for(r=0;r<l;r++)a[r]=a[i=d&i+t[r%n]+(e=a[r])],a[i]=e;(s.g=function(t){for(var e,n=0,r=s.i,i=s.j,a=s.S;t--;)e=a[r=d&r+1],n=n*l+a[d&(a[r]=a[i=d&i+e])+(a[i]=e)];return s.i=r,s.j=i,n})(l)}function g(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function y(t,e){var n,s=[],r=typeof t;if(e&&"object"==r)for(n in t)try{s.push(y(t[n],e-1))}catch(t){}return s.length?s:"string"==r?t:t+"\0"}function b(t,e){for(var n,s=t+"",r=0;r<s.length;)e[d&r]=d&(n^=19*e[d&r])+s.charCodeAt(r++);return x(e)}function x(t){return String.fromCharCode.apply(0,t)}if(i["seed"+u]=f,b(i.random(),r),t.exports){t.exports=f;try{a=n(914)}catch(t){}}else void 0===(s=function(){return f}.call(e,n,e,t))||(t.exports=s)}([],Math)},129:(t,e,n)=>{var s=n(626),r=n(477),i=n(868),a=n(197),o=n(954),l=n(408),u=n(662);u.alea=s,u.xor128=r,u.xorwow=i,u.xorshift7=a,u.xor4096=o,u.tychei=l,t.exports=u},626:function(t,e,n){var s;!function(t,r,i){function a(t){var e,n=this,s=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var s=.02519603282416938*(e+=t.charCodeAt(n));s-=e=s>>>0,e=(s*=e)>>>0,e+=4294967296*(s-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(t),n.s0<0&&(n.s0+=1),n.s1-=s(t),n.s1<0&&(n.s1+=1),n.s2-=s(t),n.s2<0&&(n.s2+=1),s=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function l(t,e){var n=new a(t),s=e&&e.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.alea=l}(0,t=n.nmd(t),n.amdD)},408:function(t,e,n){var s;!function(t,r,i){function a(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,s=e.d,r=e.a;return t=t<<25^t>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-s|0,e.d=s<<16^n>>>16^r,e.a=r-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var s=0;s<n.length+20;s++)e.b^=0|n.charCodeAt(s),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function l(t,e){var n=new a(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.tychei=l}(0,t=n.nmd(t),n.amdD)},477:function(t,e,n){var s;!function(t,r,i){function a(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var s=0;s<n.length+64;s++)e.x^=0|n.charCodeAt(s),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function l(t,e){var n=new a(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xor128=l}(0,t=n.nmd(t),n.amdD)},954:function(t,e,n){var s;!function(t,r,i){function a(t){var e=this;e.next=function(){var t,n,s=e.w,r=e.X,i=e.i;return e.w=s=s+1640531527|0,n=r[i+34&127],t=r[i=i+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=r[i]=n^t,e.i=i,n+(s^s>>>16)|0},function(t,e){var n,s,r,i,a,o=[],l=128;for(e===(0|e)?(s=e,e=null):(e+="\0",s=0,l=Math.max(l,e.length)),r=0,i=-32;i<l;++i)e&&(s^=e.charCodeAt((i+32)%e.length)),0===i&&(a=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,i>=0&&(a=a+1640531527|0,r=0==(n=o[127&i]^=s+a)?r+1:0);for(r>=128&&(o[127&(e&&e.length||0)]=-1),r=127,i=512;i>0;--i)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;t.w=a,t.X=o,t.i=r}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&(s.X&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xor4096=l}(0,t=n.nmd(t),n.amdD)},197:function(t,e,n){var s;!function(t,r,i){function a(t){var e=this;e.next=function(){var t,n,s=e.x,r=e.i;return t=s[r],n=(t^=t>>>7)^t<<24,n^=(t=s[r+1&7])^t>>>10,n^=(t=s[r+3&7])^t>>>3,n^=(t=s[r+4&7])^t<<7,t=s[r+7&7],n^=(t^=t<<13)^t<<9,s[r]=n,e.i=r+1&7,n},function(t,e){var n,s=[];if(e===(0|e))s[0]=e;else for(e=""+e,n=0;n<e.length;++n)s[7&n]=s[7&n]<<15^e.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],t.x=s,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&(s.x&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xorshift7=l}(0,t=n.nmd(t),n.amdD)},868:function(t,e,n){var s;!function(t,r,i){function a(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var s=0;s<n.length+64;s++)e.x^=0|n.charCodeAt(s),s==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function l(t,e){var n=new a(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xorwow=l}(0,t=n.nmd(t),n.amdD)},662:(t,e,n)=>{var s;!function(r,i){var a,o=this,l=256,u="random",c=i.pow(l,6),h=i.pow(2,52),p=2*h,d=l-1;function f(t,e,n){var s=[],d=b(y((e=1==e?{entropy:!0}:e||{}).entropy?[t,x(r)]:null==t?function(){try{var t;return a&&(t=a.randomBytes)?t=t(l):(t=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(t)),x(t)}catch(t){var e=o.navigator,n=e&&e.plugins;return[+new Date,o,n,o.screen,x(r)]}}():t,3),s),f=new m(s),v=function(){for(var t=f.g(6),e=c,n=0;t<h;)t=(t+n)*l,e*=l,n=f.g(1);for(;t>=p;)t/=2,e/=2,n>>>=1;return(t+n)/e};return v.int32=function(){return 0|f.g(4)},v.quick=function(){return f.g(4)/4294967296},v.double=v,b(x(f.S),r),(e.pass||n||function(t,e,n,s){return s&&(s.S&&g(s,f),t.state=function(){return g(f,{})}),n?(i[u]=t,e):t})(v,d,"global"in e?e.global:this==i,e.state)}function m(t){var e,n=t.length,s=this,r=0,i=s.i=s.j=0,a=s.S=[];for(n||(t=[n++]);r<l;)a[r]=r++;for(r=0;r<l;r++)a[r]=a[i=d&i+t[r%n]+(e=a[r])],a[i]=e;(s.g=function(t){for(var e,n=0,r=s.i,i=s.j,a=s.S;t--;)e=a[r=d&r+1],n=n*l+a[d&(a[r]=a[i=d&i+e])+(a[i]=e)];return s.i=r,s.j=i,n})(l)}function g(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function y(t,e){var n,s=[],r=typeof t;if(e&&"object"==r)for(n in t)try{s.push(y(t[n],e-1))}catch(t){}return s.length?s:"string"==r?t:t+"\0"}function b(t,e){for(var n,s=t+"",r=0;r<s.length;)e[d&r]=d&(n^=19*e[d&r])+s.charCodeAt(r++);return x(e)}function x(t){return String.fromCharCode.apply(0,t)}if(i["seed"+u]=f,b(i.random(),r),t.exports){t.exports=f;try{a=n(778)}catch(t){}}else void 0===(s=function(){return f}.call(e,n,e,t))||(t.exports=s)}([],Math)},377:(t,e,n)=>{var s=n(832),r=n(652),i=n(801),a=n(30),o=n(618),l=n(49),u=n(971);u.alea=s,u.xor128=r,u.xorwow=i,u.xorshift7=a,u.xor4096=o,u.tychei=l,t.exports=u},832:function(t,e,n){var s;!function(t,r,i){function a(t){var e,n=this,s=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var s=.02519603282416938*(e+=t.charCodeAt(n));s-=e=s>>>0,e=(s*=e)>>>0,e+=4294967296*(s-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(t),n.s0<0&&(n.s0+=1),n.s1-=s(t),n.s1<0&&(n.s1+=1),n.s2-=s(t),n.s2<0&&(n.s2+=1),s=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function l(t,e){var n=new a(t),s=e&&e.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.alea=l}(0,t=n.nmd(t),n.amdD)},49:function(t,e,n){var s;!function(t,r,i){function a(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,s=e.d,r=e.a;return t=t<<25^t>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-s|0,e.d=s<<16^n>>>16^r,e.a=r-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var s=0;s<n.length+20;s++)e.b^=0|n.charCodeAt(s),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function l(t,e){var n=new a(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.tychei=l}(0,t=n.nmd(t),n.amdD)},652:function(t,e,n){var s;!function(t,r,i){function a(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var s=0;s<n.length+64;s++)e.x^=0|n.charCodeAt(s),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function l(t,e){var n=new a(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xor128=l}(0,t=n.nmd(t),n.amdD)},618:function(t,e,n){var s;!function(t,r,i){function a(t){var e=this;e.next=function(){var t,n,s=e.w,r=e.X,i=e.i;return e.w=s=s+1640531527|0,n=r[i+34&127],t=r[i=i+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=r[i]=n^t,e.i=i,n+(s^s>>>16)|0},function(t,e){var n,s,r,i,a,o=[],l=128;for(e===(0|e)?(s=e,e=null):(e+="\0",s=0,l=Math.max(l,e.length)),r=0,i=-32;i<l;++i)e&&(s^=e.charCodeAt((i+32)%e.length)),0===i&&(a=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,i>=0&&(a=a+1640531527|0,r=0==(n=o[127&i]^=s+a)?r+1:0);for(r>=128&&(o[127&(e&&e.length||0)]=-1),r=127,i=512;i>0;--i)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;t.w=a,t.X=o,t.i=r}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&(s.X&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xor4096=l}(0,t=n.nmd(t),n.amdD)},30:function(t,e,n){var s;!function(t,r,i){function a(t){var e=this;e.next=function(){var t,n,s=e.x,r=e.i;return t=s[r],n=(t^=t>>>7)^t<<24,n^=(t=s[r+1&7])^t>>>10,n^=(t=s[r+3&7])^t>>>3,n^=(t=s[r+4&7])^t<<7,t=s[r+7&7],n^=(t^=t<<13)^t<<9,s[r]=n,e.i=r+1&7,n},function(t,e){var n,s=[];if(e===(0|e))s[0]=e;else for(e=""+e,n=0;n<e.length;++n)s[7&n]=s[7&n]<<15^e.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],t.x=s,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&(s.x&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xorshift7=l}(0,t=n.nmd(t),n.amdD)},801:function(t,e,n){var s;!function(t,r,i){function a(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var s=0;s<n.length+64;s++)e.x^=0|n.charCodeAt(s),s==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function l(t,e){var n=new a(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xorwow=l}(0,t=n.nmd(t),n.amdD)},971:(t,e,n)=>{var s;!function(r,i){var a,o=(0,eval)("this"),l=256,u="random",c=i.pow(l,6),h=i.pow(2,52),p=2*h,d=l-1;function f(t,e,n){var s=[],d=b(y((e=1==e?{entropy:!0}:e||{}).entropy?[t,x(r)]:null==t?function(){try{var t;return a&&(t=a.randomBytes)?t=t(l):(t=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(t)),x(t)}catch(t){var e=o.navigator,n=e&&e.plugins;return[+new Date,o,n,o.screen,x(r)]}}():t,3),s),f=new m(s),v=function(){for(var t=f.g(6),e=c,n=0;t<h;)t=(t+n)*l,e*=l,n=f.g(1);for(;t>=p;)t/=2,e/=2,n>>>=1;return(t+n)/e};return v.int32=function(){return 0|f.g(4)},v.quick=function(){return f.g(4)/4294967296},v.double=v,b(x(f.S),r),(e.pass||n||function(t,e,n,s){return s&&(s.S&&g(s,f),t.state=function(){return g(f,{})}),n?(i[u]=t,e):t})(v,d,"global"in e?e.global:this==i,e.state)}function m(t){var e,n=t.length,s=this,r=0,i=s.i=s.j=0,a=s.S=[];for(n||(t=[n++]);r<l;)a[r]=r++;for(r=0;r<l;r++)a[r]=a[i=d&i+t[r%n]+(e=a[r])],a[i]=e;(s.g=function(t){for(var e,n=0,r=s.i,i=s.j,a=s.S;t--;)e=a[r=d&r+1],n=n*l+a[d&(a[r]=a[i=d&i+e])+(a[i]=e)];return s.i=r,s.j=i,n})(l)}function g(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function y(t,e){var n,s=[],r=typeof t;if(e&&"object"==r)for(n in t)try{s.push(y(t[n],e-1))}catch(t){}return s.length?s:"string"==r?t:t+"\0"}function b(t,e){for(var n,s=t+"",r=0;r<s.length;)e[d&r]=d&(n^=19*e[d&r])+s.charCodeAt(r++);return x(e)}function x(t){return String.fromCharCode.apply(0,t)}if(i["seed"+u]=f,b(i.random(),r),t.exports){t.exports=f;try{a=n(42)}catch(t){}}else void 0===(s=function(){return f}.call(e,n,e,t))||(t.exports=s)}([],Math)},914:()=>{},410:()=>{},628:()=>{},778:()=>{},601:()=>{},792:()=>{},42:()=>{}},e={};function n(s){var r=e[s];if(void 0!==r)return r.exports;var i=e[s]={id:s,loaded:!1,exports:{}};return t[s].call(i.exports,i,i.exports,n),i.loaded=!0,i.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.d=(t,e)=>{for(var s in e)n.o(e,s)&&!n.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.nmd=t=>(t.paths=[],t.children||(t.children=[]),t),(()=>{"use strict";var t={};n.r(t),n.d(t,{assertParamsValid:()=>ci,computeFlatOffset:()=>ki,computeOutShape:()=>pi,getNormalizedAxes:()=>gi,isSliceContinous:()=>_i,maskToAxes:()=>hi,parseSliceParams:()=>Ti,sliceInfo:()=>Si,startForAxis:()=>vi,startIndicesWithElidedDims:()=>yi,stopForAxis:()=>wi,stopIndicesWithElidedDims:()=>bi,stridesForAxis:()=>xi,stridesWithElidedDims:()=>di});var e={};n.r(e),n.d(e,{collectGatherOpShapeInfo:()=>qu,computeOutShape:()=>Wu,segOpComputeOptimalWindowSize:()=>Bu});var s={};n.r(s),n.d(s,{ERF_A1:()=>Su,ERF_A2:()=>Iu,ERF_A3:()=>Cu,ERF_A4:()=>Nu,ERF_A5:()=>Au,ERF_P:()=>Tu,PARALLELIZE_THRESHOLD:()=>cu,SELU_SCALE:()=>ku,SELU_SCALEALPHA:()=>_u,applyActivation:()=>il,assertAndGetBroadcastShape:()=>Ca,assertAxesAreInnerMostDims:()=>no,assertParamsConsistent:()=>lu,assignToTypedArray:()=>Lu,axesAreInnerMostDims:()=>Qa,calculateShapes:()=>wu,combineLocations:()=>Ja,complexWithEvenIndex:()=>Ou,complexWithOddIndex:()=>Fu,computeConv2DInfo:()=>Hi,computeConv3DInfo:()=>Xi,computeDefaultPad:()=>Ki,computeDilation2DInfo:()=>Ui,computeOptimalWindowSize:()=>hu,computeOutAndReduceShapes:()=>to,computeOutShape:()=>uu,computePool2DInfo:()=>Gi,computePool3DInfo:()=>ji,convertConv2DDataFormat:()=>na,eitherStridesOrDilationsAreOne:()=>ea,expandShapeToKeepDim:()=>eo,exponent:()=>Pu,exponents:()=>zu,fromStringArrayToUint8:()=>Gu,fromUint8ToStringArray:()=>Uu,getAxesPermutation:()=>so,getBroadcastDims:()=>Sa,getComplexWithIndex:()=>Mu,getFusedBiasGradient:()=>rl,getFusedDyActivation:()=>sl,getImageCenter:()=>pu,getInnerMostAxes:()=>io,getPermuted:()=>fu,getReductionAxes:()=>Ia,getReshaped:()=>du,getReshapedPermuted:()=>mu,getSliceBeginCoords:()=>gu,getSliceSize:()=>yu,getUndoAxesPermutation:()=>ro,log:()=>$u,mergeRealAndImagArrays:()=>Ru,prepareAndValidate:()=>bu,prepareSplitSize:()=>Vu,segment_util:()=>e,shouldFuse:()=>al,slice_util:()=>t,splitRealAndImagArrays:()=>Du,tupleValuesAreOne:()=>ta,upcastType:()=>Hs,validateInput:()=>vu,validateUpdateShape:()=>xu,warn:()=>Eu});var r={};n.r(r),n.d(r,{json:()=>rb});var i={};n.r(i),n.d(i,{json:()=>ib});var a={};n.r(a),n.d(a,{json:()=>ab});var o={};n.r(o),n.d(o,{json:()=>ob});var l={};n.r(l),n.d(l,{json:()=>lb});var u={};n.r(u),n.d(u,{json:()=>ub});var c={};n.r(c),n.d(c,{json:()=>cb});var h={};n.r(h),n.d(h,{json:()=>hb});var p={};n.r(p),n.d(p,{json:()=>pb});var d={};n.r(d),n.d(d,{json:()=>db});var f={};n.r(f),n.d(f,{json:()=>fb});var m={};n.r(m),n.d(m,{json:()=>mb});var g={};n.r(g),n.d(g,{json:()=>gb});var y={};n.r(y),n.d(y,{json:()=>yb});var b={};n.r(b),n.d(b,{json:()=>bb});var x={};n.r(x),n.d(x,{json:()=>xb});var v={};n.r(v),n.d(v,{json:()=>vb});var w,_,k={};n.r(k),n.d(k,{addImpl:()=>vv,bincountImpl:()=>pw,bincountReduceImpl:()=>dw,ceilImpl:()=>gw,concatImpl:()=>_w,expImpl:()=>l_,expm1Impl:()=>d_,floorImpl:()=>O_,gatherV2Impl:()=>q_,greaterImpl:()=>G_,lessImpl:()=>rk,linSpaceImpl:()=>ck,logImpl:()=>pk,maxImpl:()=>Ck,maximumImpl:()=>Ek,minimumImpl:()=>Wk,multiplyImpl:()=>g_,negImpl:()=>Jk,prodImpl:()=>vT,rangeImpl:()=>_T,rsqrtImpl:()=>OT,simpleAbsImpl:()=>Av,sliceImpl:()=>lw,stridedSliceImpl:()=>pS,subImpl:()=>k_,tileImpl:()=>yS,topKImpl:()=>bS,transposeImpl:()=>Mv,uniqueImpl:()=>TS}),w="undefined"!=typeof self?self:void 0,_=()=>(()=>{var t={382:function(t,e,n){!function(t,e,n,s){function r(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var i=r(e),a=r(n),o=r(s),l=function(t,e,n){return{endTime:e,insertTime:n,type:"exponentialRampToValue",value:t}},u=function(t,e,n){return{endTime:e,insertTime:n,type:"linearRampToValue",value:t}},c=function(t,e){return{startTime:e,type:"setValue",value:t}},h=function(t,e,n){return{duration:n,startTime:e,type:"setValueCurve",values:t}},p=function(t,e,n){var s=n.startTime,r=n.target,i=n.timeConstant;return r+(e-r)*Math.exp((s-t)/i)},d=function(t){return"exponentialRampToValue"===t.type},f=function(t){return"linearRampToValue"===t.type},m=function(t){return d(t)||f(t)},g=function(t){return"setValue"===t.type},y=function(t){return"setValueCurve"===t.type},b=function t(e,n,s,r){var i=e[n];return void 0===i?r:m(i)||g(i)?i.value:y(i)?i.values[i.values.length-1]:p(s,t(e,n-1,i.startTime,r),i)},x=function(t,e,n,s,r){return void 0===n?[s.insertTime,r]:m(n)?[n.endTime,n.value]:g(n)?[n.startTime,n.value]:y(n)?[n.startTime+n.duration,n.values[n.values.length-1]]:[n.startTime,b(t,e-1,n.startTime,r)]},v=function(t){return"cancelAndHold"===t.type},w=function(t){return"cancelScheduledValues"===t.type},_=function(t){return v(t)||w(t)?t.cancelTime:d(t)||f(t)?t.endTime:t.startTime},k=function(t,e,n,s){var r=s.endTime,i=s.value;return n===i?i:0<n&&0<i||n<0&&i<0?n*Math.pow(i/n,(t-e)/(r-e)):0},T=function(t,e,n,s){return n+(t-e)/(s.endTime-e)*(s.value-n)},S=function(t){return"setTarget"===t.type},I=function(t){function e(t){a.default(this,e),this._automationEvents=[],this._currenTime=0,this._defaultValue=t}return o.default(e,[{key:t,value:function(){return this._automationEvents[Symbol.iterator]()}},{key:"add",value:function(t){var e=_(t);if(v(t)||w(t)){var n=this._automationEvents.findIndex((function(n){return w(t)&&y(n)?n.startTime+n.duration>=e:_(n)>=e})),s=this._automationEvents[n];if(-1!==n&&(this._automationEvents=this._automationEvents.slice(0,n)),v(t)){var r=this._automationEvents[this._automationEvents.length-1];if(void 0!==s&&m(s)){if(S(r))throw new Error("The internal list is malformed.");var i=y(r)?r.startTime+r.duration:_(r),a=y(r)?r.values[r.values.length-1]:r.value,o=d(s)?k(e,i,a,s):T(e,i,a,s),p=d(s)?l(o,e,this._currenTime):u(o,e,this._currenTime);this._automationEvents.push(p)}void 0!==r&&S(r)&&this._automationEvents.push(c(this.getValue(e),e)),void 0!==r&&y(r)&&r.startTime+r.duration>e&&(this._automationEvents[this._automationEvents.length-1]=h(new Float32Array([6,7]),r.startTime,e-r.startTime))}}else{var g=this._automationEvents.findIndex((function(t){return _(t)>e})),b=-1===g?this._automationEvents[this._automationEvents.length-1]:this._automationEvents[g-1];if(void 0!==b&&y(b)&&_(b)+b.duration>e)return!1;var x=d(t)?l(t.value,t.endTime,this._currenTime):f(t)?u(t.value,e,this._currenTime):t;if(-1===g)this._automationEvents.push(x);else{if(y(t)&&e+t.duration>_(this._automationEvents[g]))return!1;this._automationEvents.splice(g,0,x)}}return!0}},{key:"flush",value:function(t){var e=this._automationEvents.findIndex((function(e){return _(e)>t}));if(e>1){var n=this._automationEvents.slice(e-1),s=n[0];S(s)&&n.unshift(c(b(this._automationEvents,e-2,s.startTime,this._defaultValue),s.startTime)),this._automationEvents=n}}},{key:"getValue",value:function(t){if(0===this._automationEvents.length)return this._defaultValue;var e=this._automationEvents.findIndex((function(e){return _(e)>t})),n=this._automationEvents[e],s=(-1===e?this._automationEvents.length:e)-1,r=this._automationEvents[s];if(void 0!==r&&S(r)&&(void 0===n||!m(n)||n.insertTime>t))return p(t,b(this._automationEvents,s-1,r.startTime,this._defaultValue),r);if(void 0!==r&&g(r)&&(void 0===n||!m(n)))return r.value;if(void 0!==r&&y(r)&&(void 0===n||!m(n)||r.startTime+r.duration>t))return t<r.startTime+r.duration?function(t,e){var n=e.duration,s=e.startTime,r=e.values;return function(t,e){var n=Math.floor(e),s=Math.ceil(e);return n===s?t[n]:(1-(e-n))*t[n]+(1-(s-e))*t[s]}(r,(t-s)/n*(r.length-1))}(t,r):r.values[r.values.length-1];if(void 0!==r&&m(r)&&(void 0===n||!m(n)))return r.value;if(void 0!==n&&d(n)){var a=x(this._automationEvents,s,r,n,this._defaultValue),o=i.default(a,2),l=o[0],u=o[1];return k(t,l,u,n)}if(void 0!==n&&f(n)){var c=x(this._automationEvents,s,r,n,this._defaultValue),h=i.default(c,2),v=h[0],w=h[1];return T(t,v,w,n)}return this._defaultValue}}]),e}(Symbol.iterator);t.AutomationEventList=I,t.createCancelAndHoldAutomationEvent=function(t){return{cancelTime:t,type:"cancelAndHold"}},t.createCancelScheduledValuesAutomationEvent=function(t){return{cancelTime:t,type:"cancelScheduledValues"}},t.createExponentialRampToValueAutomationEvent=function(t,e){return{endTime:e,type:"exponentialRampToValue",value:t}},t.createLinearRampToValueAutomationEvent=function(t,e){return{endTime:e,type:"linearRampToValue",value:t}},t.createSetTargetAutomationEvent=function(t,e,n){return{startTime:e,target:t,timeConstant:n,type:"setTarget"}},t.createSetValueAutomationEvent=c,t.createSetValueCurveAutomationEvent=h,Object.defineProperty(t,"__esModule",{value:!0})}(e,n(424),n(690),n(728))},897:t=>{t.exports=function(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,s=new Array(e);n<e;n++)s[n]=t[n];return s},t.exports.__esModule=!0,t.exports.default=t.exports},372:t=>{t.exports=function(t){if(Array.isArray(t))return t},t.exports.__esModule=!0,t.exports.default=t.exports},690:t=>{t.exports=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")},t.exports.__esModule=!0,t.exports.default=t.exports},728:t=>{function e(t,e){for(var n=0;n<e.length;n++){var s=e[n];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(t,s.key,s)}}t.exports=function(t,n,s){return n&&e(t.prototype,n),s&&e(t,s),Object.defineProperty(t,"prototype",{writable:!1}),t},t.exports.__esModule=!0,t.exports.default=t.exports},872:t=>{t.exports=function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var s,r,i=[],a=!0,o=!1;try{for(n=n.call(t);!(a=(s=n.next()).done)&&(i.push(s.value),!e||i.length!==e);a=!0);}catch(t){o=!0,r=t}finally{try{a||null==n.return||n.return()}finally{if(o)throw r}}return i}},t.exports.__esModule=!0,t.exports.default=t.exports},218:t=>{t.exports=function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")},t.exports.__esModule=!0,t.exports.default=t.exports},424:(t,e,n)=>{var s=n(372),r=n(872),i=n(116),a=n(218);t.exports=function(t,e){return s(t)||r(t,e)||i(t,e)||a()},t.exports.__esModule=!0,t.exports.default=t.exports},116:(t,e,n)=>{var s=n(897);t.exports=function(t,e){if(t){if("string"==typeof t)return s(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?s(t,e):void 0}},t.exports.__esModule=!0,t.exports.default=t.exports}},e={};function n(s){var r=e[s];if(void 0!==r)return r.exports;var i=e[s]={exports:{}};return t[s].call(i.exports,i,i.exports,n),i.exports}n.d=(t,e)=>{for(var s in e)n.o(e,s)&&!n.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var s={};return(()=>{n.r(s),n.d(s,{AMOscillator:()=>Hi,AMSynth:()=>Ta,Abs:()=>ua,Add:()=>ta,AmplitudeEnvelope:()=>wa,Analyser:()=>jo,AudioToGain:()=>Gi,AutoFilter:()=>lo,AutoPanner:()=>co,AutoWah:()=>po,BaseContext:()=>Sr,BiquadFilter:()=>Sa,BitCrusher:()=>mo,Buffer:()=>Il,BufferSource:()=>Nl,Buffers:()=>Cl,Channel:()=>tl,Chebyshev:()=>yo,Chorus:()=>_o,Clock:()=>mi,Compressor:()=>al,Context:()=>Ir,Convolver:()=>pl,CrossFade:()=>io,DCMeter:()=>Yo,Delay:()=>gi,Destination:()=>yl,Distortion:()=>ko,Draw:()=>_l,DuoSynth:()=>Aa,EQ3:()=>hl,Emitter:()=>Tr,Envelope:()=>ya,FFT:()=>Ko,FMOscillator:()=>Xi,FMSynth:()=>Ea,FatOscillator:()=>Yi,FeedbackCombFilter:()=>Va,FeedbackDelay:()=>So,Filter:()=>Ia,Follower:()=>ho,Freeverb:()=>Eo,Frequency:()=>Yr,FrequencyClass:()=>Hr,FrequencyEnvelope:()=>Ca,FrequencyShifter:()=>Co,Gain:()=>oi,GainToAudio:()=>ca,Gate:()=>ol,GrainPlayer:()=>la,GreaterThan:()=>fa,GreaterThanZero:()=>da,IntervalTimeline:()=>Ti,JCReverb:()=>Oo,LFO:()=>sa,Limiter:()=>ll,Listener:()=>vl,Loop:()=>Ha,LowpassCombFilter:()=>Wa,Master:()=>bl,MembraneSynth:()=>Da,Merge:()=>xo,MetalSynth:()=>Ra,Meter:()=>Xo,MidSideCompressor:()=>ul,MidSideMerge:()=>Bo,MidSideSplit:()=>Vo,Midi:()=>vi,MidiClass:()=>xi,Mono:()=>el,MonoSynth:()=>Na,MultibandCompressor:()=>cl,MultibandSplit:()=>nl,Multiply:()=>ji,Negate:()=>ha,Noise:()=>Li,NoiseSynth:()=>Oa,Offline:()=>yi,OfflineContext:()=>$r,OmniOscillator:()=>Ji,OnePoleFilter:()=>Ba,Oscillator:()=>Ui,PWMOscillator:()=>Zi,PanVol:()=>Jo,Panner:()=>uo,Panner3D:()=>rl,Param:()=>ei,Part:()=>Xa,Pattern:()=>so,Phaser:()=>zo,PingPongDelay:()=>Mo,PitchShift:()=>Lo,Player:()=>aa,Players:()=>oa,PluckSynth:()=>qa,PolySynth:()=>Ua,Pow:()=>$i,PulseOscillator:()=>Ki,Recorder:()=>il,Reverb:()=>Po,Sampler:()=>Ga,Scale:()=>ea,ScaleExp:()=>ma,Sequence:()=>ro,Signal:()=>ci,Solo:()=>Qo,Split:()=>bo,StateTimeline:()=>ti,StereoWidener:()=>qo,Subtract:()=>pa,SyncedSignal:()=>ga,Synth:()=>_a,Ticks:()=>_i,TicksClass:()=>wi,Time:()=>jr,TimeClass:()=>Gr,Timeline:()=>xr,ToneAudioBuffer:()=>Er,ToneAudioBuffers:()=>bi,ToneAudioNode:()=>ni,ToneBufferSource:()=>Mi,ToneEvent:()=>ja,ToneOscillatorNode:()=>qi,Transport:()=>ml,TransportTime:()=>Qr,TransportTimeClass:()=>Zr,Tremolo:()=>Uo,Unit:()=>e,UserMedia:()=>Bi,Vibrato:()=>Go,Volume:()=>Ii,WaveShaper:()=>Ei,Waveform:()=>Zo,Zero:()=>na,connect:()=>ri,connectSeries:()=>si,connectSignal:()=>hi,context:()=>Tl,dbToGain:()=>Lr,debug:()=>t,defaultArg:()=>cr,disconnect:()=>ii,fanIn:()=>ai,ftom:()=>Br,gainToDb:()=>zr,getContext:()=>Or,getDestination:()=>xl,getDraw:()=>kl,getListener:()=>wl,getTransport:()=>gl,immediate:()=>fl,intervalToFrequencyRatio:()=>Pr,isArray:()=>zs,isBoolean:()=>Ls,isDefined:()=>Ds,isFunction:()=>Os,isNote:()=>Vs,isNumber:()=>Fs,isObject:()=>Ms,isString:()=>Ps,isUndef:()=>Rs,loaded:()=>Sl,mtof:()=>qr,now:()=>dl,optionsFromArguments:()=>ur,setContext:()=>Fr,start:()=>Mr,supported:()=>$s,version:()=>r});var t={};n.r(t),n.d(t,{assert:()=>Bs,assertContextRunning:()=>qs,assertRange:()=>Ws,assertUsedScheduleTime:()=>Hs,enterScheduledCallback:()=>js,log:()=>Ys,setLogger:()=>Ks,warn:()=>Zs});var e={};n.r(e);const r="14.8.49";var i=n(382);const a=new WeakSet,o=new WeakMap,l=new WeakMap,u=new WeakMap,c=new WeakMap,h=new WeakMap,p=new WeakMap,d=new WeakMap,f=new WeakMap,m=new WeakMap,g={construct:()=>g},y=/^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/,b=(t,e)=>{const n=[];let s=t.replace(/^[\s]+/,""),r=s.match(y);for(;null!==r;){const t=r[1].slice(1,-1),i=r[0].replace(/([\s]+)?;?$/,"").replace(t,new URL(t,e).toString());n.push(i),s=s.slice(r[0].length).replace(/^[\s]+/,""),r=s.match(y)}return[n.join(";"),s]},x=t=>{if(void 0!==t&&!Array.isArray(t))throw new TypeError("The parameterDescriptors property of given value for processorCtor is not an array.")},v=t=>{if(!(t=>{try{new new Proxy(t,g)}catch{return!1}return!0})(t))throw new TypeError("The given value for processorCtor should be a constructor.");if(null===t.prototype||"object"!=typeof t.prototype)throw new TypeError("The given value for processorCtor should have a prototype.")},w=(t,e)=>{const n=t.get(e);if(void 0===n)throw new Error("A value with the given key could not be found.");return n},_=(t,e)=>{const n=Array.from(t).filter(e);if(n.length>1)throw Error("More than one element was found.");if(0===n.length)throw Error("No element was found.");const[s]=n;return t.delete(s),s},k=(t,e,n,s)=>{const r=w(t,e),i=_(r,(t=>t[0]===n&&t[1]===s));return 0===r.size&&t.delete(e),i},T=t=>w(p,t),S=t=>{if(a.has(t))throw new Error("The AudioNode is already stored.");a.add(t),T(t).forEach((t=>t(!0)))},I=t=>"port"in t,C=t=>{if(!a.has(t))throw new Error("The AudioNode is not stored.");a.delete(t),T(t).forEach((t=>t(!1)))},N=(t,e)=>{!I(t)&&e.every((t=>0===t.size))&&C(t)},A={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",fftSize:2048,maxDecibels:-30,minDecibels:-100,smoothingTimeConstant:.8},E=(t,e)=>t.context===e,$=t=>{try{t.copyToChannel(new Float32Array(1),0,-1)}catch{return!1}return!0},R=()=>new DOMException("","IndexSizeError"),D=t=>{var e;t.getChannelData=(e=t.getChannelData,n=>{try{return e.call(t,n)}catch(t){if(12===t.code)throw R();throw t}})},O={numberOfChannels:1},F=-34028234663852886e22,M=-F,L=t=>a.has(t),z={buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1},P=t=>w(o,t),V=t=>w(u,t),B=(t,e)=>{const{activeInputs:n}=P(t);n.forEach((n=>n.forEach((([n])=>{e.includes(t)||B(n,[...e,t])}))));const s=(t=>"playbackRate"in t)(t)?[t.playbackRate]:I(t)?Array.from(t.parameters.values()):(t=>"frequency"in t&&"gain"in t)(t)?[t.Q,t.detune,t.frequency,t.gain]:(t=>"offset"in t)(t)?[t.offset]:(t=>!("frequency"in t)&&"gain"in t)(t)?[t.gain]:(t=>"detune"in t&&"frequency"in t)(t)?[t.detune,t.frequency]:(t=>"pan"in t)(t)?[t.pan]:[];for(const t of s){const n=V(t);void 0!==n&&n.activeInputs.forEach((([t])=>B(t,e)))}L(t)&&C(t)},W=t=>{B(t.destination,[])},q=t=>"context"in t,U=t=>q(t[0]),G=(t,e,n,s)=>{for(const e of t)if(n(e)){if(s)return!1;throw Error("The set contains at least one similar element.")}return t.add(e),!0},j=(t,e,[n,s],r)=>{G(t,[e,n,s],(t=>t[0]===e&&t[1]===n),r)},H=(t,[e,n,s],r)=>{const i=t.get(e);void 0===i?t.set(e,new Set([[n,s]])):G(i,[n,s],(t=>t[0]===n),r)},X=t=>"inputs"in t,K=(t,e,n,s)=>{if(X(e)){const r=e.inputs[s];return t.connect(r,n,0),[r,n,0]}return t.connect(e,n,s),[e,n,s]},Y=(t,e,n)=>{for(const s of t)if(s[0]===e&&s[1]===n)return t.delete(s),s;return null},Z=(t,e)=>{if(!T(t).delete(e))throw new Error("Missing the expected event listener.")},Q=(t,e,n)=>{const s=w(t,e),r=_(s,(t=>t[0]===n));return 0===s.size&&t.delete(e),r},J=(t,e,n,s)=>{X(e)?t.disconnect(e.inputs[s],n,0):t.disconnect(e,n,s)},tt=t=>w(l,t),et=t=>w(c,t),nt=t=>d.has(t),st=t=>!a.has(t),rt=(t,e)=>new Promise((n=>{if(null!==e)n(!0);else{const e=t.createScriptProcessor(256,1,1),s=t.createGain(),r=t.createBuffer(1,2,44100),i=r.getChannelData(0);i[0]=1,i[1]=1;const a=t.createBufferSource();a.buffer=r,a.loop=!0,a.connect(e).connect(t.destination),a.connect(s),a.disconnect(s),e.onaudioprocess=s=>{const r=s.inputBuffer.getChannelData(0);Array.prototype.some.call(r,(t=>1===t))?n(!0):n(!1),a.stop(),e.onaudioprocess=null,a.disconnect(e),e.disconnect(t.destination)},a.start()}})),it=(t,e)=>{const n=new Map;for(const e of t)for(const t of e){const e=n.get(t);n.set(t,void 0===e?1:e+1)}n.forEach(((t,n)=>e(n,t)))},at=t=>"context"in t,ot=(t,e,n,s,r)=>{const[i,a]=((t,e,n,s)=>{const{activeInputs:r,passiveInputs:i}=P(e),a=Y(r[s],t,n);return null===a?[k(i,t,n,s)[2],!1]:[a[2],!0]})(t,n,s,r);if(null!==i&&(Z(t,i),!a||e||nt(t)||J(tt(t),tt(n),s,r)),L(n)){const{activeInputs:t}=P(n);N(n,t)}},lt=(t,e,n,s)=>{const[r,i]=((t,e,n)=>{const{activeInputs:s,passiveInputs:r}=V(e),i=Y(s,t,n);return null===i?[Q(r,t,n)[1],!1]:[i[2],!0]})(t,n,s);null!==r&&(Z(t,r),!i||e||nt(t)||tt(t).disconnect(et(n),s))};class ut{constructor(t){this._map=new Map(t)}get size(){return this._map.size}entries(){return this._map.entries()}forEach(t,e=null){return this._map.forEach(((n,s)=>t.call(e,n,s,this)))}get(t){return this._map.get(t)}has(t){return this._map.has(t)}keys(){return this._map.keys()}values(){return this._map.values()}}const ct={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:1,numberOfOutputs:1,parameterData:{},processorOptions:{}};function ht(t,e,n,s,r){if("function"==typeof t.copyFromChannel)0===e[n].byteLength&&(e[n]=new Float32Array(128)),t.copyFromChannel(e[n],s,r);else{const i=t.getChannelData(s);if(0===e[n].byteLength)e[n]=i.slice(r,r+128);else{const t=new Float32Array(i.buffer,r*Float32Array.BYTES_PER_ELEMENT,128);e[n].set(t)}}}const pt=(t,e,n,s,r)=>{"function"==typeof t.copyToChannel?0!==e[n].byteLength&&t.copyToChannel(e[n],s,r):0!==e[n].byteLength&&t.getChannelData(s).set(e[n],r)},dt=(t,e)=>{const n=[];for(let s=0;s<t;s+=1){const t=[],r="number"==typeof e?e:e[s];for(let e=0;e<r;e+=1)t.push(new Float32Array(128));n.push(t)}return n},ft=async(t,e,n,s,r,i,a)=>{const o=null===e?128*Math.ceil(t.context.length/128):e.length,l=s.channelCount*s.numberOfInputs,u=r.reduce(((t,e)=>t+e),0),c=0===u?null:n.createBuffer(u,o,n.sampleRate);if(void 0===i)throw new Error("Missing the processor constructor.");const h=P(t),p=await((t,e)=>{const n=w(m,t),s=tt(e);return w(n,s)})(n,t),d=dt(s.numberOfInputs,s.channelCount),f=dt(s.numberOfOutputs,r),g=Array.from(t.parameters.keys()).reduce(((t,e)=>({...t,[e]:new Float32Array(128)})),{});for(let u=0;u<o;u+=128){if(s.numberOfInputs>0&&null!==e)for(let t=0;t<s.numberOfInputs;t+=1)for(let n=0;n<s.channelCount;n+=1)ht(e,d[t],n,n,u);void 0!==i.parameterDescriptors&&null!==e&&i.parameterDescriptors.forEach((({name:t},n)=>{ht(e,g,t,l+n,u)}));for(let t=0;t<s.numberOfInputs;t+=1)for(let e=0;e<r[t];e+=1)0===f[t][e].byteLength&&(f[t][e]=new Float32Array(128));try{const t=d.map(((t,e)=>0===h.activeInputs[e].size?[]:t)),e=a(u/n.sampleRate,n.sampleRate,(()=>p.process(t,f,g)));if(null!==c)for(let t=0,e=0;t<s.numberOfOutputs;t+=1){for(let n=0;n<r[t];n+=1)pt(c,f[t],n,e+n,u);e+=r[t]}if(!e)break}catch(e){t.dispatchEvent(new ErrorEvent("processorerror",{colno:e.colno,filename:e.filename,lineno:e.lineno,message:e.message}));break}}return c},mt={Q:1,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:350,gain:0,type:"lowpass"},gt={channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6},yt={channelCount:6,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:6},bt={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",offset:1},xt={buffer:null,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",disableNormalization:!1},vt=t=>{const{port1:e,port2:n}=new MessageChannel;return new Promise((s=>{const r=()=>{n.onmessage=null,e.close(),n.close(),s()};n.onmessage=()=>r();try{e.postMessage(t,[t])}finally{r()}}))},wt={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",delayTime:0,maxDelayTime:1},_t=(t,e,n)=>{const s=e[n];if(void 0===s)throw t();return s},kt={attack:.003,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",knee:30,ratio:12,release:.25,threshold:-24},Tt={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",gain:1},St=()=>new DOMException("","InvalidStateError"),It=()=>new DOMException("","InvalidAccessError"),Ct={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers"},Nt=(t,e,n,s,r,i,a,o,l,u,c)=>{const h=u.length;let p=o;for(let o=0;o<h;o+=1){let h=n[0]*u[o];for(let e=1;e<r;e+=1){const s=p-e&l-1;h+=n[e]*i[s],h-=t[e]*a[s]}for(let t=r;t<s;t+=1)h+=n[t]*i[p-t&l-1];for(let n=r;n<e;n+=1)h-=t[n]*a[p-n&l-1];i[p]=u[o],a[p]=h,p=p+1&l-1,c[o]=h}return p},At={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers"},Et=t=>{const e=new Uint32Array([1179011410,40,1163280727,544501094,16,131073,44100,176400,1048580,1635017060,4,0]);try{const n=t.decodeAudioData(e.buffer,(()=>{}));return void 0!==n&&(n.catch((()=>{})),!0)}catch{}return!1},$t=(t,e,n)=>{const s=e[n];void 0!==s&&s!==t[n]&&(t[n]=s)},Rt=(t,e)=>{$t(t,e,"channelCount"),$t(t,e,"channelCountMode"),$t(t,e,"channelInterpretation")},Dt=t=>"function"==typeof t.getFloatTimeDomainData,Ot=(t,e,n)=>{const s=e[n];void 0!==s&&s!==t[n].value&&(t[n].value=s)},Ft=t=>{t.start=(e=>(n=0,s=0,r)=>{if("number"==typeof r&&r<0||s<0||n<0)throw new RangeError("The parameters can't be negative.");e.call(t,n,s,r)})(t.start)},Mt=t=>{var e;t.stop=(e=t.stop,(n=0)=>{if(n<0)throw new RangeError("The parameter can't be negative.");e.call(t,n)})},Lt=(t,e)=>null===t?512:Math.max(512,Math.min(16384,Math.pow(2,Math.round(Math.log2(t*e))))),zt=(t,e)=>{const n=t.createBiquadFilter();return Rt(n,e),Ot(n,e,"Q"),Ot(n,e,"detune"),Ot(n,e,"frequency"),Ot(n,e,"gain"),$t(n,e,"type"),n},Pt=(t,e)=>{const n=t.createChannelSplitter(e.numberOfOutputs);return Rt(n,e),(t=>{const e=t.numberOfOutputs;Object.defineProperty(t,"channelCount",{get:()=>e,set:t=>{if(t!==e)throw St()}}),Object.defineProperty(t,"channelCountMode",{get:()=>"explicit",set:t=>{if("explicit"!==t)throw St()}}),Object.defineProperty(t,"channelInterpretation",{get:()=>"discrete",set:t=>{if("discrete"!==t)throw St()}})})(n),n},Vt=(t,e)=>(t.connect=e.connect.bind(e),t.disconnect=e.disconnect.bind(e),t),Bt=(t,e)=>{const n=t.createDelay(e.maxDelayTime);return Rt(n,e),Ot(n,e,"delayTime"),n},Wt=(t,e)=>{const n=t.createGain();return Rt(n,e),Ot(n,e,"gain"),n};function qt(t,e){const n=e[0]*e[0]+e[1]*e[1];return[(t[0]*e[0]+t[1]*e[1])/n,(t[1]*e[0]-t[0]*e[1])/n]}function Ut(t,e){let n=[0,0];for(let i=t.length-1;i>=0;i-=1)r=e,n=[(s=n)[0]*r[0]-s[1]*r[1],s[0]*r[1]+s[1]*r[0]],n[0]+=t[i];var s,r;return n}const Gt=(t,e,n,s)=>t.createScriptProcessor(e,n,s),jt=()=>new DOMException("","NotSupportedError"),Ht={numberOfChannels:1},Xt={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:440,periodicWave:void 0,type:"sine"},Kt={channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:1,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1},Yt={disableNormalization:!1},Zt={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",pan:0},Qt={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",curve:null,oversample:"none"},Jt=(t,e,n)=>void 0===t.copyFromChannel?t.getChannelData(n)[0]:(t.copyFromChannel(e,n),e[0]),te=t=>{if(null===t)return!1;const e=t.length;return e%2!=0?0!==t[Math.floor(e/2)]:t[e/2-1]+t[e/2]!==0},ee=(t,e,n,s)=>{let r=t;for(;!r.hasOwnProperty(e);)r=Object.getPrototypeOf(r);const{get:i,set:a}=Object.getOwnPropertyDescriptor(r,e);Object.defineProperty(t,e,{get:n(i),set:s(a)})},ne=(t,e,n)=>{try{t.setValueAtTime(e,n)}catch(s){if(9!==s.code)throw s;ne(t,e,n+1e-7)}},se=t=>{const e=t.createOscillator();try{e.start(-1)}catch(t){return t instanceof RangeError}return!1},re=t=>{const e=t.createBuffer(1,1,44100),n=t.createBufferSource();n.buffer=e,n.start(),n.stop();try{return n.stop(),!0}catch{return!1}},ie=t=>{const e=t.createOscillator();try{e.stop(-1)}catch(t){return t instanceof RangeError}return!1},ae=()=>{try{new DOMException}catch{return!1}return!0},oe=()=>new Promise((t=>{const e=new ArrayBuffer(0),{port1:n,port2:s}=new MessageChannel;n.onmessage=({data:e})=>t(null!==e),s.postMessage(e,[e])})),le=(t,e)=>{const n=e.createGain();t.connect(n);const s=(e=>()=>{e.call(t,n),t.removeEventListener("ended",s)})(t.disconnect);t.addEventListener("ended",s),Vt(t,n),t.stop=(e=>{let s=!1;return(r=0)=>{if(s)try{e.call(t,r)}catch{n.gain.setValueAtTime(0,r)}else e.call(t,r),s=!0}})(t.stop)},ue=(t,e)=>n=>{const s={value:t};return Object.defineProperties(n,{currentTarget:s,target:s}),"function"==typeof e?e.call(t,n):e.handleEvent.call(t,n)},ce=(t=>(e,n,[s,r,i],a)=>{t(e[r],[n,s,i],(t=>t[0]===n&&t[1]===s),a)})(G),he=(t=>(e,n,[s,r,i],a)=>{const o=e.get(s);void 0===o?e.set(s,new Set([[r,n,i]])):t(o,[r,n,i],(t=>t[0]===r&&t[1]===n),a)})(G),pe=(t=>(e,n,s,r)=>t(e[r],(t=>t[0]===n&&t[1]===s)))(_),de=new WeakMap,fe=(t=>e=>{var n;return null!==(n=t.get(e))&&void 0!==n?n:0})(de),me=(ge=new Map,ye=new WeakMap,(t,e)=>{const n=ye.get(t);if(void 0!==n)return n;const s=ge.get(t);if(void 0!==s)return s;try{const n=e();return n instanceof Promise?(ge.set(t,n),n.catch((()=>!1)).then((e=>(ge.delete(t),ye.set(t,e),e)))):(ye.set(t,n),n)}catch{return ye.set(t,!1),!1}});var ge,ye;const be="undefined"==typeof window?null:window,xe=((t,e)=>(n,s)=>{const r=n.createAnalyser();if(Rt(r,s),!(s.maxDecibels>s.minDecibels))throw e();return $t(r,s,"fftSize"),$t(r,s,"maxDecibels"),$t(r,s,"minDecibels"),$t(r,s,"smoothingTimeConstant"),t(Dt,(()=>Dt(r)))||(t=>{t.getFloatTimeDomainData=e=>{const n=new Uint8Array(e.length);t.getByteTimeDomainData(n);const s=Math.max(n.length,t.fftSize);for(let t=0;t<s;t+=1)e[t]=.0078125*(n[t]-128);return e}})(r),r})(me,R),ve=(t=>e=>{const n=t(e);if(null===n.renderer)throw new Error("Missing the renderer of the given AudioNode in the audio graph.");return n.renderer})(P),we=((t,e,n)=>async(s,r,i)=>{const a=t(s);await Promise.all(a.activeInputs.map(((t,a)=>Array.from(t).map((async([t,o])=>{const l=e(t),u=await l.render(t,r),c=s.context.destination;n(t)||s===c&&n(s)||u.connect(i,o,a)})))).reduce(((t,e)=>[...t,...e]),[]))})(P,ve,nt),_e=((t,e,n)=>()=>{const s=new WeakMap;return{render(r,i){const a=s.get(i);return void 0!==a?Promise.resolve(a):(async(r,i)=>{let a=e(r);if(!E(a,i)){const e={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,fftSize:a.fftSize,maxDecibels:a.maxDecibels,minDecibels:a.minDecibels,smoothingTimeConstant:a.smoothingTimeConstant};a=t(i,e)}return s.set(i,a),await n(r,i,a),a})(r,i)}}})(xe,tt,we),ke=(Te=h,t=>{const e=Te.get(t);if(void 0===e)throw St();return e});var Te;const Se=(t=>null===t?null:t.hasOwnProperty("OfflineAudioContext")?t.OfflineAudioContext:t.hasOwnProperty("webkitOfflineAudioContext")?t.webkitOfflineAudioContext:null)(be),Ie=(t=>e=>null!==t&&e instanceof t)(Se),Ce=new WeakMap,Ne=(t=>class{constructor(t){this._nativeEventTarget=t,this._listeners=new WeakMap}addEventListener(e,n,s){if(null!==n){let r=this._listeners.get(n);void 0===r&&(r=t(this,n),"function"==typeof n&&this._listeners.set(n,r)),this._nativeEventTarget.addEventListener(e,r,s)}}dispatchEvent(t){return this._nativeEventTarget.dispatchEvent(t)}removeEventListener(t,e,n){const s=null===e?void 0:this._listeners.get(e);this._nativeEventTarget.removeEventListener(t,void 0===s?null:s,n)}})(ue),Ae=(t=>null===t?null:t.hasOwnProperty("AudioContext")?t.AudioContext:t.hasOwnProperty("webkitAudioContext")?t.webkitAudioContext:null)(be),Ee=(t=>e=>null!==t&&e instanceof t)(Ae),$e=(t=>e=>null!==t&&"function"==typeof t.AudioNode&&e instanceof t.AudioNode)(be),Re=(t=>e=>null!==t&&"function"==typeof t.AudioParam&&e instanceof t.AudioParam)(be),De=(t=>null===t?null:t.hasOwnProperty("AudioWorkletNode")?t.AudioWorkletNode:null)(be),Oe=((t,e,n,s,r,i,a,o,u,c,h,d,f,m,g,y)=>class extends c{constructor(e,s,r,i){super(r),this._context=e,this._nativeAudioNode=r;const a=h(e);d(a)&&!0!==n(rt,(()=>rt(a,y)))&&(t=>{const e=new Map;t.connect=(t=>(n,s=0,r=0)=>{const i=at(n)?t(n,s,r):t(n,s),a=e.get(n);return void 0===a?e.set(n,[{input:r,output:s}]):a.every((t=>t.input!==r||t.output!==s))&&a.push({input:r,output:s}),i})(t.connect.bind(t)),t.disconnect=(n=>(s,r,i)=>{if(n.apply(t),void 0===s)e.clear();else if("number"==typeof s)for(const[t,n]of e){const r=n.filter((t=>t.output!==s));0===r.length?e.delete(t):e.set(t,r)}else if(e.has(s))if(void 0===r)e.delete(s);else{const t=e.get(s);if(void 0!==t){const n=t.filter((t=>t.output!==r&&(t.input!==i||void 0===i)));0===n.length?e.delete(s):e.set(s,n)}}for(const[n,s]of e)s.forEach((e=>{at(n)?t.connect(n,e.output,e.input):t.connect(n,e.output)}))})(t.disconnect)})(r),l.set(this,r),p.set(this,new Set),"closed"!==e.state&&s&&S(this),t(this,i,r)}get channelCount(){return this._nativeAudioNode.channelCount}set channelCount(t){this._nativeAudioNode.channelCount=t}get channelCountMode(){return this._nativeAudioNode.channelCountMode}set channelCountMode(t){this._nativeAudioNode.channelCountMode=t}get channelInterpretation(){return this._nativeAudioNode.channelInterpretation}set channelInterpretation(t){this._nativeAudioNode.channelInterpretation=t}get context(){return this._context}get numberOfInputs(){return this._nativeAudioNode.numberOfInputs}get numberOfOutputs(){return this._nativeAudioNode.numberOfOutputs}connect(t,n=0,o=0){if(n<0||n>=this._nativeAudioNode.numberOfOutputs)throw r();const l=h(this._context),c=g(l);if(f(t)||m(t))throw i();if(q(t)){const r=tt(t);try{const e=K(this._nativeAudioNode,r,n,o),s=st(this);(c||s)&&this._nativeAudioNode.disconnect(...e),"closed"!==this.context.state&&!s&&st(t)&&S(t)}catch(t){if(12===t.code)throw i();throw t}if(e(this,t,n,o,c)){const e=u([this],t);it(e,s(c))}return t}const p=et(t);if("playbackRate"===p.name&&1024===p.maxValue)throw a();try{this._nativeAudioNode.connect(p,n),(c||st(this))&&this._nativeAudioNode.disconnect(p,n)}catch(t){if(12===t.code)throw i();throw t}if(((t,e,n,s)=>{const{activeInputs:r,passiveInputs:i}=V(e),{outputs:a}=P(t),o=T(t),l=a=>{const o=tt(t),l=et(e);if(a){const e=Q(i,t,n);j(r,t,e,!1),s||nt(t)||o.connect(l,n)}else{const e=((t,e,n)=>_(t,(t=>t[0]===e&&t[1]===n)))(r,t,n);H(i,e,!1),s||nt(t)||o.disconnect(l,n)}};return!!G(a,[e,n],(t=>t[0]===e&&t[1]===n),!0)&&(o.add(l),L(t)?j(r,t,[n,l],!0):H(i,[t,n,l],!0),!0)})(this,t,n,c)){const e=u([this],t);it(e,s(c))}}disconnect(t,e,n){let s;const a=h(this._context),l=g(a);if(void 0===t)s=((t,e)=>{const n=P(t),s=[];for(const r of n.outputs)U(r)?ot(t,e,...r):lt(t,e,...r),s.push(r[0]);return n.outputs.clear(),s})(this,l);else if("number"==typeof t){if(t<0||t>=this.numberOfOutputs)throw r();s=((t,e,n)=>{const s=P(t),r=[];for(const i of s.outputs)i[1]===n&&(U(i)?ot(t,e,...i):lt(t,e,...i),r.push(i[0]),s.outputs.delete(i));return r})(this,l,t)}else{if(void 0!==e&&(e<0||e>=this.numberOfOutputs))throw r();if(q(t)&&void 0!==n&&(n<0||n>=t.numberOfInputs))throw r();if(s=((t,e,n,s,r)=>{const i=P(t);return Array.from(i.outputs).filter((t=>!(t[0]!==n||void 0!==s&&t[1]!==s||void 0!==r&&t[2]!==r))).map((n=>(U(n)?ot(t,e,...n):lt(t,e,...n),i.outputs.delete(n),n[0])))})(this,l,t,e,n),0===s.length)throw i()}for(const t of s){const e=u([this],t);it(e,o)}}})((Fe=o,(t,e,n)=>{const s=[];for(let t=0;t<n.numberOfInputs;t+=1)s.push(new Set);Fe.set(t,{activeInputs:s,outputs:new Set,passiveInputs:new WeakMap,renderer:e})}),((t,e,n,s,r,i,a,o,l,u,c,h,p)=>{const d=new WeakMap;return(f,m,g,y,b)=>{const{activeInputs:x,passiveInputs:v}=i(m),{outputs:w}=i(f),_=o(f),T=i=>{const o=l(m),u=l(f);if(i){const e=k(v,f,g,y);t(x,f,e,!1),b||h(f)||n(u,o,g,y),p(m)&&S(m)}else{const t=s(x,f,g,y);e(v,y,t,!1),b||h(f)||r(u,o,g,y);const n=a(m);if(0===n)c(m)&&N(m,x);else{const t=d.get(m);void 0!==t&&clearTimeout(t),d.set(m,setTimeout((()=>{c(m)&&N(m,x)}),1e3*n))}}};return!!u(w,[m,g,y],(t=>t[0]===m&&t[1]===g&&t[2]===y),!0)&&(_.add(T),c(f)?t(x,f,[g,y,T],!0):e(v,y,[f,g,T],!0),!0)}})(ce,he,K,pe,J,P,fe,T,tt,G,L,nt,st),me,((t,e,n,s,r,i)=>a=>(o,l)=>{const u=t.get(o);if(void 0===u){if(!a&&i(o)){const t=s(o),{outputs:i}=n(o);for(const n of i)if(U(n)){const r=s(n[0]);e(t,r,n[1],n[2])}else{const e=r(n[0]);t.disconnect(e,n[1])}}t.set(o,l)}else t.set(o,u+l)})(d,J,P,tt,et,L),R,It,jt,((t,e,n,s,r,i,a,o)=>(l,u)=>{const c=e.get(l);if(void 0===c)throw new Error("Missing the expected cycle count.");const h=i(l.context),p=o(h);if(c===u){if(e.delete(l),!p&&a(l)){const e=s(l),{outputs:i}=n(l);for(const n of i)if(U(n)){const r=s(n[0]);t(e,r,n[1],n[2])}else{const t=r(n[0]);e.connect(t,n[1])}}}else e.set(l,c-u)})(K,d,P,tt,et,ke,L,Ie),((t,e,n)=>function s(r,i){const a=q(i)?i:n(t,i);if((t=>"delayTime"in t)(a))return[];if(r[0]===a)return[r];if(r.includes(a))return[];const{outputs:o}=e(a);return Array.from(o).map((t=>s([...r,a],t[0]))).reduce(((t,e)=>t.concat(e)),[])})(Ce,P,w),Ne,ke,Ee,$e,Re,Ie,De);var Fe;const Me=((t,e,n,s,r,i)=>class extends t{constructor(t,n){const a=r(t),o={...A,...n},l=s(a,o);super(t,!1,l,i(a)?e():null),this._nativeAnalyserNode=l}get fftSize(){return this._nativeAnalyserNode.fftSize}set fftSize(t){this._nativeAnalyserNode.fftSize=t}get frequencyBinCount(){return this._nativeAnalyserNode.frequencyBinCount}get maxDecibels(){return this._nativeAnalyserNode.maxDecibels}set maxDecibels(t){const e=this._nativeAnalyserNode.maxDecibels;if(this._nativeAnalyserNode.maxDecibels=t,!(t>this._nativeAnalyserNode.minDecibels))throw this._nativeAnalyserNode.maxDecibels=e,n()}get minDecibels(){return this._nativeAnalyserNode.minDecibels}set minDecibels(t){const e=this._nativeAnalyserNode.minDecibels;if(this._nativeAnalyserNode.minDecibels=t,!(this._nativeAnalyserNode.maxDecibels>t))throw this._nativeAnalyserNode.minDecibels=e,n()}get smoothingTimeConstant(){return this._nativeAnalyserNode.smoothingTimeConstant}set smoothingTimeConstant(t){this._nativeAnalyserNode.smoothingTimeConstant=t}getByteFrequencyData(t){this._nativeAnalyserNode.getByteFrequencyData(t)}getByteTimeDomainData(t){this._nativeAnalyserNode.getByteTimeDomainData(t)}getFloatFrequencyData(t){this._nativeAnalyserNode.getFloatFrequencyData(t)}getFloatTimeDomainData(t){this._nativeAnalyserNode.getFloatTimeDomainData(t)}})(Oe,_e,R,xe,ke,Ie),Le=new WeakSet,ze=(t=>null===t?null:t.hasOwnProperty("AudioBuffer")?t.AudioBuffer:null)(be),Pe=(Ve=new Uint32Array(1),t=>(Ve[0]=t,Ve[0]));var Ve;const Be=((t,e)=>n=>{n.copyFromChannel=(s,r,i=0)=>{const a=t(i),o=t(r);if(o>=n.numberOfChannels)throw e();const l=n.length,u=n.getChannelData(o),c=s.length;for(let t=a<0?-a:0;t+a<l&&t<c;t+=1)s[t]=u[t+a]},n.copyToChannel=(s,r,i=0)=>{const a=t(i),o=t(r);if(o>=n.numberOfChannels)throw e();const l=n.length,u=n.getChannelData(o),c=s.length;for(let t=a<0?-a:0;t+a<l&&t<c;t+=1)u[t+a]=s[t]}})(Pe,R),We=(t=>e=>{e.copyFromChannel=(n=>(s,r,i=0)=>{const a=t(i),o=t(r);if(a<e.length)return n.call(e,s,o,a)})(e.copyFromChannel),e.copyToChannel=(n=>(s,r,i=0)=>{const a=t(i),o=t(r);if(a<e.length)return n.call(e,s,o,a)})(e.copyToChannel)})(Pe),qe=((t,e,n,s,r,i,a,o)=>{let l=null;return class u{constructor(u){if(null===r)throw new Error("Missing the native OfflineAudioContext constructor.");const{length:c,numberOfChannels:h,sampleRate:p}={...O,...u};null===l&&(l=new r(1,1,44100));const d=null!==s&&e(i,i)?new s({length:c,numberOfChannels:h,sampleRate:p}):l.createBuffer(h,c,p);if(0===d.numberOfChannels)throw n();return"function"!=typeof d.copyFromChannel?(a(d),D(d)):e($,(()=>$(d)))||o(d),t.add(d),d}static[Symbol.hasInstance](e){return null!==e&&"object"==typeof e&&Object.getPrototypeOf(e)===u.prototype||t.has(e)}}})(Le,me,jt,ze,Se,(t=>()=>{if(null===t)return!1;try{new t({length:1,sampleRate:44100})}catch{return!1}return!0})(ze),Be,We),Ue=(t=>(e,n)=>{const s=t(e,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});n.connect(s).connect(e.destination);const r=()=>{n.removeEventListener("ended",r),n.disconnect(s),s.disconnect()};n.addEventListener("ended",r)})(Wt),Ge=((t,e,n)=>async(s,r,i)=>{const a=e(s);await Promise.all(Array.from(a.activeInputs).map((async([e,s])=>{const a=t(e),o=await a.render(e,r);n(e)||o.connect(i,s)})))})(ve,V,nt),je=(t=>(e,n,s)=>t(n,e,s))(Ge),He=((t,e,n,s,r,i,a,o,l,u,c)=>(l,h)=>{const p=l.createBufferSource();return Rt(p,h),Ot(p,h,"playbackRate"),$t(p,h,"buffer"),$t(p,h,"loop"),$t(p,h,"loopEnd"),$t(p,h,"loopStart"),e(n,(()=>n(l)))||(t=>{t.start=(e=>{let n=!1;return(s=0,r=0,i)=>{if(n)throw St();e.call(t,s,r,i),n=!0}})(t.start)})(p),e(s,(()=>s(l)))||(t=>{t.start=(e=>(n=0,s=0,r)=>{const i=t.buffer,a=null===i?s:Math.min(i.duration,s);null!==i&&a>i.duration-.5/t.context.sampleRate?e.call(t,n,0,0):e.call(t,n,a,r)})(t.start)})(p),e(r,(()=>r(l)))||u(p,l),e(i,(()=>i(l)))||Ft(p),e(a,(()=>a(l)))||c(p,l),e(o,(()=>o(l)))||Mt(p),t(l,p),p})(Ue,me,(t=>{const e=t.createBufferSource();e.start();try{e.start()}catch{return!0}return!1}),(t=>{const e=t.createBufferSource(),n=t.createBuffer(1,1,44100);e.buffer=n;try{e.start(0,1)}catch{return!1}return!0}),(t=>{const e=t.createBufferSource();e.start();try{e.stop()}catch{return!1}return!0}),se,re,ie,0,(t=>(e,n)=>{const s=n.createBuffer(1,1,44100);null===e.buffer&&(e.buffer=s),t(e,"buffer",(t=>()=>{const n=t.call(e);return n===s?null:n}),(t=>n=>t.call(e,null===n?s:n)))})(ee),le),Xe=((t,e)=>(n,s,r)=>(t(s).replay(r),e(s,n,r)))((t=>e=>{const n=t(e);if(null===n.renderer)throw new Error("Missing the renderer of the given AudioParam in the audio graph.");return n.renderer})(V),Ge),Ke=((t,e,n,s,r)=>()=>{const i=new WeakMap;let a=null,o=null;return{set start(t){a=t},set stop(t){o=t},render(l,u){const c=i.get(u);return void 0!==c?Promise.resolve(c):(async(l,u)=>{let c=n(l);const h=E(c,u);if(!h){const t={buffer:c.buffer,channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,loop:c.loop,loopEnd:c.loopEnd,loopStart:c.loopStart,playbackRate:c.playbackRate.value};c=e(u,t),null!==a&&c.start(...a),null!==o&&c.stop(o)}return i.set(u,c),h?await t(u,l.playbackRate,c.playbackRate):await s(u,l.playbackRate,c.playbackRate),await r(l,u,c),c})(l,u)}}})(je,He,tt,Xe,we),Ye=((t,e,n,s,r,a,o,l,u,c,h,p,d)=>(s,f,m,g=null,y=null)=>{const b=new i.AutomationEventList(m.defaultValue),x=f?(t=>({replay(e){for(const n of t)if("exponentialRampToValue"===n.type){const{endTime:t,value:s}=n;e.exponentialRampToValueAtTime(s,t)}else if("linearRampToValue"===n.type){const{endTime:t,value:s}=n;e.linearRampToValueAtTime(s,t)}else if("setTarget"===n.type){const{startTime:t,target:s,timeConstant:r}=n;e.setTargetAtTime(s,t,r)}else if("setValue"===n.type){const{startTime:t,value:s}=n;e.setValueAtTime(s,t)}else{if("setValueCurve"!==n.type)throw new Error("Can't apply an unknown automation.");{const{duration:t,startTime:s,values:r}=n;e.setValueCurveAtTime(r,s,t)}}}}))(b):null,v={get defaultValue(){return m.defaultValue},get maxValue(){return null===g?m.maxValue:g},get minValue(){return null===y?m.minValue:y},get value(){return m.value},set value(t){m.value=t,v.setValueAtTime(t,s.context.currentTime)},cancelAndHoldAtTime(t){if("function"==typeof m.cancelAndHoldAtTime)null===x&&b.flush(s.context.currentTime),b.add(r(t)),m.cancelAndHoldAtTime(t);else{const e=Array.from(b).pop();null===x&&b.flush(s.context.currentTime),b.add(r(t));const n=Array.from(b).pop();m.cancelScheduledValues(t),e!==n&&void 0!==n&&("exponentialRampToValue"===n.type?m.exponentialRampToValueAtTime(n.value,n.endTime):"linearRampToValue"===n.type?m.linearRampToValueAtTime(n.value,n.endTime):"setValue"===n.type?m.setValueAtTime(n.value,n.startTime):"setValueCurve"===n.type&&m.setValueCurveAtTime(n.values,n.startTime,n.duration))}return v},cancelScheduledValues:t=>(null===x&&b.flush(s.context.currentTime),b.add(a(t)),m.cancelScheduledValues(t),v),exponentialRampToValueAtTime(t,e){if(0===t)throw new RangeError;if(!Number.isFinite(e)||e<0)throw new RangeError;return null===x&&b.flush(s.context.currentTime),b.add(o(t,e)),m.exponentialRampToValueAtTime(t,e),v},linearRampToValueAtTime:(t,e)=>(null===x&&b.flush(s.context.currentTime),b.add(l(t,e)),m.linearRampToValueAtTime(t,e),v),setTargetAtTime:(t,e,n)=>(null===x&&b.flush(s.context.currentTime),b.add(u(t,e,n)),m.setTargetAtTime(t,e,n),v),setValueAtTime:(t,e)=>(null===x&&b.flush(s.context.currentTime),b.add(c(t,e)),m.setValueAtTime(t,e),v),setValueCurveAtTime(t,e,n){const r=t instanceof Float32Array?t:new Float32Array(t);if(null!==p&&"webkitAudioContext"===p.name){const t=e+n,i=s.context.sampleRate,a=Math.ceil(e*i),o=Math.floor(t*i),l=o-a,u=new Float32Array(l);for(let t=0;t<l;t+=1){const s=(r.length-1)/n*((a+t)/i-e),o=Math.floor(s),l=Math.ceil(s);u[t]=o===l?r[o]:(1-(s-o))*r[o]+(1-(l-s))*r[l]}null===x&&b.flush(s.context.currentTime),b.add(h(u,e,n)),m.setValueCurveAtTime(u,e,n);const c=o/i;c<t&&d(v,u[u.length-1],c),d(v,r[r.length-1],t)}else null===x&&b.flush(s.context.currentTime),b.add(h(r,e,n)),m.setValueCurveAtTime(r,e,n);return v}};return n.set(v,m),e.set(v,s),t(v,x),v})((Ze=u,(t,e)=>{Ze.set(t,{activeInputs:new Set,passiveInputs:new WeakMap,renderer:e})}),Ce,c,0,i.createCancelAndHoldAutomationEvent,i.createCancelScheduledValuesAutomationEvent,i.createExponentialRampToValueAutomationEvent,i.createLinearRampToValueAutomationEvent,i.createSetTargetAutomationEvent,i.createSetValueAutomationEvent,i.createSetValueCurveAutomationEvent,Ae,ne);var Ze;const Qe=((t,e,n,s,r,i,a,o)=>class extends t{constructor(t,s){const o=i(t),l={...z,...s},u=r(o,l),c=a(o),h=c?e():null;super(t,!1,u,h),this._audioBufferSourceNodeRenderer=h,this._isBufferNullified=!1,this._isBufferSet=null!==l.buffer,this._nativeAudioBufferSourceNode=u,this._onended=null,this._playbackRate=n(this,c,u.playbackRate,M,F)}get buffer(){return this._isBufferNullified?null:this._nativeAudioBufferSourceNode.buffer}set buffer(t){if(this._nativeAudioBufferSourceNode.buffer=t,null!==t){if(this._isBufferSet)throw s();this._isBufferSet=!0}}get loop(){return this._nativeAudioBufferSourceNode.loop}set loop(t){this._nativeAudioBufferSourceNode.loop=t}get loopEnd(){return this._nativeAudioBufferSourceNode.loopEnd}set loopEnd(t){this._nativeAudioBufferSourceNode.loopEnd=t}get loopStart(){return this._nativeAudioBufferSourceNode.loopStart}set loopStart(t){this._nativeAudioBufferSourceNode.loopStart=t}get onended(){return this._onended}set onended(t){const e="function"==typeof t?o(this,t):null;this._nativeAudioBufferSourceNode.onended=e;const n=this._nativeAudioBufferSourceNode.onended;this._onended=null!==n&&n===e?t:n}get playbackRate(){return this._playbackRate}start(t=0,e=0,n){if(this._nativeAudioBufferSourceNode.start(t,e,n),null!==this._audioBufferSourceNodeRenderer&&(this._audioBufferSourceNodeRenderer.start=void 0===n?[t,e]:[t,e,n]),"closed"!==this.context.state){S(this);const t=()=>{this._nativeAudioBufferSourceNode.removeEventListener("ended",t),L(this)&&C(this)};this._nativeAudioBufferSourceNode.addEventListener("ended",t)}}stop(t=0){this._nativeAudioBufferSourceNode.stop(t),null!==this._audioBufferSourceNodeRenderer&&(this._audioBufferSourceNodeRenderer.stop=t)}})(Oe,Ke,Ye,St,He,ke,Ie,ue),Je=((t,e,n,s,r,i,a,o)=>class extends t{constructor(t,e){const n=i(t),s=a(n),l=r(n,e,s);super(t,!1,l,s?(t=>{const e=new WeakMap;return{render(n,s){const r=e.get(s);return void 0!==r?Promise.resolve(r):(async(n,s)=>{const r=s.destination;return e.set(s,r),await t(n,s,r),r})(n,s)}}})(o):null),this._isNodeOfNativeOfflineAudioContext=s,this._nativeAudioDestinationNode=l}get channelCount(){return this._nativeAudioDestinationNode.channelCount}set channelCount(t){if(this._isNodeOfNativeOfflineAudioContext)throw s();if(t>this._nativeAudioDestinationNode.maxChannelCount)throw n();this._nativeAudioDestinationNode.channelCount=t}get channelCountMode(){return this._nativeAudioDestinationNode.channelCountMode}set channelCountMode(t){if(this._isNodeOfNativeOfflineAudioContext)throw s();this._nativeAudioDestinationNode.channelCountMode=t}get maxChannelCount(){return this._nativeAudioDestinationNode.maxChannelCount}})(Oe,0,R,St,((t,e)=>(n,s,r)=>{const i=n.destination;if(i.channelCount!==s)try{i.channelCount=s}catch{}r&&"explicit"!==i.channelCountMode&&(i.channelCountMode="explicit"),0===i.maxChannelCount&&Object.defineProperty(i,"maxChannelCount",{value:s});const a=t(n,{channelCount:s,channelCountMode:i.channelCountMode,channelInterpretation:i.channelInterpretation,gain:1});return e(a,"channelCount",(t=>()=>t.call(a)),(t=>e=>{t.call(a,e);try{i.channelCount=e}catch(t){if(e>i.maxChannelCount)throw t}})),e(a,"channelCountMode",(t=>()=>t.call(a)),(t=>e=>{t.call(a,e),i.channelCountMode=e})),e(a,"channelInterpretation",(t=>()=>t.call(a)),(t=>e=>{t.call(a,e),i.channelInterpretation=e})),Object.defineProperty(a,"maxChannelCount",{get:()=>i.maxChannelCount}),a.connect(i),a})(Wt,ee),ke,Ie,we),tn=((t,e,n,s,r)=>()=>{const i=new WeakMap;return{render(a,o){const l=i.get(o);return void 0!==l?Promise.resolve(l):(async(a,o)=>{let l=n(a);const u=E(l,o);if(!u){const t={Q:l.Q.value,channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,detune:l.detune.value,frequency:l.frequency.value,gain:l.gain.value,type:l.type};l=e(o,t)}return i.set(o,l),u?(await t(o,a.Q,l.Q),await t(o,a.detune,l.detune),await t(o,a.frequency,l.frequency),await t(o,a.gain,l.gain)):(await s(o,a.Q,l.Q),await s(o,a.detune,l.detune),await s(o,a.frequency,l.frequency),await s(o,a.gain,l.gain)),await r(a,o,l),l})(a,o)}}})(je,zt,tt,Xe,we),en=(t=>(e,n)=>t.set(e,n))(de),nn=((t,e,n,s,r,i,a,o)=>class extends t{constructor(t,s){const l=i(t),u={...mt,...s},c=r(l,u),h=a(l);super(t,!1,c,h?n():null),this._Q=e(this,h,c.Q,M,F),this._detune=e(this,h,c.detune,1200*Math.log2(M),-1200*Math.log2(M)),this._frequency=e(this,h,c.frequency,t.sampleRate/2,0),this._gain=e(this,h,c.gain,40*Math.log10(M),F),this._nativeBiquadFilterNode=c,o(this,1)}get detune(){return this._detune}get frequency(){return this._frequency}get gain(){return this._gain}get Q(){return this._Q}get type(){return this._nativeBiquadFilterNode.type}set type(t){this._nativeBiquadFilterNode.type=t}getFrequencyResponse(t,e,n){try{this._nativeBiquadFilterNode.getFrequencyResponse(t,e,n)}catch(t){if(11===t.code)throw s();throw t}if(t.length!==e.length||e.length!==n.length)throw s()}})(Oe,Ye,tn,It,zt,ke,Ie,en),sn=((t,e)=>(n,s,r)=>{const i=new Set;return n.connect=(r=>(a,o=0,l=0)=>{const u=0===i.size;if(e(a))return r.call(n,a,o,l),t(i,[a,o,l],(t=>t[0]===a&&t[1]===o&&t[2]===l),!0),u&&s(),a;r.call(n,a,o),t(i,[a,o],(t=>t[0]===a&&t[1]===o),!0),u&&s()})(n.connect),n.disconnect=(t=>(s,a,o)=>{const l=i.size>0;if(void 0===s)t.apply(n),i.clear();else if("number"==typeof s){t.call(n,s);for(const t of i)t[1]===s&&i.delete(t)}else{e(s)?t.call(n,s,a,o):t.call(n,s,a);for(const t of i)t[0]!==s||void 0!==a&&t[1]!==a||void 0!==o&&t[2]!==o||i.delete(t)}const u=0===i.size;l&&u&&r()})(n.disconnect),n})(G,$e),rn=((t,e)=>(n,s)=>{s.channelCount=1,s.channelCountMode="explicit",Object.defineProperty(s,"channelCount",{get:()=>1,set:()=>{throw t()}}),Object.defineProperty(s,"channelCountMode",{get:()=>"explicit",set:()=>{throw t()}});const r=n.createBufferSource();e(s,(()=>{const t=s.numberOfInputs;for(let e=0;e<t;e+=1)r.connect(s,0,e)}),(()=>r.disconnect(s)))})(St,sn),an=((t,e)=>(n,s)=>{const r=n.createChannelMerger(s.numberOfInputs);return null!==t&&"webkitAudioContext"===t.name&&e(n,r),Rt(r,s),r})(Ae,rn),on=((t,e,n)=>()=>{const s=new WeakMap;return{render(r,i){const a=s.get(i);return void 0!==a?Promise.resolve(a):(async(r,i)=>{let a=e(r);if(!E(a,i)){const e={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,numberOfInputs:a.numberOfInputs};a=t(i,e)}return s.set(i,a),await n(r,i,a),a})(r,i)}}})(an,tt,we),ln=((t,e,n,s,r)=>class extends t{constructor(t,i){const a=s(t),o={...gt,...i};super(t,!1,n(a,o),r(a)?e():null)}})(Oe,on,an,ke,Ie),un=((t,e,n)=>()=>{const s=new WeakMap;return{render(r,i){const a=s.get(i);return void 0!==a?Promise.resolve(a):(async(r,i)=>{let a=e(r);if(!E(a,i)){const e={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,numberOfOutputs:a.numberOfOutputs};a=t(i,e)}return s.set(i,a),await n(r,i,a),a})(r,i)}}})(Pt,tt,we),cn=((t,e,n,s,r,i)=>class extends t{constructor(t,i){const a=s(t),o=(t=>({...t,channelCount:t.numberOfOutputs}))({...yt,...i});super(t,!1,n(a,o),r(a)?e():null)}})(Oe,un,Pt,ke,Ie),hn=((t,e,n,s)=>(r,{offset:i,...a})=>{const o=r.createBuffer(1,2,44100),l=e(r,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),u=n(r,{...a,gain:i}),c=o.getChannelData(0);c[0]=1,c[1]=1,l.buffer=o,l.loop=!0;const h={get bufferSize(){},get channelCount(){return u.channelCount},set channelCount(t){u.channelCount=t},get channelCountMode(){return u.channelCountMode},set channelCountMode(t){u.channelCountMode=t},get channelInterpretation(){return u.channelInterpretation},set channelInterpretation(t){u.channelInterpretation=t},get context(){return u.context},get inputs(){return[]},get numberOfInputs(){return l.numberOfInputs},get numberOfOutputs(){return u.numberOfOutputs},get offset(){return u.gain},get onended(){return l.onended},set onended(t){l.onended=t},addEventListener:(...t)=>l.addEventListener(t[0],t[1],t[2]),dispatchEvent:(...t)=>l.dispatchEvent(t[0]),removeEventListener:(...t)=>l.removeEventListener(t[0],t[1],t[2]),start(t=0){l.start.call(l,t)},stop(t=0){l.stop.call(l,t)}};return t(r,l),s(Vt(h,u),(()=>l.connect(u)),(()=>l.disconnect(u)))})(Ue,He,Wt,sn),pn=((t,e,n,s,r)=>(i,a)=>{if(void 0===i.createConstantSource)return n(i,a);const o=i.createConstantSource();return Rt(o,a),Ot(o,a,"offset"),e(s,(()=>s(i)))||Ft(o),e(r,(()=>r(i)))||Mt(o),t(i,o),o})(Ue,me,hn,se,ie),dn=((t,e,n,s,r)=>()=>{const i=new WeakMap;let a=null,o=null;return{set start(t){a=t},set stop(t){o=t},render(l,u){const c=i.get(u);return void 0!==c?Promise.resolve(c):(async(l,u)=>{let c=n(l);const h=E(c,u);if(!h){const t={channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,offset:c.offset.value};c=e(u,t),null!==a&&c.start(a),null!==o&&c.stop(o)}return i.set(u,c),h?await t(u,l.offset,c.offset):await s(u,l.offset,c.offset),await r(l,u,c),c})(l,u)}}})(je,pn,tt,Xe,we),fn=((t,e,n,s,r,i,a)=>class extends t{constructor(t,a){const o=r(t),l={...bt,...a},u=s(o,l),c=i(o),h=c?n():null;super(t,!1,u,h),this._constantSourceNodeRenderer=h,this._nativeConstantSourceNode=u,this._offset=e(this,c,u.offset,M,F),this._onended=null}get offset(){return this._offset}get onended(){return this._onended}set onended(t){const e="function"==typeof t?a(this,t):null;this._nativeConstantSourceNode.onended=e;const n=this._nativeConstantSourceNode.onended;this._onended=null!==n&&n===e?t:n}start(t=0){if(this._nativeConstantSourceNode.start(t),null!==this._constantSourceNodeRenderer&&(this._constantSourceNodeRenderer.start=t),"closed"!==this.context.state){S(this);const t=()=>{this._nativeConstantSourceNode.removeEventListener("ended",t),L(this)&&C(this)};this._nativeConstantSourceNode.addEventListener("ended",t)}}stop(t=0){this._nativeConstantSourceNode.stop(t),null!==this._constantSourceNodeRenderer&&(this._constantSourceNodeRenderer.stop=t)}})(Oe,Ye,dn,pn,ke,Ie,ue),mn=((t,e)=>(n,s)=>{const r=n.createConvolver();if(Rt(r,s),s.disableNormalization===r.normalize&&(r.normalize=!s.disableNormalization),$t(r,s,"buffer"),s.channelCount>2)throw t();if(e(r,"channelCount",(t=>()=>t.call(r)),(e=>n=>{if(n>2)throw t();return e.call(r,n)})),"max"===s.channelCountMode)throw t();return e(r,"channelCountMode",(t=>()=>t.call(r)),(e=>n=>{if("max"===n)throw t();return e.call(r,n)})),r})(jt,ee),gn=((t,e,n)=>()=>{const s=new WeakMap;return{render(r,i){const a=s.get(i);return void 0!==a?Promise.resolve(a):(async(r,i)=>{let a=e(r);if(!E(a,i)){const e={buffer:a.buffer,channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,disableNormalization:!a.normalize};a=t(i,e)}return s.set(i,a),X(a)?await n(r,i,a.inputs[0]):await n(r,i,a),a})(r,i)}}})(mn,tt,we),yn=((t,e,n,s,r,i)=>class extends t{constructor(t,a){const o=s(t),l={...xt,...a},u=n(o,l);super(t,!1,u,r(o)?e():null),this._isBufferNullified=!1,this._nativeConvolverNode=u,null!==l.buffer&&i(this,l.buffer.duration)}get buffer(){return this._isBufferNullified?null:this._nativeConvolverNode.buffer}set buffer(t){if(this._nativeConvolverNode.buffer=t,null===t&&null!==this._nativeConvolverNode.buffer){const t=this._nativeConvolverNode.context;this._nativeConvolverNode.buffer=t.createBuffer(1,1,44100),this._isBufferNullified=!0,i(this,0)}else this._isBufferNullified=!1,i(this,null===this._nativeConvolverNode.buffer?0:this._nativeConvolverNode.buffer.duration)}get normalize(){return this._nativeConvolverNode.normalize}set normalize(t){this._nativeConvolverNode.normalize=t}})(Oe,gn,mn,ke,Ie,en),bn=((t,e,n,s,r)=>i=>{const a=new WeakMap;return{render(o,l){const u=a.get(l);return void 0!==u?Promise.resolve(u):(async(o,l)=>{let u=n(o);const c=E(u,l);if(!c){const t={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,delayTime:u.delayTime.value,maxDelayTime:i};u=e(l,t)}return a.set(l,u),c?await t(l,o.delayTime,u.delayTime):await s(l,o.delayTime,u.delayTime),await r(o,l,u),u})(o,l)}}})(je,Bt,tt,Xe,we),xn=((t,e,n,s,r,i,a)=>class extends t{constructor(t,o){const l=r(t),u={...wt,...o},c=s(l,u),h=i(l);super(t,!1,c,h?n(u.maxDelayTime):null),this._delayTime=e(this,h,c.delayTime),a(this,u.maxDelayTime)}get delayTime(){return this._delayTime}})(Oe,Ye,bn,Bt,ke,Ie,en),vn=(t=>(e,n)=>{const s=e.createDynamicsCompressor();if(Rt(s,n),n.channelCount>2)throw t();if("max"===n.channelCountMode)throw t();return Ot(s,n,"attack"),Ot(s,n,"knee"),Ot(s,n,"ratio"),Ot(s,n,"release"),Ot(s,n,"threshold"),s})(jt),wn=((t,e,n,s,r)=>()=>{const i=new WeakMap;return{render(a,o){const l=i.get(o);return void 0!==l?Promise.resolve(l):(async(a,o)=>{let l=n(a);const u=E(l,o);if(!u){const t={attack:l.attack.value,channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,knee:l.knee.value,ratio:l.ratio.value,release:l.release.value,threshold:l.threshold.value};l=e(o,t)}return i.set(o,l),u?(await t(o,a.attack,l.attack),await t(o,a.knee,l.knee),await t(o,a.ratio,l.ratio),await t(o,a.release,l.release),await t(o,a.threshold,l.threshold)):(await s(o,a.attack,l.attack),await s(o,a.knee,l.knee),await s(o,a.ratio,l.ratio),await s(o,a.release,l.release),await s(o,a.threshold,l.threshold)),await r(a,o,l),l})(a,o)}}})(je,vn,tt,Xe,we),_n=((t,e,n,s,r,i,a,o)=>class extends t{constructor(t,r){const l=i(t),u={...kt,...r},c=s(l,u),h=a(l);super(t,!1,c,h?n():null),this._attack=e(this,h,c.attack),this._knee=e(this,h,c.knee),this._nativeDynamicsCompressorNode=c,this._ratio=e(this,h,c.ratio),this._release=e(this,h,c.release),this._threshold=e(this,h,c.threshold),o(this,.006)}get attack(){return this._attack}get channelCount(){return this._nativeDynamicsCompressorNode.channelCount}set channelCount(t){const e=this._nativeDynamicsCompressorNode.channelCount;if(this._nativeDynamicsCompressorNode.channelCount=t,t>2)throw this._nativeDynamicsCompressorNode.channelCount=e,r()}get channelCountMode(){return this._nativeDynamicsCompressorNode.channelCountMode}set channelCountMode(t){const e=this._nativeDynamicsCompressorNode.channelCountMode;if(this._nativeDynamicsCompressorNode.channelCountMode=t,"max"===t)throw this._nativeDynamicsCompressorNode.channelCountMode=e,r()}get knee(){return this._knee}get ratio(){return this._ratio}get reduction(){return"number"==typeof this._nativeDynamicsCompressorNode.reduction.value?this._nativeDynamicsCompressorNode.reduction.value:this._nativeDynamicsCompressorNode.reduction}get release(){return this._release}get threshold(){return this._threshold}})(Oe,Ye,wn,vn,jt,ke,Ie,en),kn=((t,e,n,s,r)=>()=>{const i=new WeakMap;return{render(a,o){const l=i.get(o);return void 0!==l?Promise.resolve(l):(async(a,o)=>{let l=n(a);const u=E(l,o);if(!u){const t={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,gain:l.gain.value};l=e(o,t)}return i.set(o,l),u?await t(o,a.gain,l.gain):await s(o,a.gain,l.gain),await r(a,o,l),l})(a,o)}}})(je,Wt,tt,Xe,we),Tn=((t,e,n,s,r,i)=>class extends t{constructor(t,a){const o=r(t),l={...Tt,...a},u=s(o,l),c=i(o);super(t,!1,u,c?n():null),this._gain=e(this,c,u.gain,M,F)}get gain(){return this._gain}})(Oe,Ye,kn,Wt,ke,Ie),Sn=((t,e,n,s)=>(r,i,{channelCount:a,channelCountMode:o,channelInterpretation:l,feedback:u,feedforward:c})=>{const h=Lt(i,r.sampleRate),p=u instanceof Float64Array?u:new Float64Array(u),d=c instanceof Float64Array?c:new Float64Array(c),f=p.length,m=d.length,g=Math.min(f,m);if(0===f||f>20)throw s();if(0===p[0])throw e();if(0===m||m>20)throw s();if(0===d[0])throw e();if(1!==p[0]){for(let t=0;t<m;t+=1)d[t]/=p[0];for(let t=1;t<f;t+=1)p[t]/=p[0]}const y=n(r,h,a,a);y.channelCount=a,y.channelCountMode=o,y.channelInterpretation=l;const b=[],x=[],v=[];for(let t=0;t<a;t+=1){b.push(0);const t=new Float32Array(32),e=new Float32Array(32);t.fill(0),e.fill(0),x.push(t),v.push(e)}y.onaudioprocess=t=>{const e=t.inputBuffer,n=t.outputBuffer,s=e.numberOfChannels;for(let t=0;t<s;t+=1){const s=e.getChannelData(t),r=n.getChannelData(t);b[t]=Nt(p,f,d,m,g,x[t],v[t],b[t],32,s,r)}};const w=r.sampleRate/2;return Vt({get bufferSize(){return h},get channelCount(){return y.channelCount},set channelCount(t){y.channelCount=t},get channelCountMode(){return y.channelCountMode},set channelCountMode(t){y.channelCountMode=t},get channelInterpretation(){return y.channelInterpretation},set channelInterpretation(t){y.channelInterpretation=t},get context(){return y.context},get inputs(){return[y]},get numberOfInputs(){return y.numberOfInputs},get numberOfOutputs(){return y.numberOfOutputs},addEventListener:(...t)=>y.addEventListener(t[0],t[1],t[2]),dispatchEvent:(...t)=>y.dispatchEvent(t[0]),getFrequencyResponse(e,n,s){if(e.length!==n.length||n.length!==s.length)throw t();const r=e.length;for(let t=0;t<r;t+=1){const r=-Math.PI*(e[t]/w),i=[Math.cos(r),Math.sin(r)],a=qt(Ut(d,i),Ut(p,i));n[t]=Math.sqrt(a[0]*a[0]+a[1]*a[1]),s[t]=Math.atan2(a[1],a[0])}},removeEventListener:(...t)=>y.removeEventListener(t[0],t[1],t[2])},y)})(It,St,Gt,jt),In=((t,e,n,s)=>r=>t(Et,(()=>Et(r)))?Promise.resolve(t(s,s)).then((t=>{if(!t){const t=n(r,512,0,1);r.oncomplete=()=>{t.onaudioprocess=null,t.disconnect()},t.onaudioprocess=()=>r.currentTime,t.connect(r.destination)}return r.startRendering()})):new Promise((t=>{const n=e(r,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});r.oncomplete=e=>{n.disconnect(),t(e.renderedBuffer)},n.connect(r.destination),r.startRendering()})))(me,Wt,Gt,((t,e)=>()=>{if(null===e)return Promise.resolve(!1);const n=new e(1,1,44100),s=t(n,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return new Promise((t=>{n.oncomplete=()=>{s.disconnect(),t(0!==n.currentTime)},n.startRendering()}))})(Wt,Se)),Cn=((t,e,n,s,r)=>(i,a)=>{const o=new WeakMap;let l=null;return{render(u,c){const h=o.get(c);return void 0!==h?Promise.resolve(h):(async(u,c)=>{let h=null,p=e(u);const d=E(p,c);if(void 0===c.createIIRFilter?h=t(c,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}):d||(p=c.createIIRFilter(a,i)),o.set(c,null===h?p:h),null!==h){if(null===l){if(null===n)throw new Error("Missing the native OfflineAudioContext constructor.");const t=new n(u.context.destination.channelCount,u.context.length,c.sampleRate);l=(async()=>(await s(u,t,t.destination),((t,e,n,s)=>{const r=n instanceof Float64Array?n:new Float64Array(n),i=s instanceof Float64Array?s:new Float64Array(s),a=r.length,o=i.length,l=Math.min(a,o);if(1!==r[0]){for(let t=0;t<a;t+=1)i[t]/=r[0];for(let t=1;t<o;t+=1)r[t]/=r[0]}const u=new Float32Array(32),c=new Float32Array(32),h=e.createBuffer(t.numberOfChannels,t.length,t.sampleRate),p=t.numberOfChannels;for(let e=0;e<p;e+=1){const n=t.getChannelData(e),s=h.getChannelData(e);u.fill(0),c.fill(0),Nt(r,a,i,o,l,u,c,0,32,n,s)}return h})(await r(t),c,i,a)))()}const t=await l;return h.buffer=t,h.start(0),h}return await s(u,c,p),p})(u,c)}}})(He,tt,Se,we,In),Nn=(t=>(e,n,s)=>{if(void 0===e.createIIRFilter)return t(e,n,s);const r=e.createIIRFilter(s.feedforward,s.feedback);return Rt(r,s),r})(Sn),An=((t,e,n,s,r,i)=>class extends t{constructor(t,a){const o=s(t),l=r(o),u={...Ct,...a},c=e(o,l?null:t.baseLatency,u);super(t,!1,c,l?n(u.feedback,u.feedforward):null),(t=>{var e;t.getFrequencyResponse=(e=t.getFrequencyResponse,(n,s,r)=>{if(n.length!==s.length||s.length!==r.length)throw It();return e.call(t,n,s,r)})})(c),this._nativeIIRFilterNode=c,i(this,1)}getFrequencyResponse(t,e,n){return this._nativeIIRFilterNode.getFrequencyResponse(t,e,n)}})(Oe,Nn,Cn,ke,Ie,en),En=((t,e,n,s,r,i,a,o)=>(l,u)=>{const c=u.listener,{forwardX:h,forwardY:p,forwardZ:d,positionX:f,positionY:m,positionZ:g,upX:y,upY:b,upZ:x}=void 0===c.forwardX?(()=>{const h=new Float32Array(1),p=e(u,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:9}),d=a(u);let f=!1,m=[0,0,-1,0,1,0],g=[0,0,0];const y=()=>{if(f)return;f=!0;const t=s(u,256,9,0);t.onaudioprocess=({inputBuffer:t})=>{const e=[i(t,h,0),i(t,h,1),i(t,h,2),i(t,h,3),i(t,h,4),i(t,h,5)];e.some(((t,e)=>t!==m[e]))&&(c.setOrientation(...e),m=e);const n=[i(t,h,6),i(t,h,7),i(t,h,8)];n.some(((t,e)=>t!==g[e]))&&(c.setPosition(...n),g=n)},p.connect(t)},b=t=>e=>{e!==m[t]&&(m[t]=e,c.setOrientation(...m))},x=t=>e=>{e!==g[t]&&(g[t]=e,c.setPosition(...g))},v=(e,s,i)=>{const a=n(u,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:s});a.connect(p,0,e),a.start(),Object.defineProperty(a.offset,"defaultValue",{get:()=>s});const c=t({context:l},d,a.offset,M,F);var h,f,m,g,b,x,v;return o(c,"value",(t=>()=>t.call(c)),(t=>e=>{try{t.call(c,e)}catch(t){if(9!==t.code)throw t}y(),d&&i(e)})),c.cancelAndHoldAtTime=(h=c.cancelAndHoldAtTime,d?()=>{throw r()}:(...t)=>{const e=h.apply(c,t);return y(),e}),c.cancelScheduledValues=(f=c.cancelScheduledValues,d?()=>{throw r()}:(...t)=>{const e=f.apply(c,t);return y(),e}),c.exponentialRampToValueAtTime=(m=c.exponentialRampToValueAtTime,d?()=>{throw r()}:(...t)=>{const e=m.apply(c,t);return y(),e}),c.linearRampToValueAtTime=(g=c.linearRampToValueAtTime,d?()=>{throw r()}:(...t)=>{const e=g.apply(c,t);return y(),e}),c.setTargetAtTime=(b=c.setTargetAtTime,d?()=>{throw r()}:(...t)=>{const e=b.apply(c,t);return y(),e}),c.setValueAtTime=(x=c.setValueAtTime,d?()=>{throw r()}:(...t)=>{const e=x.apply(c,t);return y(),e}),c.setValueCurveAtTime=(v=c.setValueCurveAtTime,d?()=>{throw r()}:(...t)=>{const e=v.apply(c,t);return y(),e}),c};return{forwardX:v(0,0,b(0)),forwardY:v(1,0,b(1)),forwardZ:v(2,-1,b(2)),positionX:v(6,0,x(0)),positionY:v(7,0,x(1)),positionZ:v(8,0,x(2)),upX:v(3,0,b(3)),upY:v(4,1,b(4)),upZ:v(5,0,b(5))}})():c;return{get forwardX(){return h},get forwardY(){return p},get forwardZ(){return d},get positionX(){return f},get positionY(){return m},get positionZ(){return g},get upX(){return y},get upY(){return b},get upZ(){return x}}})(Ye,an,pn,Gt,jt,Jt,Ie,ee),$n=new WeakMap,Rn=((t,e,n,s,r,i)=>class extends n{constructor(n,i){super(n),this._nativeContext=n,h.set(this,n),s(n)&&r.set(n,new Set),this._destination=new t(this,i),this._listener=e(this,n),this._onstatechange=null}get currentTime(){return this._nativeContext.currentTime}get destination(){return this._destination}get listener(){return this._listener}get onstatechange(){return this._onstatechange}set onstatechange(t){const e="function"==typeof t?i(this,t):null;this._nativeContext.onstatechange=e;const n=this._nativeContext.onstatechange;this._onstatechange=null!==n&&n===e?t:n}get sampleRate(){return this._nativeContext.sampleRate}get state(){return this._nativeContext.state}})(Je,En,Ne,Ie,$n,ue),Dn=((t,e,n,s,r,i)=>(a,o)=>{const l=a.createOscillator();return Rt(l,o),Ot(l,o,"detune"),Ot(l,o,"frequency"),void 0!==o.periodicWave?l.setPeriodicWave(o.periodicWave):$t(l,o,"type"),e(n,(()=>n(a)))||Ft(l),e(s,(()=>s(a)))||i(l,a),e(r,(()=>r(a)))||Mt(l),t(a,l),l})(Ue,me,se,re,ie,le),On=((t,e,n,s,r)=>()=>{const i=new WeakMap;let a=null,o=null,l=null;return{set periodicWave(t){a=t},set start(t){o=t},set stop(t){l=t},render(u,c){const h=i.get(c);return void 0!==h?Promise.resolve(h):(async(u,c)=>{let h=n(u);const p=E(h,c);if(!p){const t={channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,detune:h.detune.value,frequency:h.frequency.value,periodicWave:null===a?void 0:a,type:h.type};h=e(c,t),null!==o&&h.start(o),null!==l&&h.stop(l)}return i.set(c,h),p?(await t(c,u.detune,h.detune),await t(c,u.frequency,h.frequency)):(await s(c,u.detune,h.detune),await s(c,u.frequency,h.frequency)),await r(u,c,h),h})(u,c)}}})(je,Dn,tt,Xe,we),Fn=((t,e,n,s,r,i,a)=>class extends t{constructor(t,a){const o=r(t),l={...Xt,...a},u=n(o,l),c=i(o),h=c?s():null,p=t.sampleRate/2;super(t,!1,u,h),this._detune=e(this,c,u.detune,153600,-153600),this._frequency=e(this,c,u.frequency,p,-p),this._nativeOscillatorNode=u,this._onended=null,this._oscillatorNodeRenderer=h,null!==this._oscillatorNodeRenderer&&void 0!==l.periodicWave&&(this._oscillatorNodeRenderer.periodicWave=l.periodicWave)}get detune(){return this._detune}get frequency(){return this._frequency}get onended(){return this._onended}set onended(t){const e="function"==typeof t?a(this,t):null;this._nativeOscillatorNode.onended=e;const n=this._nativeOscillatorNode.onended;this._onended=null!==n&&n===e?t:n}get type(){return this._nativeOscillatorNode.type}set type(t){this._nativeOscillatorNode.type=t,null!==this._oscillatorNodeRenderer&&(this._oscillatorNodeRenderer.periodicWave=null)}setPeriodicWave(t){this._nativeOscillatorNode.setPeriodicWave(t),null!==this._oscillatorNodeRenderer&&(this._oscillatorNodeRenderer.periodicWave=t)}start(t=0){if(this._nativeOscillatorNode.start(t),null!==this._oscillatorNodeRenderer&&(this._oscillatorNodeRenderer.start=t),"closed"!==this.context.state){S(this);const t=()=>{this._nativeOscillatorNode.removeEventListener("ended",t),L(this)&&C(this)};this._nativeOscillatorNode.addEventListener("ended",t)}}stop(t=0){this._nativeOscillatorNode.stop(t),null!==this._oscillatorNodeRenderer&&(this._oscillatorNodeRenderer.stop=t)}})(Oe,Ye,Dn,On,ke,Ie,ue),Mn=(t=>(e,n)=>{const s=t(e,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),r=e.createBuffer(1,2,44100);return s.buffer=r,s.loop=!0,s.connect(n),s.start(),()=>{s.stop(),s.disconnect(n)}})(He),Ln=((t,e,n,s,r)=>(i,{curve:a,oversample:o,...l})=>{const u=i.createWaveShaper(),c=i.createWaveShaper();Rt(u,l),Rt(c,l);const h=n(i,{...l,gain:1}),p=n(i,{...l,gain:-1}),d=n(i,{...l,gain:1}),f=n(i,{...l,gain:-1});let m=null,g=!1,y=null;const b={get bufferSize(){},get channelCount(){return u.channelCount},set channelCount(t){h.channelCount=t,p.channelCount=t,u.channelCount=t,d.channelCount=t,c.channelCount=t,f.channelCount=t},get channelCountMode(){return u.channelCountMode},set channelCountMode(t){h.channelCountMode=t,p.channelCountMode=t,u.channelCountMode=t,d.channelCountMode=t,c.channelCountMode=t,f.channelCountMode=t},get channelInterpretation(){return u.channelInterpretation},set channelInterpretation(t){h.channelInterpretation=t,p.channelInterpretation=t,u.channelInterpretation=t,d.channelInterpretation=t,c.channelInterpretation=t,f.channelInterpretation=t},get context(){return u.context},get curve(){return y},set curve(n){if(null!==n&&n.length<2)throw e();if(null===n)u.curve=n,c.curve=n;else{const t=n.length,e=new Float32Array(t+2-t%2),s=new Float32Array(t+2-t%2);e[0]=n[0],s[0]=-n[t-1];const r=Math.ceil((t+1)/2),i=(t+1)/2-1;for(let a=1;a<r;a+=1){const o=a/r*i,l=Math.floor(o),u=Math.ceil(o);e[a]=l===u?n[l]:(1-(o-l))*n[l]+(1-(u-o))*n[u],s[a]=l===u?-n[t-1-l]:-(1-(o-l))*n[t-1-l]-(1-(u-o))*n[t-1-u]}e[r]=t%2==1?n[r-1]:(n[r-2]+n[r-1])/2,u.curve=e,c.curve=s}y=n,g&&(s(y)&&null===m?m=t(i,h):null!==m&&(m(),m=null))},get inputs(){return[h]},get numberOfInputs(){return u.numberOfInputs},get numberOfOutputs(){return u.numberOfOutputs},get oversample(){return u.oversample},set oversample(t){u.oversample=t,c.oversample=t},addEventListener:(...t)=>h.addEventListener(t[0],t[1],t[2]),dispatchEvent:(...t)=>h.dispatchEvent(t[0]),removeEventListener:(...t)=>h.removeEventListener(t[0],t[1],t[2])};return null!==a&&(b.curve=a instanceof Float32Array?a:new Float32Array(a)),o!==b.oversample&&(b.oversample=o),r(Vt(b,d),(()=>{h.connect(u).connect(d),h.connect(p).connect(c).connect(f).connect(d),g=!0,s(y)&&(m=t(i,h))}),(()=>{h.disconnect(u),u.disconnect(d),h.disconnect(p),p.disconnect(c),c.disconnect(f),f.disconnect(d),g=!1,null!==m&&(m(),m=null)}))})(Mn,St,Wt,te,sn),zn=((t,e,n,s,r,i,a)=>(o,l)=>{const u=o.createWaveShaper();if(null!==i&&"webkitAudioContext"===i.name&&void 0===o.createGain().gain.automationRate)return n(o,l);Rt(u,l);const c=null===l.curve||l.curve instanceof Float32Array?l.curve:new Float32Array(l.curve);if(null!==c&&c.length<2)throw e();$t(u,{curve:c},"curve"),$t(u,l,"oversample");let h=null,p=!1;return a(u,"curve",(t=>()=>t.call(u)),(e=>n=>(e.call(u,n),p&&(s(n)&&null===h?h=t(o,u):s(n)||null===h||(h(),h=null)),n))),r(u,(()=>{p=!0,s(u.curve)&&(h=t(o,u))}),(()=>{p=!1,null!==h&&(h(),h=null)}))})(Mn,St,Ln,te,sn,Ae,ee),Pn=((t,e,n,s,r,i,a,o,l,u)=>(c,{coneInnerAngle:h,coneOuterAngle:p,coneOuterGain:d,distanceModel:f,maxDistance:m,orientationX:g,orientationY:y,orientationZ:b,panningModel:x,positionX:v,positionY:w,positionZ:_,refDistance:k,rolloffFactor:T,...S})=>{const I=c.createPanner();if(S.channelCount>2)throw a();if("max"===S.channelCountMode)throw a();Rt(I,S);const C={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},N=n(c,{...C,channelInterpretation:"speakers",numberOfInputs:6}),A=s(c,{...S,gain:1}),E=s(c,{...C,gain:1}),$=s(c,{...C,gain:0}),R=s(c,{...C,gain:0}),D=s(c,{...C,gain:0}),O=s(c,{...C,gain:0}),F=s(c,{...C,gain:0}),M=r(c,256,6,1),L=i(c,{...C,curve:new Float32Array([1,1]),oversample:"none"});let z=[g,y,b],P=[v,w,_];const V=new Float32Array(1);M.onaudioprocess=({inputBuffer:t})=>{const e=[l(t,V,0),l(t,V,1),l(t,V,2)];e.some(((t,e)=>t!==z[e]))&&(I.setOrientation(...e),z=e);const n=[l(t,V,3),l(t,V,4),l(t,V,5)];n.some(((t,e)=>t!==P[e]))&&(I.setPosition(...n),P=n)},Object.defineProperty($.gain,"defaultValue",{get:()=>0}),Object.defineProperty(R.gain,"defaultValue",{get:()=>0}),Object.defineProperty(D.gain,"defaultValue",{get:()=>0}),Object.defineProperty(O.gain,"defaultValue",{get:()=>0}),Object.defineProperty(F.gain,"defaultValue",{get:()=>0});const B={get bufferSize(){},get channelCount(){return I.channelCount},set channelCount(t){if(t>2)throw a();A.channelCount=t,I.channelCount=t},get channelCountMode(){return I.channelCountMode},set channelCountMode(t){if("max"===t)throw a();A.channelCountMode=t,I.channelCountMode=t},get channelInterpretation(){return I.channelInterpretation},set channelInterpretation(t){A.channelInterpretation=t,I.channelInterpretation=t},get coneInnerAngle(){return I.coneInnerAngle},set coneInnerAngle(t){I.coneInnerAngle=t},get coneOuterAngle(){return I.coneOuterAngle},set coneOuterAngle(t){I.coneOuterAngle=t},get coneOuterGain(){return I.coneOuterGain},set coneOuterGain(t){if(t<0||t>1)throw e();I.coneOuterGain=t},get context(){return I.context},get distanceModel(){return I.distanceModel},set distanceModel(t){I.distanceModel=t},get inputs(){return[A]},get maxDistance(){return I.maxDistance},set maxDistance(t){if(t<0)throw new RangeError;I.maxDistance=t},get numberOfInputs(){return I.numberOfInputs},get numberOfOutputs(){return I.numberOfOutputs},get orientationX(){return E.gain},get orientationY(){return $.gain},get orientationZ(){return R.gain},get panningModel(){return I.panningModel},set panningModel(t){I.panningModel=t},get positionX(){return D.gain},get positionY(){return O.gain},get positionZ(){return F.gain},get refDistance(){return I.refDistance},set refDistance(t){if(t<0)throw new RangeError;I.refDistance=t},get rolloffFactor(){return I.rolloffFactor},set rolloffFactor(t){if(t<0)throw new RangeError;I.rolloffFactor=t},addEventListener:(...t)=>A.addEventListener(t[0],t[1],t[2]),dispatchEvent:(...t)=>A.dispatchEvent(t[0]),removeEventListener:(...t)=>A.removeEventListener(t[0],t[1],t[2])};return h!==B.coneInnerAngle&&(B.coneInnerAngle=h),p!==B.coneOuterAngle&&(B.coneOuterAngle=p),d!==B.coneOuterGain&&(B.coneOuterGain=d),f!==B.distanceModel&&(B.distanceModel=f),m!==B.maxDistance&&(B.maxDistance=m),g!==B.orientationX.value&&(B.orientationX.value=g),y!==B.orientationY.value&&(B.orientationY.value=y),b!==B.orientationZ.value&&(B.orientationZ.value=b),x!==B.panningModel&&(B.panningModel=x),v!==B.positionX.value&&(B.positionX.value=v),w!==B.positionY.value&&(B.positionY.value=w),_!==B.positionZ.value&&(B.positionZ.value=_),k!==B.refDistance&&(B.refDistance=k),T!==B.rolloffFactor&&(B.rolloffFactor=T),1===z[0]&&0===z[1]&&0===z[2]||I.setOrientation(...z),0===P[0]&&0===P[1]&&0===P[2]||I.setPosition(...P),u(Vt(B,I),(()=>{A.connect(I),t(A,L,0,0),L.connect(E).connect(N,0,0),L.connect($).connect(N,0,1),L.connect(R).connect(N,0,2),L.connect(D).connect(N,0,3),L.connect(O).connect(N,0,4),L.connect(F).connect(N,0,5),N.connect(M).connect(c.destination)}),(()=>{A.disconnect(I),o(A,L,0,0),L.disconnect(E),E.disconnect(N),L.disconnect($),$.disconnect(N),L.disconnect(R),R.disconnect(N),L.disconnect(D),D.disconnect(N),L.disconnect(O),O.disconnect(N),L.disconnect(F),F.disconnect(N),N.disconnect(M),M.disconnect(c.destination)}))})(K,St,an,Wt,Gt,zn,jt,J,Jt,sn),Vn=(t=>(e,n)=>{const s=e.createPanner();return void 0===s.orientationX?t(e,n):(Rt(s,n),Ot(s,n,"orientationX"),Ot(s,n,"orientationY"),Ot(s,n,"orientationZ"),Ot(s,n,"positionX"),Ot(s,n,"positionY"),Ot(s,n,"positionZ"),$t(s,n,"coneInnerAngle"),$t(s,n,"coneOuterAngle"),$t(s,n,"coneOuterGain"),$t(s,n,"distanceModel"),$t(s,n,"maxDistance"),$t(s,n,"panningModel"),$t(s,n,"refDistance"),$t(s,n,"rolloffFactor"),s)})(Pn),Bn=((t,e,n,s,r,i,a,o,l,u)=>()=>{const c=new WeakMap;let h=null;return{render(p,d){const f=c.get(d);return void 0!==f?Promise.resolve(f):(async(p,d)=>{let f=null,m=i(p);const g={channelCount:m.channelCount,channelCountMode:m.channelCountMode,channelInterpretation:m.channelInterpretation},y={...g,coneInnerAngle:m.coneInnerAngle,coneOuterAngle:m.coneOuterAngle,coneOuterGain:m.coneOuterGain,distanceModel:m.distanceModel,maxDistance:m.maxDistance,panningModel:m.panningModel,refDistance:m.refDistance,rolloffFactor:m.rolloffFactor},b=E(m,d);if("bufferSize"in m)f=s(d,{...g,gain:1});else if(!b){const t={...y,orientationX:m.orientationX.value,orientationY:m.orientationY.value,orientationZ:m.orientationZ.value,positionX:m.positionX.value,positionY:m.positionY.value,positionZ:m.positionZ.value};m=r(d,t)}if(c.set(d,null===f?m:f),null!==f){if(null===h){if(null===a)throw new Error("Missing the native OfflineAudioContext constructor.");const t=new a(6,p.context.length,d.sampleRate),s=e(t,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6});s.connect(t.destination),h=(async()=>{const e=await Promise.all([p.orientationX,p.orientationY,p.orientationZ,p.positionX,p.positionY,p.positionZ].map((async(e,s)=>{const r=n(t,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:0===s?1:0});return await o(t,e,r.offset),r})));for(let t=0;t<6;t+=1)e[t].connect(s,0,t),e[t].start(0);return u(t)})()}const t=await h,i=s(d,{...g,gain:1});await l(p,d,i);const c=[];for(let e=0;e<t.numberOfChannels;e+=1)c.push(t.getChannelData(e));let m=[c[0][0],c[1][0],c[2][0]],b=[c[3][0],c[4][0],c[5][0]],x=s(d,{...g,gain:1}),v=r(d,{...y,orientationX:m[0],orientationY:m[1],orientationZ:m[2],positionX:b[0],positionY:b[1],positionZ:b[2]});i.connect(x).connect(v.inputs[0]),v.connect(f);for(let e=128;e<t.length;e+=128){const t=[c[0][e],c[1][e],c[2][e]],n=[c[3][e],c[4][e],c[5][e]];if(t.some(((t,e)=>t!==m[e]))||n.some(((t,e)=>t!==b[e]))){m=t,b=n;const a=e/d.sampleRate;x.gain.setValueAtTime(0,a),x=s(d,{...g,gain:0}),v=r(d,{...y,orientationX:m[0],orientationY:m[1],orientationZ:m[2],positionX:b[0],positionY:b[1],positionZ:b[2]}),x.gain.setValueAtTime(1,a),i.connect(x).connect(v.inputs[0]),v.connect(f)}}return f}return b?(await t(d,p.orientationX,m.orientationX),await t(d,p.orientationY,m.orientationY),await t(d,p.orientationZ,m.orientationZ),await t(d,p.positionX,m.positionX),await t(d,p.positionY,m.positionY),await t(d,p.positionZ,m.positionZ)):(await o(d,p.orientationX,m.orientationX),await o(d,p.orientationY,m.orientationY),await o(d,p.orientationZ,m.orientationZ),await o(d,p.positionX,m.positionX),await o(d,p.positionY,m.positionY),await o(d,p.positionZ,m.positionZ)),X(m)?await l(p,d,m.inputs[0]):await l(p,d,m),m})(p,d)}}})(je,an,pn,Wt,Vn,tt,Se,Xe,we,In),Wn=((t,e,n,s,r,i,a)=>class extends t{constructor(t,o){const l=r(t),u={...Kt,...o},c=n(l,u),h=i(l);super(t,!1,c,h?s():null),this._nativePannerNode=c,this._orientationX=e(this,h,c.orientationX,M,F),this._orientationY=e(this,h,c.orientationY,M,F),this._orientationZ=e(this,h,c.orientationZ,M,F),this._positionX=e(this,h,c.positionX,M,F),this._positionY=e(this,h,c.positionY,M,F),this._positionZ=e(this,h,c.positionZ,M,F),a(this,1)}get coneInnerAngle(){return this._nativePannerNode.coneInnerAngle}set coneInnerAngle(t){this._nativePannerNode.coneInnerAngle=t}get coneOuterAngle(){return this._nativePannerNode.coneOuterAngle}set coneOuterAngle(t){this._nativePannerNode.coneOuterAngle=t}get coneOuterGain(){return this._nativePannerNode.coneOuterGain}set coneOuterGain(t){this._nativePannerNode.coneOuterGain=t}get distanceModel(){return this._nativePannerNode.distanceModel}set distanceModel(t){this._nativePannerNode.distanceModel=t}get maxDistance(){return this._nativePannerNode.maxDistance}set maxDistance(t){this._nativePannerNode.maxDistance=t}get orientationX(){return this._orientationX}get orientationY(){return this._orientationY}get orientationZ(){return this._orientationZ}get panningModel(){return this._nativePannerNode.panningModel}set panningModel(t){this._nativePannerNode.panningModel=t}get positionX(){return this._positionX}get positionY(){return this._positionY}get positionZ(){return this._positionZ}get refDistance(){return this._nativePannerNode.refDistance}set refDistance(t){this._nativePannerNode.refDistance=t}get rolloffFactor(){return this._nativePannerNode.rolloffFactor}set rolloffFactor(t){this._nativePannerNode.rolloffFactor=t}})(Oe,Ye,Vn,Bn,ke,Ie,en),qn=(t=>(e,{disableNormalization:n,imag:s,real:r})=>{const i=s instanceof Float32Array?s:new Float32Array(s),a=r instanceof Float32Array?r:new Float32Array(r),o=e.createPeriodicWave(a,i,{disableNormalization:n});if(Array.from(s).length<2)throw t();return o})(R),Un=((t,e,n,s)=>class s{constructor(s,r){const i=e(s),a=(t=>{const{imag:e,real:n}=t;return void 0===e?void 0===n?{...t,imag:[0,0],real:[0,0]}:{...t,imag:Array.from(n,(()=>0)),real:n}:void 0===n?{...t,imag:e,real:Array.from(e,(()=>0))}:{...t,imag:e,real:n}})({...Yt,...r}),o=t(i,a);return n.add(o),o}static[Symbol.hasInstance](t){return null!==t&&"object"==typeof t&&Object.getPrototypeOf(t)===s.prototype||n.has(t)}})(qn,ke,new WeakSet),Gn=((t,e,n,s,r,i)=>{const a=16385,o=new Float32Array([1,1]),l=Math.PI/2,u={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},c={...u,oversample:"none"},h=(t,i,h,p,d)=>{if(1===i)return((t,e,r,i)=>{const h=new Float32Array(a),p=new Float32Array(a);for(let t=0;t<a;t+=1){const e=t/16384*l;h[t]=Math.cos(e),p[t]=Math.sin(e)}const d=n(t,{...u,gain:0}),f=s(t,{...c,curve:h}),m=s(t,{...c,curve:o}),g=n(t,{...u,gain:0}),y=s(t,{...c,curve:p});return{connectGraph(){e.connect(d),e.connect(void 0===m.inputs?m:m.inputs[0]),e.connect(g),m.connect(r),r.connect(void 0===f.inputs?f:f.inputs[0]),r.connect(void 0===y.inputs?y:y.inputs[0]),f.connect(d.gain),y.connect(g.gain),d.connect(i,0,0),g.connect(i,0,1)},disconnectGraph(){e.disconnect(d),e.disconnect(void 0===m.inputs?m:m.inputs[0]),e.disconnect(g),m.disconnect(r),r.disconnect(void 0===f.inputs?f:f.inputs[0]),r.disconnect(void 0===y.inputs?y:y.inputs[0]),f.disconnect(d.gain),y.disconnect(g.gain),d.disconnect(i,0,0),g.disconnect(i,0,1)}}})(t,h,p,d);if(2===i)return((t,r,i,h)=>{const p=new Float32Array(a),d=new Float32Array(a),f=new Float32Array(a),m=new Float32Array(a),g=Math.floor(8192.5);for(let t=0;t<a;t+=1)if(t>g){const e=(t-g)/(16384-g)*l;p[t]=Math.cos(e),d[t]=Math.sin(e),f[t]=0,m[t]=1}else{const e=t/(16384-g)*l;p[t]=1,d[t]=0,f[t]=Math.cos(e),m[t]=Math.sin(e)}const y=e(t,{channelCount:2,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:2}),b=n(t,{...u,gain:0}),x=s(t,{...c,curve:p}),v=n(t,{...u,gain:0}),w=s(t,{...c,curve:d}),_=s(t,{...c,curve:o}),k=n(t,{...u,gain:0}),T=s(t,{...c,curve:f}),S=n(t,{...u,gain:0}),I=s(t,{...c,curve:m});return{connectGraph(){r.connect(y),r.connect(void 0===_.inputs?_:_.inputs[0]),y.connect(b,0),y.connect(v,0),y.connect(k,1),y.connect(S,1),_.connect(i),i.connect(void 0===x.inputs?x:x.inputs[0]),i.connect(void 0===w.inputs?w:w.inputs[0]),i.connect(void 0===T.inputs?T:T.inputs[0]),i.connect(void 0===I.inputs?I:I.inputs[0]),x.connect(b.gain),w.connect(v.gain),T.connect(k.gain),I.connect(S.gain),b.connect(h,0,0),k.connect(h,0,0),v.connect(h,0,1),S.connect(h,0,1)},disconnectGraph(){r.disconnect(y),r.disconnect(void 0===_.inputs?_:_.inputs[0]),y.disconnect(b,0),y.disconnect(v,0),y.disconnect(k,1),y.disconnect(S,1),_.disconnect(i),i.disconnect(void 0===x.inputs?x:x.inputs[0]),i.disconnect(void 0===w.inputs?w:w.inputs[0]),i.disconnect(void 0===T.inputs?T:T.inputs[0]),i.disconnect(void 0===I.inputs?I:I.inputs[0]),x.disconnect(b.gain),w.disconnect(v.gain),T.disconnect(k.gain),I.disconnect(S.gain),b.disconnect(h,0,0),k.disconnect(h,0,0),v.disconnect(h,0,1),S.disconnect(h,0,1)}}})(t,h,p,d);throw r()};return(e,{channelCount:s,channelCountMode:a,pan:o,...l})=>{if("max"===a)throw r();const u=t(e,{...l,channelCount:1,channelCountMode:a,numberOfInputs:2}),c=n(e,{...l,channelCount:s,channelCountMode:a,gain:1}),p=n(e,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:o});let{connectGraph:d,disconnectGraph:f}=h(e,s,c,p,u);Object.defineProperty(p.gain,"defaultValue",{get:()=>0}),Object.defineProperty(p.gain,"maxValue",{get:()=>1}),Object.defineProperty(p.gain,"minValue",{get:()=>-1});const m={get bufferSize(){},get channelCount(){return c.channelCount},set channelCount(t){c.channelCount!==t&&(g&&f(),({connectGraph:d,disconnectGraph:f}=h(e,t,c,p,u)),g&&d()),c.channelCount=t},get channelCountMode(){return c.channelCountMode},set channelCountMode(t){if("clamped-max"===t||"max"===t)throw r();c.channelCountMode=t},get channelInterpretation(){return c.channelInterpretation},set channelInterpretation(t){c.channelInterpretation=t},get context(){return c.context},get inputs(){return[c]},get numberOfInputs(){return c.numberOfInputs},get numberOfOutputs(){return c.numberOfOutputs},get pan(){return p.gain},addEventListener:(...t)=>c.addEventListener(t[0],t[1],t[2]),dispatchEvent:(...t)=>c.dispatchEvent(t[0]),removeEventListener:(...t)=>c.removeEventListener(t[0],t[1],t[2])};let g=!1;return i(Vt(m,u),(()=>{d(),g=!0}),(()=>{f(),g=!1}))}})(an,Pt,Wt,zn,jt,sn),jn=((t,e)=>(n,s)=>{const r=s.channelCountMode;if("clamped-max"===r)throw e();if(void 0===n.createStereoPanner)return t(n,s);const i=n.createStereoPanner();return Rt(i,s),Ot(i,s,"pan"),Object.defineProperty(i,"channelCountMode",{get:()=>r,set:t=>{if(t!==r)throw e()}}),i})(Gn,jt),Hn=((t,e,n,s,r)=>()=>{const i=new WeakMap;return{render(a,o){const l=i.get(o);return void 0!==l?Promise.resolve(l):(async(a,o)=>{let l=n(a);const u=E(l,o);if(!u){const t={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,pan:l.pan.value};l=e(o,t)}return i.set(o,l),u?await t(o,a.pan,l.pan):await s(o,a.pan,l.pan),X(l)?await r(a,o,l.inputs[0]):await r(a,o,l),l})(a,o)}}})(je,jn,tt,Xe,we),Xn=((t,e,n,s,r,i)=>class extends t{constructor(t,a){const o=r(t),l={...Zt,...a},u=n(o,l),c=i(o);super(t,!1,u,c?s():null),this._pan=e(this,c,u.pan)}get pan(){return this._pan}})(Oe,Ye,jn,Hn,ke,Ie),Kn=((t,e,n)=>()=>{const s=new WeakMap;return{render(r,i){const a=s.get(i);return void 0!==a?Promise.resolve(a):(async(r,i)=>{let a=e(r);if(!E(a,i)){const e={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,curve:a.curve,oversample:a.oversample};a=t(i,e)}return s.set(i,a),X(a)?await n(r,i,a.inputs[0]):await n(r,i,a),a})(r,i)}}})(zn,tt,we),Yn=((t,e,n,s,r,i,a)=>class extends t{constructor(t,e){const o=r(t),l={...Qt,...e},u=n(o,l);super(t,!0,u,i(o)?s():null),this._isCurveNullified=!1,this._nativeWaveShaperNode=u,a(this,1)}get curve(){return this._isCurveNullified?null:this._nativeWaveShaperNode.curve}set curve(t){if(null===t)this._isCurveNullified=!0,this._nativeWaveShaperNode.curve=new Float32Array([0,0]);else{if(t.length<2)throw e();this._isCurveNullified=!1,this._nativeWaveShaperNode.curve=t}}get oversample(){return this._nativeWaveShaperNode.oversample}set oversample(t){this._nativeWaveShaperNode.oversample=t}})(Oe,St,zn,Kn,ke,Ie,en),Zn=(t=>null!==t&&t.isSecureContext)(be),Qn=(t=>(e,n,s)=>{Object.defineProperties(t,{currentFrame:{configurable:!0,get:()=>Math.round(e*n)},currentTime:{configurable:!0,get:()=>e}});try{return s()}finally{null!==t&&(delete t.currentFrame,delete t.currentTime)}})(be),Jn=new WeakMap,ts=((t,e)=>n=>{let s=t.get(n);if(void 0!==s)return s;if(null===e)throw new Error("Missing the native OfflineAudioContext constructor.");return s=new e(1,1,44100),t.set(n,s),s})(Jn,Se),es=Zn?((t,e,n,s,r,i,a,o,l,u,c,h,p)=>{let d=0;return(m,g,y={credentials:"omit"})=>{const w=c.get(m);if(void 0!==w&&w.has(g))return Promise.resolve();const _=u.get(m);if(void 0!==_){const t=_.get(g);if(void 0!==t)return t}const k=i(m),T=void 0===k.audioWorklet?r(g).then((([t,e])=>{const[s,r]=b(t,e);return n(`${s};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${r}\n})})(window,'_AWGS')`)})).then((()=>{const t=p._AWGS.pop();if(void 0===t)throw new SyntaxError;s(k.currentTime,k.sampleRate,(()=>t(class{},void 0,((t,n)=>{if(""===t.trim())throw e();const s=f.get(k);if(void 0!==s){if(s.has(t))throw e();v(n),x(n.parameterDescriptors),s.set(t,n)}else v(n),x(n.parameterDescriptors),f.set(k,new Map([[t,n]]))}),k.sampleRate,void 0,void 0)))})):Promise.all([r(g),Promise.resolve(t(h,h))]).then((([[t,e],n])=>{const s=d+1;d=s;const[r,i]=b(t,e),u=new Blob([`${r};((AudioWorkletProcessor,registerProcessor)=>{${i}\n})(${n?"AudioWorkletProcessor":"class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}"},(n,p)=>registerProcessor(n,class extends p{${n?"":"__c = (a) => a.forEach(e=>this.__b.add(e.buffer));"}process(i,o,p){${n?"":"i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));"}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${s}',class extends AudioWorkletProcessor{process(){return !1}})`],{type:"application/javascript; charset=utf-8"}),c=URL.createObjectURL(u);return k.audioWorklet.addModule(c,y).then((()=>{if(o(k))return k;const t=a(k);return t.audioWorklet.addModule(c,y).then((()=>t))})).then((t=>{if(null===l)throw new SyntaxError;try{new l(t,`__sac${s}`)}catch{throw new SyntaxError}})).finally((()=>URL.revokeObjectURL(c)))}));return void 0===_?u.set(m,new Map([[g,T]])):_.set(g,T),T.then((()=>{const t=c.get(m);void 0===t?c.set(m,new Set([g])):t.add(g)})).finally((()=>{const t=u.get(m);void 0!==t&&t.delete(g)})),T}})(me,jt,(t=>e=>new Promise(((n,s)=>{if(null===t)return void s(new SyntaxError);const r=t.document.head;if(null===r)s(new SyntaxError);else{const i=t.document.createElement("script"),a=new Blob([e],{type:"application/javascript"}),o=URL.createObjectURL(a),l=t.onerror,u=()=>{t.onerror=l,URL.revokeObjectURL(o)};t.onerror=(e,n,r,i,a)=>n===o||n===t.location.href&&1===r&&1===i?(u(),s(a),!1):null!==l?l(e,n,r,i,a):void 0,i.onerror=()=>{u(),s(new SyntaxError)},i.onload=()=>{u(),n()},i.src=o,i.type="module",r.appendChild(i)}})))(be),Qn,(async t=>{try{const e=await fetch(t);if(e.ok)return[await e.text(),e.url]}catch{}throw new DOMException("","AbortError")}),ke,ts,Ie,De,new WeakMap,new WeakMap,((t,e)=>async()=>{if(null===t)return!0;if(null===e)return!1;const n=new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),s=new e(1,128,44100),r=URL.createObjectURL(n);let i=!1,a=!1;try{await s.audioWorklet.addModule(r);const e=new t(s,"a",{numberOfOutputs:0}),n=s.createOscillator();e.port.onmessage=()=>i=!0,e.onprocessorerror=()=>a=!0,n.connect(e),n.start(0),await s.startRendering()}catch{}finally{URL.revokeObjectURL(r)}return i&&!a})(De,Se),be):void 0,ns=((t,e)=>n=>t(n)||e(n))(Ee,Ie),ss=((t,e,n,s,r,i,a,o,l,u,c)=>(n,s)=>{const h=a(n)?n:i(n);if(r.has(s)){const t=new DOMException("","DataCloneError");return Promise.reject(t)}try{r.add(s)}catch{}return e(l,(()=>l(h)))?h.decodeAudioData(s).then((n=>(vt(s).catch((()=>{})),e(o,(()=>o(n)))||c(n),t.add(n),n))):new Promise(((e,n)=>{const r=async()=>{try{await vt(s)}catch{}},i=t=>{n(t),r()};try{h.decodeAudioData(s,(n=>{"function"!=typeof n.copyFromChannel&&(u(n),D(n)),t.add(n),r().then((()=>e(n)))}),(t=>{i(null===t?new DOMException("","EncodingError"):t)}))}catch(t){i(t)}}))})(Le,me,0,0,new WeakSet,ke,ns,$,Et,Be,We),rs=((t,e,n,s,r,i,a,o,l,u,c,h,p,d,f,m,g,y,b,x)=>class extends f{constructor(e,n){super(e,n),this._nativeContext=e,this._audioWorklet=void 0===t?void 0:{addModule:(e,n)=>t(this,e,n)}}get audioWorklet(){return this._audioWorklet}createAnalyser(){return new e(this)}createBiquadFilter(){return new r(this)}createBuffer(t,e,s){return new n({length:e,numberOfChannels:t,sampleRate:s})}createBufferSource(){return new s(this)}createChannelMerger(t=6){return new i(this,{numberOfInputs:t})}createChannelSplitter(t=6){return new a(this,{numberOfOutputs:t})}createConstantSource(){return new o(this)}createConvolver(){return new l(this)}createDelay(t=1){return new c(this,{maxDelayTime:t})}createDynamicsCompressor(){return new h(this)}createGain(){return new p(this)}createIIRFilter(t,e){return new d(this,{feedback:e,feedforward:t})}createOscillator(){return new m(this)}createPanner(){return new g(this)}createPeriodicWave(t,e,n={disableNormalization:!1}){return new y(this,{...n,imag:e,real:t})}createStereoPanner(){return new b(this)}createWaveShaper(){return new x(this)}decodeAudioData(t,e,n){return u(this._nativeContext,t).then((t=>("function"==typeof e&&e(t),t)),(t=>{throw"function"==typeof n&&n(t),t}))}})(es,Me,qe,Qe,nn,ln,cn,fn,yn,ss,xn,_n,Tn,An,Rn,Fn,Wn,Un,Xn,Yn),is=((t,e,n,s)=>class extends t{constructor(t,e){const r=n(t),i=((t,e)=>t.createMediaElementSource(e.mediaElement))(r,e);if(s(r))throw TypeError();super(t,!0,i,null),this._nativeMediaElementAudioSourceNode=i}get mediaElement(){return this._nativeMediaElementAudioSourceNode.mediaElement}})(Oe,0,ke,Ie),as=((t,e,n,s)=>class extends t{constructor(t,e){const r=n(t);if(s(r))throw new TypeError;const i=((t,e)=>{const n=t.createMediaStreamDestination();return Rt(n,e),1===n.numberOfOutputs&&Object.defineProperty(n,"numberOfOutputs",{get:()=>0}),n})(r,{...At,...e});super(t,!1,i,null),this._nativeMediaStreamAudioDestinationNode=i}get stream(){return this._nativeMediaStreamAudioDestinationNode.stream}})(Oe,0,ke,Ie),os=((t,e,n,s)=>class extends t{constructor(t,e){const r=n(t),i=((t,{mediaStream:e})=>{const n=e.getAudioTracks();n.sort(((t,e)=>t.id<e.id?-1:t.id>e.id?1:0));const s=n.slice(0,1),r=t.createMediaStreamSource(new MediaStream(s));return Object.defineProperty(r,"mediaStream",{value:e}),r})(r,e);if(s(r))throw new TypeError;super(t,!0,i,null),this._nativeMediaStreamAudioSourceNode=i}get mediaStream(){return this._nativeMediaStreamAudioSourceNode.mediaStream}})(Oe,0,ke,Ie),ls=((t,e)=>(n,{mediaStreamTrack:s})=>{if("function"==typeof n.createMediaStreamTrackSource)return n.createMediaStreamTrackSource(s);const r=new MediaStream([s]),i=n.createMediaStreamSource(r);if("audio"!==s.kind)throw t();if(e(n))throw new TypeError;return i})(St,Ie),us=((t,e,n)=>class extends t{constructor(t,s){const r=n(t);super(t,!0,e(r,s),null)}})(Oe,ls,ke),cs=((t,e,n,s,r,i,a,o,l)=>class extends t{constructor(t={}){if(null===l)throw new Error("Missing the native AudioContext constructor.");let e;try{e=new l(t)}catch(t){if(12===t.code&&"sampleRate is not in range"===t.message)throw n();throw t}if(null===e)throw new DOMException("","UnknownError");if(!(t=>void 0===t||"number"==typeof t||"string"==typeof t&&("balanced"===t||"interactive"===t||"playback"===t))(t.latencyHint))throw new TypeError(`The provided value '${t.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);if(void 0!==t.sampleRate&&e.sampleRate!==t.sampleRate)throw n();super(e,2);const{latencyHint:s}=t,{sampleRate:r}=e;if(this._baseLatency="number"==typeof e.baseLatency?e.baseLatency:"balanced"===s?512/r:"interactive"===s||void 0===s?256/r:"playback"===s?1024/r:128*Math.max(2,Math.min(128,Math.round(s*r/128)))/r,this._nativeAudioContext=e,"webkitAudioContext"===l.name?(this._nativeGainNode=e.createGain(),this._nativeOscillatorNode=e.createOscillator(),this._nativeGainNode.gain.value=1e-37,this._nativeOscillatorNode.connect(this._nativeGainNode).connect(e.destination),this._nativeOscillatorNode.start()):(this._nativeGainNode=null,this._nativeOscillatorNode=null),this._state=null,"running"===e.state){this._state="suspended";const t=()=>{"suspended"===this._state&&(this._state=null),e.removeEventListener("statechange",t)};e.addEventListener("statechange",t)}}get baseLatency(){return this._baseLatency}get state(){return null!==this._state?this._state:this._nativeAudioContext.state}close(){return"closed"===this.state?this._nativeAudioContext.close().then((()=>{throw e()})):("suspended"===this._state&&(this._state=null),this._nativeAudioContext.close().then((()=>{null!==this._nativeGainNode&&null!==this._nativeOscillatorNode&&(this._nativeOscillatorNode.stop(),this._nativeGainNode.disconnect(),this._nativeOscillatorNode.disconnect()),W(this)})))}createMediaElementSource(t){return new r(this,{mediaElement:t})}createMediaStreamDestination(){return new i(this)}createMediaStreamSource(t){return new a(this,{mediaStream:t})}createMediaStreamTrackSource(t){return new o(this,{mediaStreamTrack:t})}resume(){return"suspended"===this._state?new Promise(((t,e)=>{const n=()=>{this._nativeAudioContext.removeEventListener("statechange",n),"running"===this._nativeAudioContext.state?t():this.resume().then(t,e)};this._nativeAudioContext.addEventListener("statechange",n)})):this._nativeAudioContext.resume().catch((t=>{if(void 0===t||15===t.code)throw e();throw t}))}suspend(){return this._nativeAudioContext.suspend().catch((t=>{if(void 0===t)throw e();throw t}))}})(rs,St,jt,0,is,as,os,us,Ae),hs=(t=>e=>{const n=t.get(e);if(void 0===n)throw new Error("The context has no set of AudioWorkletNodes.");return n})($n),ps=(t=>(e,n)=>{t(e).add(n)})(hs),ds=(t=>(e,n,s=0,r=0)=>{const i=e[s];if(void 0===i)throw t();return at(n)?i.connect(n,0,r):i.connect(n,0)})(R),fs=(t=>(e,n)=>{t(e).delete(n)})(hs),ms=(t=>(e,n,s,r=0)=>void 0===n?e.forEach((t=>t.disconnect())):"number"==typeof n?_t(t,e,n).disconnect():at(n)?void 0===s?e.forEach((t=>t.disconnect(n))):void 0===r?_t(t,e,s).disconnect(n,0):_t(t,e,s).disconnect(n,0,r):void 0===s?e.forEach((t=>t.disconnect(n))):_t(t,e,s).disconnect(n,0))(R),gs=new WeakMap,ys=((t,e)=>n=>e(t,n))(gs,w),bs=((t,e,n,s,r,i,a,o,l,u,c,h,p)=>(d,f,g,y)=>{if(0===y.numberOfInputs&&0===y.numberOfOutputs)throw l();const b=Array.isArray(y.outputChannelCount)?y.outputChannelCount:Array.from(y.outputChannelCount);if(b.some((t=>t<1)))throw l();if(b.length!==y.numberOfOutputs)throw e();if("explicit"!==y.channelCountMode)throw l();const x=y.channelCount*y.numberOfInputs,v=b.reduce(((t,e)=>t+e),0),w=void 0===g.parameterDescriptors?0:g.parameterDescriptors.length;if(x+w>6||v>6)throw l();const _=new MessageChannel,k=[],T=[];for(let t=0;t<y.numberOfInputs;t+=1)k.push(a(d,{channelCount:y.channelCount,channelCountMode:y.channelCountMode,channelInterpretation:y.channelInterpretation,gain:1})),T.push(r(d,{channelCount:y.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:y.channelCount}));const S=[];if(void 0!==g.parameterDescriptors)for(const{defaultValue:t,maxValue:e,minValue:n,name:s}of g.parameterDescriptors){const r=i(d,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:void 0!==y.parameterData[s]?y.parameterData[s]:void 0===t?0:t});Object.defineProperties(r.offset,{defaultValue:{get:()=>void 0===t?0:t},maxValue:{get:()=>void 0===e?M:e},minValue:{get:()=>void 0===n?F:n}}),S.push(r)}const I=s(d,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,x+w)}),C=Lt(f,d.sampleRate),N=o(d,C,x+w,Math.max(1,v)),A=r(d,{channelCount:Math.max(1,v),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,v)}),E=[];for(let t=0;t<y.numberOfOutputs;t+=1)E.push(s(d,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:b[t]}));for(let t=0;t<y.numberOfInputs;t+=1){k[t].connect(T[t]);for(let e=0;e<y.channelCount;e+=1)T[t].connect(I,e,t*y.channelCount+e)}const $=new ut(void 0===g.parameterDescriptors?[]:g.parameterDescriptors.map((({name:t},e)=>{const n=S[e];return n.connect(I,0,x+e),n.start(0),[t,n.offset]})));I.connect(N);let R=y.channelInterpretation,D=null;const O=0===y.numberOfOutputs?[N]:E,L={get bufferSize(){return C},get channelCount(){return y.channelCount},set channelCount(t){throw n()},get channelCountMode(){return y.channelCountMode},set channelCountMode(t){throw n()},get channelInterpretation(){return R},set channelInterpretation(t){for(const e of k)e.channelInterpretation=t;R=t},get context(){return N.context},get inputs(){return k},get numberOfInputs(){return y.numberOfInputs},get numberOfOutputs(){return y.numberOfOutputs},get onprocessorerror(){return D},set onprocessorerror(t){"function"==typeof D&&L.removeEventListener("processorerror",D),D="function"==typeof t?t:null,"function"==typeof D&&L.addEventListener("processorerror",D)},get parameters(){return $},get port(){return _.port2},addEventListener:(...t)=>N.addEventListener(t[0],t[1],t[2]),connect:t.bind(null,O),disconnect:u.bind(null,O),dispatchEvent:(...t)=>N.dispatchEvent(t[0]),removeEventListener:(...t)=>N.removeEventListener(t[0],t[1],t[2])},z=new Map;var P,V;_.port1.addEventListener=(P=_.port1.addEventListener,(...t)=>{if("message"===t[0]){const e="function"==typeof t[1]?t[1]:"object"==typeof t[1]&&null!==t[1]&&"function"==typeof t[1].handleEvent?t[1].handleEvent:null;if(null!==e){const n=z.get(t[1]);void 0!==n?t[1]=n:(t[1]=t=>{c(d.currentTime,d.sampleRate,(()=>e(t)))},z.set(e,t[1]))}}return P.call(_.port1,t[0],t[1],t[2])}),_.port1.removeEventListener=(V=_.port1.removeEventListener,(...t)=>{if("message"===t[0]){const e=z.get(t[1]);void 0!==e&&(z.delete(t[1]),t[1]=e)}return V.call(_.port1,t[0],t[1],t[2])});let B=null;Object.defineProperty(_.port1,"onmessage",{get:()=>B,set:t=>{"function"==typeof B&&_.port1.removeEventListener("message",B),B="function"==typeof t?t:null,"function"==typeof B&&(_.port1.addEventListener("message",B),_.port1.start())}}),g.prototype.port=_.port1;let W=null;const q=((t,e,n,s)=>{let r=m.get(t);void 0===r&&(r=new WeakMap,m.set(t,r));const i=(async(t,e)=>{const n=await(t=>new Promise(((e,n)=>{const{port1:s,port2:r}=new MessageChannel;s.onmessage=({data:t})=>{s.close(),r.close(),e(t)},s.onmessageerror=({data:t})=>{s.close(),r.close(),n(t)},r.postMessage(t)})))(e);return new t(n)})(n,s);return r.set(e,i),i})(d,L,g,y);q.then((t=>W=t));const U=dt(y.numberOfInputs,y.channelCount),G=dt(y.numberOfOutputs,b),j=void 0===g.parameterDescriptors?[]:g.parameterDescriptors.reduce(((t,{name:e})=>({...t,[e]:new Float32Array(128)})),{});let H=!0;const X=()=>{y.numberOfOutputs>0&&N.disconnect(A);for(let t=0,e=0;t<y.numberOfOutputs;t+=1){const n=E[t];for(let s=0;s<b[t];s+=1)A.disconnect(n,e+s,s);e+=b[t]}},K=new Map;N.onaudioprocess=({inputBuffer:t,outputBuffer:e})=>{if(null!==W){const n=h(L);for(let s=0;s<C;s+=128){for(let e=0;e<y.numberOfInputs;e+=1)for(let n=0;n<y.channelCount;n+=1)ht(t,U[e],n,n,s);void 0!==g.parameterDescriptors&&g.parameterDescriptors.forEach((({name:e},n)=>{ht(t,j,e,x+n,s)}));for(let t=0;t<y.numberOfInputs;t+=1)for(let e=0;e<b[t];e+=1)0===G[t][e].byteLength&&(G[t][e]=new Float32Array(128));try{const t=U.map(((t,e)=>{if(n[e].size>0)return K.set(e,C/128),t;const s=K.get(e);return void 0===s?[]:(t.every((t=>t.every((t=>0===t))))&&(1===s?K.delete(e):K.set(e,s-1)),t)})),r=c(d.currentTime+s/d.sampleRate,d.sampleRate,(()=>W.process(t,G,j)));H=r;for(let t=0,n=0;t<y.numberOfOutputs;t+=1){for(let r=0;r<b[t];r+=1)pt(e,G[t],r,n+r,s);n+=b[t]}}catch(t){H=!1,L.dispatchEvent(new ErrorEvent("processorerror",{colno:t.colno,filename:t.filename,lineno:t.lineno,message:t.message}))}if(!H){for(let t=0;t<y.numberOfInputs;t+=1){k[t].disconnect(T[t]);for(let e=0;e<y.channelCount;e+=1)T[s].disconnect(I,e,t*y.channelCount+e)}if(void 0!==g.parameterDescriptors){const t=g.parameterDescriptors.length;for(let e=0;e<t;e+=1){const t=S[e];t.disconnect(I,0,x+e),t.stop()}}I.disconnect(N),N.onaudioprocess=null,Y?X():J();break}}}};let Y=!1;const Z=a(d,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0}),Q=()=>N.connect(Z).connect(d.destination),J=()=>{N.disconnect(Z),Z.disconnect()};return Q(),p(L,(()=>{if(H){J(),y.numberOfOutputs>0&&N.connect(A);for(let t=0,e=0;t<y.numberOfOutputs;t+=1){const n=E[t];for(let s=0;s<b[t];s+=1)A.connect(n,e+s,s);e+=b[t]}}Y=!0}),(()=>{H&&(Q(),X()),Y=!1}))})(ds,R,St,an,Pt,pn,Wt,Gt,jt,ms,Qn,ys,sn),xs=((t,e,n,s,r)=>(i,a,o,l,u,c)=>{if(null!==o)try{const e=new o(i,l,c),s=new Map;let a=null;if(Object.defineProperties(e,{channelCount:{get:()=>c.channelCount,set:()=>{throw t()}},channelCountMode:{get:()=>"explicit",set:()=>{throw t()}},onprocessorerror:{get:()=>a,set:t=>{"function"==typeof a&&e.removeEventListener("processorerror",a),a="function"==typeof t?t:null,"function"==typeof a&&e.addEventListener("processorerror",a)}}}),e.addEventListener=(p=e.addEventListener,(...t)=>{if("processorerror"===t[0]){const e="function"==typeof t[1]?t[1]:"object"==typeof t[1]&&null!==t[1]&&"function"==typeof t[1].handleEvent?t[1].handleEvent:null;if(null!==e){const n=s.get(t[1]);void 0!==n?t[1]=n:(t[1]=n=>{"error"===n.type?(Object.defineProperties(n,{type:{value:"processorerror"}}),e(n)):e(new ErrorEvent(t[0],{...n}))},s.set(e,t[1]))}}return p.call(e,"error",t[1],t[2]),p.call(e,...t)}),e.removeEventListener=(h=e.removeEventListener,(...t)=>{if("processorerror"===t[0]){const e=s.get(t[1]);void 0!==e&&(s.delete(t[1]),t[1]=e)}return h.call(e,"error",t[1],t[2]),h.call(e,t[0],t[1],t[2])}),0!==c.numberOfOutputs){const t=n(i,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return e.connect(t).connect(i.destination),r(e,(()=>t.disconnect()),(()=>t.connect(i.destination)))}return e}catch(t){if(11===t.code)throw s();throw t}var h,p;if(void 0===u)throw s();return(t=>{const{port1:e}=new MessageChannel;try{e.postMessage(t)}finally{e.close()}})(c),e(i,a,u,c)})(St,bs,Wt,jt,sn),vs=((t,e,n,s,r,i,a,o,l,u,c,h,p,d,f,m)=>(g,y,b)=>{const x=new WeakMap;let v=null;return{render(w,_){o(_,w);const k=x.get(_);return void 0!==k?Promise.resolve(k):(async(o,w)=>{let _=c(o),k=null;const T=E(_,w),S=Array.isArray(y.outputChannelCount)?y.outputChannelCount:Array.from(y.outputChannelCount);if(null===h){const t=S.reduce(((t,e)=>t+e),0),n=r(w,{channelCount:Math.max(1,t),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,t)}),i=[];for(let t=0;t<o.numberOfOutputs;t+=1)i.push(s(w,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:S[t]}));const u=a(w,{channelCount:y.channelCount,channelCountMode:y.channelCountMode,channelInterpretation:y.channelInterpretation,gain:1});u.connect=e.bind(null,i),u.disconnect=l.bind(null,i),k=[n,i,u]}else T||(_=new h(w,g));if(x.set(w,null===k?_:k[2]),null!==k){if(null===v){if(void 0===b)throw new Error("Missing the processor constructor.");if(null===p)throw new Error("Missing the native OfflineAudioContext constructor.");const t=o.channelCount*o.numberOfInputs,e=void 0===b.parameterDescriptors?0:b.parameterDescriptors.length,n=t+e,l=async()=>{const l=new p(n,128*Math.ceil(o.context.length/128),w.sampleRate),u=[],c=[];for(let t=0;t<y.numberOfInputs;t+=1)u.push(a(l,{channelCount:y.channelCount,channelCountMode:y.channelCountMode,channelInterpretation:y.channelInterpretation,gain:1})),c.push(r(l,{channelCount:y.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:y.channelCount}));const h=await Promise.all(Array.from(o.parameters.values()).map((async t=>{const e=i(l,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:t.value});return await d(l,t,e.offset),e}))),g=s(l,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,t+e)});for(let t=0;t<y.numberOfInputs;t+=1){u[t].connect(c[t]);for(let e=0;e<y.channelCount;e+=1)c[t].connect(g,e,t*y.channelCount+e)}for(const[e,n]of h.entries())n.connect(g,0,t+e),n.start(0);return g.connect(l.destination),await Promise.all(u.map((t=>f(o,l,t)))),m(l)};v=ft(o,0===n?null:await l(),w,y,S,b,u)}const t=await v,e=n(w,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),[l,c,h]=k;null!==t&&(e.buffer=t,e.start(0)),e.connect(l);for(let t=0,e=0;t<o.numberOfOutputs;t+=1){const n=c[t];for(let s=0;s<S[t];s+=1)l.connect(n,e+s,s);e+=S[t]}return h}if(T)for(const[e,n]of o.parameters.entries())await t(w,n,_.parameters.get(e));else for(const[t,e]of o.parameters.entries())await d(w,e,_.parameters.get(t));return await f(o,w,_),_})(w,_)}}})(je,ds,He,an,Pt,pn,Wt,fs,ms,Qn,tt,De,Se,Xe,we,In),ws=(t=>e=>t.get(e))(Jn),_s=(t=>(e,n)=>{t.set(e,n)})(gs),ks=Zn?((t,e,n,s,r,i,a,o,l,u,c,h,p,d)=>class extends e{constructor(e,c,p){var d;const m=o(e),g=l(m),y=(t=>({...t,outputChannelCount:void 0!==t.outputChannelCount?t.outputChannelCount:1===t.numberOfInputs&&1===t.numberOfOutputs?[t.channelCount]:Array.from({length:t.numberOfOutputs},(()=>1))}))({...ct,...p});(t=>{const{port1:e,port2:n}=new MessageChannel;try{e.postMessage(t)}finally{e.close(),n.close()}})(y);const b=f.get(m),x=null==b?void 0:b.get(c),v=g||"closed"!==m.state?m:null!==(d=a(m))&&void 0!==d?d:m,w=r(v,g?null:e.baseLatency,u,c,x,y);super(e,!0,w,g?s(c,y,x):null);const _=[];w.parameters.forEach(((t,e)=>{const s=n(this,g,t);_.push([e,s])})),this._nativeAudioWorkletNode=w,this._onprocessorerror=null,this._parameters=new ut(_),g&&t(m,this);const{activeInputs:k}=i(this);h(w,k)}get onprocessorerror(){return this._onprocessorerror}set onprocessorerror(t){const e="function"==typeof t?d(this,t):null;this._nativeAudioWorkletNode.onprocessorerror=e;const n=this._nativeAudioWorkletNode.onprocessorerror;this._onprocessorerror=null!==n&&n===e?t:n}get parameters(){return null===this._parameters?this._nativeAudioWorkletNode.parameters:this._parameters}get port(){return this._nativeAudioWorkletNode.port}})(ps,Oe,Ye,vs,xs,P,ws,ke,Ie,De,0,_s,0,ue):void 0,Ts=((t,e)=>(n,s,r)=>{if(null===e)throw new Error("Missing the native OfflineAudioContext constructor.");try{return new e(n,s,r)}catch(e){if("SyntaxError"===e.name)throw t();throw e}})(jt,Se),Ss=((t,e,n,s,r,i,a,o)=>(l,u)=>n(l).render(l,u).then((()=>Promise.all(Array.from(s(u)).map((t=>n(t).render(t,u)))))).then((()=>r(u))).then((n=>("function"!=typeof n.copyFromChannel?(a(n),D(n)):e(i,(()=>i(n)))||o(n),t.add(n),n))))(Le,me,ve,hs,In,$,Be,We),Is=((t,e,n,s,r)=>class extends t{constructor(t,n,r){let i;if("number"==typeof t&&void 0!==n&&void 0!==r)i={length:n,numberOfChannels:t,sampleRate:r};else{if("object"!=typeof t)throw new Error("The given parameters are not valid.");i=t}const{length:a,numberOfChannels:o,sampleRate:l}={...Ht,...i},u=s(o,a,l);e(Et,(()=>Et(u)))||u.addEventListener("statechange",(()=>{let t=0;const e=n=>{"running"===this._state&&(t>0?(u.removeEventListener("statechange",e),n.stopImmediatePropagation(),this._waitForThePromiseToSettle(n)):t+=1)};return e})()),super(u,o),this._length=a,this._nativeOfflineAudioContext=u,this._state=null}get length(){return void 0===this._nativeOfflineAudioContext.length?this._length:this._nativeOfflineAudioContext.length}get state(){return null===this._state?this._nativeOfflineAudioContext.state:this._state}startRendering(){return"running"===this._state?Promise.reject(n()):(this._state="running",r(this.destination,this._nativeOfflineAudioContext).finally((()=>{this._state=null,W(this)})))}_waitForThePromiseToSettle(t){null===this._state?this._nativeOfflineAudioContext.dispatchEvent(t):setTimeout((()=>this._waitForThePromiseToSettle(t)))}})(rs,me,St,Ts,Ss),Cs=((t,e)=>n=>{const s=t.get(n);return e(s)||e(n)})(h,Ee),Ns=((t,e)=>n=>t.has(n)||e(n))(l,$e),As=((t,e)=>n=>t.has(n)||e(n))(c,Re),Es=((t,e)=>n=>{const s=t.get(n);return e(s)||e(n)})(h,Ie),$s=()=>(async(t,e,n,s,r,i,a,o,l,u,c,h,p,d,f,m)=>!!(t(e,e)&&t(n,n)&&t(r,r)&&t(i,i)&&t(o,o)&&t(l,l)&&t(u,u)&&t(c,c)&&t(h,h)&&t(p,p)&&t(d,d))&&(await Promise.all([t(s,s),t(a,a),t(f,f),t(m,m)])).every((t=>t)))(me,(t=>()=>{if(null===t)return!1;const e=new t(1,1,44100).createBuffer(1,1,44100);if(void 0===e.copyToChannel)return!0;const n=new Float32Array(2);try{e.copyFromChannel(n,0,0)}catch{return!1}return!0})(Se),(t=>()=>{if(null===t)return!1;if(void 0!==t.prototype&&void 0!==t.prototype.close)return!0;const e=new t,n=void 0!==e.close;try{e.close()}catch{}return n})(Ae),(t=>()=>{if(null===t)return Promise.resolve(!1);const e=new t(1,1,44100);return new Promise((t=>{let n=!0;const s=s=>{n&&(n=!1,e.startRendering(),t(s instanceof TypeError))};let r;try{r=e.decodeAudioData(null,(()=>{}),s)}catch(t){s(t)}void 0!==r&&r.catch(s)}))})(Se),(t=>()=>{if(null===t)return!1;let e;try{e=new t({latencyHint:"balanced"})}catch{return!1}return e.close(),!0})(Ae),(t=>()=>{if(null===t)return!1;const e=new t(1,1,44100).createGain(),n=e.connect(e)===e;return e.disconnect(e),n})(Se),((t,e)=>async()=>{if(null===t)return!0;if(null===e)return!1;const n=new Blob(['let c,p;class A extends AudioWorkletProcessor{constructor(){super();this.port.onmessage=(e)=>{p=e.data;p.onmessage=()=>{p.postMessage(c);p.close()};this.port.postMessage(0)}}process(){c=1}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),s=new MessageChannel,r=new e(1,128,44100),i=URL.createObjectURL(n);let a=!1;try{await r.audioWorklet.addModule(i);const e=new t(r,"a",{numberOfOutputs:0}),n=r.createOscillator();await new Promise((t=>{e.port.onmessage=()=>t(),e.port.postMessage(s.port2,[s.port2])})),e.port.onmessage=()=>a=!0,n.connect(e),n.start(0),await r.startRendering(),a=await new Promise((t=>{s.port1.onmessage=({data:e})=>t(1===e),s.port1.postMessage(0)}))}catch{}finally{s.port1.close(),URL.revokeObjectURL(i)}return a})(De,Se),(t=>()=>{if(null===t)return!1;const e=new t(1,1,44100).createChannelMerger();if("max"===e.channelCountMode)return!0;try{e.channelCount=2}catch{return!0}return!1})(Se),(t=>()=>{if(null===t)return!1;const e=new t(1,1,44100);return void 0===e.createConstantSource||e.createConstantSource().offset.maxValue!==Number.POSITIVE_INFINITY})(Se),(t=>()=>{if(null===t)return!1;const e=new t(1,1,44100),n=e.createConvolver();n.buffer=e.createBuffer(1,1,e.sampleRate);try{n.buffer=e.createBuffer(1,1,e.sampleRate)}catch{return!1}return!0})(Se),(t=>()=>{if(null===t)return!1;const e=new t(1,1,44100).createConvolver();try{e.channelCount=1}catch{return!1}return!0})(Se),ae,(t=>()=>null!==t&&t.hasOwnProperty("isSecureContext"))(be),(t=>()=>{if(null===t)return!1;const e=new t;try{return e.createMediaStreamSource(new MediaStream),!1}catch(t){return!0}finally{e.close()}})(Ae),(t=>()=>{if(null===t)return Promise.resolve(!1);const e=new t(1,1,44100);if(void 0===e.createStereoPanner)return Promise.resolve(!0);if(void 0===e.createConstantSource)return Promise.resolve(!0);const n=e.createConstantSource(),s=e.createStereoPanner();return n.channelCount=1,n.offset.value=1,s.channelCount=1,n.start(),n.connect(s).connect(e.destination),e.startRendering().then((t=>1!==t.getChannelData(0)[0]))})(Se),oe);function Rs(t){return void 0===t}function Ds(t){return!Rs(t)}function Os(t){return"function"==typeof t}function Fs(t){return"number"==typeof t}function Ms(t){return"[object Object]"===Object.prototype.toString.call(t)&&t.constructor===Object}function Ls(t){return"boolean"==typeof t}function zs(t){return Array.isArray(t)}function Ps(t){return"string"==typeof t}function Vs(t){return Ps(t)&&/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(t)}function Bs(t,e){if(!t)throw new Error(e)}function Ws(t,e,n=1/0){if(!(e<=t&&t<=n))throw new RangeError(`Value must be within [${e}, ${n}], got: ${t}`)}function qs(t){t.isOffline||"running"===t.state||Zs('The AudioContext is "suspended". Invoke Tone.start() from a user action to start the audio.')}let Us=!1,Gs=!1;function js(t){Us=t}function Hs(t){Rs(t)&&Us&&!Gs&&(Gs=!0,Zs("Events scheduled inside of scheduled callbacks should use the passed in scheduling time. See https://github.com/Tonejs/Tone.js/wiki/Accurate-Timing"))}let Xs=console;function Ks(t){Xs=t}function Ys(...t){Xs.log(...t)}function Zs(...t){Xs.warn(...t)}const Qs="object"==typeof self?self:null,Js=Qs&&(Qs.hasOwnProperty("AudioContext")||Qs.hasOwnProperty("webkitAudioContext"));function tr(t,e,n,s){var r,i=arguments.length,a=i<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,n,s);else for(var o=t.length-1;o>=0;o--)(r=t[o])&&(a=(i<3?r(a):i>3?r(e,n,a):r(e,n))||a);return i>3&&a&&Object.defineProperty(e,n,a),a}function er(t,e,n,s){return new(n||(n=Promise))((function(r,i){function a(t){try{l(s.next(t))}catch(t){i(t)}}function o(t){try{l(s.throw(t))}catch(t){i(t)}}function l(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,o)}l((s=s.apply(t,e||[])).next())}))}Object.create,Object.create;class nr{constructor(t,e,n,s){this._callback=t,this._type=e,this._minimumUpdateInterval=Math.max(128/(s||44100),.001),this.updateInterval=n,this._createClock()}_createWorker(){const t=new Blob([`\n\t\t\t// the initial timeout time\n\t\t\tlet timeoutTime =  ${(1e3*this._updateInterval).toFixed(1)};\n\t\t\t// onmessage callback\n\t\t\tself.onmessage = function(msg){\n\t\t\t\ttimeoutTime = parseInt(msg.data);\n\t\t\t};\n\t\t\t// the tick function which posts a message\n\t\t\t// and schedules a new tick\n\t\t\tfunction tick(){\n\t\t\t\tsetTimeout(tick, timeoutTime);\n\t\t\t\tself.postMessage('tick');\n\t\t\t}\n\t\t\t// call tick initially\n\t\t\ttick();\n\t\t\t`],{type:"text/javascript"}),e=URL.createObjectURL(t),n=new Worker(e);n.onmessage=this._callback.bind(this),this._worker=n}_createTimeout(){this._timeout=setTimeout((()=>{this._createTimeout(),this._callback()}),1e3*this._updateInterval)}_createClock(){if("worker"===this._type)try{this._createWorker()}catch(t){this._type="timeout",this._createClock()}else"timeout"===this._type&&this._createTimeout()}_disposeClock(){this._timeout&&clearTimeout(this._timeout),this._worker&&(this._worker.terminate(),this._worker.onmessage=null)}get updateInterval(){return this._updateInterval}set updateInterval(t){var e;this._updateInterval=Math.max(t,this._minimumUpdateInterval),"worker"===this._type&&(null===(e=this._worker)||void 0===e||e.postMessage(1e3*this._updateInterval))}get type(){return this._type}set type(t){this._disposeClock(),this._type=t,this._createClock()}dispose(){this._disposeClock()}}function sr(t){return As(t)}function rr(t){return Ns(t)}function ir(t){return Es(t)}function ar(t){return Cs(t)}function or(t,e){return"value"===t||sr(e)||rr(e)||function(t){return t instanceof qe}(e)}function lr(t,...e){if(!e.length)return t;const n=e.shift();if(Ms(t)&&Ms(n))for(const e in n)or(e,n[e])?t[e]=n[e]:Ms(n[e])?(t[e]||Object.assign(t,{[e]:{}}),lr(t[e],n[e])):Object.assign(t,{[e]:n[e]});return lr(t,...e)}function ur(t,e,n=[],s){const r={},i=Array.from(e);if(Ms(i[0])&&s&&!Reflect.has(i[0],s)&&(Object.keys(i[0]).some((e=>Reflect.has(t,e)))||(lr(r,{[s]:i[0]}),n.splice(n.indexOf(s),1),i.shift())),1===i.length&&Ms(i[0]))lr(r,i[0]);else for(let t=0;t<n.length;t++)Ds(i[t])&&(r[n[t]]=i[t]);return lr(t,r)}function cr(t,e){return Rs(t)?e:t}function hr(t,e){return e.forEach((e=>{Reflect.has(t,e)&&delete t[e]})),t}class pr{constructor(){this.debug=!1,this._wasDisposed=!1}static getDefaults(){return{}}log(...t){(this.debug||Qs&&this.toString()===Qs.TONE_DEBUG_CLASS)&&Ys(this,...t)}dispose(){return this._wasDisposed=!0,this}get disposed(){return this._wasDisposed}toString(){return this.name}}pr.version=r;const dr=1e-6;function fr(t,e){return t>e+dr}function mr(t,e){return fr(t,e)||yr(t,e)}function gr(t,e){return t+dr<e}function yr(t,e){return Math.abs(t-e)<dr}function br(t,e,n){return Math.max(Math.min(t,n),e)}class xr extends pr{constructor(){super(),this.name="Timeline",this._timeline=[];const t=ur(xr.getDefaults(),arguments,["memory"]);this.memory=t.memory,this.increasing=t.increasing}static getDefaults(){return{memory:1/0,increasing:!1}}get length(){return this._timeline.length}add(t){if(Bs(Reflect.has(t,"time"),"Timeline: events must have a time attribute"),t.time=t.time.valueOf(),this.increasing&&this.length){const e=this._timeline[this.length-1];Bs(mr(t.time,e.time),"The time must be greater than or equal to the last scheduled time"),this._timeline.push(t)}else{const e=this._search(t.time);this._timeline.splice(e+1,0,t)}if(this.length>this.memory){const t=this.length-this.memory;this._timeline.splice(0,t)}return this}remove(t){const e=this._timeline.indexOf(t);return-1!==e&&this._timeline.splice(e,1),this}get(t,e="time"){const n=this._search(t,e);return-1!==n?this._timeline[n]:null}peek(){return this._timeline[0]}shift(){return this._timeline.shift()}getAfter(t,e="time"){const n=this._search(t,e);return n+1<this._timeline.length?this._timeline[n+1]:null}getBefore(t){const e=this._timeline.length;if(e>0&&this._timeline[e-1].time<t)return this._timeline[e-1];const n=this._search(t);return n-1>=0?this._timeline[n-1]:null}cancel(t){if(this._timeline.length>1){let e=this._search(t);if(e>=0)if(yr(this._timeline[e].time,t)){for(let n=e;n>=0&&yr(this._timeline[n].time,t);n--)e=n;this._timeline=this._timeline.slice(0,e)}else this._timeline=this._timeline.slice(0,e+1);else this._timeline=[]}else 1===this._timeline.length&&mr(this._timeline[0].time,t)&&(this._timeline=[]);return this}cancelBefore(t){const e=this._search(t);return e>=0&&(this._timeline=this._timeline.slice(e+1)),this}previousEvent(t){const e=this._timeline.indexOf(t);return e>0?this._timeline[e-1]:null}_search(t,e="time"){if(0===this._timeline.length)return-1;let n=0;const s=this._timeline.length;let r=s;if(s>0&&this._timeline[s-1][e]<=t)return s-1;for(;n<r;){let s=Math.floor(n+(r-n)/2);const i=this._timeline[s],a=this._timeline[s+1];if(yr(i[e],t)){for(let n=s;n<this._timeline.length&&yr(this._timeline[n][e],t);n++)s=n;return s}if(gr(i[e],t)&&fr(a[e],t))return s;fr(i[e],t)?r=s:n=s+1}return-1}_iterate(t,e=0,n=this._timeline.length-1){this._timeline.slice(e,n+1).forEach(t)}forEach(t){return this._iterate(t),this}forEachBefore(t,e){const n=this._search(t);return-1!==n&&this._iterate(e,0,n),this}forEachAfter(t,e){const n=this._search(t);return this._iterate(e,n+1),this}forEachBetween(t,e,n){let s=this._search(t),r=this._search(e);return-1!==s&&-1!==r?(this._timeline[s].time!==t&&(s+=1),this._timeline[r].time===e&&(r-=1),this._iterate(n,s,r)):-1===s&&this._iterate(n,0,r),this}forEachFrom(t,e){let n=this._search(t);for(;n>=0&&this._timeline[n].time>=t;)n--;return this._iterate(e,n+1),this}forEachAtTime(t,e){const n=this._search(t);if(-1!==n&&yr(this._timeline[n].time,t)){let s=n;for(let e=n;e>=0&&yr(this._timeline[e].time,t);e--)s=e;this._iterate((t=>{e(t)}),s,n)}return this}dispose(){return super.dispose(),this._timeline=[],this}}const vr=[];function wr(t){vr.push(t)}const _r=[];function kr(t){_r.push(t)}class Tr extends pr{constructor(){super(...arguments),this.name="Emitter"}on(t,e){return t.split(/\W+/).forEach((t=>{Rs(this._events)&&(this._events={}),this._events.hasOwnProperty(t)||(this._events[t]=[]),this._events[t].push(e)})),this}once(t,e){const n=(...s)=>{e(...s),this.off(t,n)};return this.on(t,n),this}off(t,e){return t.split(/\W+/).forEach((t=>{if(Rs(this._events)&&(this._events={}),this._events.hasOwnProperty(t))if(Rs(e))this._events[t]=[];else{const n=this._events[t];for(let t=n.length-1;t>=0;t--)n[t]===e&&n.splice(t,1)}})),this}emit(t,...e){if(this._events&&this._events.hasOwnProperty(t)){const n=this._events[t].slice(0);for(let t=0,s=n.length;t<s;t++)n[t].apply(this,e)}return this}static mixin(t){["on","once","off","emit"].forEach((e=>{const n=Object.getOwnPropertyDescriptor(Tr.prototype,e);Object.defineProperty(t.prototype,e,n)}))}dispose(){return super.dispose(),this._events=void 0,this}}class Sr extends Tr{constructor(){super(...arguments),this.isOffline=!1}toJSON(){return{}}}class Ir extends Sr{constructor(){var t,e;super(),this.name="Context",this._constants=new Map,this._timeouts=new xr,this._timeoutIds=0,this._initialized=!1,this._closeStarted=!1,this.isOffline=!1,this._workletPromise=null;const n=ur(Ir.getDefaults(),arguments,["context"]);n.context?(this._context=n.context,this._latencyHint=(null===(t=arguments[0])||void 0===t?void 0:t.latencyHint)||""):(this._context=function(t){return new cs(t)}({latencyHint:n.latencyHint}),this._latencyHint=n.latencyHint),this._ticker=new nr(this.emit.bind(this,"tick"),n.clockSource,n.updateInterval,this._context.sampleRate),this.on("tick",this._timeoutLoop.bind(this)),this._context.onstatechange=()=>{this.emit("statechange",this.state)},this[(null===(e=arguments[0])||void 0===e?void 0:e.hasOwnProperty("updateInterval"))?"_lookAhead":"lookAhead"]=n.lookAhead}static getDefaults(){return{clockSource:"worker",latencyHint:"interactive",lookAhead:.1,updateInterval:.05}}initialize(){var t;return this._initialized||(t=this,vr.forEach((e=>e(t))),this._initialized=!0),this}createAnalyser(){return this._context.createAnalyser()}createOscillator(){return this._context.createOscillator()}createBufferSource(){return this._context.createBufferSource()}createBiquadFilter(){return this._context.createBiquadFilter()}createBuffer(t,e,n){return this._context.createBuffer(t,e,n)}createChannelMerger(t){return this._context.createChannelMerger(t)}createChannelSplitter(t){return this._context.createChannelSplitter(t)}createConstantSource(){return this._context.createConstantSource()}createConvolver(){return this._context.createConvolver()}createDelay(t){return this._context.createDelay(t)}createDynamicsCompressor(){return this._context.createDynamicsCompressor()}createGain(){return this._context.createGain()}createIIRFilter(t,e){return this._context.createIIRFilter(t,e)}createPanner(){return this._context.createPanner()}createPeriodicWave(t,e,n){return this._context.createPeriodicWave(t,e,n)}createStereoPanner(){return this._context.createStereoPanner()}createWaveShaper(){return this._context.createWaveShaper()}createMediaStreamSource(t){return Bs(ar(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamSource(t)}createMediaElementSource(t){return Bs(ar(this._context),"Not available if OfflineAudioContext"),this._context.createMediaElementSource(t)}createMediaStreamDestination(){return Bs(ar(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamDestination()}decodeAudioData(t){return this._context.decodeAudioData(t)}get currentTime(){return this._context.currentTime}get state(){return this._context.state}get sampleRate(){return this._context.sampleRate}get listener(){return this.initialize(),this._listener}set listener(t){Bs(!this._initialized,"The listener cannot be set after initialization."),this._listener=t}get transport(){return this.initialize(),this._transport}set transport(t){Bs(!this._initialized,"The transport cannot be set after initialization."),this._transport=t}get draw(){return this.initialize(),this._draw}set draw(t){Bs(!this._initialized,"Draw cannot be set after initialization."),this._draw=t}get destination(){return this.initialize(),this._destination}set destination(t){Bs(!this._initialized,"The destination cannot be set after initialization."),this._destination=t}createAudioWorkletNode(t,e){return function(t,e,n){return Bs(Ds(ks),"This node only works in a secure context (https or localhost)"),new ks(t,e,n)}(this.rawContext,t,e)}addAudioWorkletModule(t){return er(this,void 0,void 0,(function*(){Bs(Ds(this.rawContext.audioWorklet),"AudioWorkletNode is only available in a secure context (https or localhost)"),this._workletPromise||(this._workletPromise=this.rawContext.audioWorklet.addModule(t)),yield this._workletPromise}))}workletsAreReady(){return er(this,void 0,void 0,(function*(){(yield this._workletPromise)?this._workletPromise:Promise.resolve()}))}get updateInterval(){return this._ticker.updateInterval}set updateInterval(t){this._ticker.updateInterval=t}get clockSource(){return this._ticker.type}set clockSource(t){this._ticker.type=t}get lookAhead(){return this._lookAhead}set lookAhead(t){this._lookAhead=t,this.updateInterval=t?t/2:.01}get latencyHint(){return this._latencyHint}get rawContext(){return this._context}now(){return this._context.currentTime+this._lookAhead}immediate(){return this._context.currentTime}resume(){return ar(this._context)?this._context.resume():Promise.resolve()}close(){return er(this,void 0,void 0,(function*(){var t;ar(this._context)&&"closed"!==this.state&&!this._closeStarted&&(this._closeStarted=!0,yield this._context.close()),this._initialized&&(t=this,_r.forEach((e=>e(t))))}))}getConstant(t){if(this._constants.has(t))return this._constants.get(t);{const e=this._context.createBuffer(1,128,this._context.sampleRate),n=e.getChannelData(0);for(let e=0;e<n.length;e++)n[e]=t;const s=this._context.createBufferSource();return s.channelCount=1,s.channelCountMode="explicit",s.buffer=e,s.loop=!0,s.start(0),this._constants.set(t,s),s}}dispose(){return super.dispose(),this._ticker.dispose(),this._timeouts.dispose(),Object.keys(this._constants).map((t=>this._constants[t].disconnect())),this.close(),this}_timeoutLoop(){const t=this.now();let e=this._timeouts.peek();for(;this._timeouts.length&&e&&e.time<=t;)e.callback(),this._timeouts.shift(),e=this._timeouts.peek()}setTimeout(t,e){this._timeoutIds++;const n=this.now();return this._timeouts.add({callback:t,id:this._timeoutIds,time:n+e}),this._timeoutIds}clearTimeout(t){return this._timeouts.forEach((e=>{e.id===t&&this._timeouts.remove(e)})),this}clearInterval(t){return this.clearTimeout(t)}setInterval(t,e){const n=++this._timeoutIds,s=()=>{const r=this.now();this._timeouts.add({callback:()=>{t(),s()},id:n,time:r+e})};return s(),n}}function Cr(t,e){zs(e)?e.forEach((e=>Cr(t,e))):Object.defineProperty(t,e,{enumerable:!0,writable:!1})}function Nr(t,e){zs(e)?e.forEach((e=>Nr(t,e))):Object.defineProperty(t,e,{writable:!0})}const Ar=()=>{};class Er extends pr{constructor(){super(),this.name="ToneAudioBuffer",this.onload=Ar;const t=ur(Er.getDefaults(),arguments,["url","onload","onerror"]);this.reverse=t.reverse,this.onload=t.onload,Ps(t.url)?this.load(t.url).catch(t.onerror):t.url&&this.set(t.url)}static getDefaults(){return{onerror:Ar,onload:Ar,reverse:!1}}get sampleRate(){return this._buffer?this._buffer.sampleRate:Or().sampleRate}set(t){return t instanceof Er?t.loaded?this._buffer=t.get():t.onload=()=>{this.set(t),this.onload(this)}:this._buffer=t,this._reversed&&this._reverse(),this}get(){return this._buffer}load(t){return er(this,void 0,void 0,(function*(){const e=Er.load(t).then((t=>{this.set(t),this.onload(this)}));Er.downloads.push(e);try{yield e}finally{const t=Er.downloads.indexOf(e);Er.downloads.splice(t,1)}return this}))}dispose(){return super.dispose(),this._buffer=void 0,this}fromArray(t){const e=zs(t)&&t[0].length>0,n=e?t.length:1,s=e?t[0].length:t.length,r=Or(),i=r.createBuffer(n,s,r.sampleRate),a=e||1!==n?t:[t];for(let t=0;t<n;t++)i.copyToChannel(a[t],t);return this._buffer=i,this}toMono(t){if(Fs(t))this.fromArray(this.toArray(t));else{let t=new Float32Array(this.length);const e=this.numberOfChannels;for(let n=0;n<e;n++){const e=this.toArray(n);for(let n=0;n<e.length;n++)t[n]+=e[n]}t=t.map((t=>t/e)),this.fromArray(t)}return this}toArray(t){if(Fs(t))return this.getChannelData(t);if(1===this.numberOfChannels)return this.toArray(0);{const t=[];for(let e=0;e<this.numberOfChannels;e++)t[e]=this.getChannelData(e);return t}}getChannelData(t){return this._buffer?this._buffer.getChannelData(t):new Float32Array(0)}slice(t,e=this.duration){Bs(this.loaded,"Buffer is not loaded");const n=Math.floor(t*this.sampleRate),s=Math.floor(e*this.sampleRate);Bs(n<s,"The start time must be less than the end time");const r=s-n,i=Or().createBuffer(this.numberOfChannels,r,this.sampleRate);for(let t=0;t<this.numberOfChannels;t++)i.copyToChannel(this.getChannelData(t).subarray(n,s),t);return new Er(i)}_reverse(){if(this.loaded)for(let t=0;t<this.numberOfChannels;t++)this.getChannelData(t).reverse();return this}get loaded(){return this.length>0}get duration(){return this._buffer?this._buffer.duration:0}get length(){return this._buffer?this._buffer.length:0}get numberOfChannels(){return this._buffer?this._buffer.numberOfChannels:0}get reverse(){return this._reversed}set reverse(t){this._reversed!==t&&(this._reversed=t,this._reverse())}static fromArray(t){return(new Er).fromArray(t)}static fromUrl(t){return er(this,void 0,void 0,(function*(){const e=new Er;return yield e.load(t)}))}static load(t){return er(this,void 0,void 0,(function*(){const e=t.match(/\[([^\]\[]+\|.+)\]$/);if(e){const n=e[1].split("|");let s=n[0];for(const t of n)if(Er.supportsType(t)){s=t;break}t=t.replace(e[0],s)}const n=""===Er.baseUrl||Er.baseUrl.endsWith("/")?Er.baseUrl:Er.baseUrl+"/",s=document.createElement("a");s.href=n+t,s.pathname=(s.pathname+s.hash).split("/").map(encodeURIComponent).join("/");const r=yield fetch(s.href);if(!r.ok)throw new Error(`could not load url: ${t}`);const i=yield r.arrayBuffer();return yield Or().decodeAudioData(i)}))}static supportsType(t){const e=t.split("."),n=e[e.length-1];return""!==document.createElement("audio").canPlayType("audio/"+n)}static loaded(){return er(this,void 0,void 0,(function*(){for(yield Promise.resolve();Er.downloads.length;)yield Er.downloads[0]}))}}Er.baseUrl="",Er.downloads=[];class $r extends Ir{constructor(){var t,e,n;super({clockSource:"offline",context:ir(arguments[0])?arguments[0]:(t=arguments[0],e=arguments[1]*arguments[2],n=arguments[2],new Is(t,e,n)),lookAhead:0,updateInterval:ir(arguments[0])?128/arguments[0].sampleRate:128/arguments[2]}),this.name="OfflineContext",this._currentTime=0,this.isOffline=!0,this._duration=ir(arguments[0])?arguments[0].length/arguments[0].sampleRate:arguments[1]}now(){return this._currentTime}get currentTime(){return this._currentTime}_renderClock(t){return er(this,void 0,void 0,(function*(){let e=0;for(;this._duration-this._currentTime>=0;){this.emit("tick"),this._currentTime+=128/this.sampleRate,e++;const n=Math.floor(this.sampleRate/128);t&&e%n==0&&(yield new Promise((t=>setTimeout(t,1))))}}))}render(t=!0){return er(this,void 0,void 0,(function*(){yield this.workletsAreReady(),yield this._renderClock(t);const e=yield this._context.startRendering();return new Er(e)}))}close(){return Promise.resolve()}}const Rr=new class extends Sr{constructor(){super(...arguments),this.lookAhead=0,this.latencyHint=0,this.isOffline=!1}createAnalyser(){return{}}createOscillator(){return{}}createBufferSource(){return{}}createBiquadFilter(){return{}}createBuffer(t,e,n){return{}}createChannelMerger(t){return{}}createChannelSplitter(t){return{}}createConstantSource(){return{}}createConvolver(){return{}}createDelay(t){return{}}createDynamicsCompressor(){return{}}createGain(){return{}}createIIRFilter(t,e){return{}}createPanner(){return{}}createPeriodicWave(t,e,n){return{}}createStereoPanner(){return{}}createWaveShaper(){return{}}createMediaStreamSource(t){return{}}createMediaElementSource(t){return{}}createMediaStreamDestination(){return{}}decodeAudioData(t){return Promise.resolve({})}createAudioWorkletNode(t,e){return{}}get rawContext(){return{}}addAudioWorkletModule(t){return er(this,void 0,void 0,(function*(){return Promise.resolve()}))}resume(){return Promise.resolve()}setTimeout(t,e){return 0}clearTimeout(t){return this}setInterval(t,e){return 0}clearInterval(t){return this}getConstant(t){return{}}get currentTime(){return 0}get state(){return{}}get sampleRate(){return 0}get listener(){return{}}get transport(){return{}}get draw(){return{}}set draw(t){}get destination(){return{}}set destination(t){}now(){return 0}immediate(){return 0}};let Dr=Rr;function Or(){return Dr===Rr&&Js&&Fr(new Ir),Dr}function Fr(t,e=!1){e&&Dr.dispose(),Dr=ar(t)?new Ir(t):ir(t)?new $r(t):t}function Mr(){return Dr.resume()}if(Qs&&!Qs.TONE_SILENCE_LOGGING){let t="v";"dev"===r&&(t="");const e=` * Tone.js ${t}${r} * `;console.log(`%c${e}`,"background: #000; color: #fff")}function Lr(t){return Math.pow(10,t/20)}function zr(t){return Math.log(t)/Math.LN10*20}function Pr(t){return Math.pow(2,t/12)}let Vr=440;function Br(t){return Math.round(Wr(t))}function Wr(t){return 69+12*Math.log2(t/Vr)}function qr(t){return Vr*Math.pow(2,(t-69)/12)}class Ur extends pr{constructor(t,e,n){super(),this.defaultUnits="s",this._val=e,this._units=n,this.context=t,this._expressions=this._getExpressions()}_getExpressions(){return{hz:{method:t=>this._frequencyToUnits(parseFloat(t)),regexp:/^(\d+(?:\.\d+)?)hz$/i},i:{method:t=>this._ticksToUnits(parseInt(t,10)),regexp:/^(\d+)i$/i},m:{method:t=>this._beatsToUnits(parseInt(t,10)*this._getTimeSignature()),regexp:/^(\d+)m$/i},n:{method:(t,e)=>{const n=parseInt(t,10),s="."===e?1.5:1;return 1===n?this._beatsToUnits(this._getTimeSignature())*s:this._beatsToUnits(4/n)*s},regexp:/^(\d+)n(\.?)$/i},number:{method:t=>this._expressions[this.defaultUnits].method.call(this,t),regexp:/^(\d+(?:\.\d+)?)$/},s:{method:t=>this._secondsToUnits(parseFloat(t)),regexp:/^(\d+(?:\.\d+)?)s$/},samples:{method:t=>parseInt(t,10)/this.context.sampleRate,regexp:/^(\d+)samples$/},t:{method:t=>{const e=parseInt(t,10);return this._beatsToUnits(8/(3*Math.floor(e)))},regexp:/^(\d+)t$/i},tr:{method:(t,e,n)=>{let s=0;return t&&"0"!==t&&(s+=this._beatsToUnits(this._getTimeSignature()*parseFloat(t))),e&&"0"!==e&&(s+=this._beatsToUnits(parseFloat(e))),n&&"0"!==n&&(s+=this._beatsToUnits(parseFloat(n)/4)),s},regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/}}}valueOf(){if(this._val instanceof Ur&&this.fromType(this._val),Rs(this._val))return this._noArg();if(Ps(this._val)&&Rs(this._units)){for(const t in this._expressions)if(this._expressions[t].regexp.test(this._val.trim())){this._units=t;break}}else if(Ms(this._val)){let t=0;for(const e in this._val)if(Ds(this._val[e])){const n=this._val[e];t+=new this.constructor(this.context,e).valueOf()*n}return t}if(Ds(this._units)){const t=this._expressions[this._units],e=this._val.toString().trim().match(t.regexp);return e?t.method.apply(this,e.slice(1)):t.method.call(this,this._val)}return Ps(this._val)?parseFloat(this._val):this._val}_frequencyToUnits(t){return 1/t}_beatsToUnits(t){return 60/this._getBpm()*t}_secondsToUnits(t){return t}_ticksToUnits(t){return t*this._beatsToUnits(1)/this._getPPQ()}_noArg(){return this._now()}_getBpm(){return this.context.transport.bpm.value}_getTimeSignature(){return this.context.transport.timeSignature}_getPPQ(){return this.context.transport.PPQ}fromType(t){switch(this._units=void 0,this.defaultUnits){case"s":this._val=t.toSeconds();break;case"i":this._val=t.toTicks();break;case"hz":this._val=t.toFrequency();break;case"midi":this._val=t.toMidi()}return this}toFrequency(){return 1/this.toSeconds()}toSamples(){return this.toSeconds()*this.context.sampleRate}toMilliseconds(){return 1e3*this.toSeconds()}}class Gr extends Ur{constructor(){super(...arguments),this.name="TimeClass"}_getExpressions(){return Object.assign(super._getExpressions(),{now:{method:t=>this._now()+new this.constructor(this.context,t).valueOf(),regexp:/^\+(.+)/},quantize:{method:t=>{const e=new Gr(this.context,t).valueOf();return this._secondsToUnits(this.context.transport.nextSubdivision(e))},regexp:/^@(.+)/}})}quantize(t,e=1){const n=new this.constructor(this.context,t).valueOf(),s=this.valueOf();return s+(Math.round(s/n)*n-s)*e}toNotation(){const t=this.toSeconds(),e=["1m"];for(let t=1;t<9;t++){const n=Math.pow(2,t);e.push(n+"n."),e.push(n+"n"),e.push(n+"t")}e.push("0");let n=e[0],s=new Gr(this.context,e[0]).toSeconds();return e.forEach((e=>{const r=new Gr(this.context,e).toSeconds();Math.abs(r-t)<Math.abs(s-t)&&(n=e,s=r)})),n}toBarsBeatsSixteenths(){const t=this._beatsToUnits(1);let e=this.valueOf()/t;e=parseFloat(e.toFixed(4));const n=Math.floor(e/this._getTimeSignature());let s=e%1*4;e=Math.floor(e)%this._getTimeSignature();const r=s.toString();return r.length>3&&(s=parseFloat(parseFloat(r).toFixed(3))),[n,e,s].join(":")}toTicks(){const t=this._beatsToUnits(1);return this.valueOf()/t*this._getPPQ()}toSeconds(){return this.valueOf()}toMidi(){return Br(this.toFrequency())}_now(){return this.context.now()}}function jr(t,e){return new Gr(Or(),t,e)}class Hr extends Gr{constructor(){super(...arguments),this.name="Frequency",this.defaultUnits="hz"}static get A4(){return Vr}static set A4(t){!function(t){Vr=t}(t)}_getExpressions(){return Object.assign({},super._getExpressions(),{midi:{regexp:/^(\d+(?:\.\d+)?midi)/,method(t){return"midi"===this.defaultUnits?t:Hr.mtof(t)}},note:{regexp:/^([a-g]{1}(?:b|#|##|x|bb|###|#x|x#|bbb)?)(-?[0-9]+)/i,method(t,e){const n=Xr[t.toLowerCase()]+12*(parseInt(e,10)+1);return"midi"===this.defaultUnits?n:Hr.mtof(n)}},tr:{regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,method(t,e,n){let s=1;return t&&"0"!==t&&(s*=this._beatsToUnits(this._getTimeSignature()*parseFloat(t))),e&&"0"!==e&&(s*=this._beatsToUnits(parseFloat(e))),n&&"0"!==n&&(s*=this._beatsToUnits(parseFloat(n)/4)),s}}})}transpose(t){return new Hr(this.context,this.valueOf()*Pr(t))}harmonize(t){return t.map((t=>this.transpose(t)))}toMidi(){return Br(this.valueOf())}toNote(){const t=this.toFrequency(),e=Math.log2(t/Hr.A4);let n=Math.round(12*e)+57;const s=Math.floor(n/12);return s<0&&(n+=-12*s),Kr[n%12]+s.toString()}toSeconds(){return 1/super.toSeconds()}toTicks(){const t=this._beatsToUnits(1),e=this.valueOf()/t;return Math.floor(e*this._getPPQ())}_noArg(){return 0}_frequencyToUnits(t){return t}_ticksToUnits(t){return 1/(60*t/(this._getBpm()*this._getPPQ()))}_beatsToUnits(t){return 1/super._beatsToUnits(t)}_secondsToUnits(t){return 1/t}static mtof(t){return qr(t)}static ftom(t){return Br(t)}}const Xr={cbbb:-3,cbb:-2,cb:-1,c:0,"c#":1,cx:2,"c##":2,"c###":3,"cx#":3,"c#x":3,dbbb:-1,dbb:0,db:1,d:2,"d#":3,dx:4,"d##":4,"d###":5,"dx#":5,"d#x":5,ebbb:1,ebb:2,eb:3,e:4,"e#":5,ex:6,"e##":6,"e###":7,"ex#":7,"e#x":7,fbbb:2,fbb:3,fb:4,f:5,"f#":6,fx:7,"f##":7,"f###":8,"fx#":8,"f#x":8,gbbb:4,gbb:5,gb:6,g:7,"g#":8,gx:9,"g##":9,"g###":10,"gx#":10,"g#x":10,abbb:6,abb:7,ab:8,a:9,"a#":10,ax:11,"a##":11,"a###":12,"ax#":12,"a#x":12,bbbb:8,bbb:9,bb:10,b:11,"b#":12,bx:13,"b##":13,"b###":14,"bx#":14,"b#x":14},Kr=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];function Yr(t,e){return new Hr(Or(),t,e)}class Zr extends Gr{constructor(){super(...arguments),this.name="TransportTime"}_now(){return this.context.transport.seconds}}function Qr(t,e){return new Zr(Or(),t,e)}class Jr extends pr{constructor(){super();const t=ur(Jr.getDefaults(),arguments,["context"]);this.defaultContext?this.context=this.defaultContext:this.context=t.context}static getDefaults(){return{context:Or()}}now(){return this.context.currentTime+this.context.lookAhead}immediate(){return this.context.currentTime}get sampleTime(){return 1/this.context.sampleRate}get blockTime(){return 128/this.context.sampleRate}toSeconds(t){return Hs(t),new Gr(this.context,t).toSeconds()}toFrequency(t){return new Hr(this.context,t).toFrequency()}toTicks(t){return new Zr(this.context,t).toTicks()}_getPartialProperties(t){const e=this.get();return Object.keys(e).forEach((n=>{Rs(t[n])&&delete e[n]})),e}get(){const t=this.constructor.getDefaults();return Object.keys(t).forEach((e=>{if(Reflect.has(this,e)){const n=this[e];Ds(n)&&Ds(n.value)&&Ds(n.setValueAtTime)?t[e]=n.value:n instanceof Jr?t[e]=n._getPartialProperties(t[e]):zs(n)||Fs(n)||Ps(n)||Ls(n)?t[e]=n:delete t[e]}})),t}set(t){return Object.keys(t).forEach((e=>{Reflect.has(this,e)&&Ds(this[e])&&(this[e]&&Ds(this[e].value)&&Ds(this[e].setValueAtTime)?this[e].value!==t[e]&&(this[e].value=t[e]):this[e]instanceof Jr?this[e].set(t[e]):this[e]=t[e])})),this}}class ti extends xr{constructor(t="stopped"){super(),this.name="StateTimeline",this._initial=t,this.setStateAtTime(this._initial,0)}getValueAtTime(t){const e=this.get(t);return null!==e?e.state:this._initial}setStateAtTime(t,e,n){return Ws(e,0),this.add(Object.assign({},n,{state:t,time:e})),this}getLastState(t,e){for(let n=this._search(e);n>=0;n--){const e=this._timeline[n];if(e.state===t)return e}}getNextState(t,e){const n=this._search(e);if(-1!==n)for(let e=n;e<this._timeline.length;e++){const n=this._timeline[e];if(n.state===t)return n}}}class ei extends Jr{constructor(){super(ur(ei.getDefaults(),arguments,["param","units","convert"])),this.name="Param",this.overridden=!1,this._minOutput=1e-7;const t=ur(ei.getDefaults(),arguments,["param","units","convert"]);for(Bs(Ds(t.param)&&(sr(t.param)||t.param instanceof ei),"param must be an AudioParam");!sr(t.param);)t.param=t.param._param;this._swappable=!!Ds(t.swappable)&&t.swappable,this._swappable?(this.input=this.context.createGain(),this._param=t.param,this.input.connect(this._param)):this._param=this.input=t.param,this._events=new xr(1e3),this._initialValue=this._param.defaultValue,this.units=t.units,this.convert=t.convert,this._minValue=t.minValue,this._maxValue=t.maxValue,Ds(t.value)&&t.value!==this._toType(this._initialValue)&&this.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(Jr.getDefaults(),{convert:!0,units:"number"})}get value(){const t=this.now();return this.getValueAtTime(t)}set value(t){this.cancelScheduledValues(this.now()),this.setValueAtTime(t,this.now())}get minValue(){return Ds(this._minValue)?this._minValue:"time"===this.units||"frequency"===this.units||"normalRange"===this.units||"positive"===this.units||"transportTime"===this.units||"ticks"===this.units||"bpm"===this.units||"hertz"===this.units||"samples"===this.units?0:"audioRange"===this.units?-1:"decibels"===this.units?-1/0:this._param.minValue}get maxValue(){return Ds(this._maxValue)?this._maxValue:"normalRange"===this.units||"audioRange"===this.units?1:this._param.maxValue}_is(t,e){return this.units===e}_assertRange(t){return Ds(this.maxValue)&&Ds(this.minValue)&&Ws(t,this._fromType(this.minValue),this._fromType(this.maxValue)),t}_fromType(t){return this.convert&&!this.overridden?this._is(t,"time")?this.toSeconds(t):this._is(t,"decibels")?Lr(t):this._is(t,"frequency")?this.toFrequency(t):t:this.overridden?0:t}_toType(t){return this.convert&&"decibels"===this.units?zr(t):t}setValueAtTime(t,e){const n=this.toSeconds(e),s=this._fromType(t);return Bs(isFinite(s)&&isFinite(n),`Invalid argument(s) to setValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._assertRange(s),this.log(this.units,"setValueAtTime",t,n),this._events.add({time:n,type:"setValueAtTime",value:s}),this._param.setValueAtTime(s,n),this}getValueAtTime(t){const e=Math.max(this.toSeconds(t),0),n=this._events.getAfter(e),s=this._events.get(e);let r=this._initialValue;if(null===s)r=this._initialValue;else if("setTargetAtTime"!==s.type||null!==n&&"setValueAtTime"!==n.type)if(null===n)r=s.value;else if("linearRampToValueAtTime"===n.type||"exponentialRampToValueAtTime"===n.type){let t=s.value;if("setTargetAtTime"===s.type){const e=this._events.getBefore(s.time);t=null===e?this._initialValue:e.value}r="linearRampToValueAtTime"===n.type?this._linearInterpolate(s.time,t,n.time,n.value,e):this._exponentialInterpolate(s.time,t,n.time,n.value,e)}else r=s.value;else{const t=this._events.getBefore(s.time);let n;n=null===t?this._initialValue:t.value,"setTargetAtTime"===s.type&&(r=this._exponentialApproach(s.time,n,s.value,s.constant,e))}return this._toType(r)}setRampPoint(t){t=this.toSeconds(t);let e=this.getValueAtTime(t);return this.cancelAndHoldAtTime(t),0===this._fromType(e)&&(e=this._toType(this._minOutput)),this.setValueAtTime(e,t),this}linearRampToValueAtTime(t,e){const n=this._fromType(t),s=this.toSeconds(e);return Bs(isFinite(n)&&isFinite(s),`Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._assertRange(n),this._events.add({time:s,type:"linearRampToValueAtTime",value:n}),this.log(this.units,"linearRampToValueAtTime",t,s),this._param.linearRampToValueAtTime(n,s),this}exponentialRampToValueAtTime(t,e){let n=this._fromType(t);n=yr(n,0)?this._minOutput:n,this._assertRange(n);const s=this.toSeconds(e);return Bs(isFinite(n)&&isFinite(s),`Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._events.add({time:s,type:"exponentialRampToValueAtTime",value:n}),this.log(this.units,"exponentialRampToValueAtTime",t,s),this._param.exponentialRampToValueAtTime(n,s),this}exponentialRampTo(t,e,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialRampToValueAtTime(t,n+this.toSeconds(e)),this}linearRampTo(t,e,n){return n=this.toSeconds(n),this.setRampPoint(n),this.linearRampToValueAtTime(t,n+this.toSeconds(e)),this}targetRampTo(t,e,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialApproachValueAtTime(t,n,e),this}exponentialApproachValueAtTime(t,e,n){e=this.toSeconds(e),n=this.toSeconds(n);const s=Math.log(n+1)/Math.log(200);return this.setTargetAtTime(t,e,s),this.cancelAndHoldAtTime(e+.9*n),this.linearRampToValueAtTime(t,e+n),this}setTargetAtTime(t,e,n){const s=this._fromType(t);Bs(isFinite(n)&&n>0,"timeConstant must be a number greater than 0");const r=this.toSeconds(e);return this._assertRange(s),Bs(isFinite(s)&&isFinite(r),`Invalid argument(s) to setTargetAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._events.add({constant:n,time:r,type:"setTargetAtTime",value:s}),this.log(this.units,"setTargetAtTime",t,r,n),this._param.setTargetAtTime(s,r,n),this}setValueCurveAtTime(t,e,n,s=1){n=this.toSeconds(n),e=this.toSeconds(e);const r=this._fromType(t[0])*s;this.setValueAtTime(this._toType(r),e);const i=n/(t.length-1);for(let n=1;n<t.length;n++){const r=this._fromType(t[n])*s;this.linearRampToValueAtTime(this._toType(r),e+n*i)}return this}cancelScheduledValues(t){const e=this.toSeconds(t);return Bs(isFinite(e),`Invalid argument to cancelScheduledValues: ${JSON.stringify(t)}`),this._events.cancel(e),this._param.cancelScheduledValues(e),this.log(this.units,"cancelScheduledValues",e),this}cancelAndHoldAtTime(t){const e=this.toSeconds(t),n=this._fromType(this.getValueAtTime(e));Bs(isFinite(e),`Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(t)}`),this.log(this.units,"cancelAndHoldAtTime",e,"value="+n);const s=this._events.get(e),r=this._events.getAfter(e);return s&&yr(s.time,e)?r?(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time)):(this._param.cancelAndHoldAtTime(e),this._events.cancel(e+this.sampleTime)):r&&(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time),"linearRampToValueAtTime"===r.type?this.linearRampToValueAtTime(this._toType(n),e):"exponentialRampToValueAtTime"===r.type&&this.exponentialRampToValueAtTime(this._toType(n),e)),this._events.add({time:e,type:"setValueAtTime",value:n}),this._param.setValueAtTime(n,e),this}rampTo(t,e=.1,n){return"frequency"===this.units||"bpm"===this.units||"decibels"===this.units?this.exponentialRampTo(t,e,n):this.linearRampTo(t,e,n),this}apply(t){const e=this.context.currentTime;t.setValueAtTime(this.getValueAtTime(e),e);const n=this._events.get(e);if(n&&"setTargetAtTime"===n.type){const s=this._events.getAfter(n.time),r=s?s.time:e+2,i=(r-e)/10;for(let n=e;n<r;n+=i)t.linearRampToValueAtTime(this.getValueAtTime(n),n)}return this._events.forEachAfter(this.context.currentTime,(e=>{"cancelScheduledValues"===e.type?t.cancelScheduledValues(e.time):"setTargetAtTime"===e.type?t.setTargetAtTime(e.value,e.time,e.constant):t[e.type](e.value,e.time)})),this}setParam(t){Bs(this._swappable,"The Param must be assigned as 'swappable' in the constructor");const e=this.input;return e.disconnect(this._param),this.apply(t),this._param=t,e.connect(this._param),this}dispose(){return super.dispose(),this._events.dispose(),this}get defaultValue(){return this._toType(this._param.defaultValue)}_exponentialApproach(t,e,n,s,r){return n+(e-n)*Math.exp(-(r-t)/s)}_linearInterpolate(t,e,n,s,r){return e+(r-t)/(n-t)*(s-e)}_exponentialInterpolate(t,e,n,s,r){return e*Math.pow(s/e,(r-t)/(n-t))}}class ni extends Jr{constructor(){super(...arguments),this._internalChannels=[]}get numberOfInputs(){return Ds(this.input)?sr(this.input)||this.input instanceof ei?1:this.input.numberOfInputs:0}get numberOfOutputs(){return Ds(this.output)?this.output.numberOfOutputs:0}_isAudioNode(t){return Ds(t)&&(t instanceof ni||rr(t))}_getInternalNodes(){const t=this._internalChannels.slice(0);return this._isAudioNode(this.input)&&t.push(this.input),this._isAudioNode(this.output)&&this.input!==this.output&&t.push(this.output),t}_setChannelProperties(t){this._getInternalNodes().forEach((e=>{e.channelCount=t.channelCount,e.channelCountMode=t.channelCountMode,e.channelInterpretation=t.channelInterpretation}))}_getChannelProperties(){const t=this._getInternalNodes();Bs(t.length>0,"ToneAudioNode does not have any internal nodes");const e=t[0];return{channelCount:e.channelCount,channelCountMode:e.channelCountMode,channelInterpretation:e.channelInterpretation}}get channelCount(){return this._getChannelProperties().channelCount}set channelCount(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelCount:t}))}get channelCountMode(){return this._getChannelProperties().channelCountMode}set channelCountMode(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelCountMode:t}))}get channelInterpretation(){return this._getChannelProperties().channelInterpretation}set channelInterpretation(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelInterpretation:t}))}connect(t,e=0,n=0){return ri(this,t,e,n),this}toDestination(){return this.connect(this.context.destination),this}toMaster(){return Zs("toMaster() has been renamed toDestination()"),this.toDestination()}disconnect(t,e=0,n=0){return ii(this,t,e,n),this}chain(...t){return si(this,...t),this}fan(...t){return t.forEach((t=>this.connect(t))),this}dispose(){return super.dispose(),Ds(this.input)&&(this.input instanceof ni?this.input.dispose():rr(this.input)&&this.input.disconnect()),Ds(this.output)&&(this.output instanceof ni?this.output.dispose():rr(this.output)&&this.output.disconnect()),this._internalChannels=[],this}}function si(...t){const e=t.shift();t.reduce(((t,e)=>(t instanceof ni?t.connect(e):rr(t)&&ri(t,e),e)),e)}function ri(t,e,n=0,s=0){for(Bs(Ds(t),"Cannot connect from undefined node"),Bs(Ds(e),"Cannot connect to undefined node"),(e instanceof ni||rr(e))&&Bs(e.numberOfInputs>0,"Cannot connect to node with no inputs"),Bs(t.numberOfOutputs>0,"Cannot connect from node with no outputs");e instanceof ni||e instanceof ei;)Ds(e.input)&&(e=e.input);for(;t instanceof ni;)Ds(t.output)&&(t=t.output);sr(e)?t.connect(e,n):t.connect(e,n,s)}function ii(t,e,n=0,s=0){if(Ds(e))for(;e instanceof ni;)e=e.input;for(;!rr(t);)Ds(t.output)&&(t=t.output);sr(e)?t.disconnect(e,n):rr(e)?t.disconnect(e,n,s):t.disconnect()}function ai(...t){const e=t.pop();Ds(e)&&t.forEach((t=>ri(t,e)))}class oi extends ni{constructor(){super(ur(oi.getDefaults(),arguments,["gain","units"])),this.name="Gain",this._gainNode=this.context.createGain(),this.input=this._gainNode,this.output=this._gainNode;const t=ur(oi.getDefaults(),arguments,["gain","units"]);this.gain=new ei({context:this.context,convert:t.convert,param:this._gainNode.gain,units:t.units,value:t.gain,minValue:t.minValue,maxValue:t.maxValue}),Cr(this,"gain")}static getDefaults(){return Object.assign(ni.getDefaults(),{convert:!0,gain:1,units:"gain"})}dispose(){return super.dispose(),this._gainNode.disconnect(),this.gain.dispose(),this}}class li extends ni{constructor(t){super(t),this.onended=Ar,this._startTime=-1,this._stopTime=-1,this._timeout=-1,this.output=new oi({context:this.context,gain:0}),this._gainNode=this.output,this.getStateAtTime=function(t){const e=this.toSeconds(t);return-1!==this._startTime&&e>=this._startTime&&(-1===this._stopTime||e<=this._stopTime)?"started":"stopped"},this._fadeIn=t.fadeIn,this._fadeOut=t.fadeOut,this._curve=t.curve,this.onended=t.onended}static getDefaults(){return Object.assign(ni.getDefaults(),{curve:"linear",fadeIn:0,fadeOut:0,onended:Ar})}_startGain(t,e=1){Bs(-1===this._startTime,"Source cannot be started more than once");const n=this.toSeconds(this._fadeIn);return this._startTime=t+n,this._startTime=Math.max(this._startTime,this.context.currentTime),n>0?(this._gainNode.gain.setValueAtTime(0,t),"linear"===this._curve?this._gainNode.gain.linearRampToValueAtTime(e,t+n):this._gainNode.gain.exponentialApproachValueAtTime(e,t,n)):this._gainNode.gain.setValueAtTime(e,t),this}stop(t){return this.log("stop",t),this._stopGain(this.toSeconds(t)),this}_stopGain(t){Bs(-1!==this._startTime,"'start' must be called before 'stop'"),this.cancelStop();const e=this.toSeconds(this._fadeOut);return this._stopTime=this.toSeconds(t)+e,this._stopTime=Math.max(this._stopTime,this.now()),e>0?"linear"===this._curve?this._gainNode.gain.linearRampTo(0,e,t):this._gainNode.gain.targetRampTo(0,e,t):(this._gainNode.gain.cancelAndHoldAtTime(t),this._gainNode.gain.setValueAtTime(0,t)),this.context.clearTimeout(this._timeout),this._timeout=this.context.setTimeout((()=>{const t="exponential"===this._curve?2*e:0;this._stopSource(this.now()+t),this._onended()}),this._stopTime-this.context.currentTime),this}_onended(){if(this.onended!==Ar&&(this.onended(this),this.onended=Ar,!this.context.isOffline)){const t=()=>this.dispose();void 0!==window.requestIdleCallback?window.requestIdleCallback(t):setTimeout(t,1e3)}}get state(){return this.getStateAtTime(this.now())}cancelStop(){return this.log("cancelStop"),Bs(-1!==this._startTime,"Source is not started"),this._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime),this.context.clearTimeout(this._timeout),this._stopTime=-1,this}dispose(){return super.dispose(),this._gainNode.dispose(),this.onended=Ar,this}}class ui extends li{constructor(){super(ur(ui.getDefaults(),arguments,["offset"])),this.name="ToneConstantSource",this._source=this.context.createConstantSource();const t=ur(ui.getDefaults(),arguments,["offset"]);ri(this._source,this._gainNode),this.offset=new ei({context:this.context,convert:t.convert,param:this._source.offset,units:t.units,value:t.offset,minValue:t.minValue,maxValue:t.maxValue})}static getDefaults(){return Object.assign(li.getDefaults(),{convert:!0,offset:1,units:"number"})}start(t){const e=this.toSeconds(t);return this.log("start",e),this._startGain(e),this._source.start(e),this}_stopSource(t){this._source.stop(t)}dispose(){return super.dispose(),"started"===this.state&&this.stop(),this._source.disconnect(),this.offset.dispose(),this}}class ci extends ni{constructor(){super(ur(ci.getDefaults(),arguments,["value","units"])),this.name="Signal",this.override=!0;const t=ur(ci.getDefaults(),arguments,["value","units"]);this.output=this._constantSource=new ui({context:this.context,convert:t.convert,offset:t.value,units:t.units,minValue:t.minValue,maxValue:t.maxValue}),this._constantSource.start(0),this.input=this._param=this._constantSource.offset}static getDefaults(){return Object.assign(ni.getDefaults(),{convert:!0,units:"number",value:0})}connect(t,e=0,n=0){return hi(this,t,e,n),this}dispose(){return super.dispose(),this._param.dispose(),this._constantSource.dispose(),this}setValueAtTime(t,e){return this._param.setValueAtTime(t,e),this}getValueAtTime(t){return this._param.getValueAtTime(t)}setRampPoint(t){return this._param.setRampPoint(t),this}linearRampToValueAtTime(t,e){return this._param.linearRampToValueAtTime(t,e),this}exponentialRampToValueAtTime(t,e){return this._param.exponentialRampToValueAtTime(t,e),this}exponentialRampTo(t,e,n){return this._param.exponentialRampTo(t,e,n),this}linearRampTo(t,e,n){return this._param.linearRampTo(t,e,n),this}targetRampTo(t,e,n){return this._param.targetRampTo(t,e,n),this}exponentialApproachValueAtTime(t,e,n){return this._param.exponentialApproachValueAtTime(t,e,n),this}setTargetAtTime(t,e,n){return this._param.setTargetAtTime(t,e,n),this}setValueCurveAtTime(t,e,n,s){return this._param.setValueCurveAtTime(t,e,n,s),this}cancelScheduledValues(t){return this._param.cancelScheduledValues(t),this}cancelAndHoldAtTime(t){return this._param.cancelAndHoldAtTime(t),this}rampTo(t,e,n){return this._param.rampTo(t,e,n),this}get value(){return this._param.value}set value(t){this._param.value=t}get convert(){return this._param.convert}set convert(t){this._param.convert=t}get units(){return this._param.units}get overridden(){return this._param.overridden}set overridden(t){this._param.overridden=t}get maxValue(){return this._param.maxValue}get minValue(){return this._param.minValue}apply(t){return this._param.apply(t),this}}function hi(t,e,n,s){(e instanceof ei||sr(e)||e instanceof ci&&e.override)&&(e.cancelScheduledValues(0),e.setValueAtTime(0,0),e instanceof ci&&(e.overridden=!0)),ri(t,e,n,s)}class pi extends ei{constructor(){super(ur(pi.getDefaults(),arguments,["value"])),this.name="TickParam",this._events=new xr(1/0),this._multiplier=1;const t=ur(pi.getDefaults(),arguments,["value"]);this._multiplier=t.multiplier,this._events.cancel(0),this._events.add({ticks:0,time:0,type:"setValueAtTime",value:this._fromType(t.value)}),this.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(ei.getDefaults(),{multiplier:1,units:"hertz",value:1})}setTargetAtTime(t,e,n){e=this.toSeconds(e),this.setRampPoint(e);const s=this._fromType(t),r=this._events.get(e),i=Math.round(Math.max(1/n,1));for(let t=0;t<=i;t++){const i=n*t+e,a=this._exponentialApproach(r.time,r.value,s,n,i);this.linearRampToValueAtTime(this._toType(a),i)}return this}setValueAtTime(t,e){const n=this.toSeconds(e);super.setValueAtTime(t,e);const s=this._events.get(n),r=this._events.previousEvent(s),i=this._getTicksUntilEvent(r,n);return s.ticks=Math.max(i,0),this}linearRampToValueAtTime(t,e){const n=this.toSeconds(e);super.linearRampToValueAtTime(t,e);const s=this._events.get(n),r=this._events.previousEvent(s),i=this._getTicksUntilEvent(r,n);return s.ticks=Math.max(i,0),this}exponentialRampToValueAtTime(t,e){e=this.toSeconds(e);const n=this._fromType(t),s=this._events.get(e),r=Math.round(Math.max(10*(e-s.time),1)),i=(e-s.time)/r;for(let t=0;t<=r;t++){const r=i*t+s.time,a=this._exponentialInterpolate(s.time,s.value,e,n,r);this.linearRampToValueAtTime(this._toType(a),r)}return this}_getTicksUntilEvent(t,e){if(null===t)t={ticks:0,time:0,type:"setValueAtTime",value:0};else if(Rs(t.ticks)){const e=this._events.previousEvent(t);t.ticks=this._getTicksUntilEvent(e,t.time)}const n=this._fromType(this.getValueAtTime(t.time));let s=this._fromType(this.getValueAtTime(e));const r=this._events.get(e);return r&&r.time===e&&"setValueAtTime"===r.type&&(s=this._fromType(this.getValueAtTime(e-this.sampleTime))),.5*(e-t.time)*(n+s)+t.ticks}getTicksAtTime(t){const e=this.toSeconds(t),n=this._events.get(e);return Math.max(this._getTicksUntilEvent(n,e),0)}getDurationOfTicks(t,e){const n=this.toSeconds(e),s=this.getTicksAtTime(e);return this.getTimeOfTick(s+t)-n}getTimeOfTick(t){const e=this._events.get(t,"ticks"),n=this._events.getAfter(t,"ticks");if(e&&e.ticks===t)return e.time;if(e&&n&&"linearRampToValueAtTime"===n.type&&e.value!==n.value){const s=this._fromType(this.getValueAtTime(e.time)),r=(this._fromType(this.getValueAtTime(n.time))-s)/(n.time-e.time),i=Math.sqrt(Math.pow(s,2)-2*r*(e.ticks-t)),a=(-s+i)/r;return(a>0?a:(-s-i)/r)+e.time}return e?0===e.value?1/0:e.time+(t-e.ticks)/e.value:t/this._initialValue}ticksToTime(t,e){return this.getDurationOfTicks(t,e)}timeToTicks(t,e){const n=this.toSeconds(e),s=this.toSeconds(t),r=this.getTicksAtTime(n);return this.getTicksAtTime(n+s)-r}_fromType(t){return"bpm"===this.units&&this.multiplier?1/(60/t/this.multiplier):super._fromType(t)}_toType(t){return"bpm"===this.units&&this.multiplier?t/this.multiplier*60:super._toType(t)}get multiplier(){return this._multiplier}set multiplier(t){const e=this.value;this._multiplier=t,this.cancelScheduledValues(0),this.setValueAtTime(e,0)}}class di extends ci{constructor(){super(ur(di.getDefaults(),arguments,["value"])),this.name="TickSignal";const t=ur(di.getDefaults(),arguments,["value"]);this.input=this._param=new pi({context:this.context,convert:t.convert,multiplier:t.multiplier,param:this._constantSource.offset,units:t.units,value:t.value})}static getDefaults(){return Object.assign(ci.getDefaults(),{multiplier:1,units:"hertz",value:1})}ticksToTime(t,e){return this._param.ticksToTime(t,e)}timeToTicks(t,e){return this._param.timeToTicks(t,e)}getTimeOfTick(t){return this._param.getTimeOfTick(t)}getDurationOfTicks(t,e){return this._param.getDurationOfTicks(t,e)}getTicksAtTime(t){return this._param.getTicksAtTime(t)}get multiplier(){return this._param.multiplier}set multiplier(t){this._param.multiplier=t}dispose(){return super.dispose(),this._param.dispose(),this}}class fi extends Jr{constructor(){super(ur(fi.getDefaults(),arguments,["frequency"])),this.name="TickSource",this._state=new ti,this._tickOffset=new xr,this._ticksAtTime=new xr,this._secondsAtTime=new xr;const t=ur(fi.getDefaults(),arguments,["frequency"]);this.frequency=new di({context:this.context,units:t.units,value:t.frequency}),Cr(this,"frequency"),this._state.setStateAtTime("stopped",0),this.setTicksAtTime(0,0)}static getDefaults(){return Object.assign({frequency:1,units:"hertz"},Jr.getDefaults())}get state(){return this.getStateAtTime(this.now())}start(t,e){const n=this.toSeconds(t);return"started"!==this._state.getValueAtTime(n)&&(this._state.setStateAtTime("started",n),Ds(e)&&this.setTicksAtTime(e,n),this._ticksAtTime.cancel(n),this._secondsAtTime.cancel(n)),this}stop(t){const e=this.toSeconds(t);if("stopped"===this._state.getValueAtTime(e)){const t=this._state.get(e);t&&t.time>0&&(this._tickOffset.cancel(t.time),this._state.cancel(t.time))}return this._state.cancel(e),this._state.setStateAtTime("stopped",e),this.setTicksAtTime(0,e),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e),this}pause(t){const e=this.toSeconds(t);return"started"===this._state.getValueAtTime(e)&&(this._state.setStateAtTime("paused",e),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e)),this}cancel(t){return t=this.toSeconds(t),this._state.cancel(t),this._tickOffset.cancel(t),this._ticksAtTime.cancel(t),this._secondsAtTime.cancel(t),this}getTicksAtTime(t){const e=this.toSeconds(t),n=this._state.getLastState("stopped",e),s=this._ticksAtTime.get(e),r={state:"paused",time:e};this._state.add(r);let i=s||n,a=s?s.ticks:0,o=null;return this._state.forEachBetween(i.time,e+this.sampleTime,(t=>{let e=i.time;const n=this._tickOffset.get(t.time);n&&n.time>=i.time&&(a=n.ticks,e=n.time),"started"===i.state&&"started"!==t.state&&(a+=this.frequency.getTicksAtTime(t.time)-this.frequency.getTicksAtTime(e),t.time!=r.time&&(o={state:t.state,time:t.time,ticks:a})),i=t})),this._state.remove(r),o&&this._ticksAtTime.add(o),a}get ticks(){return this.getTicksAtTime(this.now())}set ticks(t){this.setTicksAtTime(t,this.now())}get seconds(){return this.getSecondsAtTime(this.now())}set seconds(t){const e=this.now(),n=this.frequency.timeToTicks(t,e);this.setTicksAtTime(n,e)}getSecondsAtTime(t){t=this.toSeconds(t);const e=this._state.getLastState("stopped",t),n={state:"paused",time:t};this._state.add(n);const s=this._secondsAtTime.get(t);let r=s||e,i=s?s.seconds:0,a=null;return this._state.forEachBetween(r.time,t+this.sampleTime,(t=>{let e=r.time;const s=this._tickOffset.get(t.time);s&&s.time>=r.time&&(i=s.seconds,e=s.time),"started"===r.state&&"started"!==t.state&&(i+=t.time-e,t.time!=n.time&&(a={state:t.state,time:t.time,seconds:i})),r=t})),this._state.remove(n),a&&this._secondsAtTime.add(a),i}setTicksAtTime(t,e){return e=this.toSeconds(e),this._tickOffset.cancel(e),this._tickOffset.add({seconds:this.frequency.getDurationOfTicks(t,e),ticks:t,time:e}),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e),this}getStateAtTime(t){return t=this.toSeconds(t),this._state.getValueAtTime(t)}getTimeOfTick(t,e=this.now()){const n=this._tickOffset.get(e),s=this._state.get(e),r=Math.max(n.time,s.time),i=this.frequency.getTicksAtTime(r)+t-n.ticks;return this.frequency.getTimeOfTick(i)}forEachTickBetween(t,e,n){let s=this._state.get(t);this._state.forEachBetween(t,e,(e=>{s&&"started"===s.state&&"started"!==e.state&&this.forEachTickBetween(Math.max(s.time,t),e.time-this.sampleTime,n),s=e}));let r=null;if(s&&"started"===s.state){const i=Math.max(s.time,t),a=this.frequency.getTicksAtTime(i),o=a-this.frequency.getTicksAtTime(s.time);let l=Math.ceil(o)-o;l=yr(l,1)?0:l;let u=this.frequency.getTimeOfTick(a+l);for(;u<e;){try{n(u,Math.round(this.getTicksAtTime(u)))}catch(t){r=t;break}u+=this.frequency.getDurationOfTicks(1,u)}}if(r)throw r;return this}dispose(){return super.dispose(),this._state.dispose(),this._tickOffset.dispose(),this._ticksAtTime.dispose(),this._secondsAtTime.dispose(),this.frequency.dispose(),this}}class mi extends Jr{constructor(){super(ur(mi.getDefaults(),arguments,["callback","frequency"])),this.name="Clock",this.callback=Ar,this._lastUpdate=0,this._state=new ti("stopped"),this._boundLoop=this._loop.bind(this);const t=ur(mi.getDefaults(),arguments,["callback","frequency"]);this.callback=t.callback,this._tickSource=new fi({context:this.context,frequency:t.frequency,units:t.units}),this._lastUpdate=0,this.frequency=this._tickSource.frequency,Cr(this,"frequency"),this._state.setStateAtTime("stopped",0),this.context.on("tick",this._boundLoop)}static getDefaults(){return Object.assign(Jr.getDefaults(),{callback:Ar,frequency:1,units:"hertz"})}get state(){return this._state.getValueAtTime(this.now())}start(t,e){qs(this.context);const n=this.toSeconds(t);return this.log("start",n),"started"!==this._state.getValueAtTime(n)&&(this._state.setStateAtTime("started",n),this._tickSource.start(n,e),n<this._lastUpdate&&this.emit("start",n,e)),this}stop(t){const e=this.toSeconds(t);return this.log("stop",e),this._state.cancel(e),this._state.setStateAtTime("stopped",e),this._tickSource.stop(e),e<this._lastUpdate&&this.emit("stop",e),this}pause(t){const e=this.toSeconds(t);return"started"===this._state.getValueAtTime(e)&&(this._state.setStateAtTime("paused",e),this._tickSource.pause(e),e<this._lastUpdate&&this.emit("pause",e)),this}get ticks(){return Math.ceil(this.getTicksAtTime(this.now()))}set ticks(t){this._tickSource.ticks=t}get seconds(){return this._tickSource.seconds}set seconds(t){this._tickSource.seconds=t}getSecondsAtTime(t){return this._tickSource.getSecondsAtTime(t)}setTicksAtTime(t,e){return this._tickSource.setTicksAtTime(t,e),this}getTimeOfTick(t,e=this.now()){return this._tickSource.getTimeOfTick(t,e)}getTicksAtTime(t){return this._tickSource.getTicksAtTime(t)}nextTickTime(t,e){const n=this.toSeconds(e),s=this.getTicksAtTime(n);return this._tickSource.getTimeOfTick(s+t,n)}_loop(){const t=this._lastUpdate,e=this.now();this._lastUpdate=e,this.log("loop",t,e),t!==e&&(this._state.forEachBetween(t,e,(t=>{switch(t.state){case"started":const e=this._tickSource.getTicksAtTime(t.time);this.emit("start",t.time,e);break;case"stopped":0!==t.time&&this.emit("stop",t.time);break;case"paused":this.emit("pause",t.time)}})),this._tickSource.forEachTickBetween(t,e,((t,e)=>{this.callback(t,e)})))}getStateAtTime(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)}dispose(){return super.dispose(),this.context.off("tick",this._boundLoop),this._tickSource.dispose(),this._state.dispose(),this}}Tr.mixin(mi);class gi extends ni{constructor(){super(ur(gi.getDefaults(),arguments,["delayTime","maxDelay"])),this.name="Delay";const t=ur(gi.getDefaults(),arguments,["delayTime","maxDelay"]),e=this.toSeconds(t.maxDelay);this._maxDelay=Math.max(e,this.toSeconds(t.delayTime)),this._delayNode=this.input=this.output=this.context.createDelay(e),this.delayTime=new ei({context:this.context,param:this._delayNode.delayTime,units:"time",value:t.delayTime,minValue:0,maxValue:this.maxDelay}),Cr(this,"delayTime")}static getDefaults(){return Object.assign(ni.getDefaults(),{delayTime:0,maxDelay:1})}get maxDelay(){return this._maxDelay}dispose(){return super.dispose(),this._delayNode.disconnect(),this.delayTime.dispose(),this}}function yi(t,e,n=2,s=Or().sampleRate){return er(this,void 0,void 0,(function*(){const r=Or(),i=new $r(n,e,s);Fr(i),yield t(i);const a=i.render();Fr(r);const o=yield a;return new Er(o)}))}class bi extends pr{constructor(){super(),this.name="ToneAudioBuffers",this._buffers=new Map,this._loadingCount=0;const t=ur(bi.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");this.baseUrl=t.baseUrl,Object.keys(t.urls).forEach((e=>{this._loadingCount++;const n=t.urls[e];this.add(e,n,this._bufferLoaded.bind(this,t.onload),t.onerror)}))}static getDefaults(){return{baseUrl:"",onerror:Ar,onload:Ar,urls:{}}}has(t){return this._buffers.has(t.toString())}get(t){return Bs(this.has(t),`ToneAudioBuffers has no buffer named: ${t}`),this._buffers.get(t.toString())}_bufferLoaded(t){this._loadingCount--,0===this._loadingCount&&t&&t()}get loaded(){return Array.from(this._buffers).every((([t,e])=>e.loaded))}add(t,e,n=Ar,s=Ar){return Ps(e)?(this.baseUrl&&"data:audio/"===e.trim().substring(0,11).toLowerCase()&&(this.baseUrl=""),this._buffers.set(t.toString(),new Er(this.baseUrl+e,n,s))):this._buffers.set(t.toString(),new Er(e,n,s)),this}dispose(){return super.dispose(),this._buffers.forEach((t=>t.dispose())),this._buffers.clear(),this}}class xi extends Hr{constructor(){super(...arguments),this.name="MidiClass",this.defaultUnits="midi"}_frequencyToUnits(t){return Br(super._frequencyToUnits(t))}_ticksToUnits(t){return Br(super._ticksToUnits(t))}_beatsToUnits(t){return Br(super._beatsToUnits(t))}_secondsToUnits(t){return Br(super._secondsToUnits(t))}toMidi(){return this.valueOf()}toFrequency(){return qr(this.toMidi())}transpose(t){return new xi(this.context,this.toMidi()+t)}}function vi(t,e){return new xi(Or(),t,e)}class wi extends Zr{constructor(){super(...arguments),this.name="Ticks",this.defaultUnits="i"}_now(){return this.context.transport.ticks}_beatsToUnits(t){return this._getPPQ()*t}_secondsToUnits(t){return Math.floor(t/(60/this._getBpm())*this._getPPQ())}_ticksToUnits(t){return t}toTicks(){return this.valueOf()}toSeconds(){return this.valueOf()/this._getPPQ()*(60/this._getBpm())}}function _i(t,e){return new wi(Or(),t,e)}class ki extends Jr{constructor(){super(...arguments),this.name="Draw",this.expiration=.25,this.anticipation=.008,this._events=new xr,this._boundDrawLoop=this._drawLoop.bind(this),this._animationFrame=-1}schedule(t,e){return this._events.add({callback:t,time:this.toSeconds(e)}),1===this._events.length&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop)),this}cancel(t){return this._events.cancel(this.toSeconds(t)),this}_drawLoop(){const t=this.context.currentTime;for(;this._events.length&&this._events.peek().time-this.anticipation<=t;){const e=this._events.shift();e&&t-e.time<=this.expiration&&e.callback()}this._events.length>0&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop))}dispose(){return super.dispose(),this._events.dispose(),cancelAnimationFrame(this._animationFrame),this}}wr((t=>{t.draw=new ki({context:t})})),kr((t=>{t.draw.dispose()}));class Ti extends pr{constructor(){super(...arguments),this.name="IntervalTimeline",this._root=null,this._length=0}add(t){Bs(Ds(t.time),"Events must have a time property"),Bs(Ds(t.duration),"Events must have a duration parameter"),t.time=t.time.valueOf();let e=new Si(t.time,t.time+t.duration,t);for(null===this._root?this._root=e:this._root.insert(e),this._length++;null!==e;)e.updateHeight(),e.updateMax(),this._rebalance(e),e=e.parent;return this}remove(t){if(null!==this._root){const e=[];this._root.search(t.time,e);for(const n of e)if(n.event===t){this._removeNode(n),this._length--;break}}return this}get length(){return this._length}cancel(t){return this.forEachFrom(t,(t=>this.remove(t))),this}_setRoot(t){this._root=t,null!==this._root&&(this._root.parent=null)}_replaceNodeInParent(t,e){null!==t.parent?(t.isLeftChild()?t.parent.left=e:t.parent.right=e,this._rebalance(t.parent)):this._setRoot(e)}_removeNode(t){if(null===t.left&&null===t.right)this._replaceNodeInParent(t,null);else if(null===t.right)this._replaceNodeInParent(t,t.left);else if(null===t.left)this._replaceNodeInParent(t,t.right);else{let e,n=null;if(t.getBalance()>0)if(null===t.left.right)e=t.left,e.right=t.right,n=e;else{for(e=t.left.right;null!==e.right;)e=e.right;e.parent&&(e.parent.right=e.left,n=e.parent,e.left=t.left,e.right=t.right)}else if(null===t.right.left)e=t.right,e.left=t.left,n=e;else{for(e=t.right.left;null!==e.left;)e=e.left;e.parent&&(e.parent.left=e.right,n=e.parent,e.left=t.left,e.right=t.right)}null!==t.parent?t.isLeftChild()?t.parent.left=e:t.parent.right=e:this._setRoot(e),n&&this._rebalance(n)}t.dispose()}_rotateLeft(t){const e=t.parent,n=t.isLeftChild(),s=t.right;s&&(t.right=s.left,s.left=t),null!==e?n?e.left=s:e.right=s:this._setRoot(s)}_rotateRight(t){const e=t.parent,n=t.isLeftChild(),s=t.left;s&&(t.left=s.right,s.right=t),null!==e?n?e.left=s:e.right=s:this._setRoot(s)}_rebalance(t){const e=t.getBalance();e>1&&t.left?t.left.getBalance()<0?this._rotateLeft(t.left):this._rotateRight(t):e<-1&&t.right&&(t.right.getBalance()>0?this._rotateRight(t.right):this._rotateLeft(t))}get(t){if(null!==this._root){const e=[];if(this._root.search(t,e),e.length>0){let t=e[0];for(let n=1;n<e.length;n++)e[n].low>t.low&&(t=e[n]);return t.event}}return null}forEach(t){if(null!==this._root){const e=[];this._root.traverse((t=>e.push(t))),e.forEach((e=>{e.event&&t(e.event)}))}return this}forEachAtTime(t,e){if(null!==this._root){const n=[];this._root.search(t,n),n.forEach((t=>{t.event&&e(t.event)}))}return this}forEachFrom(t,e){if(null!==this._root){const n=[];this._root.searchAfter(t,n),n.forEach((t=>{t.event&&e(t.event)}))}return this}dispose(){return super.dispose(),null!==this._root&&this._root.traverse((t=>t.dispose())),this._root=null,this}}class Si{constructor(t,e,n){this._left=null,this._right=null,this.parent=null,this.height=0,this.event=n,this.low=t,this.high=e,this.max=this.high}insert(t){t.low<=this.low?null===this.left?this.left=t:this.left.insert(t):null===this.right?this.right=t:this.right.insert(t)}search(t,e){t>this.max||(null!==this.left&&this.left.search(t,e),this.low<=t&&this.high>t&&e.push(this),this.low>t||null!==this.right&&this.right.search(t,e))}searchAfter(t,e){this.low>=t&&(e.push(this),null!==this.left&&this.left.searchAfter(t,e)),null!==this.right&&this.right.searchAfter(t,e)}traverse(t){t(this),null!==this.left&&this.left.traverse(t),null!==this.right&&this.right.traverse(t)}updateHeight(){null!==this.left&&null!==this.right?this.height=Math.max(this.left.height,this.right.height)+1:null!==this.right?this.height=this.right.height+1:null!==this.left?this.height=this.left.height+1:this.height=0}updateMax(){this.max=this.high,null!==this.left&&(this.max=Math.max(this.max,this.left.max)),null!==this.right&&(this.max=Math.max(this.max,this.right.max))}getBalance(){let t=0;return null!==this.left&&null!==this.right?t=this.left.height-this.right.height:null!==this.left?t=this.left.height+1:null!==this.right&&(t=-(this.right.height+1)),t}isLeftChild(){return null!==this.parent&&this.parent.left===this}get left(){return this._left}set left(t){this._left=t,null!==t&&(t.parent=this),this.updateHeight(),this.updateMax()}get right(){return this._right}set right(t){this._right=t,null!==t&&(t.parent=this),this.updateHeight(),this.updateMax()}dispose(){this.parent=null,this._left=null,this._right=null,this.event=null}}class Ii extends ni{constructor(){super(ur(Ii.getDefaults(),arguments,["volume"])),this.name="Volume";const t=ur(Ii.getDefaults(),arguments,["volume"]);this.input=this.output=new oi({context:this.context,gain:t.volume,units:"decibels"}),this.volume=this.output.gain,Cr(this,"volume"),this._unmutedVolume=t.volume,this.mute=t.mute}static getDefaults(){return Object.assign(ni.getDefaults(),{mute:!1,volume:0})}get mute(){return this.volume.value===-1/0}set mute(t){!this.mute&&t?(this._unmutedVolume=this.volume.value,this.volume.value=-1/0):this.mute&&!t&&(this.volume.value=this._unmutedVolume)}dispose(){return super.dispose(),this.input.dispose(),this.volume.dispose(),this}}class Ci extends ni{constructor(){super(ur(Ci.getDefaults(),arguments)),this.name="Destination",this.input=new Ii({context:this.context}),this.output=new oi({context:this.context}),this.volume=this.input.volume;const t=ur(Ci.getDefaults(),arguments);si(this.input,this.output,this.context.rawContext.destination),this.mute=t.mute,this._internalChannels=[this.input,this.context.rawContext.destination,this.output]}static getDefaults(){return Object.assign(ni.getDefaults(),{mute:!1,volume:0})}get mute(){return this.input.mute}set mute(t){this.input.mute=t}chain(...t){return this.input.disconnect(),t.unshift(this.input),t.push(this.output),si(...t),this}get maxChannelCount(){return this.context.rawContext.destination.maxChannelCount}dispose(){return super.dispose(),this.volume.dispose(),this}}wr((t=>{t.destination=new Ci({context:t})})),kr((t=>{t.destination.dispose()}));class Ni extends pr{constructor(t){super(),this.name="TimelineValue",this._timeline=new xr({memory:10}),this._initialValue=t}set(t,e){return this._timeline.add({value:t,time:e}),this}get(t){const e=this._timeline.get(t);return e?e.value:this._initialValue}}class Ai extends ni{constructor(){super(Object.assign(ur(Ai.getDefaults(),arguments,["context"])))}connect(t,e=0,n=0){return hi(this,t,e,n),this}}class Ei extends Ai{constructor(){super(Object.assign(ur(Ei.getDefaults(),arguments,["mapping","length"]))),this.name="WaveShaper",this._shaper=this.context.createWaveShaper(),this.input=this._shaper,this.output=this._shaper;const t=ur(Ei.getDefaults(),arguments,["mapping","length"]);zs(t.mapping)||t.mapping instanceof Float32Array?this.curve=Float32Array.from(t.mapping):Os(t.mapping)&&this.setMap(t.mapping,t.length)}static getDefaults(){return Object.assign(ci.getDefaults(),{length:1024})}setMap(t,e=1024){const n=new Float32Array(e);for(let s=0,r=e;s<r;s++){const e=s/(r-1)*2-1;n[s]=t(e,s)}return this.curve=n,this}get curve(){return this._shaper.curve}set curve(t){this._shaper.curve=t}get oversample(){return this._shaper.oversample}set oversample(t){Bs(["none","2x","4x"].some((e=>e.includes(t))),"oversampling must be either 'none', '2x', or '4x'"),this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.disconnect(),this}}class $i extends Ai{constructor(){super(Object.assign(ur($i.getDefaults(),arguments,["value"]))),this.name="Pow";const t=ur($i.getDefaults(),arguments,["value"]);this._exponentScaler=this.input=this.output=new Ei({context:this.context,mapping:this._expFunc(t.value),length:8192}),this._exponent=t.value}static getDefaults(){return Object.assign(Ai.getDefaults(),{value:1})}_expFunc(t){return e=>Math.pow(Math.abs(e),t)}get value(){return this._exponent}set value(t){this._exponent=t,this._exponentScaler.setMap(this._expFunc(this._exponent))}dispose(){return super.dispose(),this._exponentScaler.dispose(),this}}class Ri{constructor(t,e){this.id=Ri._eventId++,this._remainderTime=0;const n=Object.assign(Ri.getDefaults(),e);this.transport=t,this.callback=n.callback,this._once=n.once,this.time=Math.floor(n.time),this._remainderTime=n.time-this.time}static getDefaults(){return{callback:Ar,once:!1,time:0}}get floatTime(){return this.time+this._remainderTime}invoke(t){if(this.callback){const e=this.transport.bpm.getDurationOfTicks(1,t);this.callback(t+this._remainderTime*e),this._once&&this.transport.clear(this.id)}}dispose(){return this.callback=void 0,this}}Ri._eventId=0;class Di extends Ri{constructor(t,e){super(t,e),this._currentId=-1,this._nextId=-1,this._nextTick=this.time,this._boundRestart=this._restart.bind(this);const n=Object.assign(Di.getDefaults(),e);this.duration=n.duration,this._interval=n.interval,this._nextTick=n.time,this.transport.on("start",this._boundRestart),this.transport.on("loopStart",this._boundRestart),this.transport.on("ticks",this._boundRestart),this.context=this.transport.context,this._restart()}static getDefaults(){return Object.assign({},Ri.getDefaults(),{duration:1/0,interval:1,once:!1})}invoke(t){this._createEvents(t),super.invoke(t)}_createEvent(){return gr(this._nextTick,this.floatTime+this.duration)?this.transport.scheduleOnce(this.invoke.bind(this),new wi(this.context,this._nextTick).toSeconds()):-1}_createEvents(t){gr(this._nextTick+this._interval,this.floatTime+this.duration)&&(this._nextTick+=this._interval,this._currentId=this._nextId,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new wi(this.context,this._nextTick).toSeconds()))}_restart(t){this.transport.clear(this._currentId),this.transport.clear(this._nextId),this._nextTick=this.floatTime;const e=this.transport.getTicksAtTime(t);fr(e,this.time)&&(this._nextTick=this.floatTime+Math.ceil((e-this.floatTime)/this._interval)*this._interval),this._currentId=this._createEvent(),this._nextTick+=this._interval,this._nextId=this._createEvent()}dispose(){return super.dispose(),this.transport.clear(this._currentId),this.transport.clear(this._nextId),this.transport.off("start",this._boundRestart),this.transport.off("loopStart",this._boundRestart),this.transport.off("ticks",this._boundRestart),this}}class Oi extends Jr{constructor(){super(ur(Oi.getDefaults(),arguments)),this.name="Transport",this._loop=new Ni(!1),this._loopStart=0,this._loopEnd=0,this._scheduledEvents={},this._timeline=new xr,this._repeatedEvents=new Ti,this._syncedSignals=[],this._swingAmount=0;const t=ur(Oi.getDefaults(),arguments);this._ppq=t.ppq,this._clock=new mi({callback:this._processTick.bind(this),context:this.context,frequency:0,units:"bpm"}),this._bindClockEvents(),this.bpm=this._clock.frequency,this._clock.frequency.multiplier=t.ppq,this.bpm.setValueAtTime(t.bpm,0),Cr(this,"bpm"),this._timeSignature=t.timeSignature,this._swingTicks=t.ppq/2}static getDefaults(){return Object.assign(Jr.getDefaults(),{bpm:120,loopEnd:"4m",loopStart:0,ppq:192,swing:0,swingSubdivision:"8n",timeSignature:4})}_processTick(t,e){if(this._loop.get(t)&&e>=this._loopEnd&&(this.emit("loopEnd",t),this._clock.setTicksAtTime(this._loopStart,t),e=this._loopStart,this.emit("loopStart",t,this._clock.getSecondsAtTime(t)),this.emit("loop",t)),this._swingAmount>0&&e%this._ppq!=0&&e%(2*this._swingTicks)!=0){const n=e%(2*this._swingTicks)/(2*this._swingTicks),s=Math.sin(n*Math.PI)*this._swingAmount;t+=new wi(this.context,2*this._swingTicks/3).toSeconds()*s}js(!0),this._timeline.forEachAtTime(e,(e=>e.invoke(t))),js(!1)}schedule(t,e){const n=new Ri(this,{callback:t,time:new Zr(this.context,e).toTicks()});return this._addEvent(n,this._timeline)}scheduleRepeat(t,e,n,s=1/0){const r=new Di(this,{callback:t,duration:new Gr(this.context,s).toTicks(),interval:new Gr(this.context,e).toTicks(),time:new Zr(this.context,n).toTicks()});return this._addEvent(r,this._repeatedEvents)}scheduleOnce(t,e){const n=new Ri(this,{callback:t,once:!0,time:new Zr(this.context,e).toTicks()});return this._addEvent(n,this._timeline)}clear(t){if(this._scheduledEvents.hasOwnProperty(t)){const e=this._scheduledEvents[t.toString()];e.timeline.remove(e.event),e.event.dispose(),delete this._scheduledEvents[t.toString()]}return this}_addEvent(t,e){return this._scheduledEvents[t.id.toString()]={event:t,timeline:e},e.add(t),t.id}cancel(t=0){const e=this.toTicks(t);return this._timeline.forEachFrom(e,(t=>this.clear(t.id))),this._repeatedEvents.forEachFrom(e,(t=>this.clear(t.id))),this}_bindClockEvents(){this._clock.on("start",((t,e)=>{e=new wi(this.context,e).toSeconds(),this.emit("start",t,e)})),this._clock.on("stop",(t=>{this.emit("stop",t)})),this._clock.on("pause",(t=>{this.emit("pause",t)}))}get state(){return this._clock.getStateAtTime(this.now())}start(t,e){let n;return this.context.resume(),Ds(e)&&(n=this.toTicks(e)),this._clock.start(t,n),this}stop(t){return this._clock.stop(t),this}pause(t){return this._clock.pause(t),this}toggle(t){return t=this.toSeconds(t),"started"!==this._clock.getStateAtTime(t)?this.start(t):this.stop(t),this}get timeSignature(){return this._timeSignature}set timeSignature(t){zs(t)&&(t=t[0]/t[1]*4),this._timeSignature=t}get loopStart(){return new Gr(this.context,this._loopStart,"i").toSeconds()}set loopStart(t){this._loopStart=this.toTicks(t)}get loopEnd(){return new Gr(this.context,this._loopEnd,"i").toSeconds()}set loopEnd(t){this._loopEnd=this.toTicks(t)}get loop(){return this._loop.get(this.now())}set loop(t){this._loop.set(t,this.now())}setLoopPoints(t,e){return this.loopStart=t,this.loopEnd=e,this}get swing(){return this._swingAmount}set swing(t){this._swingAmount=t}get swingSubdivision(){return new wi(this.context,this._swingTicks).toNotation()}set swingSubdivision(t){this._swingTicks=this.toTicks(t)}get position(){const t=this.now(),e=this._clock.getTicksAtTime(t);return new wi(this.context,e).toBarsBeatsSixteenths()}set position(t){const e=this.toTicks(t);this.ticks=e}get seconds(){return this._clock.seconds}set seconds(t){const e=this.now(),n=this._clock.frequency.timeToTicks(t,e);this.ticks=n}get progress(){if(this.loop){const t=this.now();return(this._clock.getTicksAtTime(t)-this._loopStart)/(this._loopEnd-this._loopStart)}return 0}get ticks(){return this._clock.ticks}set ticks(t){if(this._clock.ticks!==t){const e=this.now();if("started"===this.state){const n=this._clock.getTicksAtTime(e),s=e+this._clock.frequency.getDurationOfTicks(Math.ceil(n)-n,e);this.emit("stop",s),this._clock.setTicksAtTime(t,s),this.emit("start",s,this._clock.getSecondsAtTime(s))}else this.emit("ticks",e),this._clock.setTicksAtTime(t,e)}}getTicksAtTime(t){return this._clock.getTicksAtTime(t)}getSecondsAtTime(t){return this._clock.getSecondsAtTime(t)}get PPQ(){return this._clock.frequency.multiplier}set PPQ(t){this._clock.frequency.multiplier=t}nextSubdivision(t){if(t=this.toTicks(t),"started"!==this.state)return 0;{const e=this.now(),n=t-this.getTicksAtTime(e)%t;return this._clock.nextTickTime(n,e)}}syncSignal(t,e){const n=this.now();let s=this.bpm,r=1/(60/s.getValueAtTime(n)/this.PPQ),i=[];if("time"===t.units){const t=1/64/r,e=new oi(t),n=new $i(-1),a=new oi(t);s.chain(e,n,a),s=a,r=1/r,i=[e,n,a]}e||(e=0!==t.getValueAtTime(n)?t.getValueAtTime(n)/r:0);const a=new oi(e);return s.connect(a),a.connect(t._param),i.push(a),this._syncedSignals.push({initial:t.value,nodes:i,signal:t}),t.value=0,this}unsyncSignal(t){for(let e=this._syncedSignals.length-1;e>=0;e--){const n=this._syncedSignals[e];n.signal===t&&(n.nodes.forEach((t=>t.dispose())),n.signal.value=n.initial,this._syncedSignals.splice(e,1))}return this}dispose(){return super.dispose(),this._clock.dispose(),Nr(this,"bpm"),this._timeline.dispose(),this._repeatedEvents.dispose(),this}}Tr.mixin(Oi),wr((t=>{t.transport=new Oi({context:t})})),kr((t=>{t.transport.dispose()}));class Fi extends ni{constructor(t){super(t),this.input=void 0,this._state=new ti("stopped"),this._synced=!1,this._scheduled=[],this._syncedStart=Ar,this._syncedStop=Ar,this._state.memory=100,this._state.increasing=!0,this._volume=this.output=new Ii({context:this.context,mute:t.mute,volume:t.volume}),this.volume=this._volume.volume,Cr(this,"volume"),this.onstop=t.onstop}static getDefaults(){return Object.assign(ni.getDefaults(),{mute:!1,onstop:Ar,volume:0})}get state(){return this._synced?"started"===this.context.transport.state?this._state.getValueAtTime(this.context.transport.seconds):"stopped":this._state.getValueAtTime(this.now())}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}_clampToCurrentTime(t){return this._synced?t:Math.max(t,this.context.currentTime)}start(t,e,n){let s=Rs(t)&&this._synced?this.context.transport.seconds:this.toSeconds(t);if(s=this._clampToCurrentTime(s),this._synced||"started"!==this._state.getValueAtTime(s))if(this.log("start",s),this._state.setStateAtTime("started",s),this._synced){const t=this._state.get(s);t&&(t.offset=this.toSeconds(cr(e,0)),t.duration=n?this.toSeconds(n):void 0);const r=this.context.transport.schedule((t=>{this._start(t,e,n)}),s);this._scheduled.push(r),"started"===this.context.transport.state&&this.context.transport.getSecondsAtTime(this.immediate())>s&&this._syncedStart(this.now(),this.context.transport.seconds)}else qs(this.context),this._start(s,e,n);else Bs(fr(s,this._state.get(s).time),"Start time must be strictly greater than previous start time"),this._state.cancel(s),this._state.setStateAtTime("started",s),this.log("restart",s),this.restart(s,e,n);return this}stop(t){let e=Rs(t)&&this._synced?this.context.transport.seconds:this.toSeconds(t);if(e=this._clampToCurrentTime(e),"started"===this._state.getValueAtTime(e)||Ds(this._state.getNextState("started",e))){if(this.log("stop",e),this._synced){const t=this.context.transport.schedule(this._stop.bind(this),e);this._scheduled.push(t)}else this._stop(e);this._state.cancel(e),this._state.setStateAtTime("stopped",e)}return this}restart(t,e,n){return t=this.toSeconds(t),"started"===this._state.getValueAtTime(t)&&(this._state.cancel(t),this._restart(t,e,n)),this}sync(){return this._synced||(this._synced=!0,this._syncedStart=(t,e)=>{if(fr(e,0)){const n=this._state.get(e);if(n&&"started"===n.state&&n.time!==e){const s=e-this.toSeconds(n.time);let r;n.duration&&(r=this.toSeconds(n.duration)-s),this._start(t,this.toSeconds(n.offset)+s,r)}}},this._syncedStop=t=>{const e=this.context.transport.getSecondsAtTime(Math.max(t-this.sampleTime,0));"started"===this._state.getValueAtTime(e)&&this._stop(t)},this.context.transport.on("start",this._syncedStart),this.context.transport.on("loopStart",this._syncedStart),this.context.transport.on("stop",this._syncedStop),this.context.transport.on("pause",this._syncedStop),this.context.transport.on("loopEnd",this._syncedStop)),this}unsync(){return this._synced&&(this.context.transport.off("stop",this._syncedStop),this.context.transport.off("pause",this._syncedStop),this.context.transport.off("loopEnd",this._syncedStop),this.context.transport.off("start",this._syncedStart),this.context.transport.off("loopStart",this._syncedStart)),this._synced=!1,this._scheduled.forEach((t=>this.context.transport.clear(t))),this._scheduled=[],this._state.cancel(0),this._stop(0),this}dispose(){return super.dispose(),this.onstop=Ar,this.unsync(),this._volume.dispose(),this._state.dispose(),this}}class Mi extends li{constructor(){super(ur(Mi.getDefaults(),arguments,["url","onload"])),this.name="ToneBufferSource",this._source=this.context.createBufferSource(),this._internalChannels=[this._source],this._sourceStarted=!1,this._sourceStopped=!1;const t=ur(Mi.getDefaults(),arguments,["url","onload"]);ri(this._source,this._gainNode),this._source.onended=()=>this._stopSource(),this.playbackRate=new ei({context:this.context,param:this._source.playbackRate,units:"positive",value:t.playbackRate}),this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this._buffer=new Er(t.url,t.onload,t.onerror),this._internalChannels.push(this._source)}static getDefaults(){return Object.assign(li.getDefaults(),{url:new Er,loop:!1,loopEnd:0,loopStart:0,onload:Ar,onerror:Ar,playbackRate:1})}get fadeIn(){return this._fadeIn}set fadeIn(t){this._fadeIn=t}get fadeOut(){return this._fadeOut}set fadeOut(t){this._fadeOut=t}get curve(){return this._curve}set curve(t){this._curve=t}start(t,e,n,s=1){Bs(this.buffer.loaded,"buffer is either not set or not loaded");const r=this.toSeconds(t);this._startGain(r,s),e=this.loop?cr(e,this.loopStart):cr(e,0);let i=Math.max(this.toSeconds(e),0);if(this.loop){const t=this.toSeconds(this.loopEnd)||this.buffer.duration,e=this.toSeconds(this.loopStart),n=t-e;mr(i,t)&&(i=(i-e)%n+e),yr(i,this.buffer.duration)&&(i=0)}if(this._source.buffer=this.buffer.get(),this._source.loopEnd=this.toSeconds(this.loopEnd)||this.buffer.duration,gr(i,this.buffer.duration)&&(this._sourceStarted=!0,this._source.start(r,i)),Ds(n)){let t=this.toSeconds(n);t=Math.max(t,0),this.stop(r+t)}return this}_stopSource(t){!this._sourceStopped&&this._sourceStarted&&(this._sourceStopped=!0,this._source.stop(this.toSeconds(t)),this._onended())}get loopStart(){return this._source.loopStart}set loopStart(t){this._source.loopStart=this.toSeconds(t)}get loopEnd(){return this._source.loopEnd}set loopEnd(t){this._source.loopEnd=this.toSeconds(t)}get buffer(){return this._buffer}set buffer(t){this._buffer.set(t)}get loop(){return this._source.loop}set loop(t){this._source.loop=t,this._sourceStarted&&this.cancelStop()}dispose(){return super.dispose(),this._source.onended=null,this._source.disconnect(),this._buffer.dispose(),this.playbackRate.dispose(),this}}class Li extends Fi{constructor(){super(ur(Li.getDefaults(),arguments,["type"])),this.name="Noise",this._source=null;const t=ur(Li.getDefaults(),arguments,["type"]);this._playbackRate=t.playbackRate,this.type=t.type,this._fadeIn=t.fadeIn,this._fadeOut=t.fadeOut}static getDefaults(){return Object.assign(Fi.getDefaults(),{fadeIn:0,fadeOut:0,playbackRate:1,type:"white"})}get type(){return this._type}set type(t){if(Bs(t in Vi,"Noise: invalid type: "+t),this._type!==t&&(this._type=t,"started"===this.state)){const t=this.now();this._stop(t),this._start(t)}}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t,this._source&&(this._source.playbackRate.value=t)}_start(t){const e=Vi[this._type];this._source=new Mi({url:e,context:this.context,fadeIn:this._fadeIn,fadeOut:this._fadeOut,loop:!0,onended:()=>this.onstop(this),playbackRate:this._playbackRate}).connect(this.output),this._source.start(this.toSeconds(t),Math.random()*(e.duration-.001))}_stop(t){this._source&&(this._source.stop(this.toSeconds(t)),this._source=null)}get fadeIn(){return this._fadeIn}set fadeIn(t){this._fadeIn=t,this._source&&(this._source.fadeIn=this._fadeIn)}get fadeOut(){return this._fadeOut}set fadeOut(t){this._fadeOut=t,this._source&&(this._source.fadeOut=this._fadeOut)}_restart(t){this._stop(t),this._start(t)}dispose(){return super.dispose(),this._source&&this._source.disconnect(),this}}const zi=220500,Pi={brown:null,pink:null,white:null},Vi={get brown(){if(!Pi.brown){const t=[];for(let e=0;e<2;e++){const n=new Float32Array(zi);t[e]=n;let s=0;for(let t=0;t<zi;t++){const e=2*Math.random()-1;n[t]=(s+.02*e)/1.02,s=n[t],n[t]*=3.5}}Pi.brown=(new Er).fromArray(t)}return Pi.brown},get pink(){if(!Pi.pink){const t=[];for(let e=0;e<2;e++){const n=new Float32Array(zi);let s,r,i,a,o,l,u;t[e]=n,s=r=i=a=o=l=u=0;for(let t=0;t<zi;t++){const e=2*Math.random()-1;s=.99886*s+.0555179*e,r=.99332*r+.0750759*e,i=.969*i+.153852*e,a=.8665*a+.3104856*e,o=.55*o+.5329522*e,l=-.7616*l-.016898*e,n[t]=s+r+i+a+o+l+u+.5362*e,n[t]*=.11,u=.115926*e}}Pi.pink=(new Er).fromArray(t)}return Pi.pink},get white(){if(!Pi.white){const t=[];for(let e=0;e<2;e++){const n=new Float32Array(zi);t[e]=n;for(let t=0;t<zi;t++)n[t]=2*Math.random()-1}Pi.white=(new Er).fromArray(t)}return Pi.white}};class Bi extends ni{constructor(){super(ur(Bi.getDefaults(),arguments,["volume"])),this.name="UserMedia";const t=ur(Bi.getDefaults(),arguments,["volume"]);this._volume=this.output=new Ii({context:this.context,volume:t.volume}),this.volume=this._volume.volume,Cr(this,"volume"),this.mute=t.mute}static getDefaults(){return Object.assign(ni.getDefaults(),{mute:!1,volume:0})}open(t){return er(this,void 0,void 0,(function*(){Bs(Bi.supported,"UserMedia is not supported"),"started"===this.state&&this.close();const e=yield Bi.enumerateDevices();Fs(t)?this._device=e[t]:(this._device=e.find((e=>e.label===t||e.deviceId===t)),!this._device&&e.length>0&&(this._device=e[0]),Bs(Ds(this._device),`No matching device ${t}`));const n={audio:{echoCancellation:!1,sampleRate:this.context.sampleRate,noiseSuppression:!1,mozNoiseSuppression:!1}};this._device&&(n.audio.deviceId=this._device.deviceId);const s=yield navigator.mediaDevices.getUserMedia(n);if(!this._stream){this._stream=s;const t=this.context.createMediaStreamSource(s);ri(t,this.output),this._mediaStream=t}return this}))}close(){return this._stream&&this._mediaStream&&(this._stream.getAudioTracks().forEach((t=>{t.stop()})),this._stream=void 0,this._mediaStream.disconnect(),this._mediaStream=void 0),this._device=void 0,this}static enumerateDevices(){return er(this,void 0,void 0,(function*(){return(yield navigator.mediaDevices.enumerateDevices()).filter((t=>"audioinput"===t.kind))}))}get state(){return this._stream&&this._stream.active?"started":"stopped"}get deviceId(){return this._device?this._device.deviceId:void 0}get groupId(){return this._device?this._device.groupId:void 0}get label(){return this._device?this._device.label:void 0}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}dispose(){return super.dispose(),this.close(),this._volume.dispose(),this.volume.dispose(),this}static get supported(){return Ds(navigator.mediaDevices)&&Ds(navigator.mediaDevices.getUserMedia)}}function Wi(t,e){return er(this,void 0,void 0,(function*(){const n=e/t.context.sampleRate,s=new $r(1,n,t.context.sampleRate);return new t.constructor(Object.assign(t.get(),{frequency:2/n,detune:0,context:s})).toDestination().start(0),(yield s.render()).getChannelData(0)}))}class qi extends li{constructor(){super(ur(qi.getDefaults(),arguments,["frequency","type"])),this.name="ToneOscillatorNode",this._oscillator=this.context.createOscillator(),this._internalChannels=[this._oscillator];const t=ur(qi.getDefaults(),arguments,["frequency","type"]);ri(this._oscillator,this._gainNode),this.type=t.type,this.frequency=new ei({context:this.context,param:this._oscillator.frequency,units:"frequency",value:t.frequency}),this.detune=new ei({context:this.context,param:this._oscillator.detune,units:"cents",value:t.detune}),Cr(this,["frequency","detune"])}static getDefaults(){return Object.assign(li.getDefaults(),{detune:0,frequency:440,type:"sine"})}start(t){const e=this.toSeconds(t);return this.log("start",e),this._startGain(e),this._oscillator.start(e),this}_stopSource(t){this._oscillator.stop(t)}setPeriodicWave(t){return this._oscillator.setPeriodicWave(t),this}get type(){return this._oscillator.type}set type(t){this._oscillator.type=t}dispose(){return super.dispose(),"started"===this.state&&this.stop(),this._oscillator.disconnect(),this.frequency.dispose(),this.detune.dispose(),this}}class Ui extends Fi{constructor(){super(ur(Ui.getDefaults(),arguments,["frequency","type"])),this.name="Oscillator",this._oscillator=null;const t=ur(Ui.getDefaults(),arguments,["frequency","type"]);this.frequency=new ci({context:this.context,units:"frequency",value:t.frequency}),Cr(this,"frequency"),this.detune=new ci({context:this.context,units:"cents",value:t.detune}),Cr(this,"detune"),this._partials=t.partials,this._partialCount=t.partialCount,this._type=t.type,t.partialCount&&"custom"!==t.type&&(this._type=this.baseType+t.partialCount.toString()),this.phase=t.phase}static getDefaults(){return Object.assign(Fi.getDefaults(),{detune:0,frequency:440,partialCount:0,partials:[],phase:0,type:"sine"})}_start(t){const e=this.toSeconds(t),n=new qi({context:this.context,onended:()=>this.onstop(this)});this._oscillator=n,this._wave?this._oscillator.setPeriodicWave(this._wave):this._oscillator.type=this._type,this._oscillator.connect(this.output),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.start(e)}_stop(t){const e=this.toSeconds(t);this._oscillator&&this._oscillator.stop(e)}_restart(t){const e=this.toSeconds(t);return this.log("restart",e),this._oscillator&&this._oscillator.cancelStop(),this._state.cancel(e),this}syncFrequency(){return this.context.transport.syncSignal(this.frequency),this}unsyncFrequency(){return this.context.transport.unsyncSignal(this.frequency),this}_getCachedPeriodicWave(){if("custom"===this._type)return Ui._periodicWaveCache.find((t=>{return t.phase===this._phase&&(e=t.partials,n=this._partials,e.length===n.length&&e.every(((t,e)=>n[e]===t)));var e,n}));{const t=Ui._periodicWaveCache.find((t=>t.type===this._type&&t.phase===this._phase));return this._partialCount=t?t.partialCount:this._partialCount,t}}get type(){return this._type}set type(t){this._type=t;const e=-1!==["sine","square","sawtooth","triangle"].indexOf(t);if(0===this._phase&&e)this._wave=void 0,this._partialCount=0,null!==this._oscillator&&(this._oscillator.type=t);else{const e=this._getCachedPeriodicWave();if(Ds(e)){const{partials:t,wave:n}=e;this._wave=n,this._partials=t,null!==this._oscillator&&this._oscillator.setPeriodicWave(this._wave)}else{const[e,n]=this._getRealImaginary(t,this._phase),s=this.context.createPeriodicWave(e,n);this._wave=s,null!==this._oscillator&&this._oscillator.setPeriodicWave(this._wave),Ui._periodicWaveCache.push({imag:n,partialCount:this._partialCount,partials:this._partials,phase:this._phase,real:e,type:this._type,wave:this._wave}),Ui._periodicWaveCache.length>100&&Ui._periodicWaveCache.shift()}}}get baseType(){return this._type.replace(this.partialCount.toString(),"")}set baseType(t){this.partialCount&&"custom"!==this._type&&"custom"!==t?this.type=t+this.partialCount:this.type=t}get partialCount(){return this._partialCount}set partialCount(t){Ws(t,0);let e=this._type;const n=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);if(n&&(e=n[1]),"custom"!==this._type)this.type=0===t?e:e+t.toString();else{const e=new Float32Array(t);this._partials.forEach(((t,n)=>e[n]=t)),this._partials=Array.from(e),this.type=this._type}}_getRealImaginary(t,e){let n=2048;const s=new Float32Array(n),r=new Float32Array(n);let i=1;if("custom"===t){if(i=this._partials.length+1,this._partialCount=this._partials.length,n=i,0===this._partials.length)return[s,r]}else{const e=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(t);e?(i=parseInt(e[2],10)+1,this._partialCount=parseInt(e[2],10),t=e[1],i=Math.max(i,2),n=i):this._partialCount=0,this._partials=[]}for(let a=1;a<n;++a){const n=2/(a*Math.PI);let o;switch(t){case"sine":o=a<=i?1:0,this._partials[a-1]=o;break;case"square":o=1&a?2*n:0,this._partials[a-1]=o;break;case"sawtooth":o=n*(1&a?1:-1),this._partials[a-1]=o;break;case"triangle":o=1&a?n*n*2*(a-1>>1&1?-1:1):0,this._partials[a-1]=o;break;case"custom":o=this._partials[a-1];break;default:throw new TypeError("Oscillator: invalid type: "+t)}0!==o?(s[a]=-o*Math.sin(e*a),r[a]=o*Math.cos(e*a)):(s[a]=0,r[a]=0)}return[s,r]}_inverseFFT(t,e,n){let s=0;const r=t.length;for(let i=0;i<r;i++)s+=t[i]*Math.cos(i*n)+e[i]*Math.sin(i*n);return s}getInitialValue(){const[t,e]=this._getRealImaginary(this._type,0);let n=0;const s=2*Math.PI;for(let r=0;r<32;r++)n=Math.max(this._inverseFFT(t,e,r/32*s),n);return br(-this._inverseFFT(t,e,this._phase)/n,-1,1)}get partials(){return this._partials.slice(0,this.partialCount)}set partials(t){this._partials=t,this._partialCount=this._partials.length,t.length&&(this.type="custom")}get phase(){return this._phase*(180/Math.PI)}set phase(t){this._phase=t*Math.PI/180,this.type=this._type}asArray(t=1024){return er(this,void 0,void 0,(function*(){return Wi(this,t)}))}dispose(){return super.dispose(),null!==this._oscillator&&this._oscillator.dispose(),this._wave=void 0,this.frequency.dispose(),this.detune.dispose(),this}}Ui._periodicWaveCache=[];class Gi extends Ai{constructor(){super(...arguments),this.name="AudioToGain",this._norm=new Ei({context:this.context,mapping:t=>(t+1)/2}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class ji extends ci{constructor(){super(Object.assign(ur(ji.getDefaults(),arguments,["value"]))),this.name="Multiply",this.override=!1;const t=ur(ji.getDefaults(),arguments,["value"]);this._mult=this.input=this.output=new oi({context:this.context,minValue:t.minValue,maxValue:t.maxValue}),this.factor=this._param=this._mult.gain,this.factor.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(ci.getDefaults(),{value:0})}dispose(){return super.dispose(),this._mult.dispose(),this}}class Hi extends Fi{constructor(){super(ur(Hi.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="AMOscillator",this._modulationScale=new Gi({context:this.context}),this._modulationNode=new oi({context:this.context});const t=ur(Hi.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new Ui({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase,type:t.type}),this.frequency=this._carrier.frequency,this.detune=this._carrier.detune,this._modulator=new Ui({context:this.context,phase:t.phase,type:t.modulationType}),this.harmonicity=new ji({context:this.context,units:"positive",value:t.harmonicity}),this.frequency.chain(this.harmonicity,this._modulator.frequency),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output),Cr(this,["frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(Ui.getDefaults(),{harmonicity:1,modulationType:"square"})}_start(t){this._modulator.start(t),this._carrier.start(t)}_stop(t){this._modulator.stop(t),this._carrier.stop(t)}_restart(t){this._modulator.restart(t),this._carrier.restart(t)}get type(){return this._carrier.type}set type(t){this._carrier.type=t}get baseType(){return this._carrier.baseType}set baseType(t){this._carrier.baseType=t}get partialCount(){return this._carrier.partialCount}set partialCount(t){this._carrier.partialCount=t}get modulationType(){return this._modulator.type}set modulationType(t){this._modulator.type=t}get phase(){return this._carrier.phase}set phase(t){this._carrier.phase=t,this._modulator.phase=t}get partials(){return this._carrier.partials}set partials(t){this._carrier.partials=t}asArray(t=1024){return er(this,void 0,void 0,(function*(){return Wi(this,t)}))}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this._modulationScale.dispose(),this}}class Xi extends Fi{constructor(){super(ur(Xi.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="FMOscillator",this._modulationNode=new oi({context:this.context,gain:0});const t=ur(Xi.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new Ui({context:this.context,detune:t.detune,frequency:0,onstop:()=>this.onstop(this),phase:t.phase,type:t.type}),this.detune=this._carrier.detune,this.frequency=new ci({context:this.context,units:"frequency",value:t.frequency}),this._modulator=new Ui({context:this.context,phase:t.phase,type:t.modulationType}),this.harmonicity=new ji({context:this.context,units:"positive",value:t.harmonicity}),this.modulationIndex=new ji({context:this.context,units:"positive",value:t.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output),this.detune.connect(this._modulator.detune),Cr(this,["modulationIndex","frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(Ui.getDefaults(),{harmonicity:1,modulationIndex:2,modulationType:"square"})}_start(t){this._modulator.start(t),this._carrier.start(t)}_stop(t){this._modulator.stop(t),this._carrier.stop(t)}_restart(t){return this._modulator.restart(t),this._carrier.restart(t),this}get type(){return this._carrier.type}set type(t){this._carrier.type=t}get baseType(){return this._carrier.baseType}set baseType(t){this._carrier.baseType=t}get partialCount(){return this._carrier.partialCount}set partialCount(t){this._carrier.partialCount=t}get modulationType(){return this._modulator.type}set modulationType(t){this._modulator.type=t}get phase(){return this._carrier.phase}set phase(t){this._carrier.phase=t,this._modulator.phase=t}get partials(){return this._carrier.partials}set partials(t){this._carrier.partials=t}asArray(t=1024){return er(this,void 0,void 0,(function*(){return Wi(this,t)}))}dispose(){return super.dispose(),this.frequency.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this.modulationIndex.dispose(),this}}class Ki extends Fi{constructor(){super(ur(Ki.getDefaults(),arguments,["frequency","width"])),this.name="PulseOscillator",this._widthGate=new oi({context:this.context,gain:0}),this._thresh=new Ei({context:this.context,mapping:t=>t<=0?-1:1});const t=ur(Ki.getDefaults(),arguments,["frequency","width"]);this.width=new ci({context:this.context,units:"audioRange",value:t.width}),this._triangle=new Ui({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase,type:"triangle"}),this.frequency=this._triangle.frequency,this.detune=this._triangle.detune,this._triangle.chain(this._thresh,this.output),this.width.chain(this._widthGate,this._thresh),Cr(this,["width","frequency","detune"])}static getDefaults(){return Object.assign(Fi.getDefaults(),{detune:0,frequency:440,phase:0,type:"pulse",width:.2})}_start(t){t=this.toSeconds(t),this._triangle.start(t),this._widthGate.gain.setValueAtTime(1,t)}_stop(t){t=this.toSeconds(t),this._triangle.stop(t),this._widthGate.gain.cancelScheduledValues(t),this._widthGate.gain.setValueAtTime(0,t)}_restart(t){this._triangle.restart(t),this._widthGate.gain.cancelScheduledValues(t),this._widthGate.gain.setValueAtTime(1,t)}get phase(){return this._triangle.phase}set phase(t){this._triangle.phase=t}get type(){return"pulse"}get baseType(){return"pulse"}get partials(){return[]}get partialCount(){return 0}set carrierType(t){this._triangle.type=t}asArray(t=1024){return er(this,void 0,void 0,(function*(){return Wi(this,t)}))}dispose(){return super.dispose(),this._triangle.dispose(),this.width.dispose(),this._widthGate.dispose(),this._thresh.dispose(),this}}class Yi extends Fi{constructor(){super(ur(Yi.getDefaults(),arguments,["frequency","type","spread"])),this.name="FatOscillator",this._oscillators=[];const t=ur(Yi.getDefaults(),arguments,["frequency","type","spread"]);this.frequency=new ci({context:this.context,units:"frequency",value:t.frequency}),this.detune=new ci({context:this.context,units:"cents",value:t.detune}),this._spread=t.spread,this._type=t.type,this._phase=t.phase,this._partials=t.partials,this._partialCount=t.partialCount,this.count=t.count,Cr(this,["frequency","detune"])}static getDefaults(){return Object.assign(Ui.getDefaults(),{count:3,spread:20,type:"sawtooth"})}_start(t){t=this.toSeconds(t),this._forEach((e=>e.start(t)))}_stop(t){t=this.toSeconds(t),this._forEach((e=>e.stop(t)))}_restart(t){this._forEach((e=>e.restart(t)))}_forEach(t){for(let e=0;e<this._oscillators.length;e++)t(this._oscillators[e],e)}get type(){return this._type}set type(t){this._type=t,this._forEach((e=>e.type=t))}get spread(){return this._spread}set spread(t){if(this._spread=t,this._oscillators.length>1){const e=-t/2,n=t/(this._oscillators.length-1);this._forEach(((t,s)=>t.detune.value=e+n*s))}}get count(){return this._oscillators.length}set count(t){if(Ws(t,1),this._oscillators.length!==t){this._forEach((t=>t.dispose())),this._oscillators=[];for(let e=0;e<t;e++){const n=new Ui({context:this.context,volume:-6-1.1*t,type:this._type,phase:this._phase+e/t*360,partialCount:this._partialCount,onstop:0===e?()=>this.onstop(this):Ar});"custom"===this.type&&(n.partials=this._partials),this.frequency.connect(n.frequency),this.detune.connect(n.detune),n.detune.overridden=!1,n.connect(this.output),this._oscillators[e]=n}this.spread=this._spread,"started"===this.state&&this._forEach((t=>t.start()))}}get phase(){return this._phase}set phase(t){this._phase=t,this._forEach(((t,e)=>t.phase=this._phase+e/this.count*360))}get baseType(){return this._oscillators[0].baseType}set baseType(t){this._forEach((e=>e.baseType=t)),this._type=this._oscillators[0].type}get partials(){return this._oscillators[0].partials}set partials(t){this._partials=t,this._partialCount=this._partials.length,t.length&&(this._type="custom",this._forEach((e=>e.partials=t)))}get partialCount(){return this._oscillators[0].partialCount}set partialCount(t){this._partialCount=t,this._forEach((e=>e.partialCount=t)),this._type=this._oscillators[0].type}asArray(t=1024){return er(this,void 0,void 0,(function*(){return Wi(this,t)}))}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this._forEach((t=>t.dispose())),this}}class Zi extends Fi{constructor(){super(ur(Zi.getDefaults(),arguments,["frequency","modulationFrequency"])),this.name="PWMOscillator",this.sourceType="pwm",this._scale=new ji({context:this.context,value:2});const t=ur(Zi.getDefaults(),arguments,["frequency","modulationFrequency"]);this._pulse=new Ki({context:this.context,frequency:t.modulationFrequency}),this._pulse.carrierType="sine",this.modulationFrequency=this._pulse.frequency,this._modulator=new Ui({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase}),this.frequency=this._modulator.frequency,this.detune=this._modulator.detune,this._modulator.chain(this._scale,this._pulse.width),this._pulse.connect(this.output),Cr(this,["modulationFrequency","frequency","detune"])}static getDefaults(){return Object.assign(Fi.getDefaults(),{detune:0,frequency:440,modulationFrequency:.4,phase:0,type:"pwm"})}_start(t){t=this.toSeconds(t),this._modulator.start(t),this._pulse.start(t)}_stop(t){t=this.toSeconds(t),this._modulator.stop(t),this._pulse.stop(t)}_restart(t){this._modulator.restart(t),this._pulse.restart(t)}get type(){return"pwm"}get baseType(){return"pwm"}get partials(){return[]}get partialCount(){return 0}get phase(){return this._modulator.phase}set phase(t){this._modulator.phase=t}asArray(t=1024){return er(this,void 0,void 0,(function*(){return Wi(this,t)}))}dispose(){return super.dispose(),this._pulse.dispose(),this._scale.dispose(),this._modulator.dispose(),this}}const Qi={am:Hi,fat:Yi,fm:Xi,oscillator:Ui,pulse:Ki,pwm:Zi};class Ji extends Fi{constructor(){super(ur(Ji.getDefaults(),arguments,["frequency","type"])),this.name="OmniOscillator";const t=ur(Ji.getDefaults(),arguments,["frequency","type"]);this.frequency=new ci({context:this.context,units:"frequency",value:t.frequency}),this.detune=new ci({context:this.context,units:"cents",value:t.detune}),Cr(this,["frequency","detune"]),this.set(t)}static getDefaults(){return Object.assign(Ui.getDefaults(),Xi.getDefaults(),Hi.getDefaults(),Yi.getDefaults(),Ki.getDefaults(),Zi.getDefaults())}_start(t){this._oscillator.start(t)}_stop(t){this._oscillator.stop(t)}_restart(t){return this._oscillator.restart(t),this}get type(){let t="";return["am","fm","fat"].some((t=>this._sourceType===t))&&(t=this._sourceType),t+this._oscillator.type}set type(t){"fm"===t.substr(0,2)?(this._createNewOscillator("fm"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(2)):"am"===t.substr(0,2)?(this._createNewOscillator("am"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(2)):"fat"===t.substr(0,3)?(this._createNewOscillator("fat"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(3)):"pwm"===t?(this._createNewOscillator("pwm"),this._oscillator=this._oscillator):"pulse"===t?this._createNewOscillator("pulse"):(this._createNewOscillator("oscillator"),this._oscillator=this._oscillator,this._oscillator.type=t)}get partials(){return this._oscillator.partials}set partials(t){this._getOscType(this._oscillator,"pulse")||this._getOscType(this._oscillator,"pwm")||(this._oscillator.partials=t)}get partialCount(){return this._oscillator.partialCount}set partialCount(t){this._getOscType(this._oscillator,"pulse")||this._getOscType(this._oscillator,"pwm")||(this._oscillator.partialCount=t)}set(t){return Reflect.has(t,"type")&&t.type&&(this.type=t.type),super.set(t),this}_createNewOscillator(t){if(t!==this._sourceType){this._sourceType=t;const e=Qi[t],n=this.now();if(this._oscillator){const t=this._oscillator;t.stop(n),this.context.setTimeout((()=>t.dispose()),this.blockTime)}this._oscillator=new e({context:this.context}),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.connect(this.output),this._oscillator.onstop=()=>this.onstop(this),"started"===this.state&&this._oscillator.start(n)}}get phase(){return this._oscillator.phase}set phase(t){this._oscillator.phase=t}get sourceType(){return this._sourceType}set sourceType(t){let e="sine";"pwm"!==this._oscillator.type&&"pulse"!==this._oscillator.type&&(e=this._oscillator.type),"fm"===t?this.type="fm"+e:"am"===t?this.type="am"+e:"fat"===t?this.type="fat"+e:"oscillator"===t?this.type=e:"pulse"===t?this.type="pulse":"pwm"===t&&(this.type="pwm")}_getOscType(t,e){return t instanceof Qi[e]}get baseType(){return this._oscillator.baseType}set baseType(t){this._getOscType(this._oscillator,"pulse")||this._getOscType(this._oscillator,"pwm")||"pulse"===t||"pwm"===t||(this._oscillator.baseType=t)}get width(){return this._getOscType(this._oscillator,"pulse")?this._oscillator.width:void 0}get count(){return this._getOscType(this._oscillator,"fat")?this._oscillator.count:void 0}set count(t){this._getOscType(this._oscillator,"fat")&&Fs(t)&&(this._oscillator.count=t)}get spread(){return this._getOscType(this._oscillator,"fat")?this._oscillator.spread:void 0}set spread(t){this._getOscType(this._oscillator,"fat")&&Fs(t)&&(this._oscillator.spread=t)}get modulationType(){return this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am")?this._oscillator.modulationType:void 0}set modulationType(t){(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))&&Ps(t)&&(this._oscillator.modulationType=t)}get modulationIndex(){return this._getOscType(this._oscillator,"fm")?this._oscillator.modulationIndex:void 0}get harmonicity(){return this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am")?this._oscillator.harmonicity:void 0}get modulationFrequency(){return this._getOscType(this._oscillator,"pwm")?this._oscillator.modulationFrequency:void 0}asArray(t=1024){return er(this,void 0,void 0,(function*(){return Wi(this,t)}))}dispose(){return super.dispose(),this.detune.dispose(),this.frequency.dispose(),this._oscillator.dispose(),this}}class ta extends ci{constructor(){super(Object.assign(ur(ta.getDefaults(),arguments,["value"]))),this.override=!1,this.name="Add",this._sum=new oi({context:this.context}),this.input=this._sum,this.output=this._sum,this.addend=this._param,si(this._constantSource,this._sum)}static getDefaults(){return Object.assign(ci.getDefaults(),{value:0})}dispose(){return super.dispose(),this._sum.dispose(),this}}class ea extends Ai{constructor(){super(Object.assign(ur(ea.getDefaults(),arguments,["min","max"]))),this.name="Scale";const t=ur(ea.getDefaults(),arguments,["min","max"]);this._mult=this.input=new ji({context:this.context,value:t.max-t.min}),this._add=this.output=new ta({context:this.context,value:t.min}),this._min=t.min,this._max=t.max,this.input.connect(this.output)}static getDefaults(){return Object.assign(Ai.getDefaults(),{max:1,min:0})}get min(){return this._min}set min(t){this._min=t,this._setRange()}get max(){return this._max}set max(t){this._max=t,this._setRange()}_setRange(){this._add.value=this._min,this._mult.value=this._max-this._min}dispose(){return super.dispose(),this._add.dispose(),this._mult.dispose(),this}}class na extends Ai{constructor(){super(Object.assign(ur(na.getDefaults(),arguments))),this.name="Zero",this._gain=new oi({context:this.context}),this.output=this._gain,this.input=void 0,ri(this.context.getConstant(0),this._gain)}dispose(){return super.dispose(),ii(this.context.getConstant(0),this._gain),this}}class sa extends ni{constructor(){super(ur(sa.getDefaults(),arguments,["frequency","min","max"])),this.name="LFO",this._stoppedValue=0,this._units="number",this.convert=!0,this._fromType=ei.prototype._fromType,this._toType=ei.prototype._toType,this._is=ei.prototype._is,this._clampValue=ei.prototype._clampValue;const t=ur(sa.getDefaults(),arguments,["frequency","min","max"]);this._oscillator=new Ui(t),this.frequency=this._oscillator.frequency,this._amplitudeGain=new oi({context:this.context,gain:t.amplitude,units:"normalRange"}),this.amplitude=this._amplitudeGain.gain,this._stoppedSignal=new ci({context:this.context,units:"audioRange",value:0}),this._zeros=new na({context:this.context}),this._a2g=new Gi({context:this.context}),this._scaler=this.output=new ea({context:this.context,max:t.max,min:t.min}),this.units=t.units,this.min=t.min,this.max=t.max,this._oscillator.chain(this._amplitudeGain,this._a2g,this._scaler),this._zeros.connect(this._a2g),this._stoppedSignal.connect(this._a2g),Cr(this,["amplitude","frequency"]),this.phase=t.phase}static getDefaults(){return Object.assign(Ui.getDefaults(),{amplitude:1,frequency:"4n",max:1,min:0,type:"sine",units:"number"})}start(t){return t=this.toSeconds(t),this._stoppedSignal.setValueAtTime(0,t),this._oscillator.start(t),this}stop(t){return t=this.toSeconds(t),this._stoppedSignal.setValueAtTime(this._stoppedValue,t),this._oscillator.stop(t),this}sync(){return this._oscillator.sync(),this._oscillator.syncFrequency(),this}unsync(){return this._oscillator.unsync(),this._oscillator.unsyncFrequency(),this}_setStoppedValue(){this._stoppedValue=this._oscillator.getInitialValue(),this._stoppedSignal.value=this._stoppedValue}get min(){return this._toType(this._scaler.min)}set min(t){t=this._fromType(t),this._scaler.min=t}get max(){return this._toType(this._scaler.max)}set max(t){t=this._fromType(t),this._scaler.max=t}get type(){return this._oscillator.type}set type(t){this._oscillator.type=t,this._setStoppedValue()}get partials(){return this._oscillator.partials}set partials(t){this._oscillator.partials=t,this._setStoppedValue()}get phase(){return this._oscillator.phase}set phase(t){this._oscillator.phase=t,this._setStoppedValue()}get units(){return this._units}set units(t){const e=this.min,n=this.max;this._units=t,this.min=e,this.max=n}get state(){return this._oscillator.state}connect(t,e,n){return(t instanceof ei||t instanceof ci)&&(this.convert=t.convert,this.units=t.units),hi(this,t,e,n),this}dispose(){return super.dispose(),this._oscillator.dispose(),this._stoppedSignal.dispose(),this._zeros.dispose(),this._scaler.dispose(),this._a2g.dispose(),this._amplitudeGain.dispose(),this.amplitude.dispose(),this}}function ra(t,e=1/0){const n=new WeakMap;return function(s,r){Reflect.defineProperty(s,r,{configurable:!0,enumerable:!0,get:function(){return n.get(this)},set:function(s){Ws(s,t,e),n.set(this,s)}})}}function ia(t,e=1/0){const n=new WeakMap;return function(s,r){Reflect.defineProperty(s,r,{configurable:!0,enumerable:!0,get:function(){return n.get(this)},set:function(s){Ws(this.toSeconds(s),t,e),n.set(this,s)}})}}class aa extends Fi{constructor(){super(ur(aa.getDefaults(),arguments,["url","onload"])),this.name="Player",this._activeSources=new Set;const t=ur(aa.getDefaults(),arguments,["url","onload"]);this._buffer=new Er({onload:this._onload.bind(this,t.onload),onerror:t.onerror,reverse:t.reverse,url:t.url}),this.autostart=t.autostart,this._loop=t.loop,this._loopStart=t.loopStart,this._loopEnd=t.loopEnd,this._playbackRate=t.playbackRate,this.fadeIn=t.fadeIn,this.fadeOut=t.fadeOut}static getDefaults(){return Object.assign(Fi.getDefaults(),{autostart:!1,fadeIn:0,fadeOut:0,loop:!1,loopEnd:0,loopStart:0,onload:Ar,onerror:Ar,playbackRate:1,reverse:!1})}load(t){return er(this,void 0,void 0,(function*(){return yield this._buffer.load(t),this._onload(),this}))}_onload(t=Ar){t(),this.autostart&&this.start()}_onSourceEnd(t){this.onstop(this),this._activeSources.delete(t),0!==this._activeSources.size||this._synced||"started"!==this._state.getValueAtTime(this.now())||(this._state.cancel(this.now()),this._state.setStateAtTime("stopped",this.now()))}start(t,e,n){return super.start(t,e,n),this}_start(t,e,n){e=this._loop?cr(e,this._loopStart):cr(e,0);const s=this.toSeconds(e),r=n;n=cr(n,Math.max(this._buffer.duration-s,0));let i=this.toSeconds(n);i/=this._playbackRate,t=this.toSeconds(t);const a=new Mi({url:this._buffer,context:this.context,fadeIn:this.fadeIn,fadeOut:this.fadeOut,loop:this._loop,loopEnd:this._loopEnd,loopStart:this._loopStart,onended:this._onSourceEnd.bind(this),playbackRate:this._playbackRate}).connect(this.output);this._loop||this._synced||(this._state.cancel(t+i),this._state.setStateAtTime("stopped",t+i,{implicitEnd:!0})),this._activeSources.add(a),this._loop&&Rs(r)?a.start(t,s):a.start(t,s,i-this.toSeconds(this.fadeOut))}_stop(t){const e=this.toSeconds(t);this._activeSources.forEach((t=>t.stop(e)))}restart(t,e,n){return super.restart(t,e,n),this}_restart(t,e,n){var s;null===(s=[...this._activeSources].pop())||void 0===s||s.stop(t),this._start(t,e,n)}seek(t,e){const n=this.toSeconds(e);if("started"===this._state.getValueAtTime(n)){const e=this.toSeconds(t);this._stop(n),this._start(n,e)}return this}setLoopPoints(t,e){return this.loopStart=t,this.loopEnd=e,this}get loopStart(){return this._loopStart}set loopStart(t){this._loopStart=t,this.buffer.loaded&&Ws(this.toSeconds(t),0,this.buffer.duration),this._activeSources.forEach((e=>{e.loopStart=t}))}get loopEnd(){return this._loopEnd}set loopEnd(t){this._loopEnd=t,this.buffer.loaded&&Ws(this.toSeconds(t),0,this.buffer.duration),this._activeSources.forEach((e=>{e.loopEnd=t}))}get buffer(){return this._buffer}set buffer(t){this._buffer.set(t)}get loop(){return this._loop}set loop(t){if(this._loop!==t&&(this._loop=t,this._activeSources.forEach((e=>{e.loop=t})),t)){const t=this._state.getNextState("stopped",this.now());t&&this._state.cancel(t.time)}}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t;const e=this.now(),n=this._state.getNextState("stopped",e);n&&n.implicitEnd&&(this._state.cancel(n.time),this._activeSources.forEach((t=>t.cancelStop()))),this._activeSources.forEach((n=>{n.playbackRate.setValueAtTime(t,e)}))}get reverse(){return this._buffer.reverse}set reverse(t){this._buffer.reverse=t}get loaded(){return this._buffer.loaded}dispose(){return super.dispose(),this._activeSources.forEach((t=>t.dispose())),this._activeSources.clear(),this._buffer.dispose(),this}}tr([ia(0)],aa.prototype,"fadeIn",void 0),tr([ia(0)],aa.prototype,"fadeOut",void 0);class oa extends ni{constructor(){super(ur(oa.getDefaults(),arguments,["urls","onload"],"urls")),this.name="Players",this.input=void 0,this._players=new Map;const t=ur(oa.getDefaults(),arguments,["urls","onload"],"urls");this._volume=this.output=new Ii({context:this.context,volume:t.volume}),this.volume=this._volume.volume,Cr(this,"volume"),this._buffers=new bi({urls:t.urls,onload:t.onload,baseUrl:t.baseUrl,onerror:t.onerror}),this.mute=t.mute,this._fadeIn=t.fadeIn,this._fadeOut=t.fadeOut}static getDefaults(){return Object.assign(Fi.getDefaults(),{baseUrl:"",fadeIn:0,fadeOut:0,mute:!1,onload:Ar,onerror:Ar,urls:{},volume:0})}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}get fadeIn(){return this._fadeIn}set fadeIn(t){this._fadeIn=t,this._players.forEach((e=>{e.fadeIn=t}))}get fadeOut(){return this._fadeOut}set fadeOut(t){this._fadeOut=t,this._players.forEach((e=>{e.fadeOut=t}))}get state(){return Array.from(this._players).some((([t,e])=>"started"===e.state))?"started":"stopped"}has(t){return this._buffers.has(t)}player(t){if(Bs(this.has(t),`No Player with the name ${t} exists on this object`),!this._players.has(t)){const e=new aa({context:this.context,fadeIn:this._fadeIn,fadeOut:this._fadeOut,url:this._buffers.get(t)}).connect(this.output);this._players.set(t,e)}return this._players.get(t)}get loaded(){return this._buffers.loaded}add(t,e,n){return Bs(!this._buffers.has(t),"A buffer with that name already exists on this object"),this._buffers.add(t,e,n),this}stopAll(t){return this._players.forEach((e=>e.stop(t))),this}dispose(){return super.dispose(),this._volume.dispose(),this.volume.dispose(),this._players.forEach((t=>t.dispose())),this._buffers.dispose(),this}}class la extends Fi{constructor(){super(ur(la.getDefaults(),arguments,["url","onload"])),this.name="GrainPlayer",this._loopStart=0,this._loopEnd=0,this._activeSources=[];const t=ur(la.getDefaults(),arguments,["url","onload"]);this.buffer=new Er({onload:t.onload,onerror:t.onerror,reverse:t.reverse,url:t.url}),this._clock=new mi({context:this.context,callback:this._tick.bind(this),frequency:1/t.grainSize}),this._playbackRate=t.playbackRate,this._grainSize=t.grainSize,this._overlap=t.overlap,this.detune=t.detune,this.overlap=t.overlap,this.loop=t.loop,this.playbackRate=t.playbackRate,this.grainSize=t.grainSize,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this.reverse=t.reverse,this._clock.on("stop",this._onstop.bind(this))}static getDefaults(){return Object.assign(Fi.getDefaults(),{onload:Ar,onerror:Ar,overlap:.1,grainSize:.2,playbackRate:1,detune:0,loop:!1,loopStart:0,loopEnd:0,reverse:!1})}_start(t,e,n){e=cr(e,0),e=this.toSeconds(e),t=this.toSeconds(t);const s=1/this._clock.frequency.getValueAtTime(t);this._clock.start(t,e/s),n&&this.stop(t+this.toSeconds(n))}restart(t,e,n){return super.restart(t,e,n),this}_restart(t,e,n){this._stop(t),this._start(t,e,n)}_stop(t){this._clock.stop(t)}_onstop(t){this._activeSources.forEach((e=>{e.fadeOut=0,e.stop(t)})),this.onstop(this)}_tick(t){const e=this._clock.getTicksAtTime(t),n=e*this._grainSize;if(this.log("offset",n),!this.loop&&n>this.buffer.duration)return void this.stop(t);const s=n<this._overlap?0:this._overlap,r=new Mi({context:this.context,url:this.buffer,fadeIn:s,fadeOut:this._overlap,loop:this.loop,loopStart:this._loopStart,loopEnd:this._loopEnd,playbackRate:Pr(this.detune/100)}).connect(this.output);r.start(t,this._grainSize*e),r.stop(t+this._grainSize/this.playbackRate),this._activeSources.push(r),r.onended=()=>{const t=this._activeSources.indexOf(r);-1!==t&&this._activeSources.splice(t,1)}}get playbackRate(){return this._playbackRate}set playbackRate(t){Ws(t,.001),this._playbackRate=t,this.grainSize=this._grainSize}get loopStart(){return this._loopStart}set loopStart(t){this.buffer.loaded&&Ws(this.toSeconds(t),0,this.buffer.duration),this._loopStart=this.toSeconds(t)}get loopEnd(){return this._loopEnd}set loopEnd(t){this.buffer.loaded&&Ws(this.toSeconds(t),0,this.buffer.duration),this._loopEnd=this.toSeconds(t)}get reverse(){return this.buffer.reverse}set reverse(t){this.buffer.reverse=t}get grainSize(){return this._grainSize}set grainSize(t){this._grainSize=this.toSeconds(t),this._clock.frequency.setValueAtTime(this._playbackRate/this._grainSize,this.now())}get overlap(){return this._overlap}set overlap(t){const e=this.toSeconds(t);Ws(e,0),this._overlap=e}get loaded(){return this.buffer.loaded}dispose(){return super.dispose(),this.buffer.dispose(),this._clock.dispose(),this._activeSources.forEach((t=>t.dispose())),this}}class ua extends Ai{constructor(){super(...arguments),this.name="Abs",this._abs=new Ei({context:this.context,mapping:t=>Math.abs(t)<.001?0:Math.abs(t)}),this.input=this._abs,this.output=this._abs}dispose(){return super.dispose(),this._abs.dispose(),this}}class ca extends Ai{constructor(){super(...arguments),this.name="GainToAudio",this._norm=new Ei({context:this.context,mapping:t=>2*Math.abs(t)-1}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class ha extends Ai{constructor(){super(...arguments),this.name="Negate",this._multiply=new ji({context:this.context,value:-1}),this.input=this._multiply,this.output=this._multiply}dispose(){return super.dispose(),this._multiply.dispose(),this}}class pa extends ci{constructor(){super(Object.assign(ur(pa.getDefaults(),arguments,["value"]))),this.override=!1,this.name="Subtract",this._sum=new oi({context:this.context}),this.input=this._sum,this.output=this._sum,this._neg=new ha({context:this.context}),this.subtrahend=this._param,si(this._constantSource,this._neg,this._sum)}static getDefaults(){return Object.assign(ci.getDefaults(),{value:0})}dispose(){return super.dispose(),this._neg.dispose(),this._sum.dispose(),this}}class da extends Ai{constructor(){super(Object.assign(ur(da.getDefaults(),arguments))),this.name="GreaterThanZero",this._thresh=this.output=new Ei({context:this.context,length:127,mapping:t=>t<=0?0:1}),this._scale=this.input=new ji({context:this.context,value:1e4}),this._scale.connect(this._thresh)}dispose(){return super.dispose(),this._scale.dispose(),this._thresh.dispose(),this}}class fa extends ci{constructor(){super(Object.assign(ur(fa.getDefaults(),arguments,["value"]))),this.name="GreaterThan",this.override=!1;const t=ur(fa.getDefaults(),arguments,["value"]);this._subtract=this.input=new pa({context:this.context,value:t.value}),this._gtz=this.output=new da({context:this.context}),this.comparator=this._param=this._subtract.subtrahend,Cr(this,"comparator"),this._subtract.connect(this._gtz)}static getDefaults(){return Object.assign(ci.getDefaults(),{value:0})}dispose(){return super.dispose(),this._gtz.dispose(),this._subtract.dispose(),this.comparator.dispose(),this}}class ma extends ea{constructor(){super(Object.assign(ur(ma.getDefaults(),arguments,["min","max","exponent"]))),this.name="ScaleExp";const t=ur(ma.getDefaults(),arguments,["min","max","exponent"]);this.input=this._exp=new $i({context:this.context,value:t.exponent}),this._exp.connect(this._mult)}static getDefaults(){return Object.assign(ea.getDefaults(),{exponent:1})}get exponent(){return this._exp.value}set exponent(t){this._exp.value=t}dispose(){return super.dispose(),this._exp.dispose(),this}}class ga extends ci{constructor(){super(ur(ci.getDefaults(),arguments,["value","units"])),this.name="SyncedSignal",this.override=!1;const t=ur(ci.getDefaults(),arguments,["value","units"]);this._lastVal=t.value,this._synced=this.context.transport.scheduleRepeat(this._onTick.bind(this),"1i"),this._syncedCallback=this._anchorValue.bind(this),this.context.transport.on("start",this._syncedCallback),this.context.transport.on("pause",this._syncedCallback),this.context.transport.on("stop",this._syncedCallback),this._constantSource.disconnect(),this._constantSource.stop(0),this._constantSource=this.output=new ui({context:this.context,offset:t.value,units:t.units}).start(0),this.setValueAtTime(t.value,0)}_onTick(t){const e=super.getValueAtTime(this.context.transport.seconds);this._lastVal!==e&&(this._lastVal=e,this._constantSource.offset.setValueAtTime(e,t))}_anchorValue(t){const e=super.getValueAtTime(this.context.transport.seconds);this._lastVal=e,this._constantSource.offset.cancelAndHoldAtTime(t),this._constantSource.offset.setValueAtTime(e,t)}getValueAtTime(t){const e=new Zr(this.context,t).toSeconds();return super.getValueAtTime(e)}setValueAtTime(t,e){const n=new Zr(this.context,e).toSeconds();return super.setValueAtTime(t,n),this}linearRampToValueAtTime(t,e){const n=new Zr(this.context,e).toSeconds();return super.linearRampToValueAtTime(t,n),this}exponentialRampToValueAtTime(t,e){const n=new Zr(this.context,e).toSeconds();return super.exponentialRampToValueAtTime(t,n),this}setTargetAtTime(t,e,n){const s=new Zr(this.context,e).toSeconds();return super.setTargetAtTime(t,s,n),this}cancelScheduledValues(t){const e=new Zr(this.context,t).toSeconds();return super.cancelScheduledValues(e),this}setValueCurveAtTime(t,e,n,s){const r=new Zr(this.context,e).toSeconds();return n=this.toSeconds(n),super.setValueCurveAtTime(t,r,n,s),this}cancelAndHoldAtTime(t){const e=new Zr(this.context,t).toSeconds();return super.cancelAndHoldAtTime(e),this}setRampPoint(t){const e=new Zr(this.context,t).toSeconds();return super.setRampPoint(e),this}exponentialRampTo(t,e,n){const s=new Zr(this.context,n).toSeconds();return super.exponentialRampTo(t,e,s),this}linearRampTo(t,e,n){const s=new Zr(this.context,n).toSeconds();return super.linearRampTo(t,e,s),this}targetRampTo(t,e,n){const s=new Zr(this.context,n).toSeconds();return super.targetRampTo(t,e,s),this}dispose(){return super.dispose(),this.context.transport.clear(this._synced),this.context.transport.off("start",this._syncedCallback),this.context.transport.off("pause",this._syncedCallback),this.context.transport.off("stop",this._syncedCallback),this._constantSource.dispose(),this}}class ya extends ni{constructor(){super(ur(ya.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="Envelope",this._sig=new ci({context:this.context,value:0}),this.output=this._sig,this.input=void 0;const t=ur(ya.getDefaults(),arguments,["attack","decay","sustain","release"]);this.attack=t.attack,this.decay=t.decay,this.sustain=t.sustain,this.release=t.release,this.attackCurve=t.attackCurve,this.releaseCurve=t.releaseCurve,this.decayCurve=t.decayCurve}static getDefaults(){return Object.assign(ni.getDefaults(),{attack:.01,attackCurve:"linear",decay:.1,decayCurve:"exponential",release:1,releaseCurve:"exponential",sustain:.5})}get value(){return this.getValueAtTime(this.now())}_getCurve(t,e){if(Ps(t))return t;{let n;for(n in ba)if(ba[n][e]===t)return n;return t}}_setCurve(t,e,n){if(Ps(n)&&Reflect.has(ba,n)){const s=ba[n];Ms(s)?"_decayCurve"!==t&&(this[t]=s[e]):this[t]=s}else{if(!zs(n)||"_decayCurve"===t)throw new Error("Envelope: invalid curve: "+n);this[t]=n}}get attackCurve(){return this._getCurve(this._attackCurve,"In")}set attackCurve(t){this._setCurve("_attackCurve","In",t)}get releaseCurve(){return this._getCurve(this._releaseCurve,"Out")}set releaseCurve(t){this._setCurve("_releaseCurve","Out",t)}get decayCurve(){return this._getCurve(this._decayCurve,"Out")}set decayCurve(t){this._setCurve("_decayCurve","Out",t)}triggerAttack(t,e=1){this.log("triggerAttack",t,e),t=this.toSeconds(t);let n=this.toSeconds(this.attack);const s=this.toSeconds(this.decay),r=this.getValueAtTime(t);if(r>0&&(n=(1-r)/(1/n)),n<this.sampleTime)this._sig.cancelScheduledValues(t),this._sig.setValueAtTime(e,t);else if("linear"===this._attackCurve)this._sig.linearRampTo(e,n,t);else if("exponential"===this._attackCurve)this._sig.targetRampTo(e,n,t);else{this._sig.cancelAndHoldAtTime(t);let s=this._attackCurve;for(let t=1;t<s.length;t++)if(s[t-1]<=r&&r<=s[t]){s=this._attackCurve.slice(t),s[0]=r;break}this._sig.setValueCurveAtTime(s,t,n,e)}if(s&&this.sustain<1){const r=e*this.sustain,i=t+n;this.log("decay",i),"linear"===this._decayCurve?this._sig.linearRampToValueAtTime(r,s+i):this._sig.exponentialApproachValueAtTime(r,i,s)}return this}triggerRelease(t){this.log("triggerRelease",t),t=this.toSeconds(t);const e=this.getValueAtTime(t);if(e>0){const n=this.toSeconds(this.release);n<this.sampleTime?this._sig.setValueAtTime(0,t):"linear"===this._releaseCurve?this._sig.linearRampTo(0,n,t):"exponential"===this._releaseCurve?this._sig.targetRampTo(0,n,t):(Bs(zs(this._releaseCurve),"releaseCurve must be either 'linear', 'exponential' or an array"),this._sig.cancelAndHoldAtTime(t),this._sig.setValueCurveAtTime(this._releaseCurve,t,n,e))}return this}getValueAtTime(t){return this._sig.getValueAtTime(t)}triggerAttackRelease(t,e,n=1){return e=this.toSeconds(e),this.triggerAttack(e,n),this.triggerRelease(e+this.toSeconds(t)),this}cancel(t){return this._sig.cancelScheduledValues(this.toSeconds(t)),this}connect(t,e=0,n=0){return hi(this,t,e,n),this}asArray(t=1024){return er(this,void 0,void 0,(function*(){const e=t/this.context.sampleRate,n=new $r(1,e,this.context.sampleRate),s=this.toSeconds(this.attack)+this.toSeconds(this.decay),r=s+this.toSeconds(this.release),i=.1*r,a=r+i,o=new this.constructor(Object.assign(this.get(),{attack:e*this.toSeconds(this.attack)/a,decay:e*this.toSeconds(this.decay)/a,release:e*this.toSeconds(this.release)/a,context:n}));return o._sig.toDestination(),o.triggerAttackRelease(e*(s+i)/a,0),(yield n.render()).getChannelData(0)}))}dispose(){return super.dispose(),this._sig.dispose(),this}}tr([ia(0)],ya.prototype,"attack",void 0),tr([ia(0)],ya.prototype,"decay",void 0),tr([ra(0,1)],ya.prototype,"sustain",void 0),tr([ia(0)],ya.prototype,"release",void 0);const ba=(()=>{const t=128;let e,n;const s=[];for(e=0;e<t;e++)s[e]=Math.sin(e/127*(Math.PI/2));const r=[];for(e=0;e<127;e++){n=e/127;const t=Math.sin(n*(2*Math.PI)*6.4-Math.PI/2)+1;r[e]=t/10+.83*n}r[127]=1;const i=[];for(e=0;e<t;e++)i[e]=Math.ceil(e/127*5)/5;const a=[];for(e=0;e<t;e++)n=e/127,a[e]=.5*(1-Math.cos(Math.PI*n));const o=[];for(e=0;e<t;e++){n=e/127;const t=4*Math.pow(n,3)+.2,s=Math.cos(t*Math.PI*2*n);o[e]=Math.abs(s*(1-n))}function l(t){const e=new Array(t.length);for(let n=0;n<t.length;n++)e[n]=1-t[n];return e}return{bounce:{In:l(o),Out:o},cosine:{In:s,Out:(u=s,u.slice(0).reverse())},exponential:"exponential",linear:"linear",ripple:{In:r,Out:l(r)},sine:{In:a,Out:l(a)},step:{In:i,Out:l(i)}};var u})();class xa extends ni{constructor(){super(ur(xa.getDefaults(),arguments)),this._scheduledEvents=[],this._synced=!1,this._original_triggerAttack=this.triggerAttack,this._original_triggerRelease=this.triggerRelease,this._syncedRelease=t=>this._original_triggerRelease(t);const t=ur(xa.getDefaults(),arguments);this._volume=this.output=new Ii({context:this.context,volume:t.volume}),this.volume=this._volume.volume,Cr(this,"volume")}static getDefaults(){return Object.assign(ni.getDefaults(),{volume:0})}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",0),this.context.transport.on("stop",this._syncedRelease),this.context.transport.on("pause",this._syncedRelease),this.context.transport.on("loopEnd",this._syncedRelease)),this}_syncState(){let t=!1;return this._synced||(this._synced=!0,t=!0),t}_syncMethod(t,e){const n=this["_original_"+t]=this[t];this[t]=(...t)=>{const s=t[e],r=this.context.transport.schedule((s=>{t[e]=s,n.apply(this,t)}),s);this._scheduledEvents.push(r)}}unsync(){return this._scheduledEvents.forEach((t=>this.context.transport.clear(t))),this._scheduledEvents=[],this._synced&&(this._synced=!1,this.triggerAttack=this._original_triggerAttack,this.triggerRelease=this._original_triggerRelease,this.context.transport.off("stop",this._syncedRelease),this.context.transport.off("pause",this._syncedRelease),this.context.transport.off("loopEnd",this._syncedRelease)),this}triggerAttackRelease(t,e,n,s){const r=this.toSeconds(n),i=this.toSeconds(e);return this.triggerAttack(t,r,s),this.triggerRelease(r+i),this}dispose(){return super.dispose(),this._volume.dispose(),this.unsync(),this._scheduledEvents=[],this}}class va extends xa{constructor(){super(ur(va.getDefaults(),arguments));const t=ur(va.getDefaults(),arguments);this.portamento=t.portamento,this.onsilence=t.onsilence}static getDefaults(){return Object.assign(xa.getDefaults(),{detune:0,onsilence:Ar,portamento:0})}triggerAttack(t,e,n=1){this.log("triggerAttack",t,e,n);const s=this.toSeconds(e);return this._triggerEnvelopeAttack(s,n),this.setNote(t,s),this}triggerRelease(t){this.log("triggerRelease",t);const e=this.toSeconds(t);return this._triggerEnvelopeRelease(e),this}setNote(t,e){const n=this.toSeconds(e),s=t instanceof Hr?t.toFrequency():t;if(this.portamento>0&&this.getLevelAtTime(n)>.05){const t=this.toSeconds(this.portamento);this.frequency.exponentialRampTo(s,t,n)}else this.frequency.setValueAtTime(s,n);return this}}tr([ia(0)],va.prototype,"portamento",void 0);class wa extends ya{constructor(){super(ur(wa.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="AmplitudeEnvelope",this._gainNode=new oi({context:this.context,gain:0}),this.output=this._gainNode,this.input=this._gainNode,this._sig.connect(this._gainNode.gain),this.output=this._gainNode,this.input=this._gainNode}dispose(){return super.dispose(),this._gainNode.dispose(),this}}class _a extends va{constructor(){super(ur(_a.getDefaults(),arguments)),this.name="Synth";const t=ur(_a.getDefaults(),arguments);this.oscillator=new Ji(Object.assign({context:this.context,detune:t.detune,onstop:()=>this.onsilence(this)},t.oscillator)),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.envelope=new wa(Object.assign({context:this.context},t.envelope)),this.oscillator.chain(this.envelope,this.output),Cr(this,["oscillator","frequency","detune","envelope"])}static getDefaults(){return Object.assign(va.getDefaults(),{envelope:Object.assign(hr(ya.getDefaults(),Object.keys(ni.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.3}),oscillator:Object.assign(hr(Ji.getDefaults(),[...Object.keys(Fi.getDefaults()),"frequency","detune"]),{type:"triangle"})})}_triggerEnvelopeAttack(t,e){if(this.envelope.triggerAttack(t,e),this.oscillator.start(t),0===this.envelope.sustain){const e=this.toSeconds(this.envelope.attack),n=this.toSeconds(this.envelope.decay);this.oscillator.stop(t+e+n)}}_triggerEnvelopeRelease(t){this.envelope.triggerRelease(t),this.oscillator.stop(t+this.toSeconds(this.envelope.release))}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this}}class ka extends va{constructor(){super(ur(ka.getDefaults(),arguments)),this.name="ModulationSynth";const t=ur(ka.getDefaults(),arguments);this._carrier=new _a({context:this.context,oscillator:t.oscillator,envelope:t.envelope,onsilence:()=>this.onsilence(this),volume:-10}),this._modulator=new _a({context:this.context,oscillator:t.modulation,envelope:t.modulationEnvelope,volume:-10}),this.oscillator=this._carrier.oscillator,this.envelope=this._carrier.envelope,this.modulation=this._modulator.oscillator,this.modulationEnvelope=this._modulator.envelope,this.frequency=new ci({context:this.context,units:"frequency"}),this.detune=new ci({context:this.context,value:t.detune,units:"cents"}),this.harmonicity=new ji({context:this.context,value:t.harmonicity,minValue:0}),this._modulationNode=new oi({context:this.context,gain:0}),Cr(this,["frequency","harmonicity","oscillator","envelope","modulation","modulationEnvelope","detune"])}static getDefaults(){return Object.assign(va.getDefaults(),{harmonicity:3,oscillator:Object.assign(hr(Ji.getDefaults(),[...Object.keys(Fi.getDefaults()),"frequency","detune"]),{type:"sine"}),envelope:Object.assign(hr(ya.getDefaults(),Object.keys(ni.getDefaults())),{attack:.01,decay:.01,sustain:1,release:.5}),modulation:Object.assign(hr(Ji.getDefaults(),[...Object.keys(Fi.getDefaults()),"frequency","detune"]),{type:"square"}),modulationEnvelope:Object.assign(hr(ya.getDefaults(),Object.keys(ni.getDefaults())),{attack:.5,decay:0,sustain:1,release:.5})})}_triggerEnvelopeAttack(t,e){this._carrier._triggerEnvelopeAttack(t,e),this._modulator._triggerEnvelopeAttack(t,e)}_triggerEnvelopeRelease(t){return this._carrier._triggerEnvelopeRelease(t),this._modulator._triggerEnvelopeRelease(t),this}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}dispose(){return super.dispose(),this._carrier.dispose(),this._modulator.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._modulationNode.dispose(),this}}class Ta extends ka{constructor(){super(ur(Ta.getDefaults(),arguments)),this.name="AMSynth",this._modulationScale=new Gi({context:this.context}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.detune.fan(this._carrier.detune,this._modulator.detune),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output)}dispose(){return super.dispose(),this._modulationScale.dispose(),this}}class Sa extends ni{constructor(){super(ur(Sa.getDefaults(),arguments,["frequency","type"])),this.name="BiquadFilter";const t=ur(Sa.getDefaults(),arguments,["frequency","type"]);this._filter=this.context.createBiquadFilter(),this.input=this.output=this._filter,this.Q=new ei({context:this.context,units:"number",value:t.Q,param:this._filter.Q}),this.frequency=new ei({context:this.context,units:"frequency",value:t.frequency,param:this._filter.frequency}),this.detune=new ei({context:this.context,units:"cents",value:t.detune,param:this._filter.detune}),this.gain=new ei({context:this.context,units:"decibels",convert:!1,value:t.gain,param:this._filter.gain}),this.type=t.type}static getDefaults(){return Object.assign(ni.getDefaults(),{Q:1,type:"lowpass",frequency:350,detune:0,gain:0})}get type(){return this._filter.type}set type(t){Bs(-1!==["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(t),`Invalid filter type: ${t}`),this._filter.type=t}getFrequencyResponse(t=128){const e=new Float32Array(t);for(let n=0;n<t;n++){const s=19980*Math.pow(n/t,2)+20;e[n]=s}const n=new Float32Array(t),s=new Float32Array(t),r=this.context.createBiquadFilter();return r.type=this.type,r.Q.value=this.Q.value,r.frequency.value=this.frequency.value,r.gain.value=this.gain.value,r.getFrequencyResponse(e,n,s),n}dispose(){return super.dispose(),this._filter.disconnect(),this.Q.dispose(),this.frequency.dispose(),this.gain.dispose(),this.detune.dispose(),this}}class Ia extends ni{constructor(){super(ur(Ia.getDefaults(),arguments,["frequency","type","rolloff"])),this.name="Filter",this.input=new oi({context:this.context}),this.output=new oi({context:this.context}),this._filters=[];const t=ur(Ia.getDefaults(),arguments,["frequency","type","rolloff"]);this._filters=[],this.Q=new ci({context:this.context,units:"positive",value:t.Q}),this.frequency=new ci({context:this.context,units:"frequency",value:t.frequency}),this.detune=new ci({context:this.context,units:"cents",value:t.detune}),this.gain=new ci({context:this.context,units:"decibels",convert:!1,value:t.gain}),this._type=t.type,this.rolloff=t.rolloff,Cr(this,["detune","frequency","gain","Q"])}static getDefaults(){return Object.assign(ni.getDefaults(),{Q:1,detune:0,frequency:350,gain:0,rolloff:-12,type:"lowpass"})}get type(){return this._type}set type(t){Bs(-1!==["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(t),`Invalid filter type: ${t}`),this._type=t,this._filters.forEach((e=>e.type=t))}get rolloff(){return this._rolloff}set rolloff(t){const e=Fs(t)?t:parseInt(t,10),n=[-12,-24,-48,-96];let s=n.indexOf(e);Bs(-1!==s,`rolloff can only be ${n.join(", ")}`),s+=1,this._rolloff=e,this.input.disconnect(),this._filters.forEach((t=>t.disconnect())),this._filters=new Array(s);for(let t=0;t<s;t++){const e=new Sa({context:this.context});e.type=this._type,this.frequency.connect(e.frequency),this.detune.connect(e.detune),this.Q.connect(e.Q),this.gain.connect(e.gain),this._filters[t]=e}this._internalChannels=this._filters,si(this.input,...this._internalChannels,this.output)}getFrequencyResponse(t=128){const e=new Sa({frequency:this.frequency.value,gain:this.gain.value,Q:this.Q.value,type:this._type,detune:this.detune.value}),n=new Float32Array(t).map((()=>1));return this._filters.forEach((()=>{e.getFrequencyResponse(t).forEach(((t,e)=>n[e]*=t))})),e.dispose(),n}dispose(){return super.dispose(),this._filters.forEach((t=>{t.dispose()})),Nr(this,["detune","frequency","gain","Q"]),this.frequency.dispose(),this.Q.dispose(),this.detune.dispose(),this.gain.dispose(),this}}class Ca extends ya{constructor(){super(ur(Ca.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="FrequencyEnvelope";const t=ur(Ca.getDefaults(),arguments,["attack","decay","sustain","release"]);this._octaves=t.octaves,this._baseFrequency=this.toFrequency(t.baseFrequency),this._exponent=this.input=new $i({context:this.context,value:t.exponent}),this._scale=this.output=new ea({context:this.context,min:this._baseFrequency,max:this._baseFrequency*Math.pow(2,this._octaves)}),this._sig.chain(this._exponent,this._scale)}static getDefaults(){return Object.assign(ya.getDefaults(),{baseFrequency:200,exponent:1,octaves:4})}get baseFrequency(){return this._baseFrequency}set baseFrequency(t){const e=this.toFrequency(t);Ws(e,0),this._baseFrequency=e,this._scale.min=this._baseFrequency,this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(t){this._octaves=t,this._scale.max=this._baseFrequency*Math.pow(2,t)}get exponent(){return this._exponent.value}set exponent(t){this._exponent.value=t}dispose(){return super.dispose(),this._exponent.dispose(),this._scale.dispose(),this}}class Na extends va{constructor(){super(ur(Na.getDefaults(),arguments)),this.name="MonoSynth";const t=ur(Na.getDefaults(),arguments);this.oscillator=new Ji(Object.assign(t.oscillator,{context:this.context,detune:t.detune,onstop:()=>this.onsilence(this)})),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.filter=new Ia(Object.assign(t.filter,{context:this.context})),this.filterEnvelope=new Ca(Object.assign(t.filterEnvelope,{context:this.context})),this.envelope=new wa(Object.assign(t.envelope,{context:this.context})),this.oscillator.chain(this.filter,this.envelope,this.output),this.filterEnvelope.connect(this.filter.frequency),Cr(this,["oscillator","frequency","detune","filter","filterEnvelope","envelope"])}static getDefaults(){return Object.assign(va.getDefaults(),{envelope:Object.assign(hr(ya.getDefaults(),Object.keys(ni.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.9}),filter:Object.assign(hr(Ia.getDefaults(),Object.keys(ni.getDefaults())),{Q:1,rolloff:-12,type:"lowpass"}),filterEnvelope:Object.assign(hr(Ca.getDefaults(),Object.keys(ni.getDefaults())),{attack:.6,baseFrequency:200,decay:.2,exponent:2,octaves:3,release:2,sustain:.5}),oscillator:Object.assign(hr(Ji.getDefaults(),Object.keys(Fi.getDefaults())),{type:"sawtooth"})})}_triggerEnvelopeAttack(t,e=1){if(this.envelope.triggerAttack(t,e),this.filterEnvelope.triggerAttack(t),this.oscillator.start(t),0===this.envelope.sustain){const e=this.toSeconds(this.envelope.attack),n=this.toSeconds(this.envelope.decay);this.oscillator.stop(t+e+n)}}_triggerEnvelopeRelease(t){this.envelope.triggerRelease(t),this.filterEnvelope.triggerRelease(t),this.oscillator.stop(t+this.toSeconds(this.envelope.release))}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this.filterEnvelope.dispose(),this.filter.dispose(),this}}class Aa extends va{constructor(){super(ur(Aa.getDefaults(),arguments)),this.name="DuoSynth";const t=ur(Aa.getDefaults(),arguments);this.voice0=new Na(Object.assign(t.voice0,{context:this.context,onsilence:()=>this.onsilence(this)})),this.voice1=new Na(Object.assign(t.voice1,{context:this.context})),this.harmonicity=new ji({context:this.context,units:"positive",value:t.harmonicity}),this._vibrato=new sa({frequency:t.vibratoRate,context:this.context,min:-50,max:50}),this._vibrato.start(),this.vibratoRate=this._vibrato.frequency,this._vibratoGain=new oi({context:this.context,units:"normalRange",gain:t.vibratoAmount}),this.vibratoAmount=this._vibratoGain.gain,this.frequency=new ci({context:this.context,units:"frequency",value:440}),this.detune=new ci({context:this.context,units:"cents",value:t.detune}),this.frequency.connect(this.voice0.frequency),this.frequency.chain(this.harmonicity,this.voice1.frequency),this._vibrato.connect(this._vibratoGain),this._vibratoGain.fan(this.voice0.detune,this.voice1.detune),this.detune.fan(this.voice0.detune,this.voice1.detune),this.voice0.connect(this.output),this.voice1.connect(this.output),Cr(this,["voice0","voice1","frequency","vibratoAmount","vibratoRate"])}getLevelAtTime(t){return t=this.toSeconds(t),this.voice0.envelope.getValueAtTime(t)+this.voice1.envelope.getValueAtTime(t)}static getDefaults(){return lr(va.getDefaults(),{vibratoAmount:.5,vibratoRate:5,harmonicity:1.5,voice0:lr(hr(Na.getDefaults(),Object.keys(va.getDefaults())),{filterEnvelope:{attack:.01,decay:0,sustain:1,release:.5},envelope:{attack:.01,decay:0,sustain:1,release:.5}}),voice1:lr(hr(Na.getDefaults(),Object.keys(va.getDefaults())),{filterEnvelope:{attack:.01,decay:0,sustain:1,release:.5},envelope:{attack:.01,decay:0,sustain:1,release:.5}})})}_triggerEnvelopeAttack(t,e){this.voice0._triggerEnvelopeAttack(t,e),this.voice1._triggerEnvelopeAttack(t,e)}_triggerEnvelopeRelease(t){return this.voice0._triggerEnvelopeRelease(t),this.voice1._triggerEnvelopeRelease(t),this}dispose(){return super.dispose(),this.voice0.dispose(),this.voice1.dispose(),this.frequency.dispose(),this.detune.dispose(),this._vibrato.dispose(),this.vibratoRate.dispose(),this._vibratoGain.dispose(),this.harmonicity.dispose(),this}}class Ea extends ka{constructor(){super(ur(Ea.getDefaults(),arguments)),this.name="FMSynth";const t=ur(Ea.getDefaults(),arguments);this.modulationIndex=new ji({context:this.context,value:t.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this.detune.fan(this._carrier.detune,this._modulator.detune),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output)}static getDefaults(){return Object.assign(ka.getDefaults(),{modulationIndex:10})}dispose(){return super.dispose(),this.modulationIndex.dispose(),this}}const $a=[1,1.483,1.932,2.546,2.63,3.897];class Ra extends va{constructor(){super(ur(Ra.getDefaults(),arguments)),this.name="MetalSynth",this._oscillators=[],this._freqMultipliers=[];const t=ur(Ra.getDefaults(),arguments);this.detune=new ci({context:this.context,units:"cents",value:t.detune}),this.frequency=new ci({context:this.context,units:"frequency"}),this._amplitude=new oi({context:this.context,gain:0}).connect(this.output),this._highpass=new Ia({Q:0,context:this.context,type:"highpass"}).connect(this._amplitude);for(let e=0;e<$a.length;e++){const n=new Xi({context:this.context,harmonicity:t.harmonicity,modulationIndex:t.modulationIndex,modulationType:"square",onstop:0===e?()=>this.onsilence(this):Ar,type:"square"});n.connect(this._highpass),this._oscillators[e]=n;const s=new ji({context:this.context,value:$a[e]});this._freqMultipliers[e]=s,this.frequency.chain(s,n.frequency),this.detune.connect(n.detune)}this._filterFreqScaler=new ea({context:this.context,max:7e3,min:this.toFrequency(t.resonance)}),this.envelope=new ya({attack:t.envelope.attack,attackCurve:"linear",context:this.context,decay:t.envelope.decay,release:t.envelope.release,sustain:0}),this.envelope.chain(this._filterFreqScaler,this._highpass.frequency),this.envelope.connect(this._amplitude.gain),this._octaves=t.octaves,this.octaves=t.octaves}static getDefaults(){return lr(va.getDefaults(),{envelope:Object.assign(hr(ya.getDefaults(),Object.keys(ni.getDefaults())),{attack:.001,decay:1.4,release:.2}),harmonicity:5.1,modulationIndex:32,octaves:1.5,resonance:4e3})}_triggerEnvelopeAttack(t,e=1){return this.envelope.triggerAttack(t,e),this._oscillators.forEach((e=>e.start(t))),0===this.envelope.sustain&&this._oscillators.forEach((e=>{e.stop(t+this.toSeconds(this.envelope.attack)+this.toSeconds(this.envelope.decay))})),this}_triggerEnvelopeRelease(t){return this.envelope.triggerRelease(t),this._oscillators.forEach((e=>e.stop(t+this.toSeconds(this.envelope.release)))),this}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}get modulationIndex(){return this._oscillators[0].modulationIndex.value}set modulationIndex(t){this._oscillators.forEach((e=>e.modulationIndex.value=t))}get harmonicity(){return this._oscillators[0].harmonicity.value}set harmonicity(t){this._oscillators.forEach((e=>e.harmonicity.value=t))}get resonance(){return this._filterFreqScaler.min}set resonance(t){this._filterFreqScaler.min=this.toFrequency(t),this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(t){this._octaves=t,this._filterFreqScaler.max=this._filterFreqScaler.min*Math.pow(2,t)}dispose(){return super.dispose(),this._oscillators.forEach((t=>t.dispose())),this._freqMultipliers.forEach((t=>t.dispose())),this.frequency.dispose(),this.detune.dispose(),this._filterFreqScaler.dispose(),this._amplitude.dispose(),this.envelope.dispose(),this._highpass.dispose(),this}}class Da extends _a{constructor(){super(ur(Da.getDefaults(),arguments)),this.name="MembraneSynth",this.portamento=0;const t=ur(Da.getDefaults(),arguments);this.pitchDecay=t.pitchDecay,this.octaves=t.octaves,Cr(this,["oscillator","envelope"])}static getDefaults(){return lr(va.getDefaults(),_a.getDefaults(),{envelope:{attack:.001,attackCurve:"exponential",decay:.4,release:1.4,sustain:.01},octaves:10,oscillator:{type:"sine"},pitchDecay:.05})}setNote(t,e){const n=this.toSeconds(e),s=this.toFrequency(t instanceof Hr?t.toFrequency():t),r=s*this.octaves;return this.oscillator.frequency.setValueAtTime(r,n),this.oscillator.frequency.exponentialRampToValueAtTime(s,n+this.toSeconds(this.pitchDecay)),this}dispose(){return super.dispose(),this}}tr([ra(0)],Da.prototype,"octaves",void 0),tr([ia(0)],Da.prototype,"pitchDecay",void 0);class Oa extends xa{constructor(){super(ur(Oa.getDefaults(),arguments)),this.name="NoiseSynth";const t=ur(Oa.getDefaults(),arguments);this.noise=new Li(Object.assign({context:this.context},t.noise)),this.envelope=new wa(Object.assign({context:this.context},t.envelope)),this.noise.chain(this.envelope,this.output)}static getDefaults(){return Object.assign(xa.getDefaults(),{envelope:Object.assign(hr(ya.getDefaults(),Object.keys(ni.getDefaults())),{decay:.1,sustain:0}),noise:Object.assign(hr(Li.getDefaults(),Object.keys(Fi.getDefaults())),{type:"white"})})}triggerAttack(t,e=1){return t=this.toSeconds(t),this.envelope.triggerAttack(t,e),this.noise.start(t),0===this.envelope.sustain&&this.noise.stop(t+this.toSeconds(this.envelope.attack)+this.toSeconds(this.envelope.decay)),this}triggerRelease(t){return t=this.toSeconds(t),this.envelope.triggerRelease(t),this.noise.stop(t+this.toSeconds(this.envelope.release)),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",0),this._syncMethod("triggerRelease",0)),this}triggerAttackRelease(t,e,n=1){return e=this.toSeconds(e),t=this.toSeconds(t),this.triggerAttack(e,n),this.triggerRelease(e+t),this}dispose(){return super.dispose(),this.noise.dispose(),this.envelope.dispose(),this}}const Fa=new Set;function Ma(t){Fa.add(t)}function La(t,e){const n=`registerProcessor("${t}", ${e})`;Fa.add(n)}class za extends ni{constructor(t){super(t),this.name="ToneAudioWorklet",this.workletOptions={},this.onprocessorerror=Ar;const e=URL.createObjectURL(new Blob([Array.from(Fa).join("\n")],{type:"text/javascript"})),n=this._audioWorkletName();this._dummyGain=this.context.createGain(),this._dummyParam=this._dummyGain.gain,this.context.addAudioWorkletModule(e).then((()=>{this.disposed||(this._worklet=this.context.createAudioWorkletNode(n,this.workletOptions),this._worklet.onprocessorerror=this.onprocessorerror.bind(this),this.onReady(this._worklet))}))}dispose(){return super.dispose(),this._dummyGain.disconnect(),this._worklet&&(this._worklet.port.postMessage("dispose"),this._worklet.disconnect()),this}}Ma('\n\t/**\n\t * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. \n\t */\n\tclass ToneAudioWorkletProcessor extends AudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\t\n\t\t\tsuper(options);\n\t\t\t/**\n\t\t\t * If the processor was disposed or not. Keep alive until it\'s disposed.\n\t\t\t */\n\t\t\tthis.disposed = false;\n\t\t   \t/** \n\t\t\t * The number of samples in the processing block\n\t\t\t */\n\t\t\tthis.blockSize = 128;\n\t\t\t/**\n\t\t\t * the sample rate\n\t\t\t */\n\t\t\tthis.sampleRate = sampleRate;\n\n\t\t\tthis.port.onmessage = (event) => {\n\t\t\t\t// when it receives a dispose \n\t\t\t\tif (event.data === "dispose") {\n\t\t\t\t\tthis.disposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n'),Ma("\n\t/**\n\t * Abstract class for a single input/output processor. \n\t * has a 'generate' function which processes one sample at a time\n\t */\n\tclass SingleIOProcessor extends ToneAudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(Object.assign(options, {\n\t\t\t\tnumberOfInputs: 1,\n\t\t\t\tnumberOfOutputs: 1\n\t\t\t}));\n\t\t\t/**\n\t\t\t * Holds the name of the parameter and a single value of that\n\t\t\t * parameter at the current sample\n\t\t\t * @type { [name: string]: number }\n\t\t\t */\n\t\t\tthis.params = {}\n\t\t}\n\n\t\t/**\n\t\t * Generate an output sample from the input sample and parameters\n\t\t * @abstract\n\t\t * @param input number\n\t\t * @param channel number\n\t\t * @param parameters { [name: string]: number }\n\t\t * @returns number\n\t\t */\n\t\tgenerate(){}\n\n\t\t/**\n\t\t * Update the private params object with the \n\t\t * values of the parameters at the given index\n\t\t * @param parameters { [name: string]: Float32Array },\n\t\t * @param index number\n\t\t */\n\t\tupdateParams(parameters, index) {\n\t\t\tfor (const paramName in parameters) {\n\t\t\t\tconst param = parameters[paramName];\n\t\t\t\tif (param.length > 1) {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][index];\n\t\t\t\t} else {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Process a single frame of the audio\n\t\t * @param inputs Float32Array[][]\n\t\t * @param outputs Float32Array[][]\n\t\t */\n\t\tprocess(inputs, outputs, parameters) {\n\t\t\tconst input = inputs[0];\n\t\t\tconst output = outputs[0];\n\t\t\t// get the parameter values\n\t\t\tconst channelCount = Math.max(input && input.length || 0, output.length);\n\t\t\tfor (let sample = 0; sample < this.blockSize; sample++) {\n\t\t\t\tthis.updateParams(parameters, sample);\n\t\t\t\tfor (let channel = 0; channel < channelCount; channel++) {\n\t\t\t\t\tconst inputSample = input && input.length ? input[channel][sample] : 0;\n\t\t\t\t\toutput[channel][sample] = this.generate(inputSample, channel, this.params);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn !this.disposed;\n\t\t}\n\t};\n"),Ma("\n\t/**\n\t * A multichannel buffer for use within an AudioWorkletProcessor as a delay line\n\t */\n\tclass DelayLine {\n\t\t\n\t\tconstructor(size, channels) {\n\t\t\tthis.buffer = [];\n\t\t\tthis.writeHead = []\n\t\t\tthis.size = size;\n\n\t\t\t// create the empty channels\n\t\t\tfor (let i = 0; i < channels; i++) {\n\t\t\t\tthis.buffer[i] = new Float32Array(this.size);\n\t\t\t\tthis.writeHead[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Push a value onto the end\n\t\t * @param channel number\n\t\t * @param value number\n\t\t */\n\t\tpush(channel, value) {\n\t\t\tthis.writeHead[channel] += 1;\n\t\t\tif (this.writeHead[channel] > this.size) {\n\t\t\t\tthis.writeHead[channel] = 0;\n\t\t\t}\n\t\t\tthis.buffer[channel][this.writeHead[channel]] = value;\n\t\t}\n\n\t\t/**\n\t\t * Get the recorded value of the channel given the delay\n\t\t * @param channel number\n\t\t * @param delay number delay samples\n\t\t */\n\t\tget(channel, delay) {\n\t\t\tlet readHead = this.writeHead[channel] - Math.floor(delay);\n\t\t\tif (readHead < 0) {\n\t\t\t\treadHead += this.size;\n\t\t\t}\n\t\t\treturn this.buffer[channel][readHead];\n\t\t}\n\t}\n");const Pa="feedback-comb-filter";La(Pa,'\n\tclass FeedbackCombFilterWorklet extends SingleIOProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(options);\n\t\t\tthis.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);\n\t\t}\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: "delayTime",\n\t\t\t\tdefaultValue: 0.1,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 1,\n\t\t\t\tautomationRate: "k-rate"\n\t\t\t}, {\n\t\t\t\tname: "feedback",\n\t\t\t\tdefaultValue: 0.5,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 0.9999,\n\t\t\t\tautomationRate: "k-rate"\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, channel, parameters) {\n\t\t\tconst delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);\n\t\t\tthis.delayLine.push(channel, input + delayedSample * parameters.feedback);\n\t\t\treturn delayedSample;\n\t\t}\n\t}\n');class Va extends za{constructor(){super(ur(Va.getDefaults(),arguments,["delayTime","resonance"])),this.name="FeedbackCombFilter";const t=ur(Va.getDefaults(),arguments,["delayTime","resonance"]);this.input=new oi({context:this.context}),this.output=new oi({context:this.context}),this.delayTime=new ei({context:this.context,value:t.delayTime,units:"time",minValue:0,maxValue:1,param:this._dummyParam,swappable:!0}),this.resonance=new ei({context:this.context,value:t.resonance,units:"normalRange",param:this._dummyParam,swappable:!0}),Cr(this,["resonance","delayTime"])}_audioWorkletName(){return Pa}static getDefaults(){return Object.assign(ni.getDefaults(),{delayTime:.1,resonance:.5})}onReady(t){si(this.input,t,this.output);const e=t.parameters.get("delayTime");this.delayTime.setParam(e);const n=t.parameters.get("feedback");this.resonance.setParam(n)}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.delayTime.dispose(),this.resonance.dispose(),this}}class Ba extends ni{constructor(){super(ur(Ba.getDefaults(),arguments,["frequency","type"])),this.name="OnePoleFilter";const t=ur(Ba.getDefaults(),arguments,["frequency","type"]);this._frequency=t.frequency,this._type=t.type,this.input=new oi({context:this.context}),this.output=new oi({context:this.context}),this._createFilter()}static getDefaults(){return Object.assign(ni.getDefaults(),{frequency:880,type:"lowpass"})}_createFilter(){const t=this._filter,e=this.toFrequency(this._frequency),n=1/(2*Math.PI*e);if("lowpass"===this._type){const t=1/(n*this.context.sampleRate),e=t-1;this._filter=this.context.createIIRFilter([t,0],[1,e])}else{const t=1/(n*this.context.sampleRate)-1;this._filter=this.context.createIIRFilter([1,-1],[1,t])}this.input.chain(this._filter,this.output),t&&this.context.setTimeout((()=>{this.disposed||(this.input.disconnect(t),t.disconnect())}),this.blockTime)}get frequency(){return this._frequency}set frequency(t){this._frequency=t,this._createFilter()}get type(){return this._type}set type(t){this._type=t,this._createFilter()}getFrequencyResponse(t=128){const e=new Float32Array(t);for(let n=0;n<t;n++){const s=19980*Math.pow(n/t,2)+20;e[n]=s}const n=new Float32Array(t),s=new Float32Array(t);return this._filter.getFrequencyResponse(e,n,s),n}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this._filter.disconnect(),this}}class Wa extends ni{constructor(){super(ur(Wa.getDefaults(),arguments,["delayTime","resonance","dampening"])),this.name="LowpassCombFilter";const t=ur(Wa.getDefaults(),arguments,["delayTime","resonance","dampening"]);this._combFilter=this.output=new Va({context:this.context,delayTime:t.delayTime,resonance:t.resonance}),this.delayTime=this._combFilter.delayTime,this.resonance=this._combFilter.resonance,this._lowpass=this.input=new Ba({context:this.context,frequency:t.dampening,type:"lowpass"}),this._lowpass.connect(this._combFilter)}static getDefaults(){return Object.assign(ni.getDefaults(),{dampening:3e3,delayTime:.1,resonance:.5})}get dampening(){return this._lowpass.frequency}set dampening(t){this._lowpass.frequency=t}dispose(){return super.dispose(),this._combFilter.dispose(),this._lowpass.dispose(),this}}class qa extends xa{constructor(){super(ur(qa.getDefaults(),arguments)),this.name="PluckSynth";const t=ur(qa.getDefaults(),arguments);this._noise=new Li({context:this.context,type:"pink"}),this.attackNoise=t.attackNoise,this._lfcf=new Wa({context:this.context,dampening:t.dampening,resonance:t.resonance}),this.resonance=t.resonance,this.release=t.release,this._noise.connect(this._lfcf),this._lfcf.connect(this.output)}static getDefaults(){return lr(xa.getDefaults(),{attackNoise:1,dampening:4e3,resonance:.7,release:1})}get dampening(){return this._lfcf.dampening}set dampening(t){this._lfcf.dampening=t}triggerAttack(t,e){const n=this.toFrequency(t);e=this.toSeconds(e);const s=1/n;return this._lfcf.delayTime.setValueAtTime(s,e),this._noise.start(e),this._noise.stop(e+s*this.attackNoise),this._lfcf.resonance.cancelScheduledValues(e),this._lfcf.resonance.setValueAtTime(this.resonance,e),this}triggerRelease(t){return this._lfcf.resonance.linearRampTo(0,this.release,t),this}dispose(){return super.dispose(),this._noise.dispose(),this._lfcf.dispose(),this}}class Ua extends xa{constructor(){super(ur(Ua.getDefaults(),arguments,["voice","options"])),this.name="PolySynth",this._availableVoices=[],this._activeVoices=[],this._voices=[],this._gcTimeout=-1,this._averageActiveVoices=0,this._syncedRelease=t=>this.releaseAll(t);const t=ur(Ua.getDefaults(),arguments,["voice","options"]);Bs(!Fs(t.voice),"DEPRECATED: The polyphony count is no longer the first argument.");const e=t.voice.getDefaults();this.options=Object.assign(e,t.options),this.voice=t.voice,this.maxPolyphony=t.maxPolyphony,this._dummyVoice=this._getNextAvailableVoice();const n=this._voices.indexOf(this._dummyVoice);this._voices.splice(n,1),this._gcTimeout=this.context.setInterval(this._collectGarbage.bind(this),1)}static getDefaults(){return Object.assign(xa.getDefaults(),{maxPolyphony:32,options:{},voice:_a})}get activeVoices(){return this._activeVoices.length}_makeVoiceAvailable(t){this._availableVoices.push(t);const e=this._activeVoices.findIndex((e=>e.voice===t));this._activeVoices.splice(e,1)}_getNextAvailableVoice(){if(this._availableVoices.length)return this._availableVoices.shift();if(this._voices.length<this.maxPolyphony){const t=new this.voice(Object.assign(this.options,{context:this.context,onsilence:this._makeVoiceAvailable.bind(this)}));return Bs(t instanceof va,"Voice must extend Monophonic class"),t.connect(this.output),this._voices.push(t),t}Zs("Max polyphony exceeded. Note dropped.")}_collectGarbage(){if(this._averageActiveVoices=Math.max(.95*this._averageActiveVoices,this.activeVoices),this._availableVoices.length&&this._voices.length>Math.ceil(this._averageActiveVoices+1)){const t=this._availableVoices.shift(),e=this._voices.indexOf(t);this._voices.splice(e,1),this.context.isOffline||t.dispose()}}_triggerAttack(t,e,n){t.forEach((t=>{const s=new xi(this.context,t).toMidi(),r=this._getNextAvailableVoice();r&&(r.triggerAttack(t,e,n),this._activeVoices.push({midi:s,voice:r,released:!1}),this.log("triggerAttack",t,e))}))}_triggerRelease(t,e){t.forEach((t=>{const n=new xi(this.context,t).toMidi(),s=this._activeVoices.find((({midi:t,released:e})=>t===n&&!e));s&&(s.voice.triggerRelease(e),s.released=!0,this.log("triggerRelease",t,e))}))}_scheduleEvent(t,e,n,s){Bs(!this.disposed,"Synth was already disposed"),n<=this.now()?"attack"===t?this._triggerAttack(e,n,s):this._triggerRelease(e,n):this.context.setTimeout((()=>{this.disposed||this._scheduleEvent(t,e,n,s)}),n-this.now())}triggerAttack(t,e,n){Array.isArray(t)||(t=[t]);const s=this.toSeconds(e);return this._scheduleEvent("attack",t,s,n),this}triggerRelease(t,e){Array.isArray(t)||(t=[t]);const n=this.toSeconds(e);return this._scheduleEvent("release",t,n),this}triggerAttackRelease(t,e,n,s){const r=this.toSeconds(n);if(this.triggerAttack(t,r,s),zs(e)){Bs(zs(t),"If the duration is an array, the notes must also be an array");for(let n=0;n<t.length;n++){const s=e[Math.min(n,e.length-1)],i=this.toSeconds(s);Bs(i>0,"The duration must be greater than 0"),this.triggerRelease(t[n],r+i)}}else{const n=this.toSeconds(e);Bs(n>0,"The duration must be greater than 0"),this.triggerRelease(t,r+n)}return this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1),this.context.transport.on("stop",this._syncedRelease),this.context.transport.on("pause",this._syncedRelease),this.context.transport.on("loopEnd",this._syncedRelease)),this}set(t){const e=hr(t,["onsilence","context"]);return this.options=lr(this.options,e),this._voices.forEach((t=>t.set(e))),this._dummyVoice.set(e),this}get(){return this._dummyVoice.get()}releaseAll(t){const e=this.toSeconds(t);return this._activeVoices.forEach((({voice:t})=>{t.triggerRelease(e)})),this}dispose(){return super.dispose(),this._dummyVoice.dispose(),this._voices.forEach((t=>t.dispose())),this._activeVoices=[],this._availableVoices=[],this.context.clearInterval(this._gcTimeout),this}}class Ga extends xa{constructor(){super(ur(Ga.getDefaults(),arguments,["urls","onload","baseUrl"],"urls")),this.name="Sampler",this._activeSources=new Map;const t=ur(Ga.getDefaults(),arguments,["urls","onload","baseUrl"],"urls"),e={};Object.keys(t.urls).forEach((n=>{const s=parseInt(n,10);if(Bs(Vs(n)||Fs(s)&&isFinite(s),`url key is neither a note or midi pitch: ${n}`),Vs(n)){const s=new Hr(this.context,n).toMidi();e[s]=t.urls[n]}else Fs(s)&&isFinite(s)&&(e[s]=t.urls[s])})),this._buffers=new bi({urls:e,onload:t.onload,baseUrl:t.baseUrl,onerror:t.onerror}),this.attack=t.attack,this.release=t.release,this.curve=t.curve,this._buffers.loaded&&Promise.resolve().then(t.onload)}static getDefaults(){return Object.assign(xa.getDefaults(),{attack:0,baseUrl:"",curve:"exponential",onload:Ar,onerror:Ar,release:.1,urls:{}})}_findClosest(t){let e=0;for(;e<96;){if(this._buffers.has(t+e))return-e;if(this._buffers.has(t-e))return e;e++}throw new Error(`No available buffers for note: ${t}`)}triggerAttack(t,e,n=1){return this.log("triggerAttack",t,e,n),Array.isArray(t)||(t=[t]),t.forEach((t=>{const s=Wr(new Hr(this.context,t).toFrequency()),r=Math.round(s),i=s-r,a=this._findClosest(r),o=r-a,l=this._buffers.get(o),u=Pr(a+i),c=new Mi({url:l,context:this.context,curve:this.curve,fadeIn:this.attack,fadeOut:this.release,playbackRate:u}).connect(this.output);c.start(e,0,l.duration/u,n),zs(this._activeSources.get(r))||this._activeSources.set(r,[]),this._activeSources.get(r).push(c),c.onended=()=>{if(this._activeSources&&this._activeSources.has(r)){const t=this._activeSources.get(r),e=t.indexOf(c);-1!==e&&t.splice(e,1)}}})),this}triggerRelease(t,e){return this.log("triggerRelease",t,e),Array.isArray(t)||(t=[t]),t.forEach((t=>{const n=new Hr(this.context,t).toMidi();if(this._activeSources.has(n)&&this._activeSources.get(n).length){const t=this._activeSources.get(n);e=this.toSeconds(e),t.forEach((t=>{t.stop(e)})),this._activeSources.set(n,[])}})),this}releaseAll(t){const e=this.toSeconds(t);return this._activeSources.forEach((t=>{for(;t.length;)t.shift().stop(e)})),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}triggerAttackRelease(t,e,n,s=1){const r=this.toSeconds(n);return this.triggerAttack(t,r,s),zs(e)?(Bs(zs(t),"notes must be an array when duration is array"),t.forEach(((t,n)=>{const s=e[Math.min(n,e.length-1)];this.triggerRelease(t,r+this.toSeconds(s))}))):this.triggerRelease(t,r+this.toSeconds(e)),this}add(t,e,n){if(Bs(Vs(t)||isFinite(t),`note must be a pitch or midi: ${t}`),Vs(t)){const s=new Hr(this.context,t).toMidi();this._buffers.add(s,e,n)}else this._buffers.add(t,e,n);return this}get loaded(){return this._buffers.loaded}dispose(){return super.dispose(),this._buffers.dispose(),this._activeSources.forEach((t=>{t.forEach((t=>t.dispose()))})),this._activeSources.clear(),this}}tr([ia(0)],Ga.prototype,"attack",void 0),tr([ia(0)],Ga.prototype,"release",void 0);class ja extends Jr{constructor(){super(ur(ja.getDefaults(),arguments,["callback","value"])),this.name="ToneEvent",this._state=new ti("stopped"),this._startOffset=0;const t=ur(ja.getDefaults(),arguments,["callback","value"]);this._loop=t.loop,this.callback=t.callback,this.value=t.value,this._loopStart=this.toTicks(t.loopStart),this._loopEnd=this.toTicks(t.loopEnd),this._playbackRate=t.playbackRate,this._probability=t.probability,this._humanize=t.humanize,this.mute=t.mute,this._playbackRate=t.playbackRate,this._state.increasing=!0,this._rescheduleEvents()}static getDefaults(){return Object.assign(Jr.getDefaults(),{callback:Ar,humanize:!1,loop:!1,loopEnd:"1m",loopStart:0,mute:!1,playbackRate:1,probability:1,value:null})}_rescheduleEvents(t=-1){this._state.forEachFrom(t,(t=>{let e;if("started"===t.state){-1!==t.id&&this.context.transport.clear(t.id);const n=t.time+Math.round(this.startOffset/this._playbackRate);if(!0===this._loop||Fs(this._loop)&&this._loop>1){e=1/0,Fs(this._loop)&&(e=this._loop*this._getLoopDuration());const s=this._state.getAfter(n);null!==s&&(e=Math.min(e,s.time-n)),e!==1/0&&(e=new wi(this.context,e));const r=new wi(this.context,this._getLoopDuration());t.id=this.context.transport.scheduleRepeat(this._tick.bind(this),r,new wi(this.context,n),e)}else t.id=this.context.transport.schedule(this._tick.bind(this),new wi(this.context,n))}}))}get state(){return this._state.getValueAtTime(this.context.transport.ticks)}get startOffset(){return this._startOffset}set startOffset(t){this._startOffset=t}get probability(){return this._probability}set probability(t){this._probability=t}get humanize(){return this._humanize}set humanize(t){this._humanize=t}start(t){const e=this.toTicks(t);return"stopped"===this._state.getValueAtTime(e)&&(this._state.add({id:-1,state:"started",time:e}),this._rescheduleEvents(e)),this}stop(t){this.cancel(t);const e=this.toTicks(t);if("started"===this._state.getValueAtTime(e)){this._state.setStateAtTime("stopped",e,{id:-1});const t=this._state.getBefore(e);let n=e;null!==t&&(n=t.time),this._rescheduleEvents(n)}return this}cancel(t){t=cr(t,-1/0);const e=this.toTicks(t);return this._state.forEachFrom(e,(t=>{this.context.transport.clear(t.id)})),this._state.cancel(e),this}_tick(t){const e=this.context.transport.getTicksAtTime(t);if(!this.mute&&"started"===this._state.getValueAtTime(e)){if(this.probability<1&&Math.random()>this.probability)return;if(this.humanize){let e=.02;Ls(this.humanize)||(e=this.toSeconds(this.humanize)),t+=(2*Math.random()-1)*e}this.callback(t,this.value)}}_getLoopDuration(){return(this._loopEnd-this._loopStart)/this._playbackRate}get loop(){return this._loop}set loop(t){this._loop=t,this._rescheduleEvents()}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t,this._rescheduleEvents()}get loopEnd(){return new wi(this.context,this._loopEnd).toSeconds()}set loopEnd(t){this._loopEnd=this.toTicks(t),this._loop&&this._rescheduleEvents()}get loopStart(){return new wi(this.context,this._loopStart).toSeconds()}set loopStart(t){this._loopStart=this.toTicks(t),this._loop&&this._rescheduleEvents()}get progress(){if(this._loop){const t=this.context.transport.ticks,e=this._state.get(t);if(null!==e&&"started"===e.state){const n=this._getLoopDuration();return(t-e.time)%n/n}return 0}return 0}dispose(){return super.dispose(),this.cancel(),this._state.dispose(),this}}class Ha extends Jr{constructor(){super(ur(Ha.getDefaults(),arguments,["callback","interval"])),this.name="Loop";const t=ur(Ha.getDefaults(),arguments,["callback","interval"]);this._event=new ja({context:this.context,callback:this._tick.bind(this),loop:!0,loopEnd:t.interval,playbackRate:t.playbackRate,probability:t.probability}),this.callback=t.callback,this.iterations=t.iterations}static getDefaults(){return Object.assign(Jr.getDefaults(),{interval:"4n",callback:Ar,playbackRate:1,iterations:1/0,probability:1,mute:!1,humanize:!1})}start(t){return this._event.start(t),this}stop(t){return this._event.stop(t),this}cancel(t){return this._event.cancel(t),this}_tick(t){this.callback(t)}get state(){return this._event.state}get progress(){return this._event.progress}get interval(){return this._event.loopEnd}set interval(t){this._event.loopEnd=t}get playbackRate(){return this._event.playbackRate}set playbackRate(t){this._event.playbackRate=t}get humanize(){return this._event.humanize}set humanize(t){this._event.humanize=t}get probability(){return this._event.probability}set probability(t){this._event.probability=t}get mute(){return this._event.mute}set mute(t){this._event.mute=t}get iterations(){return!0===this._event.loop?1/0:this._event.loop}set iterations(t){this._event.loop=t===1/0||t}dispose(){return super.dispose(),this._event.dispose(),this}}class Xa extends ja{constructor(){super(ur(Xa.getDefaults(),arguments,["callback","events"])),this.name="Part",this._state=new ti("stopped"),this._events=new Set;const t=ur(Xa.getDefaults(),arguments,["callback","events"]);this._state.increasing=!0,t.events.forEach((t=>{zs(t)?this.add(t[0],t[1]):this.add(t)}))}static getDefaults(){return Object.assign(ja.getDefaults(),{events:[]})}start(t,e){const n=this.toTicks(t);if("started"!==this._state.getValueAtTime(n)){e=cr(e,this._loop?this._loopStart:0),e=this._loop?cr(e,this._loopStart):cr(e,0);const t=this.toTicks(e);this._state.add({id:-1,offset:t,state:"started",time:n}),this._forEach((e=>{this._startNote(e,n,t)}))}return this}_startNote(t,e,n){e-=n,this._loop?t.startOffset>=this._loopStart&&t.startOffset<this._loopEnd?(t.startOffset<n&&(e+=this._getLoopDuration()),t.start(new wi(this.context,e))):t.startOffset<this._loopStart&&t.startOffset>=n&&(t.loop=!1,t.start(new wi(this.context,e))):t.startOffset>=n&&t.start(new wi(this.context,e))}get startOffset(){return this._startOffset}set startOffset(t){this._startOffset=t,this._forEach((t=>{t.startOffset+=this._startOffset}))}stop(t){const e=this.toTicks(t);return this._state.cancel(e),this._state.setStateAtTime("stopped",e),this._forEach((e=>{e.stop(t)})),this}at(t,e){const n=new Zr(this.context,t).toTicks(),s=new wi(this.context,1).toSeconds(),r=this._events.values();let i=r.next();for(;!i.done;){const t=i.value;if(Math.abs(n-t.startOffset)<s)return Ds(e)&&(t.value=e),t;i=r.next()}return Ds(e)?(this.add(t,e),this.at(t)):null}add(t,e){t instanceof Object&&Reflect.has(t,"time")&&(t=(e=t).time);const n=this.toTicks(t);let s;return e instanceof ja?(s=e,s.callback=this._tick.bind(this)):s=new ja({callback:this._tick.bind(this),context:this.context,value:e}),s.startOffset=n,s.set({humanize:this.humanize,loop:this.loop,loopEnd:this.loopEnd,loopStart:this.loopStart,playbackRate:this.playbackRate,probability:this.probability}),this._events.add(s),this._restartEvent(s),this}_restartEvent(t){this._state.forEach((e=>{"started"===e.state?this._startNote(t,e.time,e.offset):t.stop(new wi(this.context,e.time))}))}remove(t,e){return Ms(t)&&t.hasOwnProperty("time")&&(t=(e=t).time),t=this.toTicks(t),this._events.forEach((n=>{n.startOffset===t&&(Rs(e)||Ds(e)&&n.value===e)&&(this._events.delete(n),n.dispose())})),this}clear(){return this._forEach((t=>t.dispose())),this._events.clear(),this}cancel(t){return this._forEach((e=>e.cancel(t))),this._state.cancel(this.toTicks(t)),this}_forEach(t){return this._events&&this._events.forEach((e=>{e instanceof Xa?e._forEach(t):t(e)})),this}_setAll(t,e){this._forEach((n=>{n[t]=e}))}_tick(t,e){this.mute||this.callback(t,e)}_testLoopBoundries(t){this._loop&&(t.startOffset<this._loopStart||t.startOffset>=this._loopEnd)?t.cancel(0):"stopped"===t.state&&this._restartEvent(t)}get probability(){return this._probability}set probability(t){this._probability=t,this._setAll("probability",t)}get humanize(){return this._humanize}set humanize(t){this._humanize=t,this._setAll("humanize",t)}get loop(){return this._loop}set loop(t){this._loop=t,this._forEach((e=>{e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.loop=t,this._testLoopBoundries(e)}))}get loopEnd(){return new wi(this.context,this._loopEnd).toSeconds()}set loopEnd(t){this._loopEnd=this.toTicks(t),this._loop&&this._forEach((e=>{e.loopEnd=t,this._testLoopBoundries(e)}))}get loopStart(){return new wi(this.context,this._loopStart).toSeconds()}set loopStart(t){this._loopStart=this.toTicks(t),this._loop&&this._forEach((t=>{t.loopStart=this.loopStart,this._testLoopBoundries(t)}))}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t,this._setAll("playbackRate",t)}get length(){return this._events.size}dispose(){return super.dispose(),this.clear(),this}}function*Ka(t){let e=0;for(;e<t;)e=br(e,0,t-1),yield e,e++}function*Ya(t){let e=t-1;for(;e>=0;)e=br(e,0,t-1),yield e,e--}function*Za(t,e){for(;;)yield*e(t)}function*Qa(t,e){let n=e?0:t-1;for(;;)n=br(n,0,t-1),yield n,e?(n++,n>=t-1&&(e=!1)):(n--,n<=0&&(e=!0))}function*Ja(t){let e=0,n=0;for(;e<t;)e=br(e,0,t-1),yield e,n++,e+=n%2?2:-1}function*to(t){let e=t-1,n=0;for(;e>=0;)e=br(e,0,t-1),yield e,n++,e+=n%2?-2:1}function*eo(t){const e=[];for(let n=0;n<t;n++)e.push(n);for(;e.length>0;){const n=br(e.splice(Math.floor(e.length*Math.random()),1)[0],0,t-1);yield n}}function*no(t,e="up",n=0){switch(Bs(t>=1,"The number of values must be at least one"),e){case"up":yield*Za(t,Ka);case"down":yield*Za(t,Ya);case"upDown":yield*Qa(t,!0);case"downUp":yield*Qa(t,!1);case"alternateUp":yield*Za(t,Ja);case"alternateDown":yield*Za(t,to);case"random":yield*function*(t){for(;;){const e=Math.floor(Math.random()*t);yield e}}(t);case"randomOnce":yield*Za(t,eo);case"randomWalk":yield*function*(t){let e=Math.floor(Math.random()*t);for(;;)0===e?e++:e===t-1||Math.random()<.5?e--:e++,yield e}(t)}}class so extends Ha{constructor(){super(ur(so.getDefaults(),arguments,["callback","values","pattern"])),this.name="Pattern";const t=ur(so.getDefaults(),arguments,["callback","values","pattern"]);this.callback=t.callback,this._values=t.values,this._pattern=no(t.values.length,t.pattern),this._type=t.pattern}static getDefaults(){return Object.assign(Ha.getDefaults(),{pattern:"up",values:[],callback:Ar})}_tick(t){const e=this._pattern.next();this._index=e.value,this._value=this._values[e.value],this.callback(t,this._value)}get values(){return this._values}set values(t){this._values=t,this.pattern=this._type}get value(){return this._value}get index(){return this._index}get pattern(){return this._type}set pattern(t){this._type=t,this._pattern=no(this._values.length,this._type)}}class ro extends ja{constructor(){super(ur(ro.getDefaults(),arguments,["callback","events","subdivision"])),this.name="Sequence",this._part=new Xa({callback:this._seqCallback.bind(this),context:this.context}),this._events=[],this._eventsArray=[];const t=ur(ro.getDefaults(),arguments,["callback","events","subdivision"]);this._subdivision=this.toTicks(t.subdivision),this.events=t.events,this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this.playbackRate=t.playbackRate,this.probability=t.probability,this.humanize=t.humanize,this.mute=t.mute,this.playbackRate=t.playbackRate}static getDefaults(){return Object.assign(hr(ja.getDefaults(),["value"]),{events:[],loop:!0,loopEnd:0,loopStart:0,subdivision:"8n"})}_seqCallback(t,e){null===e||this.mute||this.callback(t,e)}get events(){return this._events}set events(t){this.clear(),this._eventsArray=t,this._events=this._createSequence(this._eventsArray),this._eventsUpdated()}start(t,e){return this._part.start(t,e?this._indexTime(e):e),this}stop(t){return this._part.stop(t),this}get subdivision(){return new wi(this.context,this._subdivision).toSeconds()}_createSequence(t){return new Proxy(t,{get:(t,e)=>t[e],set:(t,e,n)=>(Ps(e)&&isFinite(parseInt(e,10))&&zs(n)?t[e]=this._createSequence(n):t[e]=n,this._eventsUpdated(),!0)})}_eventsUpdated(){this._part.clear(),this._rescheduleSequence(this._eventsArray,this._subdivision,this.startOffset),this.loopEnd=this.loopEnd}_rescheduleSequence(t,e,n){t.forEach(((t,s)=>{const r=s*e+n;if(zs(t))this._rescheduleSequence(t,e/t.length,r);else{const e=new wi(this.context,r,"i").toSeconds();this._part.add(e,t)}}))}_indexTime(t){return new wi(this.context,t*this._subdivision+this.startOffset).toSeconds()}clear(){return this._part.clear(),this}dispose(){return super.dispose(),this._part.dispose(),this}get loop(){return this._part.loop}set loop(t){this._part.loop=t}get loopStart(){return this._loopStart}set loopStart(t){this._loopStart=t,this._part.loopStart=this._indexTime(t)}get loopEnd(){return this._loopEnd}set loopEnd(t){this._loopEnd=t,this._part.loopEnd=0===t?this._indexTime(this._eventsArray.length):this._indexTime(t)}get startOffset(){return this._part.startOffset}set startOffset(t){this._part.startOffset=t}get playbackRate(){return this._part.playbackRate}set playbackRate(t){this._part.playbackRate=t}get probability(){return this._part.probability}set probability(t){this._part.probability=t}get progress(){return this._part.progress}get humanize(){return this._part.humanize}set humanize(t){this._part.humanize=t}get length(){return this._part.length}}class io extends ni{constructor(){super(Object.assign(ur(io.getDefaults(),arguments,["fade"]))),this.name="CrossFade",this._panner=this.context.createStereoPanner(),this._split=this.context.createChannelSplitter(2),this._g2a=new ca({context:this.context}),this.a=new oi({context:this.context,gain:0}),this.b=new oi({context:this.context,gain:0}),this.output=new oi({context:this.context}),this._internalChannels=[this.a,this.b];const t=ur(io.getDefaults(),arguments,["fade"]);this.fade=new ci({context:this.context,units:"normalRange",value:t.fade}),Cr(this,"fade"),this.context.getConstant(1).connect(this._panner),this._panner.connect(this._split),this._panner.channelCount=1,this._panner.channelCountMode="explicit",ri(this._split,this.a.gain,0),ri(this._split,this.b.gain,1),this.fade.chain(this._g2a,this._panner.pan),this.a.connect(this.output),this.b.connect(this.output)}static getDefaults(){return Object.assign(ni.getDefaults(),{fade:.5})}dispose(){return super.dispose(),this.a.dispose(),this.b.dispose(),this.output.dispose(),this.fade.dispose(),this._g2a.dispose(),this._panner.disconnect(),this._split.disconnect(),this}}class ao extends ni{constructor(t){super(t),this.name="Effect",this._dryWet=new io({context:this.context}),this.wet=this._dryWet.fade,this.effectSend=new oi({context:this.context}),this.effectReturn=new oi({context:this.context}),this.input=new oi({context:this.context}),this.output=this._dryWet,this.input.fan(this._dryWet.a,this.effectSend),this.effectReturn.connect(this._dryWet.b),this.wet.setValueAtTime(t.wet,0),this._internalChannels=[this.effectReturn,this.effectSend],Cr(this,"wet")}static getDefaults(){return Object.assign(ni.getDefaults(),{wet:1})}connectEffect(t){return this._internalChannels.push(t),this.effectSend.chain(t,this.effectReturn),this}dispose(){return super.dispose(),this._dryWet.dispose(),this.effectSend.dispose(),this.effectReturn.dispose(),this.wet.dispose(),this}}class oo extends ao{constructor(t){super(t),this.name="LFOEffect",this._lfo=new sa({context:this.context,frequency:t.frequency,amplitude:t.depth}),this.depth=this._lfo.amplitude,this.frequency=this._lfo.frequency,this.type=t.type,Cr(this,["frequency","depth"])}static getDefaults(){return Object.assign(ao.getDefaults(),{frequency:1,type:"sine",depth:1})}start(t){return this._lfo.start(t),this}stop(t){return this._lfo.stop(t),this}sync(){return this._lfo.sync(),this}unsync(){return this._lfo.unsync(),this}get type(){return this._lfo.type}set type(t){this._lfo.type=t}dispose(){return super.dispose(),this._lfo.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class lo extends oo{constructor(){super(ur(lo.getDefaults(),arguments,["frequency","baseFrequency","octaves"])),this.name="AutoFilter";const t=ur(lo.getDefaults(),arguments,["frequency","baseFrequency","octaves"]);this.filter=new Ia(Object.assign(t.filter,{context:this.context})),this.connectEffect(this.filter),this._lfo.connect(this.filter.frequency),this.octaves=t.octaves,this.baseFrequency=t.baseFrequency}static getDefaults(){return Object.assign(oo.getDefaults(),{baseFrequency:200,octaves:2.6,filter:{type:"lowpass",rolloff:-12,Q:1}})}get baseFrequency(){return this._lfo.min}set baseFrequency(t){this._lfo.min=this.toFrequency(t),this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(t){this._octaves=t,this._lfo.max=this._lfo.min*Math.pow(2,t)}dispose(){return super.dispose(),this.filter.dispose(),this}}class uo extends ni{constructor(){super(Object.assign(ur(uo.getDefaults(),arguments,["pan"]))),this.name="Panner",this._panner=this.context.createStereoPanner(),this.input=this._panner,this.output=this._panner;const t=ur(uo.getDefaults(),arguments,["pan"]);this.pan=new ei({context:this.context,param:this._panner.pan,value:t.pan,minValue:-1,maxValue:1}),this._panner.channelCount=t.channelCount,this._panner.channelCountMode="explicit",Cr(this,"pan")}static getDefaults(){return Object.assign(ni.getDefaults(),{pan:0,channelCount:1})}dispose(){return super.dispose(),this._panner.disconnect(),this.pan.dispose(),this}}class co extends oo{constructor(){super(ur(co.getDefaults(),arguments,["frequency"])),this.name="AutoPanner";const t=ur(co.getDefaults(),arguments,["frequency"]);this._panner=new uo({context:this.context,channelCount:t.channelCount}),this.connectEffect(this._panner),this._lfo.connect(this._panner.pan),this._lfo.min=-1,this._lfo.max=1}static getDefaults(){return Object.assign(oo.getDefaults(),{channelCount:1})}dispose(){return super.dispose(),this._panner.dispose(),this}}class ho extends ni{constructor(){super(ur(ho.getDefaults(),arguments,["smoothing"])),this.name="Follower";const t=ur(ho.getDefaults(),arguments,["smoothing"]);this._abs=this.input=new ua({context:this.context}),this._lowpass=this.output=new Ba({context:this.context,frequency:1/this.toSeconds(t.smoothing),type:"lowpass"}),this._abs.connect(this._lowpass),this._smoothing=t.smoothing}static getDefaults(){return Object.assign(ni.getDefaults(),{smoothing:.05})}get smoothing(){return this._smoothing}set smoothing(t){this._smoothing=t,this._lowpass.frequency=1/this.toSeconds(this.smoothing)}dispose(){return super.dispose(),this._abs.dispose(),this._lowpass.dispose(),this}}class po extends ao{constructor(){super(ur(po.getDefaults(),arguments,["baseFrequency","octaves","sensitivity"])),this.name="AutoWah";const t=ur(po.getDefaults(),arguments,["baseFrequency","octaves","sensitivity"]);this._follower=new ho({context:this.context,smoothing:t.follower}),this._sweepRange=new ma({context:this.context,min:0,max:1,exponent:.5}),this._baseFrequency=this.toFrequency(t.baseFrequency),this._octaves=t.octaves,this._inputBoost=new oi({context:this.context}),this._bandpass=new Ia({context:this.context,rolloff:-48,frequency:0,Q:t.Q}),this._peaking=new Ia({context:this.context,type:"peaking"}),this._peaking.gain.value=t.gain,this.gain=this._peaking.gain,this.Q=this._bandpass.Q,this.effectSend.chain(this._inputBoost,this._follower,this._sweepRange),this._sweepRange.connect(this._bandpass.frequency),this._sweepRange.connect(this._peaking.frequency),this.effectSend.chain(this._bandpass,this._peaking,this.effectReturn),this._setSweepRange(),this.sensitivity=t.sensitivity,Cr(this,["gain","Q"])}static getDefaults(){return Object.assign(ao.getDefaults(),{baseFrequency:100,octaves:6,sensitivity:0,Q:2,gain:2,follower:.2})}get octaves(){return this._octaves}set octaves(t){this._octaves=t,this._setSweepRange()}get follower(){return this._follower.smoothing}set follower(t){this._follower.smoothing=t}get baseFrequency(){return this._baseFrequency}set baseFrequency(t){this._baseFrequency=this.toFrequency(t),this._setSweepRange()}get sensitivity(){return zr(1/this._inputBoost.gain.value)}set sensitivity(t){this._inputBoost.gain.value=1/Lr(t)}_setSweepRange(){this._sweepRange.min=this._baseFrequency,this._sweepRange.max=Math.min(this._baseFrequency*Math.pow(2,this._octaves),this.context.sampleRate/2)}dispose(){return super.dispose(),this._follower.dispose(),this._sweepRange.dispose(),this._bandpass.dispose(),this._peaking.dispose(),this._inputBoost.dispose(),this}}const fo="bit-crusher";La(fo,"\n\tclass BitCrusherWorklet extends SingleIOProcessor {\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"bits\",\n\t\t\t\tdefaultValue: 12,\n\t\t\t\tminValue: 1,\n\t\t\t\tmaxValue: 16,\n\t\t\t\tautomationRate: 'k-rate'\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, _channel, parameters) {\n\t\t\tconst step = Math.pow(0.5, parameters.bits - 1);\n\t\t\tconst val = step * Math.floor(input / step + 0.5);\n\t\t\treturn val;\n\t\t}\n\t}\n");class mo extends ao{constructor(){super(ur(mo.getDefaults(),arguments,["bits"])),this.name="BitCrusher";const t=ur(mo.getDefaults(),arguments,["bits"]);this._bitCrusherWorklet=new go({context:this.context,bits:t.bits}),this.connectEffect(this._bitCrusherWorklet),this.bits=this._bitCrusherWorklet.bits}static getDefaults(){return Object.assign(ao.getDefaults(),{bits:4})}dispose(){return super.dispose(),this._bitCrusherWorklet.dispose(),this}}class go extends za{constructor(){super(ur(go.getDefaults(),arguments)),this.name="BitCrusherWorklet";const t=ur(go.getDefaults(),arguments);this.input=new oi({context:this.context}),this.output=new oi({context:this.context}),this.bits=new ei({context:this.context,value:t.bits,units:"positive",minValue:1,maxValue:16,param:this._dummyParam,swappable:!0})}static getDefaults(){return Object.assign(za.getDefaults(),{bits:12})}_audioWorkletName(){return fo}onReady(t){si(this.input,t,this.output);const e=t.parameters.get("bits");this.bits.setParam(e)}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.bits.dispose(),this}}class yo extends ao{constructor(){super(ur(yo.getDefaults(),arguments,["order"])),this.name="Chebyshev";const t=ur(yo.getDefaults(),arguments,["order"]);this._shaper=new Ei({context:this.context,length:4096}),this._order=t.order,this.connectEffect(this._shaper),this.order=t.order,this.oversample=t.oversample}static getDefaults(){return Object.assign(ao.getDefaults(),{order:1,oversample:"none"})}_getCoefficient(t,e,n){return n.has(e)||(0===e?n.set(e,0):1===e?n.set(e,t):n.set(e,2*t*this._getCoefficient(t,e-1,n)-this._getCoefficient(t,e-2,n))),n.get(e)}get order(){return this._order}set order(t){Bs(Number.isInteger(t),"'order' must be an integer"),this._order=t,this._shaper.setMap((e=>this._getCoefficient(e,t,new Map)))}get oversample(){return this._shaper.oversample}set oversample(t){this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.dispose(),this}}class bo extends ni{constructor(){super(ur(bo.getDefaults(),arguments,["channels"])),this.name="Split";const t=ur(bo.getDefaults(),arguments,["channels"]);this._splitter=this.input=this.output=this.context.createChannelSplitter(t.channels),this._internalChannels=[this._splitter]}static getDefaults(){return Object.assign(ni.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._splitter.disconnect(),this}}class xo extends ni{constructor(){super(ur(xo.getDefaults(),arguments,["channels"])),this.name="Merge";const t=ur(xo.getDefaults(),arguments,["channels"]);this._merger=this.output=this.input=this.context.createChannelMerger(t.channels)}static getDefaults(){return Object.assign(ni.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._merger.disconnect(),this}}class vo extends ni{constructor(t){super(t),this.name="StereoEffect",this.input=new oi({context:this.context}),this.input.channelCount=2,this.input.channelCountMode="explicit",this._dryWet=this.output=new io({context:this.context,fade:t.wet}),this.wet=this._dryWet.fade,this._split=new bo({context:this.context,channels:2}),this._merge=new xo({context:this.context,channels:2}),this.input.connect(this._split),this.input.connect(this._dryWet.a),this._merge.connect(this._dryWet.b),Cr(this,["wet"])}connectEffectLeft(...t){this._split.connect(t[0],0,0),si(...t),ri(t[t.length-1],this._merge,0,0)}connectEffectRight(...t){this._split.connect(t[0],1,0),si(...t),ri(t[t.length-1],this._merge,0,1)}static getDefaults(){return Object.assign(ni.getDefaults(),{wet:1})}dispose(){return super.dispose(),this._dryWet.dispose(),this._split.dispose(),this._merge.dispose(),this}}class wo extends vo{constructor(t){super(t),this.feedback=new ci({context:this.context,value:t.feedback,units:"normalRange"}),this._feedbackL=new oi({context:this.context}),this._feedbackR=new oi({context:this.context}),this._feedbackSplit=new bo({context:this.context,channels:2}),this._feedbackMerge=new xo({context:this.context,channels:2}),this._merge.connect(this._feedbackSplit),this._feedbackMerge.connect(this._split),this._feedbackSplit.connect(this._feedbackL,0,0),this._feedbackL.connect(this._feedbackMerge,0,0),this._feedbackSplit.connect(this._feedbackR,1,0),this._feedbackR.connect(this._feedbackMerge,0,1),this.feedback.fan(this._feedbackL.gain,this._feedbackR.gain),Cr(this,["feedback"])}static getDefaults(){return Object.assign(vo.getDefaults(),{feedback:.5})}dispose(){return super.dispose(),this.feedback.dispose(),this._feedbackL.dispose(),this._feedbackR.dispose(),this._feedbackSplit.dispose(),this._feedbackMerge.dispose(),this}}class _o extends wo{constructor(){super(ur(_o.getDefaults(),arguments,["frequency","delayTime","depth"])),this.name="Chorus";const t=ur(_o.getDefaults(),arguments,["frequency","delayTime","depth"]);this._depth=t.depth,this._delayTime=t.delayTime/1e3,this._lfoL=new sa({context:this.context,frequency:t.frequency,min:0,max:1}),this._lfoR=new sa({context:this.context,frequency:t.frequency,min:0,max:1,phase:180}),this._delayNodeL=new gi({context:this.context}),this._delayNodeR=new gi({context:this.context}),this.frequency=this._lfoL.frequency,Cr(this,["frequency"]),this._lfoL.frequency.connect(this._lfoR.frequency),this.connectEffectLeft(this._delayNodeL),this.connectEffectRight(this._delayNodeR),this._lfoL.connect(this._delayNodeL.delayTime),this._lfoR.connect(this._delayNodeR.delayTime),this.depth=this._depth,this.type=t.type,this.spread=t.spread}static getDefaults(){return Object.assign(wo.getDefaults(),{frequency:1.5,delayTime:3.5,depth:.7,type:"sine",spread:180,feedback:0,wet:.5})}get depth(){return this._depth}set depth(t){this._depth=t;const e=this._delayTime*t;this._lfoL.min=Math.max(this._delayTime-e,0),this._lfoL.max=this._delayTime+e,this._lfoR.min=Math.max(this._delayTime-e,0),this._lfoR.max=this._delayTime+e}get delayTime(){return 1e3*this._delayTime}set delayTime(t){this._delayTime=t/1e3,this.depth=this._depth}get type(){return this._lfoL.type}set type(t){this._lfoL.type=t,this._lfoR.type=t}get spread(){return this._lfoR.phase-this._lfoL.phase}set spread(t){this._lfoL.phase=90-t/2,this._lfoR.phase=t/2+90}start(t){return this._lfoL.start(t),this._lfoR.start(t),this}stop(t){return this._lfoL.stop(t),this._lfoR.stop(t),this}sync(){return this._lfoL.sync(),this._lfoR.sync(),this}unsync(){return this._lfoL.unsync(),this._lfoR.unsync(),this}dispose(){return super.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._delayNodeL.dispose(),this._delayNodeR.dispose(),this.frequency.dispose(),this}}class ko extends ao{constructor(){super(ur(ko.getDefaults(),arguments,["distortion"])),this.name="Distortion";const t=ur(ko.getDefaults(),arguments,["distortion"]);this._shaper=new Ei({context:this.context,length:4096}),this._distortion=t.distortion,this.connectEffect(this._shaper),this.distortion=t.distortion,this.oversample=t.oversample}static getDefaults(){return Object.assign(ao.getDefaults(),{distortion:.4,oversample:"none"})}get distortion(){return this._distortion}set distortion(t){this._distortion=t;const e=100*t,n=Math.PI/180;this._shaper.setMap((t=>Math.abs(t)<.001?0:(3+e)*t*20*n/(Math.PI+e*Math.abs(t))))}get oversample(){return this._shaper.oversample}set oversample(t){this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.dispose(),this}}class To extends ao{constructor(t){super(t),this.name="FeedbackEffect",this._feedbackGain=new oi({context:this.context,gain:t.feedback,units:"normalRange"}),this.feedback=this._feedbackGain.gain,Cr(this,"feedback"),this.effectReturn.chain(this._feedbackGain,this.effectSend)}static getDefaults(){return Object.assign(ao.getDefaults(),{feedback:.125})}dispose(){return super.dispose(),this._feedbackGain.dispose(),this.feedback.dispose(),this}}class So extends To{constructor(){super(ur(So.getDefaults(),arguments,["delayTime","feedback"])),this.name="FeedbackDelay";const t=ur(So.getDefaults(),arguments,["delayTime","feedback"]);this._delayNode=new gi({context:this.context,delayTime:t.delayTime,maxDelay:t.maxDelay}),this.delayTime=this._delayNode.delayTime,this.connectEffect(this._delayNode),Cr(this,"delayTime")}static getDefaults(){return Object.assign(To.getDefaults(),{delayTime:.25,maxDelay:1})}dispose(){return super.dispose(),this._delayNode.dispose(),this.delayTime.dispose(),this}}class Io extends ni{constructor(t){super(t),this.name="PhaseShiftAllpass",this.input=new oi({context:this.context}),this.output=new oi({context:this.context}),this.offset90=new oi({context:this.context}),this._bank0=this._createAllPassFilterBank([.6923878,.9360654322959,.988229522686,.9987488452737]),this._bank1=this._createAllPassFilterBank([.4021921162426,.856171088242,.9722909545651,.9952884791278]),this._oneSampleDelay=this.context.createIIRFilter([0,1],[1,0]),si(this.input,...this._bank0,this._oneSampleDelay,this.output),si(this.input,...this._bank1,this.offset90)}_createAllPassFilterBank(t){return t.map((t=>{const e=[[t*t,0,-1],[1,0,-t*t]];return this.context.createIIRFilter(e[0],e[1])}))}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.offset90.dispose(),this._bank0.forEach((t=>t.disconnect())),this._bank1.forEach((t=>t.disconnect())),this._oneSampleDelay.disconnect(),this}}class Co extends ao{constructor(){super(ur(Co.getDefaults(),arguments,["frequency"])),this.name="FrequencyShifter";const t=ur(Co.getDefaults(),arguments,["frequency"]);this.frequency=new ci({context:this.context,units:"frequency",value:t.frequency,minValue:-this.context.sampleRate/2,maxValue:this.context.sampleRate/2}),this._sine=new qi({context:this.context,type:"sine"}),this._cosine=new Ui({context:this.context,phase:-90,type:"sine"}),this._sineMultiply=new ji({context:this.context}),this._cosineMultiply=new ji({context:this.context}),this._negate=new ha({context:this.context}),this._add=new ta({context:this.context}),this._phaseShifter=new Io({context:this.context}),this.effectSend.connect(this._phaseShifter),this.frequency.fan(this._sine.frequency,this._cosine.frequency),this._phaseShifter.offset90.connect(this._cosineMultiply),this._cosine.connect(this._cosineMultiply.factor),this._phaseShifter.connect(this._sineMultiply),this._sine.connect(this._sineMultiply.factor),this._sineMultiply.connect(this._negate),this._cosineMultiply.connect(this._add),this._negate.connect(this._add.addend),this._add.connect(this.effectReturn);const e=this.immediate();this._sine.start(e),this._cosine.start(e)}static getDefaults(){return Object.assign(ao.getDefaults(),{frequency:0})}dispose(){return super.dispose(),this.frequency.dispose(),this._add.dispose(),this._cosine.dispose(),this._cosineMultiply.dispose(),this._negate.dispose(),this._phaseShifter.dispose(),this._sine.dispose(),this._sineMultiply.dispose(),this}}const No=[1557/44100,1617/44100,1491/44100,1422/44100,1277/44100,1356/44100,1188/44100,1116/44100],Ao=[225,556,441,341];class Eo extends vo{constructor(){super(ur(Eo.getDefaults(),arguments,["roomSize","dampening"])),this.name="Freeverb",this._combFilters=[],this._allpassFiltersL=[],this._allpassFiltersR=[];const t=ur(Eo.getDefaults(),arguments,["roomSize","dampening"]);this.roomSize=new ci({context:this.context,value:t.roomSize,units:"normalRange"}),this._allpassFiltersL=Ao.map((t=>{const e=this.context.createBiquadFilter();return e.type="allpass",e.frequency.value=t,e})),this._allpassFiltersR=Ao.map((t=>{const e=this.context.createBiquadFilter();return e.type="allpass",e.frequency.value=t,e})),this._combFilters=No.map(((e,n)=>{const s=new Wa({context:this.context,dampening:t.dampening,delayTime:e});return n<No.length/2?this.connectEffectLeft(s,...this._allpassFiltersL):this.connectEffectRight(s,...this._allpassFiltersR),this.roomSize.connect(s.resonance),s})),Cr(this,["roomSize"])}static getDefaults(){return Object.assign(vo.getDefaults(),{roomSize:.7,dampening:3e3})}get dampening(){return this._combFilters[0].dampening}set dampening(t){this._combFilters.forEach((e=>e.dampening=t))}dispose(){return super.dispose(),this._allpassFiltersL.forEach((t=>t.disconnect())),this._allpassFiltersR.forEach((t=>t.disconnect())),this._combFilters.forEach((t=>t.dispose())),this.roomSize.dispose(),this}}const $o=[.06748,.06404,.08212,.09004],Ro=[.773,.802,.753,.733],Do=[347,113,37];class Oo extends vo{constructor(){super(ur(Oo.getDefaults(),arguments,["roomSize"])),this.name="JCReverb",this._allpassFilters=[],this._feedbackCombFilters=[];const t=ur(Oo.getDefaults(),arguments,["roomSize"]);this.roomSize=new ci({context:this.context,value:t.roomSize,units:"normalRange"}),this._scaleRoomSize=new ea({context:this.context,min:-.733,max:.197}),this._allpassFilters=Do.map((t=>{const e=this.context.createBiquadFilter();return e.type="allpass",e.frequency.value=t,e})),this._feedbackCombFilters=$o.map(((t,e)=>{const n=new Va({context:this.context,delayTime:t});return this._scaleRoomSize.connect(n.resonance),n.resonance.value=Ro[e],e<$o.length/2?this.connectEffectLeft(...this._allpassFilters,n):this.connectEffectRight(...this._allpassFilters,n),n})),this.roomSize.connect(this._scaleRoomSize),Cr(this,["roomSize"])}static getDefaults(){return Object.assign(vo.getDefaults(),{roomSize:.5})}dispose(){return super.dispose(),this._allpassFilters.forEach((t=>t.disconnect())),this._feedbackCombFilters.forEach((t=>t.dispose())),this.roomSize.dispose(),this._scaleRoomSize.dispose(),this}}class Fo extends wo{constructor(t){super(t),this._feedbackL.disconnect(),this._feedbackL.connect(this._feedbackMerge,0,1),this._feedbackR.disconnect(),this._feedbackR.connect(this._feedbackMerge,0,0),Cr(this,["feedback"])}}class Mo extends Fo{constructor(){super(ur(Mo.getDefaults(),arguments,["delayTime","feedback"])),this.name="PingPongDelay";const t=ur(Mo.getDefaults(),arguments,["delayTime","feedback"]);this._leftDelay=new gi({context:this.context,maxDelay:t.maxDelay}),this._rightDelay=new gi({context:this.context,maxDelay:t.maxDelay}),this._rightPreDelay=new gi({context:this.context,maxDelay:t.maxDelay}),this.delayTime=new ci({context:this.context,units:"time",value:t.delayTime}),this.connectEffectLeft(this._leftDelay),this.connectEffectRight(this._rightPreDelay,this._rightDelay),this.delayTime.fan(this._leftDelay.delayTime,this._rightDelay.delayTime,this._rightPreDelay.delayTime),this._feedbackL.disconnect(),this._feedbackL.connect(this._rightDelay),Cr(this,["delayTime"])}static getDefaults(){return Object.assign(Fo.getDefaults(),{delayTime:.25,maxDelay:1})}dispose(){return super.dispose(),this._leftDelay.dispose(),this._rightDelay.dispose(),this._rightPreDelay.dispose(),this.delayTime.dispose(),this}}class Lo extends To{constructor(){super(ur(Lo.getDefaults(),arguments,["pitch"])),this.name="PitchShift";const t=ur(Lo.getDefaults(),arguments,["pitch"]);this._frequency=new ci({context:this.context}),this._delayA=new gi({maxDelay:1,context:this.context}),this._lfoA=new sa({context:this.context,min:0,max:.1,type:"sawtooth"}).connect(this._delayA.delayTime),this._delayB=new gi({maxDelay:1,context:this.context}),this._lfoB=new sa({context:this.context,min:0,max:.1,type:"sawtooth",phase:180}).connect(this._delayB.delayTime),this._crossFade=new io({context:this.context}),this._crossFadeLFO=new sa({context:this.context,min:0,max:1,type:"triangle",phase:90}).connect(this._crossFade.fade),this._feedbackDelay=new gi({delayTime:t.delayTime,context:this.context}),this.delayTime=this._feedbackDelay.delayTime,Cr(this,"delayTime"),this._pitch=t.pitch,this._windowSize=t.windowSize,this._delayA.connect(this._crossFade.a),this._delayB.connect(this._crossFade.b),this._frequency.fan(this._lfoA.frequency,this._lfoB.frequency,this._crossFadeLFO.frequency),this.effectSend.fan(this._delayA,this._delayB),this._crossFade.chain(this._feedbackDelay,this.effectReturn);const e=this.now();this._lfoA.start(e),this._lfoB.start(e),this._crossFadeLFO.start(e),this.windowSize=this._windowSize}static getDefaults(){return Object.assign(To.getDefaults(),{pitch:0,windowSize:.1,delayTime:0,feedback:0})}get pitch(){return this._pitch}set pitch(t){this._pitch=t;let e=0;t<0?(this._lfoA.min=0,this._lfoA.max=this._windowSize,this._lfoB.min=0,this._lfoB.max=this._windowSize,e=Pr(t-1)+1):(this._lfoA.min=this._windowSize,this._lfoA.max=0,this._lfoB.min=this._windowSize,this._lfoB.max=0,e=Pr(t)-1),this._frequency.value=e*(1.2/this._windowSize)}get windowSize(){return this._windowSize}set windowSize(t){this._windowSize=this.toSeconds(t),this.pitch=this._pitch}dispose(){return super.dispose(),this._frequency.dispose(),this._delayA.dispose(),this._delayB.dispose(),this._lfoA.dispose(),this._lfoB.dispose(),this._crossFade.dispose(),this._crossFadeLFO.dispose(),this._feedbackDelay.dispose(),this}}class zo extends vo{constructor(){super(ur(zo.getDefaults(),arguments,["frequency","octaves","baseFrequency"])),this.name="Phaser";const t=ur(zo.getDefaults(),arguments,["frequency","octaves","baseFrequency"]);this._lfoL=new sa({context:this.context,frequency:t.frequency,min:0,max:1}),this._lfoR=new sa({context:this.context,frequency:t.frequency,min:0,max:1,phase:180}),this._baseFrequency=this.toFrequency(t.baseFrequency),this._octaves=t.octaves,this.Q=new ci({context:this.context,value:t.Q,units:"positive"}),this._filtersL=this._makeFilters(t.stages,this._lfoL),this._filtersR=this._makeFilters(t.stages,this._lfoR),this.frequency=this._lfoL.frequency,this.frequency.value=t.frequency,this.connectEffectLeft(...this._filtersL),this.connectEffectRight(...this._filtersR),this._lfoL.frequency.connect(this._lfoR.frequency),this.baseFrequency=t.baseFrequency,this.octaves=t.octaves,this._lfoL.start(),this._lfoR.start(),Cr(this,["frequency","Q"])}static getDefaults(){return Object.assign(vo.getDefaults(),{frequency:.5,octaves:3,stages:10,Q:10,baseFrequency:350})}_makeFilters(t,e){const n=[];for(let s=0;s<t;s++){const t=this.context.createBiquadFilter();t.type="allpass",this.Q.connect(t.Q),e.connect(t.frequency),n.push(t)}return n}get octaves(){return this._octaves}set octaves(t){this._octaves=t;const e=this._baseFrequency*Math.pow(2,t);this._lfoL.max=e,this._lfoR.max=e}get baseFrequency(){return this._baseFrequency}set baseFrequency(t){this._baseFrequency=this.toFrequency(t),this._lfoL.min=this._baseFrequency,this._lfoR.min=this._baseFrequency,this.octaves=this._octaves}dispose(){return super.dispose(),this.Q.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._filtersL.forEach((t=>t.disconnect())),this._filtersR.forEach((t=>t.disconnect())),this.frequency.dispose(),this}}class Po extends ao{constructor(){super(ur(Po.getDefaults(),arguments,["decay"])),this.name="Reverb",this._convolver=this.context.createConvolver(),this.ready=Promise.resolve();const t=ur(Po.getDefaults(),arguments,["decay"]);this._decay=t.decay,this._preDelay=t.preDelay,this.generate(),this.connectEffect(this._convolver)}static getDefaults(){return Object.assign(ao.getDefaults(),{decay:1.5,preDelay:.01})}get decay(){return this._decay}set decay(t){Ws(t=this.toSeconds(t),.001),this._decay=t,this.generate()}get preDelay(){return this._preDelay}set preDelay(t){Ws(t=this.toSeconds(t),0),this._preDelay=t,this.generate()}generate(){return er(this,void 0,void 0,(function*(){const t=this.ready,e=new $r(2,this._decay+this._preDelay,this.context.sampleRate),n=new Li({context:e}),s=new Li({context:e}),r=new xo({context:e});n.connect(r,0,0),s.connect(r,0,1);const i=new oi({context:e}).toDestination();r.connect(i),n.start(0),s.start(0),i.gain.setValueAtTime(0,0),i.gain.setValueAtTime(1,this._preDelay),i.gain.exponentialApproachValueAtTime(0,this._preDelay,this.decay);const a=e.render();return this.ready=a.then(Ar),yield t,this._convolver.buffer=(yield a).get(),this}))}dispose(){return super.dispose(),this._convolver.disconnect(),this}}class Vo extends ni{constructor(){super(ur(Vo.getDefaults(),arguments)),this.name="MidSideSplit",this._split=this.input=new bo({channels:2,context:this.context}),this._midAdd=new ta({context:this.context}),this.mid=new ji({context:this.context,value:Math.SQRT1_2}),this._sideSubtract=new pa({context:this.context}),this.side=new ji({context:this.context,value:Math.SQRT1_2}),this._split.connect(this._midAdd,0),this._split.connect(this._midAdd.addend,1),this._split.connect(this._sideSubtract,0),this._split.connect(this._sideSubtract.subtrahend,1),this._midAdd.connect(this.mid),this._sideSubtract.connect(this.side)}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._midAdd.dispose(),this._sideSubtract.dispose(),this._split.dispose(),this}}class Bo extends ni{constructor(){super(ur(Bo.getDefaults(),arguments)),this.name="MidSideMerge",this.mid=new oi({context:this.context}),this.side=new oi({context:this.context}),this._left=new ta({context:this.context}),this._leftMult=new ji({context:this.context,value:Math.SQRT1_2}),this._right=new pa({context:this.context}),this._rightMult=new ji({context:this.context,value:Math.SQRT1_2}),this._merge=this.output=new xo({context:this.context}),this.mid.fan(this._left),this.side.connect(this._left.addend),this.mid.connect(this._right),this.side.connect(this._right.subtrahend),this._left.connect(this._leftMult),this._right.connect(this._rightMult),this._leftMult.connect(this._merge,0,0),this._rightMult.connect(this._merge,0,1)}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._leftMult.dispose(),this._rightMult.dispose(),this._left.dispose(),this._right.dispose(),this}}class Wo extends ao{constructor(t){super(t),this.name="MidSideEffect",this._midSideMerge=new Bo({context:this.context}),this._midSideSplit=new Vo({context:this.context}),this._midSend=this._midSideSplit.mid,this._sideSend=this._midSideSplit.side,this._midReturn=this._midSideMerge.mid,this._sideReturn=this._midSideMerge.side,this.effectSend.connect(this._midSideSplit),this._midSideMerge.connect(this.effectReturn)}connectEffectMid(...t){this._midSend.chain(...t,this._midReturn)}connectEffectSide(...t){this._sideSend.chain(...t,this._sideReturn)}dispose(){return super.dispose(),this._midSideSplit.dispose(),this._midSideMerge.dispose(),this._midSend.dispose(),this._sideSend.dispose(),this._midReturn.dispose(),this._sideReturn.dispose(),this}}class qo extends Wo{constructor(){super(ur(qo.getDefaults(),arguments,["width"])),this.name="StereoWidener";const t=ur(qo.getDefaults(),arguments,["width"]);this.width=new ci({context:this.context,value:t.width,units:"normalRange"}),Cr(this,["width"]),this._twoTimesWidthMid=new ji({context:this.context,value:2}),this._twoTimesWidthSide=new ji({context:this.context,value:2}),this._midMult=new ji({context:this.context}),this._twoTimesWidthMid.connect(this._midMult.factor),this.connectEffectMid(this._midMult),this._oneMinusWidth=new pa({context:this.context}),this._oneMinusWidth.connect(this._twoTimesWidthMid),ri(this.context.getConstant(1),this._oneMinusWidth),this.width.connect(this._oneMinusWidth.subtrahend),this._sideMult=new ji({context:this.context}),this.width.connect(this._twoTimesWidthSide),this._twoTimesWidthSide.connect(this._sideMult.factor),this.connectEffectSide(this._sideMult)}static getDefaults(){return Object.assign(Wo.getDefaults(),{width:.5})}dispose(){return super.dispose(),this.width.dispose(),this._midMult.dispose(),this._sideMult.dispose(),this._twoTimesWidthMid.dispose(),this._twoTimesWidthSide.dispose(),this._oneMinusWidth.dispose(),this}}class Uo extends vo{constructor(){super(ur(Uo.getDefaults(),arguments,["frequency","depth"])),this.name="Tremolo";const t=ur(Uo.getDefaults(),arguments,["frequency","depth"]);this._lfoL=new sa({context:this.context,type:t.type,min:1,max:0}),this._lfoR=new sa({context:this.context,type:t.type,min:1,max:0}),this._amplitudeL=new oi({context:this.context}),this._amplitudeR=new oi({context:this.context}),this.frequency=new ci({context:this.context,value:t.frequency,units:"frequency"}),this.depth=new ci({context:this.context,value:t.depth,units:"normalRange"}),Cr(this,["frequency","depth"]),this.connectEffectLeft(this._amplitudeL),this.connectEffectRight(this._amplitudeR),this._lfoL.connect(this._amplitudeL.gain),this._lfoR.connect(this._amplitudeR.gain),this.frequency.fan(this._lfoL.frequency,this._lfoR.frequency),this.depth.fan(this._lfoR.amplitude,this._lfoL.amplitude),this.spread=t.spread}static getDefaults(){return Object.assign(vo.getDefaults(),{frequency:10,type:"sine",depth:.5,spread:180})}start(t){return this._lfoL.start(t),this._lfoR.start(t),this}stop(t){return this._lfoL.stop(t),this._lfoR.stop(t),this}sync(){return this._lfoL.sync(),this._lfoR.sync(),this.context.transport.syncSignal(this.frequency),this}unsync(){return this._lfoL.unsync(),this._lfoR.unsync(),this.context.transport.unsyncSignal(this.frequency),this}get type(){return this._lfoL.type}set type(t){this._lfoL.type=t,this._lfoR.type=t}get spread(){return this._lfoR.phase-this._lfoL.phase}set spread(t){this._lfoL.phase=90-t/2,this._lfoR.phase=t/2+90}dispose(){return super.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._amplitudeL.dispose(),this._amplitudeR.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class Go extends ao{constructor(){super(ur(Go.getDefaults(),arguments,["frequency","depth"])),this.name="Vibrato";const t=ur(Go.getDefaults(),arguments,["frequency","depth"]);this._delayNode=new gi({context:this.context,delayTime:0,maxDelay:t.maxDelay}),this._lfo=new sa({context:this.context,type:t.type,min:0,max:t.maxDelay,frequency:t.frequency,phase:-90}).start().connect(this._delayNode.delayTime),this.frequency=this._lfo.frequency,this.depth=this._lfo.amplitude,this.depth.value=t.depth,Cr(this,["frequency","depth"]),this.effectSend.chain(this._delayNode,this.effectReturn)}static getDefaults(){return Object.assign(ao.getDefaults(),{maxDelay:.005,frequency:5,depth:.1,type:"sine"})}get type(){return this._lfo.type}set type(t){this._lfo.type=t}dispose(){return super.dispose(),this._delayNode.dispose(),this._lfo.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class jo extends ni{constructor(){super(ur(jo.getDefaults(),arguments,["type","size"])),this.name="Analyser",this._analysers=[],this._buffers=[];const t=ur(jo.getDefaults(),arguments,["type","size"]);this.input=this.output=this._gain=new oi({context:this.context}),this._split=new bo({context:this.context,channels:t.channels}),this.input.connect(this._split),Ws(t.channels,1);for(let e=0;e<t.channels;e++)this._analysers[e]=this.context.createAnalyser(),this._split.connect(this._analysers[e],e,0);this.size=t.size,this.type=t.type,this.smoothing=t.smoothing}static getDefaults(){return Object.assign(ni.getDefaults(),{size:1024,smoothing:.8,type:"fft",channels:1})}getValue(){return this._analysers.forEach(((t,e)=>{const n=this._buffers[e];"fft"===this._type?t.getFloatFrequencyData(n):"waveform"===this._type&&t.getFloatTimeDomainData(n)})),1===this.channels?this._buffers[0]:this._buffers}get size(){return this._analysers[0].frequencyBinCount}set size(t){this._analysers.forEach(((e,n)=>{e.fftSize=2*t,this._buffers[n]=new Float32Array(t)}))}get channels(){return this._analysers.length}get type(){return this._type}set type(t){Bs("waveform"===t||"fft"===t,`Analyser: invalid type: ${t}`),this._type=t}get smoothing(){return this._analysers[0].smoothingTimeConstant}set smoothing(t){this._analysers.forEach((e=>e.smoothingTimeConstant=t))}dispose(){return super.dispose(),this._analysers.forEach((t=>t.disconnect())),this._split.dispose(),this._gain.dispose(),this}}class Ho extends ni{constructor(){super(ur(Ho.getDefaults(),arguments)),this.name="MeterBase",this.input=this.output=this._analyser=new jo({context:this.context,size:256,type:"waveform"})}dispose(){return super.dispose(),this._analyser.dispose(),this}}class Xo extends Ho{constructor(){super(ur(Xo.getDefaults(),arguments,["smoothing"])),this.name="Meter";const t=ur(Xo.getDefaults(),arguments,["smoothing"]);this.input=this.output=this._analyser=new jo({context:this.context,size:256,type:"waveform",channels:t.channelCount}),this.smoothing=t.smoothing,this.normalRange=t.normalRange,this._rms=new Array(t.channelCount),this._rms.fill(0)}static getDefaults(){return Object.assign(Ho.getDefaults(),{smoothing:.8,normalRange:!1,channelCount:1})}getLevel(){return Zs("'getLevel' has been changed to 'getValue'"),this.getValue()}getValue(){const t=this._analyser.getValue(),e=(1===this.channels?[t]:t).map(((t,e)=>{const n=t.reduce(((t,e)=>t+e*e),0),s=Math.sqrt(n/t.length);return this._rms[e]=Math.max(s,this._rms[e]*this.smoothing),this.normalRange?this._rms[e]:zr(this._rms[e])}));return 1===this.channels?e[0]:e}get channels(){return this._analyser.channels}dispose(){return super.dispose(),this._analyser.dispose(),this}}class Ko extends Ho{constructor(){super(ur(Ko.getDefaults(),arguments,["size"])),this.name="FFT";const t=ur(Ko.getDefaults(),arguments,["size"]);this.normalRange=t.normalRange,this._analyser.type="fft",this.size=t.size}static getDefaults(){return Object.assign(ni.getDefaults(),{normalRange:!1,size:1024,smoothing:.8})}getValue(){return this._analyser.getValue().map((t=>this.normalRange?Lr(t):t))}get size(){return this._analyser.size}set size(t){this._analyser.size=t}get smoothing(){return this._analyser.smoothing}set smoothing(t){this._analyser.smoothing=t}getFrequencyOfIndex(t){return Bs(0<=t&&t<this.size,`index must be greater than or equal to 0 and less than ${this.size}`),t*this.context.sampleRate/(2*this.size)}}class Yo extends Ho{constructor(){super(ur(Yo.getDefaults(),arguments)),this.name="DCMeter",this._analyser.type="waveform",this._analyser.size=256}getValue(){return this._analyser.getValue()[0]}}class Zo extends Ho{constructor(){super(ur(Zo.getDefaults(),arguments,["size"])),this.name="Waveform";const t=ur(Zo.getDefaults(),arguments,["size"]);this._analyser.type="waveform",this.size=t.size}static getDefaults(){return Object.assign(Ho.getDefaults(),{size:1024})}getValue(){return this._analyser.getValue()}get size(){return this._analyser.size}set size(t){this._analyser.size=t}}class Qo extends ni{constructor(){super(ur(Qo.getDefaults(),arguments,["solo"])),this.name="Solo";const t=ur(Qo.getDefaults(),arguments,["solo"]);this.input=this.output=new oi({context:this.context}),Qo._allSolos.has(this.context)||Qo._allSolos.set(this.context,new Set),Qo._allSolos.get(this.context).add(this),this.solo=t.solo}static getDefaults(){return Object.assign(ni.getDefaults(),{solo:!1})}get solo(){return this._isSoloed()}set solo(t){t?this._addSolo():this._removeSolo(),Qo._allSolos.get(this.context).forEach((t=>t._updateSolo()))}get muted(){return 0===this.input.gain.value}_addSolo(){Qo._soloed.has(this.context)||Qo._soloed.set(this.context,new Set),Qo._soloed.get(this.context).add(this)}_removeSolo(){Qo._soloed.has(this.context)&&Qo._soloed.get(this.context).delete(this)}_isSoloed(){return Qo._soloed.has(this.context)&&Qo._soloed.get(this.context).has(this)}_noSolos(){return!Qo._soloed.has(this.context)||Qo._soloed.has(this.context)&&0===Qo._soloed.get(this.context).size}_updateSolo(){this._isSoloed()||this._noSolos()?this.input.gain.value=1:this.input.gain.value=0}dispose(){return super.dispose(),Qo._allSolos.get(this.context).delete(this),this._removeSolo(),this}}Qo._allSolos=new Map,Qo._soloed=new Map;class Jo extends ni{constructor(){super(ur(Jo.getDefaults(),arguments,["pan","volume"])),this.name="PanVol";const t=ur(Jo.getDefaults(),arguments,["pan","volume"]);this._panner=this.input=new uo({context:this.context,pan:t.pan,channelCount:t.channelCount}),this.pan=this._panner.pan,this._volume=this.output=new Ii({context:this.context,volume:t.volume}),this.volume=this._volume.volume,this._panner.connect(this._volume),this.mute=t.mute,Cr(this,["pan","volume"])}static getDefaults(){return Object.assign(ni.getDefaults(),{mute:!1,pan:0,volume:0,channelCount:1})}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}dispose(){return super.dispose(),this._panner.dispose(),this.pan.dispose(),this._volume.dispose(),this.volume.dispose(),this}}class tl extends ni{constructor(){super(ur(tl.getDefaults(),arguments,["volume","pan"])),this.name="Channel";const t=ur(tl.getDefaults(),arguments,["volume","pan"]);this._solo=this.input=new Qo({solo:t.solo,context:this.context}),this._panVol=this.output=new Jo({context:this.context,pan:t.pan,volume:t.volume,mute:t.mute,channelCount:t.channelCount}),this.pan=this._panVol.pan,this.volume=this._panVol.volume,this._solo.connect(this._panVol),Cr(this,["pan","volume"])}static getDefaults(){return Object.assign(ni.getDefaults(),{pan:0,volume:0,mute:!1,solo:!1,channelCount:1})}get solo(){return this._solo.solo}set solo(t){this._solo.solo=t}get muted(){return this._solo.muted||this.mute}get mute(){return this._panVol.mute}set mute(t){this._panVol.mute=t}_getBus(t){return tl.buses.has(t)||tl.buses.set(t,new oi({context:this.context})),tl.buses.get(t)}send(t,e=0){const n=this._getBus(t),s=new oi({context:this.context,units:"decibels",gain:e});return this.connect(s),s.connect(n),s}receive(t){return this._getBus(t).connect(this),this}dispose(){return super.dispose(),this._panVol.dispose(),this.pan.dispose(),this.volume.dispose(),this._solo.dispose(),this}}tl.buses=new Map;class el extends ni{constructor(){super(ur(el.getDefaults(),arguments)),this.name="Mono",this.input=new oi({context:this.context}),this._merge=this.output=new xo({channels:2,context:this.context}),this.input.connect(this._merge,0,0),this.input.connect(this._merge,0,1)}dispose(){return super.dispose(),this._merge.dispose(),this.input.dispose(),this}}class nl extends ni{constructor(){super(ur(nl.getDefaults(),arguments,["lowFrequency","highFrequency"])),this.name="MultibandSplit",this.input=new oi({context:this.context}),this.output=void 0,this.low=new Ia({context:this.context,frequency:0,type:"lowpass"}),this._lowMidFilter=new Ia({context:this.context,frequency:0,type:"highpass"}),this.mid=new Ia({context:this.context,frequency:0,type:"lowpass"}),this.high=new Ia({context:this.context,frequency:0,type:"highpass"}),this._internalChannels=[this.low,this.mid,this.high];const t=ur(nl.getDefaults(),arguments,["lowFrequency","highFrequency"]);this.lowFrequency=new ci({context:this.context,units:"frequency",value:t.lowFrequency}),this.highFrequency=new ci({context:this.context,units:"frequency",value:t.highFrequency}),this.Q=new ci({context:this.context,units:"positive",value:t.Q}),this.input.fan(this.low,this.high),this.input.chain(this._lowMidFilter,this.mid),this.lowFrequency.fan(this.low.frequency,this._lowMidFilter.frequency),this.highFrequency.fan(this.mid.frequency,this.high.frequency),this.Q.connect(this.low.Q),this.Q.connect(this._lowMidFilter.Q),this.Q.connect(this.mid.Q),this.Q.connect(this.high.Q),Cr(this,["high","mid","low","highFrequency","lowFrequency"])}static getDefaults(){return Object.assign(ni.getDefaults(),{Q:1,highFrequency:2500,lowFrequency:400})}dispose(){return super.dispose(),Nr(this,["high","mid","low","highFrequency","lowFrequency"]),this.low.dispose(),this._lowMidFilter.dispose(),this.mid.dispose(),this.high.dispose(),this.lowFrequency.dispose(),this.highFrequency.dispose(),this.Q.dispose(),this}}class sl extends ni{constructor(){super(...arguments),this.name="Listener",this.positionX=new ei({context:this.context,param:this.context.rawContext.listener.positionX}),this.positionY=new ei({context:this.context,param:this.context.rawContext.listener.positionY}),this.positionZ=new ei({context:this.context,param:this.context.rawContext.listener.positionZ}),this.forwardX=new ei({context:this.context,param:this.context.rawContext.listener.forwardX}),this.forwardY=new ei({context:this.context,param:this.context.rawContext.listener.forwardY}),this.forwardZ=new ei({context:this.context,param:this.context.rawContext.listener.forwardZ}),this.upX=new ei({context:this.context,param:this.context.rawContext.listener.upX}),this.upY=new ei({context:this.context,param:this.context.rawContext.listener.upY}),this.upZ=new ei({context:this.context,param:this.context.rawContext.listener.upZ})}static getDefaults(){return Object.assign(ni.getDefaults(),{positionX:0,positionY:0,positionZ:0,forwardX:0,forwardY:0,forwardZ:-1,upX:0,upY:1,upZ:0})}dispose(){return super.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this.forwardX.dispose(),this.forwardY.dispose(),this.forwardZ.dispose(),this.upX.dispose(),this.upY.dispose(),this.upZ.dispose(),this}}wr((t=>{t.listener=new sl({context:t})})),kr((t=>{t.listener.dispose()}));class rl extends ni{constructor(){super(ur(rl.getDefaults(),arguments,["positionX","positionY","positionZ"])),this.name="Panner3D";const t=ur(rl.getDefaults(),arguments,["positionX","positionY","positionZ"]);this._panner=this.input=this.output=this.context.createPanner(),this.panningModel=t.panningModel,this.maxDistance=t.maxDistance,this.distanceModel=t.distanceModel,this.coneOuterGain=t.coneOuterGain,this.coneOuterAngle=t.coneOuterAngle,this.coneInnerAngle=t.coneInnerAngle,this.refDistance=t.refDistance,this.rolloffFactor=t.rolloffFactor,this.positionX=new ei({context:this.context,param:this._panner.positionX,value:t.positionX}),this.positionY=new ei({context:this.context,param:this._panner.positionY,value:t.positionY}),this.positionZ=new ei({context:this.context,param:this._panner.positionZ,value:t.positionZ}),this.orientationX=new ei({context:this.context,param:this._panner.orientationX,value:t.orientationX}),this.orientationY=new ei({context:this.context,param:this._panner.orientationY,value:t.orientationY}),this.orientationZ=new ei({context:this.context,param:this._panner.orientationZ,value:t.orientationZ})}static getDefaults(){return Object.assign(ni.getDefaults(),{coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:0,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1})}setPosition(t,e,n){return this.positionX.value=t,this.positionY.value=e,this.positionZ.value=n,this}setOrientation(t,e,n){return this.orientationX.value=t,this.orientationY.value=e,this.orientationZ.value=n,this}get panningModel(){return this._panner.panningModel}set panningModel(t){this._panner.panningModel=t}get refDistance(){return this._panner.refDistance}set refDistance(t){this._panner.refDistance=t}get rolloffFactor(){return this._panner.rolloffFactor}set rolloffFactor(t){this._panner.rolloffFactor=t}get distanceModel(){return this._panner.distanceModel}set distanceModel(t){this._panner.distanceModel=t}get coneInnerAngle(){return this._panner.coneInnerAngle}set coneInnerAngle(t){this._panner.coneInnerAngle=t}get coneOuterAngle(){return this._panner.coneOuterAngle}set coneOuterAngle(t){this._panner.coneOuterAngle=t}get coneOuterGain(){return this._panner.coneOuterGain}set coneOuterGain(t){this._panner.coneOuterGain=t}get maxDistance(){return this._panner.maxDistance}set maxDistance(t){this._panner.maxDistance=t}dispose(){return super.dispose(),this._panner.disconnect(),this.orientationX.dispose(),this.orientationY.dispose(),this.orientationZ.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this}}class il extends ni{constructor(){super(ur(il.getDefaults(),arguments)),this.name="Recorder";const t=ur(il.getDefaults(),arguments);this.input=new oi({context:this.context}),Bs(il.supported,"Media Recorder API is not available"),this._stream=this.context.createMediaStreamDestination(),this.input.connect(this._stream),this._recorder=new MediaRecorder(this._stream.stream,{mimeType:t.mimeType})}static getDefaults(){return ni.getDefaults()}get mimeType(){return this._recorder.mimeType}static get supported(){return null!==Qs&&Reflect.has(Qs,"MediaRecorder")}get state(){return"inactive"===this._recorder.state?"stopped":"paused"===this._recorder.state?"paused":"started"}start(){return er(this,void 0,void 0,(function*(){Bs("started"!==this.state,"Recorder is already started");const t=new Promise((t=>{const e=()=>{this._recorder.removeEventListener("start",e,!1),t()};this._recorder.addEventListener("start",e,!1)}));return this._recorder.start(),yield t}))}stop(){return er(this,void 0,void 0,(function*(){Bs("stopped"!==this.state,"Recorder is not started");const t=new Promise((t=>{const e=n=>{this._recorder.removeEventListener("dataavailable",e,!1),t(n.data)};this._recorder.addEventListener("dataavailable",e,!1)}));return this._recorder.stop(),yield t}))}pause(){return Bs("started"===this.state,"Recorder must be started"),this._recorder.pause(),this}dispose(){return super.dispose(),this.input.dispose(),this._stream.disconnect(),this}}class al extends ni{constructor(){super(ur(al.getDefaults(),arguments,["threshold","ratio"])),this.name="Compressor",this._compressor=this.context.createDynamicsCompressor(),this.input=this._compressor,this.output=this._compressor;const t=ur(al.getDefaults(),arguments,["threshold","ratio"]);this.threshold=new ei({minValue:this._compressor.threshold.minValue,maxValue:this._compressor.threshold.maxValue,context:this.context,convert:!1,param:this._compressor.threshold,units:"decibels",value:t.threshold}),this.attack=new ei({minValue:this._compressor.attack.minValue,maxValue:this._compressor.attack.maxValue,context:this.context,param:this._compressor.attack,units:"time",value:t.attack}),this.release=new ei({minValue:this._compressor.release.minValue,maxValue:this._compressor.release.maxValue,context:this.context,param:this._compressor.release,units:"time",value:t.release}),this.knee=new ei({minValue:this._compressor.knee.minValue,maxValue:this._compressor.knee.maxValue,context:this.context,convert:!1,param:this._compressor.knee,units:"decibels",value:t.knee}),this.ratio=new ei({minValue:this._compressor.ratio.minValue,maxValue:this._compressor.ratio.maxValue,context:this.context,convert:!1,param:this._compressor.ratio,units:"positive",value:t.ratio}),Cr(this,["knee","release","attack","ratio","threshold"])}static getDefaults(){return Object.assign(ni.getDefaults(),{attack:.003,knee:30,ratio:12,release:.25,threshold:-24})}get reduction(){return this._compressor.reduction}dispose(){return super.dispose(),this._compressor.disconnect(),this.attack.dispose(),this.release.dispose(),this.threshold.dispose(),this.ratio.dispose(),this.knee.dispose(),this}}class ol extends ni{constructor(){super(Object.assign(ur(ol.getDefaults(),arguments,["threshold","smoothing"]))),this.name="Gate";const t=ur(ol.getDefaults(),arguments,["threshold","smoothing"]);this._follower=new ho({context:this.context,smoothing:t.smoothing}),this._gt=new fa({context:this.context,value:Lr(t.threshold)}),this.input=new oi({context:this.context}),this._gate=this.output=new oi({context:this.context}),this.input.connect(this._gate),this.input.chain(this._follower,this._gt,this._gate.gain)}static getDefaults(){return Object.assign(ni.getDefaults(),{smoothing:.1,threshold:-40})}get threshold(){return zr(this._gt.value)}set threshold(t){this._gt.value=Lr(t)}get smoothing(){return this._follower.smoothing}set smoothing(t){this._follower.smoothing=t}dispose(){return super.dispose(),this.input.dispose(),this._follower.dispose(),this._gt.dispose(),this._gate.dispose(),this}}class ll extends ni{constructor(){super(Object.assign(ur(ll.getDefaults(),arguments,["threshold"]))),this.name="Limiter";const t=ur(ll.getDefaults(),arguments,["threshold"]);this._compressor=this.input=this.output=new al({context:this.context,ratio:20,attack:.003,release:.01,threshold:t.threshold}),this.threshold=this._compressor.threshold,Cr(this,"threshold")}static getDefaults(){return Object.assign(ni.getDefaults(),{threshold:-12})}get reduction(){return this._compressor.reduction}dispose(){return super.dispose(),this._compressor.dispose(),this.threshold.dispose(),this}}class ul extends ni{constructor(){super(Object.assign(ur(ul.getDefaults(),arguments))),this.name="MidSideCompressor";const t=ur(ul.getDefaults(),arguments);this._midSideSplit=this.input=new Vo({context:this.context}),this._midSideMerge=this.output=new Bo({context:this.context}),this.mid=new al(Object.assign(t.mid,{context:this.context})),this.side=new al(Object.assign(t.side,{context:this.context})),this._midSideSplit.mid.chain(this.mid,this._midSideMerge.mid),this._midSideSplit.side.chain(this.side,this._midSideMerge.side),Cr(this,["mid","side"])}static getDefaults(){return Object.assign(ni.getDefaults(),{mid:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16},side:{ratio:6,threshold:-30,release:.25,attack:.03,knee:10}})}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._midSideSplit.dispose(),this._midSideMerge.dispose(),this}}class cl extends ni{constructor(){super(Object.assign(ur(cl.getDefaults(),arguments))),this.name="MultibandCompressor";const t=ur(cl.getDefaults(),arguments);this._splitter=this.input=new nl({context:this.context,lowFrequency:t.lowFrequency,highFrequency:t.highFrequency}),this.lowFrequency=this._splitter.lowFrequency,this.highFrequency=this._splitter.highFrequency,this.output=new oi({context:this.context}),this.low=new al(Object.assign(t.low,{context:this.context})),this.mid=new al(Object.assign(t.mid,{context:this.context})),this.high=new al(Object.assign(t.high,{context:this.context})),this._splitter.low.chain(this.low,this.output),this._splitter.mid.chain(this.mid,this.output),this._splitter.high.chain(this.high,this.output),Cr(this,["high","mid","low","highFrequency","lowFrequency"])}static getDefaults(){return Object.assign(ni.getDefaults(),{lowFrequency:250,highFrequency:2e3,low:{ratio:6,threshold:-30,release:.25,attack:.03,knee:10},mid:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16},high:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16}})}dispose(){return super.dispose(),this._splitter.dispose(),this.low.dispose(),this.mid.dispose(),this.high.dispose(),this.output.dispose(),this}}class hl extends ni{constructor(){super(ur(hl.getDefaults(),arguments,["low","mid","high"])),this.name="EQ3",this.output=new oi({context:this.context}),this._internalChannels=[];const t=ur(hl.getDefaults(),arguments,["low","mid","high"]);this.input=this._multibandSplit=new nl({context:this.context,highFrequency:t.highFrequency,lowFrequency:t.lowFrequency}),this._lowGain=new oi({context:this.context,gain:t.low,units:"decibels"}),this._midGain=new oi({context:this.context,gain:t.mid,units:"decibels"}),this._highGain=new oi({context:this.context,gain:t.high,units:"decibels"}),this.low=this._lowGain.gain,this.mid=this._midGain.gain,this.high=this._highGain.gain,this.Q=this._multibandSplit.Q,this.lowFrequency=this._multibandSplit.lowFrequency,this.highFrequency=this._multibandSplit.highFrequency,this._multibandSplit.low.chain(this._lowGain,this.output),this._multibandSplit.mid.chain(this._midGain,this.output),this._multibandSplit.high.chain(this._highGain,this.output),Cr(this,["low","mid","high","lowFrequency","highFrequency"]),this._internalChannels=[this._multibandSplit]}static getDefaults(){return Object.assign(ni.getDefaults(),{high:0,highFrequency:2500,low:0,lowFrequency:400,mid:0})}dispose(){return super.dispose(),Nr(this,["low","mid","high","lowFrequency","highFrequency"]),this._multibandSplit.dispose(),this.lowFrequency.dispose(),this.highFrequency.dispose(),this._lowGain.dispose(),this._midGain.dispose(),this._highGain.dispose(),this.low.dispose(),this.mid.dispose(),this.high.dispose(),this.Q.dispose(),this}}class pl extends ni{constructor(){super(ur(pl.getDefaults(),arguments,["url","onload"])),this.name="Convolver",this._convolver=this.context.createConvolver();const t=ur(pl.getDefaults(),arguments,["url","onload"]);this._buffer=new Er(t.url,(e=>{this.buffer=e,t.onload()})),this.input=new oi({context:this.context}),this.output=new oi({context:this.context}),this._buffer.loaded&&(this.buffer=this._buffer),this.normalize=t.normalize,this.input.chain(this._convolver,this.output)}static getDefaults(){return Object.assign(ni.getDefaults(),{normalize:!0,onload:Ar})}load(t){return er(this,void 0,void 0,(function*(){this.buffer=yield this._buffer.load(t)}))}get buffer(){return this._buffer.length?this._buffer:null}set buffer(t){t&&this._buffer.set(t),this._convolver.buffer&&(this.input.disconnect(),this._convolver.disconnect(),this._convolver=this.context.createConvolver(),this.input.chain(this._convolver,this.output));const e=this._buffer.get();this._convolver.buffer=e||null}get normalize(){return this._convolver.normalize}set normalize(t){this._convolver.normalize=t}dispose(){return super.dispose(),this._buffer.dispose(),this._convolver.disconnect(),this}}function dl(){return Or().now()}function fl(){return Or().immediate()}const ml=Or().transport;function gl(){return Or().transport}const yl=Or().destination,bl=Or().destination;function xl(){return Or().destination}const vl=Or().listener;function wl(){return Or().listener}const _l=Or().draw;function kl(){return Or().draw}const Tl=Or();function Sl(){return Er.loaded()}const Il=Er,Cl=bi,Nl=Mi})(),s})(),"object"==typeof exports&&"object"==typeof module?module.exports=_():"function"==typeof define&&define.amd?define([],_):"object"==typeof exports?exports.Tone=_():w.Tone=_();class T{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class S{refCount(t){return I("refCount")}incRef(t){return I("incRef")}timerAvailable(){return!0}time(t){return I("time")}read(t){return I("read")}readSync(t){return I("readSync")}numDataIds(){return I("numDataIds")}disposeData(t,e){return I("disposeData")}write(t,e,n){return I("write")}move(t,e,n,s,r){return I("move")}memory(){return I("memory")}floatPrecision(){return I("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return I("dispose")}}function I(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function C(t){let e=t.length,n=0,s=0;for(;e>0;)s=Math.random()*e|0,e--,n=t[e],t[e]=t[s],t[s]=n}function N(t,e,n){return Math.max(t,Math.min(e,n))}function A(t){return t%2==0?t:t+1}function E(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function $(t,e,n=""){E(F(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}function R(t){E(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function D(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||j(t)&&!n)for(let s=0;s<t.length;++s)D(t[s],e,n);else e.push(t);return e}function O(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function F(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function M(t){return t%1==0}function L(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function z(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function P(t,e=(t=>0),n){return new Promise(((s,r)=>{let i=0;const a=()=>{if(t())return void s();i++;const o=e(i);null!=n&&i>=n?r():setTimeout(a,o)};a()}))}function V(t,e){let n=1,s=-1;for(let e=0;e<t.length;++e)if(t[e]>=0)n*=t[e];else if(-1===t[e]){if(-1!==s)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${e}`);s=e}else if(t[e]<0)throw Error(`Shapes can not be < 0. Found ${t[e]} at dim ${e}`);if(-1===s){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const r=t.slice();return r[s]=e/n,r}function B(t,e){const n=e.length;return E((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`)),E(t.every((t=>M(t))),(()=>`All values in axis param must be integers but got axis ${t}`)),t.map((t=>t<0?n+t:t))}function W(t,e){const n=[],s=[],r=null!=e&&Array.isArray(e)&&0===e.length,i=null==e||r?null:B(e,t).sort();let a=0;for(let e=0;e<t.length;++e){if(null!=i){if(i[a]===e&&1!==t[e])throw new Error(`Can't squeeze axis ${e} since its dim '${t[e]}' is not 1`);(null==i[a]||i[a]>e)&&1===t[e]&&(n.push(t[e]),s.push(e)),i[a]<=e&&a++}1!==t[e]&&(n.push(t[e]),s.push(e))}return{newShape:n,keptDims:s}}function q(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error(`Unknown data type ${t}`);n=new Uint8Array(e)}return n}function U(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error(`Unknown data type ${t}`);n=new Array(e)}return n}function G(t,e){return!("complex64"===e||"float32"===e&&"complex64"!==t||"int32"===e&&"float32"!==t&&"complex64"!==t||"bool"===e&&"bool"===t)}function j(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function H(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error(`Unknown dtype ${t}`)}function X(t){return"string"==typeof t||t instanceof String}function K(t){return"number"==typeof t}function Y(t){return Array.isArray(t)?Y(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":K(t)?"float32":X(t)?"string":"boolean"==typeof t?"bool":"float32"}function Z(t){return!!(t&&t.constructor&&t.call&&t.apply)}function Q(t,e){for(let n=e;n<t;++n)if(t%n==0)return n;return t}function J(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let s=e-3;s>=0;--s)n[s]=n[s+1]*t[s+1];return n}function tt(t,e,n){const s=new Array;if(1===e.length){const r=e[0];for(let e=0;e<r;e++)s[e]=n[t+e]}else{const r=e[0],i=e.slice(1),a=i.reduce(((t,e)=>t*e));for(let e=0;e<r;e++)s[e]=tt(t+e*a,i,n)}return s}function et(t,e){if(0===t.length)return e[0];const n=t.reduce(((t,e)=>t*e));if(0===n)return[];if(n!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}.`);return tt(0,t,e)}function nt(t,e){const n=st(t,e);for(let t=0;t<n.length;t++)n[t]=1;return n}function st(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function rt(t,e){const n=t.reduce(((t,e)=>t*e),1);if(null==e||"float32"===e)return et(t,new Float32Array(n));if("int32"===e)return et(t,new Int32Array(n));if("bool"===e)return et(t,new Uint8Array(n));throw new Error(`Unknown data type ${e}`)}function it(t){t.forEach((e=>{E(Number.isInteger(e)&&e>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`))}))}function at(t,e,n){if(0===e)return 0;if(1===e)return t[0];let s=t[t.length-1];for(let e=0;e<t.length-1;++e)s+=n[e]*t[e];return s}function ot(t,e,n){if(0===e)return[];if(1===e)return[t];const s=new Array(e);for(let e=0;e<s.length-1;++e)s[e]=Math.floor(t/n[e]),t-=s[e]*n[e];return s[s.length-1]=t,s}function lt(t){return t&&t.then&&"function"==typeof t.then}const ut="tfjsflags";class ct{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(lt(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=function(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("=")))),e}(this.global.location.search);ut in t&&t[ut].split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)}))}}function ht(){return dt}let pt,dt=null;function ft(){if(null==pt){let t;if("undefined"!=typeof window)t=window;else if(void 0!==n.g)t=n.g;else if("undefined"!=typeof process)t=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}pt=t}return pt}function mt(t,e){const n=function(){const t=ft();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const s=e();return n.set(t,s),n.get(t)}}const gt="Abs",yt="Acos",bt="Acosh",xt="Add",vt="AddN",wt="All",_t="Any",kt="ArgMax",Tt="ArgMin",St="Asin",It="Asinh",Ct="Atan",Nt="Atanh",At="Atan2",Et="AvgPool",$t="AvgPoolGrad",Rt="AvgPool3D",Dt="AvgPool3DGrad",Ot="BatchMatMul",Ft="BatchToSpaceND",Mt="Bincount",Lt="Cast",zt="Ceil",Pt="ClipByValue",Vt="Complex",Bt="ComplexAbs",Wt="Concat",qt="Conv2D",Ut="Conv2DBackpropFilter",Gt="Conv2DBackpropInput",jt="Conv3D",Ht="Conv3DBackpropFilterV2",Xt="Conv3DBackpropInputV2",Kt="Cos",Yt="Cosh",Zt="Cumsum",Qt="CropAndResize",Jt="DenseBincount",te="DepthToSpace",ee="DepthwiseConv2dNative",ne="DepthwiseConv2dNativeBackpropFilter",se="DepthwiseConv2dNativeBackpropInput",re="Diag",ie="Dilation2D",ae="Dilation2DBackpropInput",oe="Dilation2DBackpropFilter",le="RealDiv",ue="Elu",ce="EluGrad",he="Erf",pe="Equal",de="Exp",fe="ExpandDims",me="Expm1",ge="FFT",ye="Fill",be="FlipLeftRight",xe="Floor",ve="FloorDiv",we="FusedBatchNorm",_e="GatherV2",ke="GatherNd",Te="Greater",Se="GreaterEqual",Ie="Identity",Ce="IFFT",Ne="Imag",Ae="IsFinite",Ee="IsInf",$e="IsNan",Re="LeakyRelu",De="Less",Oe="LessEqual",Fe="LinSpace",Me="Log",Le="Log1p",ze="LogicalAnd",Pe="LogicalNot",Ve="LogicalOr",Be="LRN",We="LRNGrad",qe="Max",Ue="Maximum",Ge="MaxPool",je="MaxPoolGrad",He="MaxPool3D",Xe="MaxPool3DGrad",Ke="MaxPoolWithArgmax",Ye="Mean",Ze="Min",Qe="Minimum",Je="MirrorPad",tn="Mod",en="Multinomial",nn="Multiply",sn="Neg",rn="NotEqual",an="NonMaxSuppressionV3",on="NonMaxSuppressionV4",ln="NonMaxSuppressionV5",un="OnesLike",cn="OneHot",hn="Pack",pn="PadV2",dn="Pow",fn="Prelu",mn="Prod",gn="Range",yn="Real",bn="Reciprocal",xn="Relu",vn="Reshape",wn="ResizeNearestNeighbor",_n="ResizeNearestNeighborGrad",kn="ResizeBilinear",Tn="ResizeBilinearGrad",Sn="Relu6",In="Reverse",Cn="Round",Nn="Rsqrt",An="ScatterNd",En="Select",$n="Selu",Rn="Slice",Dn="Sin",On="Sinh",Fn="Sign",Mn="Sigmoid",Ln="Softplus",zn="Sqrt",Pn="Sum",Vn="SpaceToBatchND",Bn="SplitV",Wn="Softmax",qn="SquaredDifference",Un="Square",Gn="Sub",jn="SparseToDense",Hn="StridedSlice",Xn="Tan",Kn="Tanh",Yn="Tile",Zn="TopK",Qn="Transform",Jn="Transpose",ts="Unique",es="Unpack",ns="UnsortedSegmentSum",ss="ZerosLike",rs="Step",is="FromPixels",as="RotateWithOffset",os="_FusedMatMul",ls="FusedConv2D",us="FusedDepthwiseConv2D",cs=mt("kernelRegistry",(()=>new Map)),hs=mt("gradRegistry",(()=>new Map));function ps(t,e){const n=ys(t,e);return cs.get(n)}function ds(t){return hs.get(t)}function fs(t){const e=cs.entries(),n=[];for(;;){const{done:s,value:r}=e.next();if(s)break;const[i,a]=r,[o]=i.split("_");o===t&&n.push(a)}return n}function ms(t){const{kernelName:e,backendName:n}=t,s=ys(e,n);cs.has(s)&&console.warn(`The kernel '${e}' for backend '${n}' is already registered`),cs.set(s,t)}function gs(t){const{kernelName:e}=t;hs.has(e)&&ht().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),hs.set(e,t)}function ys(t,e){return`${e}_${t}`}function bs(t,e){return"string"===e?ws(t):xs([t],e)}function xs(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=D(t)),ht().getBool("DEBUG")&&function(t,e){for(let n=0;n<t.length;n++){const s=t[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error(`Unknown data type ${e}`)}function vs(){return ht().platform.now()}function ws(t,e="utf-8"){return e=e||"utf-8",ht().platform.encode(t,e)}function _s(t,e="utf-8"){return e=e||"utf-8",ht().platform.decode(t,e)}class ks{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new Ss)}profileKernel(t,e,n){let s;const r=()=>{s=n()};let i;const a=vs();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(r);else{r();for(const t of s)t.dataSync();i=Promise.resolve({kernelMs:vs()-a})}if(ht().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let e=0;e<s.length;e++){const n=s[e];n.data().then((e=>{Ts(e,n.dtype,t)}))}return{kernelName:t,outputs:s,inputs:e,timeMs:i.then((t=>t.kernelMs)),extraInfo:i.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:s,inputs:r,extraInfo:i}=t;n.forEach((t=>{Promise.all([t.data(),s,i]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],r,n[2])}))}))}}function Ts(t,e,n){if("float32"!==e)return!1;for(let e=0;e<t.length;e++){const s=t[e];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${n}'`),!0}return!1}class Ss{logKernelProfile(t,e,n,s,r,i){const a="number"==typeof s?z(`${s}ms`,9):s.error,o=z(t,25),l=e.rank,u=e.size,c=z(e.shape.toString(),14);let h="";for(const t in r){const n=r[t];if(null!=n){const s=n.shape||e.shape,r=s.length;h+=`${t}: ${r}D ${r>0?s:""} `}}console.log(`%c${o}\t%c${a}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}const Is=20,Cs=3,Ns=7;function As(t,e,n,s){const r=J(e),i=function(t,e,n,s){const r=O(e),i=s[s.length-1],a=new Array(i).fill(0),o=e.length,l="complex64"===n?Ds(t):t;if(o>1)for(let t=0;t<r/i;t++){const e=t*i;for(let t=0;t<i;t++)a[t]=Math.max(a[t],Es(l[e+t],0,n).length)}return a}(t,e,n,r),a=e.length,o=Rs(t,e,n,r,i),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${a}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(o.map((t=>"    "+t)).join("\n")),l.join("\n")}function Es(t,e,n){let s;return s=Array.isArray(t)?`${parseFloat(t[0].toFixed(Ns))} + ${parseFloat(t[1].toFixed(Ns))}j`:X(t)?`'${t}'`:"bool"===n?$s(t):parseFloat(t.toFixed(Ns)).toString(),z(s,e)}function $s(t){return 0===t?"false":"true"}function Rs(t,e,n,s,r,i=!0){const a="complex64"===n?2:1,o=e[0],l=e.length;if(0===l)return"complex64"===n?[Es(Ds(t)[0],0,n)]:"bool"===n?[$s(t[0])]:[t[0].toString()];if(1===l){if(o>Is){const e=Cs*a;let s=Array.from(t.slice(0,e)),i=Array.from(t.slice((o-Cs)*a,o*a));return"complex64"===n&&(s=Ds(s),i=Ds(i)),["["+s.map(((t,e)=>Es(t,r[e],n))).join(", ")+", ..., "+i.map(((t,e)=>Es(t,r[o-Cs+e],n))).join(", ")+"]"]}return["["+("complex64"===n?Ds(t):Array.from(t)).map(((t,e)=>Es(t,r[e],n))).join(", ")+"]"]}const u=e.slice(1),c=s.slice(1),h=s[0]*a,p=[];if(o>Is){for(let e=0;e<Cs;e++){const s=e*h,i=s+h;p.push(...Rs(t.slice(s,i),u,n,c,r,!1))}p.push("...");for(let e=o-Cs;e<o;e++){const s=e*h,i=s+h;p.push(...Rs(t.slice(s,i),u,n,c,r,e===o-1))}}else for(let e=0;e<o;e++){const s=e*h,i=s+h;p.push(...Rs(t.slice(s,i),u,n,c,r,e===o-1))}const d=2===l?",":"";p[0]="["+p[0]+d;for(let t=1;t<p.length-1;t++)p[t]=" "+p[t]+d;let f=",\n";for(let t=2;t<l;t++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(i?"":f),p}function Ds(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}class Os{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=O(t),null!=n){const t=n.length;E(t===this.size,(()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||U(e,this.size),this.strides=J(t)}set(t,...e){0===e.length&&(e=[0]),E(e.length===this.rank,(()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`));const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const n of t){if(n<0||n>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}e++}let n=t[t.length-1];for(let e=0;e<t.length-1;++e)n+=this.strides[e]*t[e];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Fs().makeTensor(this.values,this.shape,this.dtype)}}let Fs=null,Ms=null,Ls=null;class zs{constructor(t,e,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=O(t),this.strides=J(t),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return Ms.buffer(this.shape,this.dtype,t)}bufferSync(){return Ms.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return et(this.shape,t)}arraySync(){return et(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const t=Fs().read(this.dataId);if("string"===this.dtype){const e=await t;try{return e.map((t=>_s(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=Fs().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>_s(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await Fs().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(Fs().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Ms.print(this,t)}clone(){return this.throwIfDisposed(),Ms.clone(this)}toString(t=!1){return As(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Ms.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),Fs().makeVariable(this,t,e,n)}}function Ps(){return mt("Tensor",(()=>zs))}Object.defineProperty(zs,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed}),Ps();class Vs extends zs{constructor(t,e,n,s){super(t.shape,t.dtype,t.dataId,s),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!F(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Fs().disposeTensor(this),this.dataId=t.dataId,Fs().incRef(this,null)}dispose(){Fs().disposeVariable(this),this.isDisposedInternal=!0}}var Bs,Ws,qs,Us,Gs;Object.defineProperty(Vs,Symbol.hasInstance,{value:t=>t instanceof zs&&null!=t.assign&&t.assign instanceof Function}),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(Bs||(Bs={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(Ws||(Ws={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(qs||(qs={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(Us||(Us={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(Gs||(Gs={}));const js={float32:Us,int32:Ws,bool:qs,complex64:Gs};function Hs(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return js[t][e]}function Xs(t){return Hs(t,"int32")}function Ks(t,e){if(t.dtype===e.dtype)return[t,e];const n=Hs(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function Ys(t,e){return e.some((e=>e.id===t.id))}function Zs(t){const e=[];return Qs(t,e,new Set),e}function Qs(t,e,n){if(null==t)return;if(t instanceof zs)return void e.push(t);if(s=t,!Array.isArray(s)&&"object"!=typeof s)return;var s;const r=t;for(const t in r){const s=r[t];n.has(s)||(n.add(s),Qs(s,e,n))}}function Js(t){return null!=t.kernelName}class tr{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((t=>t.name))))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class er{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new tr}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(console.warn(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new ks(this.backendInstance),!0}setupRegisteredKernels(){fs(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){fs(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(!n||n instanceof S||"function"!=typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,s=n.then((n=>!(e<this.pendingBackendInitId||(this.registry[t]=n,this.pendingBackendInit=null,0)))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}}catch(e){return console.warn(`Initialization of backend ${t} failed`),console.warn(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),s=n.backend,r=this.readSync(e),i=s.refCount(e);s.disposeData(e,!0),n.backend=t,t.move(e,r,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,s=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=t}return this.scopedRun((()=>this.startScope(s)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(t){throw e(),t}}nextTensorId(){return er.nextTensorId++}nextVariableId(){return er.nextVariableId++}clone(t){const e=sr.runKernel(Ie,{x:t}),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e={x:t};return sr.runKernel(Lt,e,{dtype:"float32"})}})),[],{}),e}runKernel(t,e,n){if(null==ps(t,this.backendName))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const s=this.backend.numDataIds();let r=0;n.forEach((t=>{r+="complex64"===t.dtype?3:1}));const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=s-e-r-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${t}'`)}runKernelFunc(t){let e,n=[];const s=this.isTapeOn(),r=this.state.numBytes,i=this.state.numTensors;let a,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=Js(t)?t.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Js(t)){const{kernelName:e,inputs:r,attrs:i}=t;null==this.backendName&&this.backend;const l=ps(e,this.backendName);E(null!=l,(()=>`Cannot find registered kernel '${e}' for backend '${this.backendName}'`)),a=()=>{const t=this.backend.numDataIds();o=l.kernelFunc({inputs:r,attrs:i,backend:this.backend});const a=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(e,t,a);const u=a.map((t=>{if(null!=t.rank)return t;const{dataId:e,shape:n,dtype:s}=t;return this.makeTensorFromDataId(e,n,s)}));if(s){const t=this.getTensorsForGradient(e,r,u);n=this.saveTensorsForBackwardMode(t)}return u}}else{const{forwardFunc:e}=t,r=t=>{s&&(n=t.map((t=>this.keep(this.clone(t)))))};a=()=>{const t=this.backend.numDataIds();o=this.tidy((()=>e(this.backend,r)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,t,n),n}}const{inputs:u,attrs:c}=t,h=Js(t)?null:t.backwardsFunc;let p;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(l,u,(()=>a())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),e=p.outputs):e=a()})),s&&this.addTapeNode(l,u,e,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((t=>null!=u[t]?u[t].shape:null)),outputShapes:e.map((t=>t.shape)),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(o)?e:e[0]}saveTensorsForBackwardMode(t){return t.map((t=>this.keep(this.clone(t))))}getTensorsForGradient(t,e,n){const s=ds(t);if(null!=s){const t=s.inputsToSave||[],r=s.outputsToSave||[];let i;s.saveAllInputs?(E(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),i=Object.keys(e).map((t=>e[t]))):i=t.map((t=>e[t]));const a=n.filter(((t,e)=>r[e]));return i.concat(a)}return[]}makeTensor(t,e,n,s){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=t;"string"===n&&X(t[0])&&(r=t.map((t=>ws(t))));const i=s.write(r,e,n),a=new zs(e,n,i,this.nextTensorId());if(this.trackTensor(a,s),"string"===n){const t=this.state.tensorInfo.get(i),e=function(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}(r);this.state.numBytes+=e-t.bytes,t.bytes=e}return a}makeTensorFromDataId(t,e,n,s){const r=new zs(e,n=n||"float32",t,this.nextTensorId());return this.trackTensor(r,s),r}makeVariable(t,e=!0,n,s){n=n||this.nextVariableId().toString(),null!=s&&s!==t.dtype&&(t=t.cast(s));const r=new Vs(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(t,e){this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*H(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof Vs||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,"string"===t.dtype&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),"complex64"!==t.dtype&&"string"!==t.dtype){const e=t.size*H(t.dtype);this.state.numBytes-=e}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const t of this.state.activeProfile.kernels)t.kernelTimeMs=await t.kernelTimeMs,t.extraInfo=await t.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,s,r,i){const a={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:r},o=ds(t);null!=o&&(s=o.gradFunc),null!=s&&(a.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],s=st(t.size,t.dtype);return this.makeTensor(s,t.shape,t.dtype)}return t})),s(t.length>1?t:t[0],r,i))),this.state.activeTape.push(a)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=Zs(t),n=new Set(e.map((t=>t.id)));for(let t=0;t<this.state.activeScope.track.length;t++){const e=this.state.activeScope.track[t];e.kept||n.has(e.id)||e.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==s.id||this.track(t)}))}gradients(t,e,n,s=!1){if(E(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));E(r instanceof zs,(()=>"The result y returned by f() must be a tensor."));const i=function(t,e,n){const s={},r={};for(let t=0;t<e.length;t++)s[e[t].id]=!0;for(let n=0;n<t.length;n++){const i=t[n],a=i.inputs;for(const t in a){const n=a[t];let o=!1;for(let t=0;t<e.length;t++)if(s[n.id]){i.outputs.forEach((t=>s[t.id]=!0)),o=!0,r[i.id]=!0;break}if(o)break}}const i={};i[n.id]=!0;const a={};for(let e=t.length-1;e>=0;e--){const n=t[e],s=n.inputs;for(let t=0;t<n.outputs.length;t++)if(i[n.outputs[t].id]){for(const t in s)i[s[t].id]=!0,a[n.id]=!0;break}}const o=[];for(let e=0;e<t.length;e++){const n=t[e];if(r[n.id]&&a[n.id]){const t={};for(const e in n.inputs){const r=n.inputs[e];s[r.id]&&(t[e]=r)}const e=Object.assign({},n);e.inputs=t,e.outputs=n.outputs,o.push(e)}}return o}(this.state.activeTape,e,r);if(!s&&0===i.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[r.id]=null==n?function(t){const e=nt(O(t),"float32");return sr.makeTensor(e,t,"float32")}(r.shape):n,function(t,e,n,s){for(let r=e.length-1;r>=0;r--){const i=e[r],a=[];if(i.outputs.forEach((e=>{const n=t[e.id];null!=n?a.push(n):a.push(null)})),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const o=i.gradient(a);for(const e in i.inputs){if(!(e in o))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(o)}.`);const r=n((()=>o[e]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${r.dtype}'`);const a=i.inputs[e];if(!F(r.shape,a.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${e}' has shape '${r.shape}', which does not match the shape of the input '${a.shape}'`);if(null==t[a.id])t[a.id]=r;else{const e=t[a.id];t[a.id]=s(e,r),e.dispose()}}}}(t,i,(t=>this.tidy(t)),rr);const s=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:r,grads:s}}))}customGrad(t){return E(Z(t),(()=>"The f passed in customGrad(f) must be a function.")),(...e)=>{let n;E(e.every((t=>t instanceof zs)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const s={};return e.forEach(((t,e)=>{s[e]=t})),this.runKernelFunc({forwardFunc:(s,r)=>(n=t(...e,r),E(n.value instanceof zs,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),E(Z(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(t,s)=>{const r=n.gradFunc(t,s),i=Array.isArray(r)?r:[r];E(i.length===e.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),E(i.every((t=>t instanceof zs)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const a={};return i.forEach(((t,e)=>{a[e]=()=>t})),a},inputs:s})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=vs(),n=await this.backend.time(t);return n.wallMs=vs()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new tr;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function nr(){const t=ft();if(null==t._tfengine){const e=new ct(t);t._tfengine=new er(e)}var e;return e=t._tfengine.ENV,dt=e,Fs=()=>t._tfengine,t._tfengine}er.nextTensorId=0,er.nextVariableId=0;const sr=nr();function rr(t,e){const n={a:t,b:e};return sr.runKernel(xt,n)}function ir(){if("undefined"!=typeof navigator&&null!=navigator){const t=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function ar(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const or=ht();function lr(t,e){let n=t;if(j(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const s=[];for(;Array.isArray(n)||j(n)&&"string"!==e;)s.push(n.length),n=n[0];return Array.isArray(t)&&ht().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&ur(t,s,[]),s}function ur(t,e,n){if(n=n||[],!Array.isArray(t)&&!j(t))return void E(0===e.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`));E(e.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`)),E(t.length===e[0],(()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`));const s=e.slice(1);for(let e=0;e<t.length;++e)ur(t[e],s,n.concat(e))}function cr(t,e,n,s){if("string_or_numeric"!==t){if(null==t)throw new Error("Expected dtype cannot be null.");if("numeric"!==t&&t!==e||"numeric"===t&&"string"===e)throw new Error(`Argument '${n}' passed to '${s}' must be ${t} tensor, but got ${e} tensor`)}}function hr(t,e,n,s="numeric"){if(t instanceof zs)return cr(s,t.dtype,e,n),t;let r=Y(t);if("string"!==r&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),cr(s,r,e,n),null==t||!j(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const s=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${s}'`)}const i=lr(t,r);j(t)||Array.isArray(t)||(t=[t]);const a="string"!==r?xs(t,r):D(t,[],!0);return sr.makeTensor(a,i,r)}function pr(t,e,n,s="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map(((t,r)=>hr(t,`${e}[${r}]`,n,s)))}function dr(t){const e=Object.keys(t);if(1!==e.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const s=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const r=(...t)=>{sr.startScope(n);try{const e=s(...t);return lt(e)&&console.error("Cannot return a Promise inside of tidy."),sr.endScope(e),e}catch(t){throw sr.endScope(null),t}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}or.registerFlag("DEBUG",(()=>!1),(t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),or.registerFlag("IS_BROWSER",(()=>ar())),or.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),or.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),or.registerFlag("PROD",(()=>!1)),or.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>or.getBool("DEBUG"))),or.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),or.registerFlag("IS_TEST",(()=>!1)),or.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),or.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));const fr=dr({complex_:function(t,e){const n=hr(t,"real","complex"),s=hr(e,"imag","complex");$(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:n,imag:s};return sr.runKernel(Vt,r)}});function mr(t,e,n,s){if(null==s&&(s=Y(t)),"complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!j(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){it(e);const t=O(e),s=O(n);E(t===s,(()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${s}`));for(let t=0;t<n.length;++t){const s=n[t],r=t!==n.length-1||s!==O(e.slice(t));E(n[t]===e[t]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `))}}return j(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==s?xs(t,s):D(t,[],!0),sr.makeTensor(t,e,s)}function gr(t,e,n){return mr(t,e,lr(t,n),n)}const yr={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function br(t,e){const n=[],s=[],r=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);for(let i=0;i<r.length;++i){const a=r[i],o=Array.isArray(t)?t[i].tensor:t[a];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${a}': ${o.dtype}`);const l={name:a,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const t=new Promise((async t=>{const e=await o.bytes(),n=e.reduce(((t,e)=>t+e.length),0)+4*e.length,s=new Uint8Array(n);let r=0;for(let t=0;t<e.length;t++){const n=e[t],i=new Uint8Array(new Uint32Array([n.length]).buffer);s.set(i,r),r+=4,s.set(n,r),r+=n.length}t(s)}));s.push(t)}else s.push(o.data());null!=e&&(l.group=e),n.push(l)}return{data:xr(await Promise.all(s)),specs:n}}function xr(t){if(null===t)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach((t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${t.constructor.name}`)}));const s=new Uint8Array(e);let r=0;return n.forEach((t=>{s.set(new Uint8Array(t.buffer),r),r+=t.byteLength})),s.buffer}const vr="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function wr(t){return vr?Buffer.byteLength(t):new Blob([t]).size}function _r(t){if(1===t.length)return t[0];let e=0;t.forEach((t=>{e+=t.byteLength}));const n=new Uint8Array(e);let s=0;return t.forEach((t=>{n.set(new Uint8Array(t),s),s+=t.byteLength})),n.buffer}function kr(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:wr(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:wr(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function Tr(){const t=function(){const t=t=>{let e=t<<13,n=0;for(;0==(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return s=>{const r=new ArrayBuffer(4*s.length),i=new Uint32Array(r);for(let r=0;r<s.length;r++){const a=s[r],o=t[n[a>>10]+(1023&a)]+e[a>>10];i[r]=o}return new Float32Array(r)}}class Sr{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Sr.instance&&(Sr.instance=new Sr),Sr.instance}static registerSaveRouter(t){Sr.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Sr.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Sr.getHandlers(t,"save")}static getLoadHandlers(t,e){return Sr.getHandlers(t,"load",e)}static getHandlers(t,e,n){const s=[];return("load"===e?Sr.getInstance().loadRouters:Sr.getInstance().saveRouters).forEach((e=>{const r=e(t,n);null!==r&&s.push(r)})),s}}const Ir=t=>Sr.getSaveHandlers(t),Cr="tensorflowjs",Nr="models_store",Ar="model_info_store";function Er(){if(!ht().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function $r(t){const e=t.result;e.createObjectStore(Nr,{keyPath:"modelPath"}),e.createObjectStore(Ar,{keyPath:"modelPath"})}class Rr{constructor(t){if(this.indexedDB=Er(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise(((t,n)=>{const s=this.indexedDB.open(Cr,1);s.onupgradeneeded=()=>$r(s),s.onsuccess=()=>{const r=s.result;if(null==e){const e=r.transaction(Nr,"readonly"),s=e.objectStore(Nr).get(this.modelPath);s.onsuccess=()=>{if(null==s.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(s.result.modelArtifacts)},s.onerror=t=>(r.close(),n(s.error)),e.oncomplete=()=>r.close()}else{const s=kr(e),i=r.transaction(Ar,"readwrite");let a=i.objectStore(Ar);const o=a.put({modelPath:this.modelPath,modelArtifactsInfo:s});let l;o.onsuccess=()=>{l=r.transaction(Nr,"readwrite");const o=l.objectStore(Nr).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:s});o.onsuccess=()=>t({modelArtifactsInfo:s}),o.onerror=t=>{a=i.objectStore(Ar);const e=a.delete(this.modelPath);e.onsuccess=()=>(r.close(),n(o.error)),e.onerror=t=>(r.close(),n(o.error))}},o.onerror=t=>(r.close(),n(o.error)),i.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}}},s.onerror=t=>n(s.error)}))}}Rr.URL_SCHEME="indexeddb://";const Dr=t=>{return ht().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Rr.URL_SCHEME)?(e=t.slice(Rr.URL_SCHEME.length),new Rr(e)):null;var e};Sr.registerSaveRouter(Dr),Sr.registerLoadRouter(Dr);class Or{constructor(){this.indexedDB=Er()}async listModels(){return new Promise(((t,e)=>{const n=this.indexedDB.open(Cr,1);n.onupgradeneeded=()=>$r(n),n.onsuccess=()=>{const s=n.result,r=s.transaction(Ar,"readonly"),i=r.objectStore(Ar).getAll();i.onsuccess=()=>{const e={};for(const t of i.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},i.onerror=t=>(s.close(),e(i.error)),r.oncomplete=()=>s.close()},n.onerror=t=>e(n.error)}))}async removeModel(t){var e;return t=(e=t).startsWith(Rr.URL_SCHEME)?e.slice(Rr.URL_SCHEME.length):e,new Promise(((e,n)=>{const s=this.indexedDB.open(Cr,1);s.onupgradeneeded=()=>$r(s),s.onsuccess=()=>{const r=s.result,i=r.transaction(Ar,"readwrite"),a=i.objectStore(Ar),o=a.get(t);let l;o.onsuccess=()=>{if(null==o.result)return r.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const s=a.delete(t),i=()=>{l=r.transaction(Nr,"readwrite");const s=l.objectStore(Nr).delete(t);s.onsuccess=()=>e(o.result.modelArtifactsInfo),s.onerror=t=>n(o.error)};s.onsuccess=i,s.onerror=t=>(i(),r.close(),n(o.error))}},o.onerror=t=>(r.close(),n(o.error)),i.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}},s.onerror=t=>n(s.error)}))}}const Fr="/",Mr="tensorflowjs_models",Lr="info",zr="model_topology",Pr="weight_specs",Vr="weight_data",Br="model_metadata";function Wr(t){return{info:[Mr,t,Lr].join(Fr),topology:[Mr,t,zr].join(Fr),weightSpecs:[Mr,t,Pr].join(Fr),weightData:[Mr,t,Vr].join(Fr),modelMetadata:[Mr,t,Br].join(Fr)}}function qr(t){const e=t.split(Fr);if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(Fr)}class Ur{constructor(t){if(!ht().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=Wr(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),s=kr(t);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(t){if(vr)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let t=0,s=e.length;t<s;t++)n+=String.fromCharCode(e[t]);return btoa(n)}(t.weightData));const r={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};return null!=t.signature&&(r.signature=t.signature),null!=t.userDefinedMetadata&&(r.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(r.modelInitializer=t.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==s)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=s;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const t=JSON.parse(r);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer)}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=function(t){if(vr){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)n.set([e.charCodeAt(t)],t);return n.buffer}(i),e}}Ur.URL_SCHEME="localstorage://";const Gr=t=>{return ht().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Ur.URL_SCHEME)?(e=t.slice(Ur.URL_SCHEME.length),new Ur(e)):null;var e};Sr.registerSaveRouter(Gr),Sr.registerLoadRouter(Gr);class jr{constructor(){E(ht().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),E("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const t={},e=Mr+Fr,n=Fr+Lr;for(let s=0;s<this.LS.length;++s){const r=this.LS.key(s);r.startsWith(e)&&r.endsWith(n)&&(t[qr(r)]=JSON.parse(this.LS.getItem(r)))}return t}async removeModel(t){var e;const n=Wr(t=(e=t).startsWith(Ur.URL_SCHEME)?e.slice(Ur.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const s=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),s}}class Hr{constructor(){this.managers={}}static getInstance(){return null==Hr.instance&&(Hr.instance=new Hr),Hr.instance}static registerManager(t,e){E(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),E(t.length>0,(()=>"scheme must not be an empty string."));const n=Hr.getInstance();E(null==n.managers[t],(()=>`A model store manager is already registered for scheme '${t}'.`)),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}class Xr{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(ht().get("IS_BROWSER")){ht().setPlatform("browser",new Xr);try{Hr.registerManager(Ur.URL_SCHEME,new jr)}catch(t){}try{Hr.registerManager(Rr.URL_SCHEME,new Or)}catch(t){}}let Kr;function Yr(t,e="float32",n){return e=e||"float32",it(t),new Os(t,e,n)}ht().get("IS_NODE")&&ht().setPlatform("node",new class{constructor(){this.util=n(628),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=ht().global.fetch?ht().global.fetch(t,e):(null==Kr&&(Kr=n(410)),Kr(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}});const Zr=dr({cast_:function(t,e){const n=hr(t,"x","cast");if(!function(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const s={x:n},r={dtype:e};return sr.runKernel(Lt,s,r)}}),Qr=dr({clone_:function(t){const e={x:hr(t,"x","clone","string_or_numeric")};return sr.runKernel(Ie,e)}});function Jr(t){return new Promise((t=>setTimeout(t))).then(t)}nr(),Ms={buffer:Yr,cast:Zr,clone:Qr,print:function(t,e=!1){console.log(t.toString(e))}};class ti{constructor(t){if(!ht().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(ti.URL_SCHEME)&&(t=t.slice(ti.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],s={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n};null!=t.signature&&(s.signature=t.signature),null!=t.userDefinedMetadata&&(s.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(s.modelInitializer=t.modelInitializer);const r=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),i=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(i.download=this.modelTopologyFileName,i.href=r,await Jr((()=>i.dispatchEvent(new MouseEvent("click")))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await Jr((()=>t.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:kr(t)}}}}function ei(t,e,n,s){!function(t){E(null!=t&&Array.isArray(t)&&t.length>0,(()=>"promises must be a none empty array"))}(t),function(t,e){E(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${t}`)),E(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${e}`)),E(e>=t,(()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction ${e}`))}(n=null==n?0:n,s=null==s?1:s);let r=0;return Promise.all(t.map((i=>(i.then((i=>{const a=n+ ++r/t.length*(s-n);return e(a),i})),i))))}async function ni(t,e){null==e&&(e={});const n=null==e.fetchFunc?ht().platform.fetch:e.fetchFunc,s=t.map((t=>n(t,e.requestInit,{isBinary:!0}))),r=(null==e.onProgress?await Promise.all(s):await ei(s,e.onProgress,0,.5)).map((t=>t.arrayBuffer()));return null==e.onProgress?await Promise.all(r):await ei(r,e.onProgress,.5,1)}ti.URL_SCHEME="downloads://",Sr.registerSaveRouter((t=>ht().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(ti.URL_SCHEME)?function(t="model"){return new ti(t)}(t.slice(ti.URL_SCHEME.length)):null));class si{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(E("function"==typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=ht().platform.fetch,E(null!=t&&t.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(t)&&E(2===t.length,(()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`)),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],s={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n};null!=t.signature&&(s.signature=t.signature),null!=t.userDefinedMetadata&&(s.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(s.modelInitializer=t.modelInitializer),e.body.append("model.json",new Blob([JSON.stringify(s)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,e);if(r.ok)return{modelArtifactsInfo:kr(t),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,s=e.weightsManifest,r=e.generatedBy,i=e.convertedBy,a=e.format,o=e.signature,l=e.userDefinedMetadata;if(null==n&&null==s)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,c;if(null!=s){const t=await this.loadWeights(s);[u,c]=t}const h={modelTopology:n,weightSpecs:u,weightData:c,generatedBy:r,convertedBy:i,format:a};null!=o&&(h.signature=o),null!=l&&(h.userDefinedMetadata=l);const p=e.modelInitializer;return p&&(h.modelInitializer=p),h}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?");return[t.substring(0,e)+"/",n>e?t.substring(n):""]}(e),r=this.weightPathPrefix||n,i=[];for(const e of t)i.push(...e.weights);const a=[],o=[];for(const e of t)for(const t of e.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(t)):a.push(r+t+s);return this.weightUrlConverter&&a.push(...await Promise.all(o)),[i,_r(await ni(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function ri(t){return null!=t.match(si.URL_SCHEME_REGEX)}si.URL_SCHEME_REGEX=/^https?:\/\//;const ii=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every((t=>ri(t))):ri(t),n)return ai(t,e)}return null};function ai(t,e){return new si(t,e)}function oi(t,e){return ai(t,e)}let li;Sr.registerSaveRouter(ii),Sr.registerLoadRouter(ii);const ui=dr({fromPixels_:function(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,i=!1,a=!1,o=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&t instanceof ImageData)s=!0;else if("undefined"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement)r=!0;else if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement)i=!0;else if(null!=t.getContext)a=!0;else{if(!("undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${t.constructor.name}`);o=!0}if(r){const e=2;if(r&&t.readyState<e)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=ps(is,sr.backendName)){const n={pixels:t},s={numChannels:e};return sr.runKernel(is,n,s)}const[l,u]=r?[t.videoWidth,t.videoHeight]:[t.width,t.height];let c,h;if(a?c=t.getContext("2d").getImageData(0,0,l,u).data:s||n?c=t.data:(i||r||o)&&(null==li&&(li=document.createElement("canvas").getContext("2d")),li.canvas.width=l,li.canvas.height=u,li.drawImage(t,0,0,l,u),c=li.getImageData(0,0,l,u).data),4===e)h=new Int32Array(c);else{const t=l*u;h=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)h[n*e+t]=c[4*n+t]}return function(t,e,n){if(R(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const s=lr(t,n);if(3!==s.length&&1!==s.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===s.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return mr(t,e,s,n)}(h,[u,l,e],"int32")}});function ci(t,e,n){const s=t.shape.length;E(s===e.length,(()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`)),E(s===n.length,(()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`));for(let r=0;r<s;++r)E(e[r]+n[r]<=t.shape[r],(()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${e[r]+n[r]}) would overflow input.shape[${r}] (${t.shape[r]})`))}function hi(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function pi(t,e,n){const s=[];for(let r=0;r<t.length;r++)s[r]=Math.ceil((e[r]-t[r])/n[r]);return s}function di(t,e,n,s){const r=[...t];for(let t=r.length;t<s.length;t++)r.push(1);for(let t=0;t<n;t++)0===t?r[e]=1:(r.splice(e,0,1),r.pop());return r}function fi(t,e,n){return n<=t?n:n-(e-1)}function mi(t,e){const n=[];for(let s=0;s<t;s++)n.push(e+s);return n}function gi(t,e,n,s,r,i,a,o,l){const u=t.length;let c=new Array(u),h=new Array(u),p=new Array(u);if(e.length&&n>0){const l=e[0],u=n+1;c=yi(a,l,u,s,t),h=bi(o,l,u,r,t),p=di(i,l,u,t)}else for(let e=0;e<u;e++)c[e]=vi(a,s,i,t,e,l),h[e]=wi(o,r,i,t,e,l),p[e]=xi(i,e,l);return{begin:c,end:h,strides:p}}function yi(t,e,n,s,r){const i=[...r],a=mi(n,e);for(let r=0;r<i.length;r++)if(a.indexOf(r)>-1)i[r]=0;else{const a=fi(e,n,r);let o=s[a];t&1<<a&&(o=0),i[r]=o}return i}function bi(t,e,n,s,r){const i=[...r],a=mi(n,e);for(let r=0;r<i.length;r++)if(a.indexOf(r)>-1)i[r]=Number.MAX_SAFE_INTEGER;else{const a=fi(e,n,r);let o=s[a];t&1<<a&&(o=Number.MAX_SAFE_INTEGER),i[r]=o}for(let t=0;t<i.length;t++){const e=r[t];i[t]<0&&(i[t]+=e),i[t]=N(0,i[t],r[t])}return i}function xi(t,e,n){let s=t[e];return(n&1<<e||null==s)&&(s=1),s}function vi(t,e,n,s,r,i){let a=e[r];const o=n[r]||1;(t&1<<r||i&1<<r||null==a)&&(a=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=s[r];return a<0&&(a+=l),a=N(0,a,l-1),a}function wi(t,e,n,s,r,i){let a=e[r];const o=n[r]||1;(t&1<<r||i&1<<r||null==a)&&(a=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=s[r];return a<0&&(a+=l),a=o>0?N(0,a,l):N(-1,a,l-1),a}function _i(t,e,n){let s=n.length;for(let t=0;t<n.length;t++)if(n[t]>1){s=t;break}for(let r=s+1;r<n.length;r++)if(e[r]>0||n[r]!==t[r])return!1;return!0}function ki(t,e){let n=t.length>0?t[t.length-1]:1;for(let s=0;s<t.length-1;s++)n+=t[s]*e[s];return n}function Ti(t,e,n){let s;const r=t.shape.length;let i;return s="number"==typeof e?[e,...new Array(r-1).fill(0)]:e.length<r?e.concat(new Array(r-e.length).fill(0)):e.slice(),s.forEach((t=>{E(-1!==t,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(r).fill(-1):"number"==typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,i=i.map(((e,n)=>e>=0?e:(E(-1===e,(()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`)),t.shape[n]-s[n]))),[s,i]}function Si(t,e,n,s,r,i,a,o,l){let u=e.slice(),c=n.slice(),h=s;null==s&&(h=new Array(u.length));const p=hi(a);if(p.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==a&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==a&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const d=t.length-u.length,f=hi(o),m=t.slice();f.forEach((t=>{u[t]=0,c[t]=1,m.splice(t,0,1)}));const{begin:g,end:y,strides:b}=gi(m,p,d,u,c,h,r,i,a);u=g,c=y,h=b;const x=hi(l);x.forEach((t=>{c[t]=u[t]+1,h[t]=1}));const v=pi(u,c,h),w=v.filter(((t,e)=>-1===x.indexOf(e)));return{nonStrided:h.every((t=>1===t)),$begin:u,$end:c,$strides:h,size:v,newShape:m,outShape:w}}class Ii{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Ci{constructor(){this.classNameMap={}}static getMap(){return null==Ci.instance&&(Ci.instance=new Ci),Ci.instance}static register(t){Ci.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function Ni(t){E(null!=t.className,(()=>"Class being registered does not have the static className property defined.")),E("string"==typeof t.className,(()=>"className is required to be a string, but got type "+typeof t.className)),E(t.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Ci.register(t)}function Ai(){return sr}function Ei(){return sr.memory()}function $i(t,e){return sr.tidy(t,e)}function Ri(t){Zs(t).forEach((t=>t.dispose()))}function Di(t){return sr.keep(t)}function Oi(t){return sr.setBackend(t)}function Fi(t,e,n=1){return sr.registerBackend(t,e,n)}function Mi(t){return sr.customGrad(t)}function Li(t,e){if((j(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&j(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return mr(t,[],[],e)}Ls=function(t){ht().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};class zi extends Ii{minimize(t,e=!1,n){const{value:s,grads:r}=this.computeGradients(t,n);if(null!=n){const t=n.map((t=>({name:t.name,tensor:r[t.name]})));this.applyGradients(t)}else this.applyGradients(r);return Ri(r),e?s:(s.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return function(t,e){E(Z(t),(()=>"The f passed in variableGrads(f) must be a function")),E(null==e||Array.isArray(e)&&e.every((t=>t instanceof Vs)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=e;if(!n){e=[];for(const t in sr.registeredVariables)e.push(sr.registeredVariables[t])}const s=n?e.filter((t=>!t.trainable)):null,r=e.length;E((e=e.filter((t=>t.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`));const{value:i,grads:a}=sr.gradients(t,e,null,!0);E(a.some((t=>null!=t)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),E(0===i.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`));const o={};return e.forEach(((t,e)=>{null!=a[e]&&(o[t.name]=a[e])})),null!=s&&s.forEach((t=>o[t.name]=null)),{value:i,grads:o}}(t,e)}dispose(){null!=this.iterations_&&Ri(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Li(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(zi,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});const Pi=dr({abs_:function(t){const e=hr(t,"x","abs");if("complex64"===e.dtype){const t={x:e};return sr.runKernel(Bt,t)}{const t={x:e};return sr.runKernel(gt,t)}}}),Vi=dr({add_:function(t,e){let n=hr(t,"a","add"),s=hr(e,"b","add");[n,s]=Ks(n,s);const r={a:n,b:s};return sr.runKernel(xt,r)}}),Bi=dr({all_:function(t,e=null,n=!1){const s={x:hr(t,"x","all","bool")},r={axis:e,keepDims:n};return sr.runKernel(wt,s,r)}}),Wi=dr({any_:function(t,e=null,n=!1){const s={x:hr(t,"x","any","bool")},r={axis:e,keepDims:n};return sr.runKernel(_t,s,r)}}),qi=dr({argMax_:function(t,e=0){const n={x:hr(t,"x","argMax")},s={axis:e};return sr.runKernel(kt,n,s)}});function Ui(t,e,n,s,r="NHWC",i){return Hi(t,[...e,t[3]],n,i,s,null,null,na(r))}function Gi(t,e,n,s,r,i,a="channelsLast"){const[o,l]=Yi(e);let u;if("channelsLast"===a)u=[o,l,t[3],t[3]];else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);u=[o,l,t[1],t[1]]}return Hi(t,u,n,s,r,i,!1,a)}function ji(t,e,n,s,r,i,a="NDHWC"){const[o,l,u]=Zi(e);let c,h;if("NDHWC"===a)h="channelsLast",c=[o,l,u,t[4],t[4]];else{if("NCDHW"!==a)throw new Error(`Unknown dataFormat ${a}`);h="channelsFirst",c=[o,l,u,t[1],t[1]]}return Xi(t,c,n,s,r,!1,h,i)}function Hi(t,e,n,s,r,i,a=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=t;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=t}const[p,d,,f]=e,[m,g]=Yi(n),[y,b]=Yi(s),x=Qi(p,y),v=Qi(d,b),{padInfo:w,outHeight:_,outWidth:k}=function(t,e,n,s,r,i,a,o,l){let u,c,h;if("number"==typeof t){u={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const r=function(t,e,n,s,r){null==s&&(s=Ki(t,e,n));const i=t[1];return[Ji((t[0]-e+2*s)/n+1,r),Ji((i-e+2*s)/n+1,r)]}([e,n],i,s,t,o);c=r[0],h=r[1]}else if("same"===t){c=Math.ceil(e/s),h=Math.ceil(n/r);const t=Math.max(0,(c-1)*s+i-e),o=Math.max(0,(h-1)*r+a-n),l=Math.floor(t/2),p=t-l,d=Math.floor(o/2);u={top:l,bottom:p,left:d,right:o-d,type:"SAME"}}else if("valid"===t)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-i+1)/s),h=Math.ceil((n-a+1)/r);else{if("object"!=typeof t)throw Error(`Unknown padding parameter: ${t}`);{const p="channelsLast"===l?t[1][0]:t[2][0],d="channelsLast"===l?t[1][1]:t[2][1],f="channelsLast"===l?t[2][0]:t[3][0],m="channelsLast"===l?t[2][1]:t[3][1];u={top:p,bottom:d,left:f,right:m,type:0===p&&0===d&&0===f&&0===m?"VALID":"EXPLICIT"},c=Ji((e-i+p+d)/s+1,o),h=Ji((n-a+f+m)/r+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(r,u,c,m,g,x,v,i,o),T=a?f*h:f;let S;return"channelsFirst"===o?S=[l,T,_,k]:"channelsLast"===o&&(S=[l,_,k,T]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:_,outWidth:k,outChannels:T,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:d,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:t,outShape:S,filterShape:e}}function Xi(t,e,n,s,r,i=!1,a="channelsLast",o){let[l,u,c,h,p]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[l,u,c,h,p]=t;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[l,p,u,c,h]=t}const[d,f,m,,g]=e,[y,b,x]=Zi(n),[v,w,_]=Zi(s),k=Qi(d,v),T=Qi(f,w),S=Qi(m,_),{padInfo:I,outDepth:C,outHeight:N,outWidth:A}=function(t,e,n,s,r,i,a,o,l,u,c){let h,p,d,f;if("number"==typeof t){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const i=function(t,e,n,s,r,i){null==r&&(r=Ki(t,e,s));const a=t[1],o=t[2];return[Ji((t[0]-e+2*r)/s+1,i),Ji((a-e+2*r)/s+1,i),Ji((o-e+2*r)/s+1,i),1]}([e,n,s,1],o,0,r,t,c);p=i[0],d=i[1],f=i[2]}else if("same"===t){p=Math.ceil(e/r),d=Math.ceil(n/i),f=Math.ceil(s/a);const t=(p-1)*r+o-e,c=(d-1)*i+l-n,m=(f-1)*a+u-s,g=Math.floor(t/2),y=t-g,b=Math.floor(c/2),x=c-b,v=Math.floor(m/2);h={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}else{if("valid"!==t)throw Error(`Unknown padding parameter: ${t}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((e-o+1)/r),d=Math.ceil((n-l+1)/i),f=Math.ceil((s-u+1)/a)}return{padInfo:h,outDepth:p,outHeight:d,outWidth:f}}(r,u,c,h,y,b,x,k,T,S,o),E=i?g*p:g;let $;return"channelsFirst"===a?$=[l,E,C,N,A]:"channelsLast"===a&&($=[l,C,N,A,E]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:c,inWidth:h,inChannels:p,outDepth:C,outHeight:N,outWidth:A,outChannels:E,padInfo:I,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:d,filterHeight:f,filterWidth:m,effectiveFilterDepth:k,effectiveFilterHeight:T,effectiveFilterWidth:S,dilationDepth:v,dilationHeight:w,dilationWidth:_,inShape:t,outShape:$,filterShape:e}}function Ki(t,e,n,s=1){const r=Qi(e,s);return Math.floor((t[0]*(n-1)-n+r)/2)}function Yi(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function Zi(t){return"number"==typeof t?[t,t,t]:t}function Qi(t,e){return e<=1?t:t+(t-1)*(e-1)}function Ji(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function ta(t){const[e,n,s]=Yi(t);return 1===e&&1===n&&1===s}function ea(t,e){return ta(t)||ta(e)}function na(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}const sa=dr({reshape_:function(t,e){const n={x:hr(t,"x","reshape","string_or_numeric")},s={shape:e};return sr.runKernel(vn,n,s)}}),ra=dr({avgPool_:function(t,e,n,s,r){const i=hr(t,"x","avgPool","float32");E(ea(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let a=i,o=!1;3===i.rank&&(o=!0,a=sa(i,[1,i.shape[0],i.shape[1],i.shape[2]])),E(4===a.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`)),null!=r&&E(M(s),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const l={x:a},u={filterSize:e,strides:n,pad:s,dimRoundingMode:r};let c=sr.runKernel(Et,l,u);return c=Zr(c,i.dtype),o?sa(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),ia=dr({avgPool3d_:function(t,e,n,s,r,i="NDHWC"){const a=hr(t,"x","avgPool3d","float32");let o=a,l=!1;4===a.rank&&(l=!0,o=sa(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),E(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),E("NDHWC"===i,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),null!=r&&E(M(s),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const u={x:o},c={filterSize:e,strides:n,pad:s,dimRoundingMode:r,dataFormat:i};let h=sr.runKernel(Rt,u,c);return h=Zr(h,o.dtype),l?sa(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),aa=dr({batchNorm_:function(t,e,n,s,r,i){null==i&&(i=.001);const a=hr(t,"x","batchNorm"),o=hr(e,"mean","batchNorm"),l=hr(n,"variance","batchNorm");let u,c;null!=r&&(u=hr(r,"scale","batchNorm")),null!=s&&(c=hr(s,"offset","batchNorm")),E(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),E(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),E(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(t){let e;return e=0===t.rank||1===t.rank?sa(t,[1,1,1,t.size]):2===t.rank?sa(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?sa(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(a),scale:u,offset:c,mean:o,variance:l},p={varianceEpsilon:i},d=sr.runKernel(we,h,p);return sa(d,a.shape)}}),oa=dr({batchNorm2d_:function(t,e,n,s,r,i){const a=hr(t,"x","batchNorm"),o=hr(e,"mean","batchNorm"),l=hr(n,"variance","batchNorm");let u,c;return null!=r&&(u=hr(r,"scale","batchNorm")),null!=s&&(c=hr(s,"offset","batchNorm")),E(2===a.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`)),E(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),E(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&E(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&E(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),aa(a,o,l,c,u,i)}}),la=dr({batchNorm3d_:function(t,e,n,s,r,i){const a=hr(t,"x","batchNorm"),o=hr(e,"mean","batchNorm"),l=hr(n,"variance","batchNorm");let u,c;return null!=r&&(u=hr(r,"scale","batchNorm")),null!=s&&(c=hr(s,"offset","batchNorm")),E(3===a.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`)),E(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),E(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&E(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&E(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),aa(a,o,l,c,u,i)}}),ua=dr({batchNorm4d_:function(t,e,n,s,r,i){const a=hr(t,"x","batchNorm"),o=hr(e,"mean","batchNorm"),l=hr(n,"variance","batchNorm");let u,c;return null!=r&&(u=hr(r,"scale","batchNorm")),null!=s&&(c=hr(s,"offset","batchNorm")),E(4===a.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`)),E(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),E(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&E(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&E(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),aa(a,o,l,c,u,i)}}),ca=dr({clipByValue_:function(t,e,n){const s=hr(t,"x","clipByValue");E(e<=n,(()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`));const r={x:s},i={clipValueMin:e,clipValueMax:n};return sr.runKernel(Pt,r,i)}}),ha=dr({concat_:function(t,e=0){E(t.length>=1,(()=>"Pass at least one tensor to concat"));const n=pr(t,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)})),1===n.length)return Qr(n[0]);const s=n,r={axis:e};return sr.runKernel(Wt,s,r)}}),pa=dr({concat1d_:function(t){return ha(t,0)}}),da=dr({concat2d_:function(t,e){return ha(t,e)}}),fa=dr({concat3d_:function(t,e){return ha(t,e)}}),ma=dr({concat4d_:function(t,e){return ha(t,e)}}),ga=dr({conv2d_:function(t,e,n,s,r="NHWC",i=[1,1],a){const o=hr(t,"x","conv2d"),l=hr(e,"filter","conv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=sa(o,[1,o.shape[0],o.shape[1],o.shape[2]])),E(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),E(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),null!=a&&E(M(s),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`));const h="NHWC"===r?u.shape[3]:u.shape[1];E(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),E(ea(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const p={x:u,filter:l},d={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a},f=sr.runKernel(qt,p,d);return c?sa(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),ya=dr({conv1d_:function(t,e,n,s,r="NWC",i=1,a){const o=hr(t,"x","conv1d"),l=hr(e,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=sa(o,[1,o.shape[0],o.shape[1]])),E(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),E(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),null!=a&&E(M(s),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`)),E(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),E(ea(n,i),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`)),E("NWC"===r,(()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`));const h=sa(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=sa(u,[u.shape[0],1,u.shape[1],u.shape[2]]),d=ga(p,h,[1,n],s,"NHWC",[1,i],a);return sa(d,c?[d.shape[2],d.shape[3]]:[d.shape[0],d.shape[2],d.shape[3]])}}),ba=dr({conv2DBackpropInput_:function(t,e,n,s,r,i="NHWC",a){E(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let o=t,l=e,u=!1;3===e.rank&&(u=!0,l=sa(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,t[0],t[1],t[2]]),E(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),E(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),E(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===i?o[3]:o[1],h="NHWC"===i?l.shape[3]:l.shape[1];E(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),E(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),null!=a&&E(M(r),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const p={dy:l,filter:n},d={strides:s,pad:r,dataFormat:i,dimRoundingMode:a,inputShape:o},f=sr.runKernel(Gt,p,d);return u?sa(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),xa=dr({conv2dTranspose_:function(t,e,n,s,r,i){const a=hr(t,"x","conv2dTranspose"),o=hr(e,"filter","conv2dTranspose");return ba(n,a,o,s,r,"NHWC",i)}}),va=dr({conv3d_:function(t,e,n,s,r="NDHWC",i=[1,1,1]){const a=hr(t,"x","conv3d"),o=hr(e,"filter","conv3d");let l=a,u=!1;4===a.rank&&(u=!0,l=sa(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),E(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),E(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),E(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),E(ea(n,i),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),E("NDHWC"===r,(()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`));const c={x:l,filter:o},h={strides:n,pad:s,dataFormat:r,dilations:i},p=sr.runKernel(jt,c,h);return u?sa(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),wa=dr({depthwiseConv2d_:function(t,e,n,s,r="NHWC",i=[1,1],a){const o=hr(t,"x","depthwiseConv2d"),l=hr(e,"filter","depthwiseConv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=sa(o,[1,o.shape[0],o.shape[1],o.shape[2]])),E(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),E(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),E(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),null!=a&&E(M(s),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`));const h={x:u,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a},d=sr.runKernel(ee,h,p);return c?sa(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),_a=dr({floorDiv_:function(t,e){let n=hr(t,"a","floorDiv"),s=hr(e,"b","floorDiv");[n,s]=Ks(n,s);const r={a:n,b:s};return sr.runKernel(ve,r)}}),ka=dr({div_:function(t,e){let n=hr(t,"a","div"),s=hr(e,"b","div");if([n,s]=Ks(n,s),"int32"===n.dtype&&"int32"===s.dtype)return _a(n,s);const r={a:n,b:s};return sr.runKernel(le,r,{})}}),Ta=dr({elu_:function(t){const e={x:hr(t,"x","elu")};return sr.runKernel(ue,e)}});function Sa(t,e){const n=t.length,s=[];for(let r=0;r<n;r++){const i=n-1-r,a=t[i]||1;(e[e.length-1-r]||1)>1&&1===a&&s.unshift(i)}return s}function Ia(t,e){const n=[];for(let s=0;s<e.length;s++){const r=t[t.length-s-1],i=e.length-s-1,a=e[i];(null==r||1===r&&a>1)&&n.unshift(i)}return n}function Ca(t,e){const n=[],s=Math.max(t.length,e.length);for(let r=0;r<s;r++){let s=t[t.length-r-1];null==s&&(s=1);let i=e[e.length-r-1];if(null==i&&(i=1),1===s)n.unshift(i);else if(1===i)n.unshift(s);else{if(s!==i)throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`);n.unshift(s)}}return n}const Na=dr({equal_:function(t,e){let n=hr(t,"a","equal"),s=hr(e,"b","equal");[n,s]=Ks(n,s),Ca(n.shape,s.shape);const r={a:n,b:s};return sr.runKernel(pe,r)}}),Aa=dr({expandDims_:function(t,e=0){const n=hr(t,"x","expandDims","string_or_numeric");E(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const s={input:n},r={dim:e};return sr.runKernel(fe,s,r)}}),Ea=dr({tile_:function(t,e){const n=hr(t,"x","tile","string_or_numeric");E(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`));const s={x:n},r={reps:e};return sr.runKernel(Yn,s,r)}}),$a=dr({eye_:function(t,e,n,s="float32"){null==e&&(e=t);const r=Yr([t,e],s),i=t<=e?t:e;for(let t=0;t<i;++t)r.set(1,t,t);const a=sa(r.toTensor(),[t,e]);if(null==n)return a;if(1===n.length)return Ea(Aa(a,0),[n[0],1,1]);if(2===n.length)return Ea(Aa(Aa(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return Ea(Aa(Aa(Aa(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function Ra(t,e,n){const s={shape:t,value:e,dtype:n};return sr.runKernel(ye,{},s)}const Da=dr({floor_:function(t){const e={x:hr(t,"x","floor")};return sr.runKernel(xe,e)}}),Oa=dr({gather_:function(t,e,n=0,s=0){const r={x:hr(t,"x","gather"),indices:hr(e,"indices","gather","int32")},i={axis:n,batchDims:s};return sr.runKernel(_e,r,i)}}),Fa=dr({greater_:function(t,e){let n=hr(t,"a","greater"),s=hr(e,"b","greater");[n,s]=Ks(n,s),Ca(n.shape,s.shape);const r={a:n,b:s};return sr.runKernel(Te,r)}}),Ma=dr({greaterEqual_:function(t,e){let n=hr(t,"a","greaterEqual"),s=hr(e,"b","greaterEqual");[n,s]=Ks(n,s),Ca(n.shape,s.shape);const r={a:n,b:s};return sr.runKernel(Se,r)}}),La=dr({leakyRelu_:function(t,e=.2){const n={x:hr(t,"x","leakyRelu")},s={alpha:e};return sr.runKernel(Re,n,s)}}),za=dr({log_:function(t){const e={x:hr(t,"x","log")};return sr.runKernel(Me,e)}}),Pa=dr({exp_:function(t){const e={x:hr(t,"x","exp")};return sr.runKernel(de,e)}}),Va=dr({max_:function(t,e=null,n=!1){const s={x:hr(t,"x","max")},r={reductionIndices:e,keepDims:n};return sr.runKernel(qe,s,r)}}),Ba=dr({mul_:function(t,e){let n=hr(t,"a","mul"),s=hr(e,"b","mul");[n,s]=Ks(n,s);const r={a:n,b:s};return sr.runKernel(nn,r)}}),Wa=dr({sub_:function(t,e){let n=hr(t,"a","sub"),s=hr(e,"b","sub");[n,s]=Ks(n,s);const r={a:n,b:s};return sr.runKernel(Gn,r)}}),qa=dr({sum_:function(t,e=null,n=!1){let s=hr(t,"x","sum");"bool"===s.dtype&&(s=Zr(s,"int32"));const r={x:s},i={axis:e,keepDims:n};return sr.runKernel(Pn,r,i)}}),Ua=dr({logSoftmax_:function(t,e=-1){const n=hr(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);const s=Mi(((t,n)=>{const s=Va(t,e,!0),r=Wa(t,s),i=Wa(Zr(r,"float32"),za(qa(Pa(r),e,!0)));return n([i]),{value:i,gradFunc:(t,n)=>{const[s]=n,r=Pa(s);return Wa(t,Ba(qa(t,e,!0),r))}}}));return s(n)}}),Ga=dr({logicalAnd_:function(t,e){const n=hr(t,"a","logicalAnd","bool"),s=hr(e,"b","logicalAnd","bool");Ca(n.shape,s.shape);const r={a:n,b:s};return sr.runKernel(ze,r)}}),ja=dr({maxPool_:function(t,e,n,s,r){const i=hr(t,"x","maxPool");let a=i,o=!1;3===i.rank&&(o=!0,a=sa(i,[1,i.shape[0],i.shape[1],i.shape[2]])),E(4===a.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`)),E(ea(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=r&&E(M(s),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const l={x:a},u={filterSize:e,strides:n,pad:s,dimRoundingMode:r},c=sr.runKernel(Ge,l,u);return o?sa(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Ha=dr({maxPool3d_:function(t,e=[1,1,1],n,s,r,i="NDHWC"){const a=hr(t,"x","maxPool3d");let o=a,l=!1;4===a.rank&&(l=!0,o=sa(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),E(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),E("NDHWC"===i,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),null!=r&&E(M(s),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const u={x:o},c={filterSize:e,strides:n,pad:s,dimRoundingMode:r,dataFormat:i},h=sr.runKernel(He,u,c);return l?sa(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Xa=dr({maximum_:function(t,e){let n=hr(t,"a","maximum"),s=hr(e,"b","maximum");[n,s]=Ks(n,s),"bool"===n.dtype&&(n=Zr(n,"int32"),s=Zr(s,"int32")),Ca(n.shape,s.shape);const r={a:n,b:s};return sr.runKernel(Ue,r)}}),Ka=dr({mean_:function(t,e=null,n=!1){const s={x:hr(t,"x","mean")},r={axis:e,keepDims:n};return sr.runKernel(Ye,s,r)}}),Ya=dr({min_:function(t,e=null,n=!1){const s={x:hr(t,"x","min")},r={axis:e,keepDims:n};return sr.runKernel(Ze,s,r)}}),Za=dr({minimum_:function(t,e){let n=hr(t,"a","minimum"),s=hr(e,"b","minimum");[n,s]=Ks(n,s),"bool"===n.dtype&&(n=Zr(n,"int32"),s=Zr(s,"int32")),Ca(n.shape,s.shape);const r={a:n,b:s};return sr.runKernel(Qe,r)}});function Qa(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function Ja(t,e,n){const s=t.length+e.length,r=[];let i=0,a=0;for(let o=0;o<s;o++)-1===n.indexOf(o)?r.push(t[i++]):r.push(e[a++]);return r}function to(t,e){const n=[],s=t.length;for(let r=0;r<s;r++)-1===e.indexOf(r)&&n.push(t[r]);return[n,e.map((e=>t[e]))]}function eo(t,e){return Ja(t,e.map((t=>1)),e)}function no(t,e,n){E(Qa(e,n),(()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`))}function so(t,e){if(Qa(t,e))return null;const n=[];for(let s=0;s<e;++s)-1===t.indexOf(s)&&n.push(s);return t.forEach((t=>n.push(t))),n}function ro(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}function io(t,e){const n=[];for(let s=e-t;s<e;++s)n.push(s);return n}const ao=dr({square_:function(t){const e=hr(t,"x","square");return sr.runKernel("Square",{x:e},{})}}),oo=dr({moments_:function(t,e=null,n=!1){const s=B(e,(t=hr(t,"x","moments")).shape),r=Ka(t,s,n);let i=r.shape;n||(i=eo(r.shape,s));const a=ao(Wa(Zr(t,"float32"),sa(r,i)));return{mean:r,variance:Ka(a,s,n)}}}),lo=dr({neg_:function(t){const e={x:hr(t,"x","neg")};return sr.runKernel(sn,e)}}),uo=dr({notEqual_:function(t,e){let n=hr(t,"a","notEqual"),s=hr(e,"b","notEqual");[n,s]=Ks(n,s),Ca(n.shape,s.shape);const r={a:n,b:s};return sr.runKernel(rn,r)}}),co=dr({oneHot_:function(t,e,n=1,s=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const r={indices:hr(t,"indices","oneHot","int32")},i={depth:e,onValue:n,offValue:s};return sr.runKernel(cn,r,i)}});function ho(t,e="float32"){if("complex64"===e){const e=ho(t,"float32"),n=ho(t,"float32");return fr(e,n)}const n=st(O(t),e);return sr.makeTensor(n,t,e)}function po(t,e="float32"){if("complex64"===e){const e=po(t,"float32"),n=ho(t,"float32");return fr(e,n)}const n=nt(O(t),e);return sr.makeTensor(n,t,e)}const fo=dr({onesLike_:function(t){const e={x:hr(t,"x","onesLike")};return sr.runKernel(un,e)}}),mo=dr({pad_:function(t,e,n=0){const s=hr(t,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:e,constantValue:n},i={x:s};return sr.runKernel(pn,i,r)}}),go=dr({prelu_:function(t,e){const n={x:hr(t,"x","prelu"),alpha:hr(e,"alpha","prelu")};return sr.runKernel(fn,n)}});var yo=n(129);class bo{constructor(t,e,n,s,r){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=r||Math.random();this.random=yo.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let s,r,i;do{s=2*this.random()-1,r=2*this.random()-1,i=s*s+r*r}while(i>=1||0===i);const a=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*s*a,e=this.mean+this.stdDev*r*a,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class xo{constructor(t=0,e=1,n,s){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==s&&(s=Math.random()),"number"==typeof s&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=yo.alea(s)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const vo=dr({randomNormal_:function(t,e=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error(`Unsupported data type ${s}`);const i=new bo(e,n,s,!1,r),a=Yr(t,s);for(let t=0;t<a.values.length;t++)a.values[t]=i.nextValue();return a.toTensor()}}),wo=dr({randomUniform_:function(t,e=0,n=1,s="float32",r){const i=Yr(t,s),a=new xo(e,n,null,r);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}}),_o=dr({relu_:function(t){const e={x:hr(t,"x","relu")};return sr.runKernel(xn,e)}}),ko=dr({reverse_:function(t,e){const n={x:hr(t,"x","reverse")},s={dims:e};return sr.runKernel(In,n,s)}}),To=dr({selu_:function(t){const e={x:hr(t,"x","selu")};return sr.runKernel($n,e)}}),So=dr({separableConv2d_:function(t,e,n,s,r,i=[1,1],a="NHWC"){const o=hr(t,"x","separableConv2d"),l=hr(e,"depthwiseFilter","separableConv2d"),u=hr(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=sa(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===a)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");E(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),E(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),E(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),E(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),E(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const p=l.shape[2],d=l.shape[3];E(u.shape[2]===p*d,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*d}, but got ${u.shape[2]}.`));const f=wa(c,l,s,r,a,i),m=ga(f,u,1,"valid",a);return h?sa(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Io=dr({sigmoid_:function(t){const e={x:hr(t,"x","sigmoid")};return sr.runKernel(Mn,e)}}),Co=dr({slice_:function(t,e,n){const s=hr(t,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");const r={x:s},i={begin:e,size:n};return sr.runKernel(Rn,r,i)}}),No=dr({slice1d_:function(t,e,n){const s=hr(t,"x","slice1d");return E(1===s.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`)),Co(s,[e],[n])}}),Ao=dr({slice2d_:function(t,e,n){const s=hr(t,"x","slice2d");return E(2===s.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`)),Co(s,e,n)}}),Eo=dr({slice3d_:function(t,e,n){const s=hr(t,"x","slice3d");return E(3===s.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`)),Co(s,e,n)}}),$o=dr({slice4d_:function(t,e,n){const s=hr(t,"x","slice4d");return E(4===s.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`)),Co(s,e,n)}}),Ro=dr({softmax_:function(t,e=-1){const n=hr(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const s={logits:n},r={dim:e};return sr.runKernel(Wn,s,r)}}),Do=dr({softplus_:function(t){const e={x:hr(t,"x","softplus")};return sr.runKernel(Ln,e)}}),Oo=dr({split_:function(t,e,n=0){const s={x:hr(t,"x","split")},r={numOrSizeSplits:e,axis:n};return sr.runKernel(Bn,s,r)}}),Fo=dr({sqrt_:function(t){const e={x:hr(t,"x","sqrt")};return sr.runKernel(zn,e)}}),Mo=dr({squeeze_:function(t,e){const n=hr(t,"x","squeeze");return sa(n,W(n.shape,e).newShape)}}),Lo=dr({stack_:function(t,e=0){const n=pr(t,"tensors","stack","string_or_numeric");E(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&E(e<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const s=n,r={axis:e};return sr.runKernel(hn,s,r)}}),zo=dr({tanh_:function(t){const e={x:hr(t,"x","tanh")};return sr.runKernel(Kn,e)}});function Po(t,e){R(t);const n=lr(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return mr(t,null,n,e)}function Vo(t,e,n){if(R(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const s=lr(t,n);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return mr(t,e,s,n)}const Bo=dr({truncatedNormal_:function(t,e=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const i=new bo(e,n,s,!0,r),a=Yr(t,s);for(let t=0;t<a.values.length;t++)a.values[t]=i.nextValue();return a.toTensor()}}),Wo=dr({unstack_:function(t,e=0){const n=hr(t,"x","unstack","string_or_numeric");E(e>=-n.shape.length&&e<n.shape.length,(()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`));const s={value:n},r={axis:e};return sr.runKernel(es,s,r)}}),qo=dr({broadcastTo_:function(t,e){let n=hr(t,"broadcastTo","x");const s=n.shape;if(e.some((t=>!(t>0)||t%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=sa(n,t)}const r=n.shape,i=Array.from(e);for(let t=e.length-1;t>=0;t--)if(r[t]===e[t])i[t]=1;else if(1!==n.shape[t])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(0===i.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return Qr(n);const a={x:n},o={reps:i};return sr.runKernel(Yn,a,o)}}),Uo=dr({where_:function(t,e,n){const s=hr(e,"a","where"),r=hr(n,"b","where"),i=hr(t,"condition","where","bool"),a=Ca(s.shape,r.shape),o=qo(s,a),l=qo(r,a);1===i.rank&&E(i.shape[0]===s.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==i.rank&&$(i.shape,l.shape,"Error in where: ");const u={condition:i,t:o,e:l};return sr.runKernel(En,u)}}),Go=dr({zerosLike_:function(t){const e={x:hr(t,"x","zerosLike")};return sr.runKernel(ss,e)}}),jo=dr({transpose_:function(t,e){const n=hr(t,"x","transpose");if(null==e&&(e=n.shape.map(((t,e)=>e)).reverse()),E(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`)),e.forEach((t=>{E(t>=0&&t<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${e}`))})),n.rank<=1)return n.clone();const s={x:n},r={perm:e};return sr.runKernel(Jn,s,r)}}),Ho=dr({dropout_:function(t,e,n,s){const r=hr(t,"x","dropout");if(E("float32"===r.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`)),E(e>=0&&e<1,(()=>`rate must be a float in the range [0, 1), but got ${e}.`)),0===e)return t instanceof zs?r.clone():r;const i=function(t,e){if(null==e)return t.shape.slice();if(F(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let s=0;s<t.shape.length;s++)null==e[s]&&null!=t.shape[s]?n.push(t.shape[s]):n.push(e[s]);return n}return e}(r,n),a=1-e,o=ka(Da(Vi(wo(i,0,1,"float32",s),a)),a);return Ba(r,o)}}),Xo=dr({imag_:function(t){const e={input:hr(t,"input","imag")};return sr.runKernel(Ne,e)}}),Ko=dr({real_:function(t){const e={input:hr(t,"input","real")};return sr.runKernel(yn,e)}}),Yo=dr({fft_:function(t){E("complex64"===t.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`));const e={input:t};return sr.runKernel(ge,e)}}),Zo=dr({rfft_:function(t,e){E("float32"===t.dtype,(()=>`The dtype for rfft() must be real value but got ${t.dtype}`));let n=t.shape[t.shape.length-1];const s=t.size/n;let r;if(null!=e&&e<n){const s=t.shape.map((t=>0)),i=t.shape.map((t=>t));i[t.shape.length-1]=e,r=Co(t,s,i),n=e}else if(null!=e&&e>n){const s=t.shape.map((t=>t));s[t.shape.length-1]=e-n,r=ha([t,ho(s)],t.shape.length-1),n=e}else r=t;const i=Go(r),a=sa(fr(r,i),[s,n]),o=Yo(a),l=Math.floor(n/2)+1,u=Ko(o),c=Xo(o),h=Oo(u,[l,n-l],u.shape.length-1),p=Oo(c,[l,n-l],c.shape.length-1),d=r.shape.slice();return d[r.shape.length-1]=l,sa(fr(h[0],p[0]),d)}}),Qo=dr({ifft_:function(t){E("complex64"===t.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`));const e={input:t};return sr.runKernel(Ce,e)}}),Jo=dr({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let s;if(e<=2){const r=sa(t,[n,e]);s=Qo(r)}else{const r=[n,2*(e-1)],i=sa(Ko(t),[n,e]),a=sa(Xo(t),[n,e]),o=ko(Co(i,[0,1],[n,e-2]),1),l=Ba(ko(Co(a,[0,1],[n,e-2]),1),Li(-1)),u=ha([i,o],1),c=ha([a,l],1),h=sa(fr(u,c),[r[0],r[1]]);s=Qo(h)}if(s=Ko(s),3===t.rank&&0!==t.shape[0]){const e=s,n=t.shape[0];s=sa(s,[n,s.shape[0]/n,s.shape[1]]),e.dispose()}return s}}),tl=dr({conv2DBackpropFilter_:function(t,e,n,s,r,i="NHWC",a){let o=t;3===t.rank&&(o=sa(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=sa(e,[1,e.shape[0],e.shape[1],e.shape[2]])),E(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),E(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),E(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===i?o.shape[3]:o.shape[1],c="NHWC"===i?l.shape[3]:l.shape[1];E(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),E(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=a&&E(M(r),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const h={x:o,dy:l},p={strides:s,pad:r,dataFormat:i,dimRoundingMode:a,filterShape:n};return sr.runKernel(Ut,h,p)}}),el=dr({relu6_:function(t){const e={x:hr(t,"x","relu6")};return sr.runKernel(Sn,e)}}),nl=dr({step_:function(t,e=0){const n={x:hr(t,"x","step")},s={alpha:e};return sr.runKernel(rs,n,s)}});function sl(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return Ba(t,nl(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function rl(t,e){let n=e;const s=Ia(t.shape,e.shape);return s.length>0&&(n=qa(n,s)),sa(n,t.shape)}function il(t,e,n,s){if("linear"===e)return t;if("relu"===e)return _o(t);if("elu"===e)return Ta(t);if("relu6"===e)return el(t);if("prelu"===e)return go(t,n);if("leakyrelu"===e)return La(t,s);throw new Error(`Unknown fused activation ${e}.`)}const al=(t,e)=>!(t>0)||"linear"===e,ol=dr({fusedConv2d_:function({x:t,filter:e,strides:n,pad:s,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===al(sr.state.gradientDepth,l)){let h=ga(t,e,n,s,r,i,a);return null!=o&&(h=Vi(h,o)),il(h,l,u,c)}const h=hr(t,"x","conv2d"),p=hr(e,"filter","conv2d");let d=h,f=!1;3===h.rank&&(f=!0,d=sa(h,[1,h.shape[0],h.shape[1],h.shape[2]])),E(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),E(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),null!=a&&E(M(s),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`)),E(d.shape[3]===p.shape[2],(()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${p.shape[2]}.`)),E(ea(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),E("NHWC"===r,(()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`));const m=Hi(d.shape,p.shape,n,i,s,a);let g,y;null!=o&&(g=hr(o,"bias","fused conv2d"),[g]=Ks(g,h),Ca(m.outShape,g.shape)),null!=u&&(y=hr(u,"prelu weights","fused conv2d"));const b=(t,e)=>{const[r,a,o,u]=e,c=sl(t,o,l);E(ta(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const h=[ba(a.shape,c,r,n,s),tl(a,c,r.shape,n,s)];if(null!=u){const t=rl(u,c);h.push(t)}return h},x={x:d,filter:p,bias:g,preluActivationWeights:y},v={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:c};if(null==o){const t=Mi(((t,e,n)=>{let s=sr.runKernel(ls,x,v);return n([e,t,s]),f&&(s=sa(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}));return t(d,p)}{const t=Mi(((t,e,n,s)=>{let r=sr.runKernel(ls,x,v);return s([e,t,r,n]),f&&(r=sa(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return t(d,p,g)}}}),ll=dr({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,s,r,i=[1,1],a){let o=t;3===t.rank&&(o=sa(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=sa(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:o,dy:l},c={strides:s,pad:r,dimRoundingMode:a,dilations:i,filterShape:n};return sr.runKernel(ne,u,c)}}),ul=dr({depthwiseConv2dNativeBackpropInput_:function(t,e,n,s,r,i=[1,1],a){let o=e,l=!1;3===e.rank&&(l=!0,o=sa(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:o,filter:n},c={strides:s,pad:r,dimRoundingMode:a,dilations:i,inputShape:t},h=sr.runKernel(se,u,c);return l?sa(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),cl=dr({fusedDepthwiseConv2d_:function({x:t,filter:e,strides:n,pad:s,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===al(sr.state.gradientDepth,l)){let h=wa(t,e,n,s,r,i,a);return null!=o&&(h=Vi(h,o)),il(h,l,u,c)}const h=hr(t,"x","depthwiseConv2d"),p=hr(e,"filter","depthwiseConv2d");let d=h,f=!1;3===h.rank&&(f=!0,d=sa(h,[1,h.shape[0],h.shape[1],h.shape[2]])),E(4===d.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),E(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),E(d.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==i&&(i=[1,1]),E(ea(n,i),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),null!=a&&E(M(s),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${a} but got pad ${s}.`));const m=Hi(d.shape,p.shape,n,i,s,a,!0);let g,y;null!=o&&(g=hr(o,"bias","fused conv2d"),[g]=Ks(g,h),Ca(m.outShape,g.shape)),null!=u&&(y=hr(u,"prelu weights","fused depthwiseConv2d"));const b=(t,e)=>{E(ta(i),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[r,o,u,c]=e,h=sl(t,u,l),p=ul(o.shape,h,r,n,s,i,a),d=ll(o,h,r.shape,n,s,i,a);return null!=c?[p,d,rl(g,h)]:[p,d]},x={x:d,filter:p,bias:g,preluActivationWeights:y},v={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:c};if(null==o){const t=Mi(((t,e,n)=>{let s=sr.runKernel(us,x,v);return n([e,t,s]),f&&(s=sa(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}));return t(d,p)}{const t=Mi(((t,e,n,s)=>{let r=sr.runKernel(us,x,v);return s([e,t,r,n]),f&&(r=sa(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return t(d,p,g)}}}),hl=dr({matMul_:function(t,e,n=!1,s=!1){let r=hr(t,"a","matMul"),i=hr(e,"b","matMul");[r,i]=Ks(r,i);const a={a:r,b:i},o={transposeA:n,transposeB:s};return sr.runKernel(Ot,a,o)}}),pl=dr({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:s=!1,bias:r,activation:i="linear",preluActivationWeights:a,leakyreluAlpha:o}){if(!1===al(sr.state.gradientDepth,i)){let l=hl(t,e,n,s);return null!=r&&(l=Vi(l,r)),il(l,i,a,o)}let l=hr(t,"a","fused matMul"),u=hr(e,"b","fused matMul");[l,u]=Ks(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?u.shape[u.rank-1]:u.shape[u.rank-2],p=n?l.shape[l.rank-1]:l.shape[l.rank-2],d=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=O(f),y=O(m);E(l.rank>=2&&u.rank>=2&&l.rank===u.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${u.rank}.`)),E(F(f,m),(()=>`Error in fused matMul: outer dimensions (${f}) and (${m}) of Tensors with shapes ${l.shape} and ${u.shape} must match.`)),E(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${s} must match.`));const b=l.shape.slice(0,-2).concat([p,d]),x=sa(l,n?[g,c,p]:[g,p,c]),v=sa(u,s?[y,d,h]:[y,h,d]);let w,_;null!=r&&(w=hr(r,"bias","fused matMul"),[w]=Ks(w,l),Ca(b,w.shape)),null!=a&&(_=hr(a,"prelu weights","fused matMul"));const k=(t,e)=>{const[a,o,l,u]=e,c=sl(sa(t,l.shape),l,i);let h,p;return n||s?!n&&s?(h=hl(c,o,!1,!1),p=hl(c,a,!0,!1)):n&&!s?(h=hl(o,c,!1,!0),p=hl(a,c,!1,!1)):(h=hl(o,c,!0,!0),p=hl(c,a,!0,!0)):(h=hl(c,o,!1,!0),p=hl(a,c,!0,!1)),null!=r?[h,p,rl(u,c)]:[h,p]},T={a:x,b:v,bias:w,preluActivationWeights:_},S={transposeA:n,transposeB:s,activation:i,leakyreluAlpha:o};if(null==r){const t=Mi(((t,e,n)=>{const s=sr.runKernel(os,T,S);return n([t,e,s]),{value:sa(s,b),gradFunc:k}}));return t(x,v)}{const t=Mi(((t,e,n,s)=>{const r=sr.runKernel(os,T,S);return s([t,e,r,n]),{value:sa(r,b),gradFunc:k}}));return t(x,v,w)}}});function dl(t,e,n){const s=1-t%2,r=new Float32Array(t);for(let i=0;i<t;++i){const a=2*Math.PI*i/(t+s-1);r[i]=e-n*Math.cos(a)}return Po(r,"float32")}dr({hammingWindow_:function(t){return dl(t,.54,.46)}});const fl=dr({hannWindow_:function(t){return dl(t,.5,.5)}}),ml=dr({frame_:function(t,e,n,s=!1,r=0){let i=0;const a=[];for(;i+e<=t.size;)a.push(Co(t,i,e)),i+=n;if(s)for(;i<t.size;){const s=i+e-t.size,o=ha([Co(t,i,e-s),Ra([s],r)]);a.push(o),i+=n}return 0===a.length?Vo([],[0,e]):sa(ha(a),[a.length,e])}});dr({stft_:function(t,e,n,s,r=fl){var i;null==s&&(i=e,s=Math.floor(Math.pow(2,Math.ceil(Math.log(i)/Math.log(2)))));const a=ml(t,e,n),o=Ba(a,r(e)),l=[];for(let t=0;t<a.shape[0];t++)l.push(Zo(Co(o,[t,0],[1,e]),s));return ha(l)}});const gl=dr({cropAndResize_:function(t,e,n,s,r="bilinear",i=0){const a=hr(t,"image","cropAndResize"),o=hr(e,"boxes","cropAndResize","float32"),l=hr(n,"boxInd","cropAndResize","int32"),u=o.shape[0];E(4===a.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`)),E(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),E(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),E(2===s.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`)),E(s[0]>=1&&s[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${s}`)),E("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));const c={image:a,boxes:o,boxInd:l},h={method:r,extrapolationValue:i,cropSize:s};return sr.runKernel(Qt,c,h)}}),yl=dr({flipLeftRight_:function(t){const e=hr(t,"image","flipLeftRight","float32");E(4===e.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`));const n={image:e};return sr.runKernel(be,n,{})}}),bl=dr({rotateWithOffset_:function(t,e,n=0,s=.5){const r=hr(t,"image","rotateWithOffset","float32");E(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const i={image:r},a={radians:e,fillValue:n,center:s};return sr.runKernel(as,i,a)}});function xl(t,e,n,s,r,i){null==s&&(s=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==i&&(i=0);const a=t.shape[0];return n=Math.min(n,a),E(0<=s&&s<=1,(()=>`iouThreshold must be in [0, 1], but was '${s}'`)),E(2===t.rank,(()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`)),E(4===t.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`)),E(1===e.rank,(()=>"scores must be a 1D tensor")),E(e.shape[0]===a,(()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`)),E(0<=i&&i<=1,(()=>`softNmsSigma must be in [0, 1], but was '${i}'`)),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:i}}const vl=dr({nonMaxSuppression_:function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY){const i=hr(t,"boxes","nonMaxSuppression"),a=hr(e,"scores","nonMaxSuppression"),o=xl(i,a,n,s,r),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:s=o.iouThreshold,scoreThreshold:r=o.scoreThreshold};return sr.runKernel(an,{boxes:i,scores:a},l)}});function wl(t,e,n){const s=function(t,e,n){return function(t,e,n){let s=0,r=t.length,i=0,a=!1;for(;s<r;){i=s+(r-s>>>1);const o=n(e,t[i]);o>0?s=i+1:(r=i,a=!o)}return a?s:-s-1}(t,e,n||_l)}(t,e,n),r=s<0?-(s+1):s;t.splice(r,0,e)}function _l(t,e){return t>e?1:t<e?-1:0}function kl(t,e,n,s,r){return Il(t,e,n,s,r,0)}function Tl(t,e,n,s,r,i){return Il(t,e,n,s,r,0,!1,i,!0)}function Sl(t,e,n,s,r,i){return Il(t,e,n,s,r,i,!0)}function Il(t,e,n,s,r,i,a=!1,o=!1,l=!1){const u=[];for(let t=0;t<e.length;t++)e[t]>r&&u.push({score:e[t],boxIndex:t,suppressBeginIndex:0});u.sort(Al);const c=i>0?-.5/i:0,h=[],p=[];for(;h.length<n&&u.length>0;){const e=u.pop(),{score:n,boxIndex:i,suppressBeginIndex:a}=e;if(n<r)break;let o=!1;for(let n=h.length-1;n>=a;--n){const a=Cl(t,i,h[n]);if(a>=s){o=!0;break}if(e.score=e.score*Nl(s,c,a),e.score<=r)break}e.suppressBeginIndex=h.length,o||(e.score===n?(h.push(i),p.push(e.score)):e.score>r&&wl(u,e,Al))}const d=h.length,f=n-d;o&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:h};return a&&(m.selectedScores=p),l&&(m.validOutputs=d),m}function Cl(t,e,n){const s=t.subarray(4*e,4*e+4),r=t.subarray(4*n,4*n+4),i=Math.min(s[0],s[2]),a=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),p=Math.max(r[1],r[3]),d=(o-i)*(l-a),f=(h-u)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(i,u),g=Math.max(a,c),y=Math.min(o,h),b=Math.min(l,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function Nl(t,e,n){const s=Math.exp(e*n*n);return n<=t?s:0}function Al(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}const El=dr({nonMaxSuppressionWithScore_:function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const a=hr(t,"boxes","nonMaxSuppression"),o=hr(e,"scores","nonMaxSuppression"),l=xl(a,o,n,s,r,i),u={boxes:a,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:s=l.iouThreshold,scoreThreshold:r=l.scoreThreshold,softNmsSigma:i=l.softNmsSigma},h=sr.runKernel(ln,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),$l=dr({nonMaxSuppressionPadded_:function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const a=hr(t,"boxes","nonMaxSuppression"),o=hr(e,"scores","nonMaxSuppression"),l=xl(a,o,n,s,r,null),u={boxes:a,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:i},h=sr.runKernel(on,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),Rl=dr({resizeBilinear_:function(t,e,n=!1,s=!1){const r=hr(t,"images","resizeBilinear");E(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),E(2===e.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`)),E(!1===s||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let i=r,a=!1;3===r.rank&&(a=!0,i=sa(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=e,o={images:i},l={alignCorners:n,halfPixelCenters:s,size:e},u=sr.runKernel(kn,o,l);return a?sa(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Dl=dr({resizeNearestNeighbor_:function(t,e,n=!1,s=!1){const r=hr(t,"images","resizeNearestNeighbor");E(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),E(2===e.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`)),E("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),E(!1===s||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let i=r,a=!1;3===r.rank&&(a=!0,i=sa(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=e,o={images:i},l={alignCorners:n,halfPixelCenters:s,size:e},u=sr.runKernel(wn,o,l);return a?sa(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Ol=dr({transform_:function(t,e,n="nearest",s="constant",r=0,i){const a=hr(t,"image","transform","float32"),o=hr(e,"transforms","transform","float32");E(4===a.rank,(()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`)),E(2===o.rank&&(o.shape[0]===a.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),E(null==i||2===i.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`));const l={image:a,transforms:o},u={interpolation:n,fillMode:s,fillValue:r,outputShape:i};return sr.runKernel(Qn,l,u)}}),Fl=dr({lessEqual_:function(t,e){let n=hr(t,"a","lessEqual"),s=hr(e,"b","lessEqual");[n,s]=Ks(n,s),Ca(n.shape,s.shape);const r={a:n,b:s};return sr.runKernel(Oe,r)}});function Ml(t,e,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const r={start:t,stop:e,step:n,dtype:s};return sr.runKernel(gn,{},r)}const Ll=dr({bandPart_:function(t,e,n){E(e%1==0,(()=>`bandPart(): numLower must be an integer, got ${e}.`)),E(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const s=hr(t,"a","bandPart");E(s.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`));const r=s.shape,[i,a]=s.shape.slice(-2);if(!(e<=i))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${i}).`);if(!(n<=a))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`);e<0&&(e=i),n<0&&(n=a);const o=sa(Ml(0,i,1,"int32"),[-1,1]),l=Ml(0,a,1,"int32"),u=Wa(o,l),c=Ga(Fl(u,Li(+e,"int32")),Ma(u,Li(-n,"int32"))),h=ho([i,a],s.dtype);return sa(Lo(Wo(sa(s,[-1,i,a])).map((t=>Uo(c,t,h)))),r)}}),zl=dr({pow_:function(t,e){let n=hr(t,"base","pow"),s=hr(e,"exp","pow");[n,s]=Ks(n,s);const r={a:n,b:s};return sr.runKernel(dn,r)}});function Pl(t,e,n=null){if(0===t.rank)return Pi(t);if(1!==t.rank&&null===n)return Pl(sa(t,[-1]),e,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===e)return qa(Pi(t),n);if(e===1/0)return Va(Pi(t),n);if(e===-1/0)return Ya(Pi(t),n);if("euclidean"===e||2===e)return Fo(qa(zl(Pi(t),Li(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&2===n.length){if(1===e)return Va(qa(Pi(t),n[0]),n[1]-1);if(e===1/0)return Va(qa(Pi(t),n[1]),n[0]);if(e===-1/0)return Ya(qa(Pi(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return Fo(qa(ao(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Vl=dr({norm_:function(t,e="euclidean",n=null,s=!1){const r=Pl(t=hr(t,"x","norm"),e,n);let i=r.shape;if(s){const e=B(n,t.shape);i=eo(r.shape,e)}return sa(r,i)}}),Bl=dr({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,E(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)E(t[e].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`))}else e=!0,t=Oo(t,t.shape[0],0).map((t=>Mo(t,[0])));E(t.length<=t[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`));const n=[],s=t;for(let e=0;e<t.length;++e)n.push(sr.tidy((()=>{let t=s[e];if(e>0)for(let s=0;s<e;++s){const e=Ba(qa(Ba(n[s],t)),n[s]);t=Wa(t,e)}return ka(t,Vl(t,"euclidean"))})));return e?Lo(n,0):n}});function Wl(t,e=!1){return sr.tidy((()=>{E(2===t.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`));const n=t.shape[0],s=t.shape[1];let r=$a(n),i=Qr(t);const a=Vo([[1]],[1,1]);let o=Qr(a);const l=n>=s?s:n;for(let t=0;t<l;++t){const e=i,l=o,u=r;[o,i,r]=sr.tidy((()=>{const e=Co(i,[t,t],[n-t,1]),l=Vl(e),u=Co(i,[t,t],[1,1]),c=Uo(Fa(u,0),Vo([[-1]]),Vo([[1]])),h=Wa(u,Ba(c,l)),p=ka(e,h);o=1===p.shape[0]?Qr(a):ha([a,Co(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=lo(ka(hl(c,h),l)),f=Co(i,[t,0],[n-t,s]),m=Ba(d,o),g=jo(o);if(0===t)i=Wa(f,hl(m,hl(g,f)));else{const e=Wa(f,hl(m,hl(g,f)));i=ha([Co(i,[0,0],[t,s]),e],0)}const y=jo(m),b=Co(r,[0,t],[n,r.shape[1]-t]);if(0===t)r=Wa(b,hl(hl(b,o),y));else{const e=Wa(b,hl(hl(b,o),y));r=ha([Co(r,[0,0],[n,t]),e],1)}return[o,i,r]})),Ri([e,l,u])}return!e&&n>s&&(r=Co(r,[0,0],[n,s]),i=Co(i,[0,0],[s,s])),[r,i]}))}const ql=dr({qr_:function(t,e=!1){if(E(t.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`)),2===t.rank)return Wl(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),s=Wo(sa(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),r=[],i=[];return s.forEach((t=>{const[n,s]=Wl(t,e);r.push(n),i.push(s)})),[sa(Lo(r,0),t.shape),sa(Lo(i,0),t.shape)]}}});var Ul;!function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Ul||(Ul={}));const Gl=dr({computeWeightedLoss_:function(t,e,n=Ul.SUM_BY_NONZERO_WEIGHTS){const s=hr(t,"losses","computeWeightedLoss");let r=null;null!=e&&(r=hr(e,"weights","computeWeightedLoss"));const i=null==r?s:Ba(s,r);if(n===Ul.NONE)return i;if(n===Ul.SUM)return qa(i);if(n===Ul.MEAN){if(null==r)return Ka(i);{const t=s.size/r.size,e=ka(qa(i),qa(r));return t>1?ka(e,Li(t)):e}}if(n===Ul.SUM_BY_NONZERO_WEIGHTS){if(null==r)return ka(qa(i),Li(s.size));{const t=Ba(r,po(s.shape)),e=Zr(qa(uo(t,Li(0))),"float32");return ka(qa(i),e)}}throw Error(`Unknown reduction: ${n}`)}});dr({absoluteDifference_:function(t,e,n,s=Ul.SUM_BY_NONZERO_WEIGHTS){const r=hr(t,"labels","absoluteDifference"),i=hr(e,"predictions","absoluteDifference");let a=null;null!=n&&(a=hr(n,"weights","absoluteDifference")),$(r.shape,i.shape,"Error in absoluteDifference: ");const o=Pi(Wa(r,i));return Gl(o,a,s)}}),dr({cosineDistance_:function(t,e,n,s,r=Ul.SUM_BY_NONZERO_WEIGHTS){const i=hr(t,"labels","cosineDistance"),a=hr(e,"predictions","cosineDistance");let o=null;null!=s&&(o=hr(s,"weights","cosineDistance")),$(i.shape,a.shape,"Error in cosineDistance: ");const l=Li(1),u=Wa(l,qa(Ba(i,a),n,!0));return Gl(u,o,r)}}),dr({hingeLoss_:function(t,e,n,s=Ul.SUM_BY_NONZERO_WEIGHTS){let r=hr(t,"labels","hingeLoss");const i=hr(e,"predictions","hingeLoss");let a=null;null!=n&&(a=hr(n,"weights","hingeLoss")),$(r.shape,i.shape,"Error in hingeLoss: ");const o=Li(1);r=Wa(Ba(Li(2),r),o);const l=_o(Wa(o,Ba(r,i)));return Gl(l,a,s)}}),dr({huberLoss_:function(t,e,n,s=1,r=Ul.SUM_BY_NONZERO_WEIGHTS){const i=hr(t,"labels","huberLoss"),a=hr(e,"predictions","huberLoss");let o=null;null!=n&&(o=hr(n,"weights","huberLoss")),$(i.shape,a.shape,"Error in huberLoss: ");const l=Li(s),u=Pi(Wa(a,i)),c=Za(u,l),h=Wa(u,c),p=Vi(Ba(Li(.5),ao(c)),Ba(l,h));return Gl(p,o,r)}}),dr({logLoss_:function(t,e,n,s=1e-7,r=Ul.SUM_BY_NONZERO_WEIGHTS){const i=hr(t,"labels","logLoss"),a=hr(e,"predictions","logLoss");let o=null;null!=n&&(o=hr(n,"weights","logLoss")),$(i.shape,a.shape,"Error in logLoss: ");const l=Li(1),u=Li(s),c=lo(Ba(i,za(Vi(a,u)))),h=Ba(Wa(l,i),za(Vi(Wa(l,a),u))),p=Wa(c,h);return Gl(p,o,r)}});const jl=dr({squaredDifference_:function(t,e){let n=hr(t,"a","squaredDifference"),s=hr(e,"b","squaredDifference");[n,s]=Ks(n,s),Ca(n.shape,s.shape);const r={a:n,b:s};return sr.runKernel(qn,r,{})}});dr({meanSquaredError_:function(t,e,n,s=Ul.SUM_BY_NONZERO_WEIGHTS){const r=hr(t,"labels","meanSquaredError"),i=hr(e,"predictions","meanSquaredError");let a=null;null!=n&&(a=hr(n,"weights","meanSquaredError")),$(r.shape,i.shape,"Error in meanSquaredError: ");const o=jl(r,i);return Gl(o,a,s)}});const Hl=dr({log1p_:function(t){const e={x:hr(t,"x","log1p")};return sr.runKernel(Le,e)}});dr({sigmoidCrossEntropy_:function(t,e,n,s=0,r=Ul.SUM_BY_NONZERO_WEIGHTS){let i=hr(t,"multiClassLabels","sigmoidCrossEntropy");const a=hr(e,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=hr(n,"weights","sigmoidCrossEntropy")),$(i.shape,a.shape,"Error in sigmoidCrossEntropy: "),s>0){const t=Li(s),e=Li(1),n=Li(.5);i=Vi(Ba(i,Wa(e,t)),Ba(n,t))}const l=function(t,e){const n=hr(t,"labels","sigmoidCrossEntropyWithLogits"),s=hr(e,"logits","sigmoidCrossEntropyWithLogits");$(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=_o(s),i=Ba(s,n),a=Hl(Pa(lo(Pi(s))));return Vi(Wa(r,i),a)}(i,a);return Gl(l,o,r)}});const Xl=dr({logSumExp_:function(t,e=null,n=!1){const s=hr(t,"x","logSumExp"),r=B(e,s.shape),i=Va(s,r,!0),a=Wa(s,i),o=Pa(a),l=qa(o,r),u=za(l),c=Vi(sa(i,u.shape),u);if(n){const t=eo(c.shape,r);return sa(c,t)}return c}});dr({softmaxCrossEntropy_:function(t,e,n,s=0,r=Ul.SUM_BY_NONZERO_WEIGHTS){let i=hr(t,"onehotLabels","softmaxCrossEntropy");const a=hr(e,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=hr(n,"weights","softmaxCrossEntropy")),$(i.shape,a.shape,"Error in softmaxCrossEntropy: "),s>0){const t=Li(s),e=Li(1),n=Li(i.shape[1]);i=Vi(Ba(i,Wa(e,t)),ka(t,n))}const l=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);const s=Mi(((t,e,s)=>{const r=Xl(e,[n],!0),i=Wa(Zr(e,"float32"),r);s([t,i]);const a=lo(Ba(i,t));return{value:qa(a,[n]),gradFunc:(t,e)=>{const[s,r]=e,i=eo(t.shape,[n]);return[Ba(sa(t,i),Wa(Zr(s,"float32"),Pa(r))),Ba(sa(t,i),Wa(Pa(r),Zr(s,"float32")))]}}}));return s(t,e)}(i,a);return Gl(l,o,r)}});const Kl={flipLeftRight:yl,resizeNearestNeighbor:Dl,resizeBilinear:Rl,rotateWithOffset:bl,cropAndResize:gl,nonMaxSuppression:vl,nonMaxSuppressionAsync:async function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY){const i=hr(t,"boxes","nonMaxSuppressionAsync"),a=hr(e,"scores","nonMaxSuppressionAsync"),o=xl(i,a,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const l=await Promise.all([i.data(),a.data()]),u=l[0],c=l[1],{selectedIndices:h}=kl(u,c,n,s,r);return i!==t&&i.dispose(),a!==e&&a.dispose(),Po(h,"int32")},nonMaxSuppressionWithScore:El,nonMaxSuppressionWithScoreAsync:async function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const a=hr(t,"boxes","nonMaxSuppressionAsync"),o=hr(e,"scores","nonMaxSuppressionAsync"),l=xl(a,o,n,s,r,i);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,i=l.softNmsSigma;const u=await Promise.all([a.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:p,selectedScores:d}=Sl(c,h,n,s,r,i);return a!==t&&a.dispose(),o!==e&&o.dispose(),{selectedIndices:Po(p,"int32"),selectedScores:Po(d)}},nonMaxSuppressionPadded:$l,nonMaxSuppressionPaddedAsync:async function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const a=hr(t,"boxes","nonMaxSuppressionAsync"),o=hr(e,"scores","nonMaxSuppressionAsync"),l=xl(a,o,n,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[p,d]=await Promise.all([a.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Tl(p,d,u,c,h,i);return a!==t&&a.dispose(),o!==e&&o.dispose(),{selectedIndices:Po(f,"int32"),validOutputs:Li(m,"int32")}},transform:Ol},Yl={bandPart:Ll,gramSchmidt:Bl,qr:ql};class Zl extends zi{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=sr.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=sr.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${e}/accum_grad`,variable:$i((()=>Go(s).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${e}/accum_var`,variable:$i((()=>Go(s).variable(!1)))});const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const i=this.accumulatedGrads[n].variable,a=this.accumulatedUpdates[n].variable;$i((()=>{const t=Vi(Ba(i,this.rho),Ba(ao(r),1-this.rho)),e=Ba(ka(Fo(Vi(a,this.epsilon)),Fo(Vi(i,this.epsilon))),r),n=Vi(Ba(a,this.rho),Ba(ao(e),1-this.rho));i.assign(t),a.assign(n);const o=Vi(Ba(e,-this.learningRate),s);s.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Ri(this.accumulatedGrads.map((t=>t.variable))),Ri(this.accumulatedUpdates.map((t=>t.variable))))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedUpdates=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}Zl.className="Adadelta",Ni(Zl);class Ql extends zi{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=sr.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:`${e}/accumulator`,variable:$i((()=>Ra(s.shape,this.initialAccumulatorValue).variable(t)))}}const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const i=this.accumulatedGrads[n].variable;$i((()=>{const t=Vi(i,ao(r));i.assign(t);const e=Vi(Ba(ka(r,Fo(Vi(t,sr.backend.epsilon()))),-this.learningRate),s);s.assign(e)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Ri(this.accumulatedGrads.map((t=>t.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulatedGrads=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}Ql.className="Adagrad",Ni(Ql);class Jl extends zi{constructor(t,e,n,s=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],$i((()=>{this.accBeta1=Li(e).variable(),this.accBeta2=Li(n).variable()})),null==s&&(this.epsilon=sr.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);$i((()=>{const n=Wa(1,this.accBeta1),s=Wa(1,this.accBeta2);e.forEach(((e,r)=>{const i=sr.registeredVariables[e];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${e}/m`,variable:$i((()=>Go(i).variable(!1)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${e}/v`,variable:$i((()=>Go(i).variable(!1)))});const a=Array.isArray(t)?t[r].tensor:t[e];if(null==a)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,u=Vi(Ba(o,this.beta1),Ba(a,1-this.beta1)),c=Vi(Ba(l,this.beta2),Ba(ao(a),1-this.beta2)),h=ka(u,n),p=ka(c,s);o.assign(u),l.assign(c);const d=Vi(Ba(ka(h,Vi(Fo(p),this.epsilon)),-this.learningRate),i);i.assign(d)})),this.accBeta1.assign(Ba(this.accBeta1,this.beta1)),this.accBeta2.assign(Ba(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Ri(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedSecondMoment&&Ri(this.accumulatedSecondMoment.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),$i((()=>{this.accBeta1.assign(zl(this.beta1,this.iterations_+1)),this.accBeta2.assign(zl(this.beta2,this.iterations_+1))}));const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedSecondMoment=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}Jl.className="Adam",Ni(Jl);class tu extends zi{constructor(t,e,n,s=null,r=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],$i((()=>{this.iteration=Li(0).variable(),this.accBeta1=Li(e).variable()})),null==s&&(this.epsilon=sr.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);$i((()=>{const n=Wa(1,this.accBeta1),s=ka(-this.learningRate,Vi(Ba(this.iteration,this.decay),1));e.forEach(((e,r)=>{const i=sr.registeredVariables[e];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${e}/m`,variable:Go(i).variable(!1)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${e}/v`,variable:Go(i).variable(!1)});const a=Array.isArray(t)?t[r].tensor:t[e];if(null==a)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,u=Vi(Ba(o,this.beta1),Ba(a,1-this.beta1)),c=Ba(l,this.beta2),h=Pi(a),p=Xa(c,h);o.assign(u),l.assign(p);const d=Vi(Ba(ka(s,n),ka(u,Vi(p,this.epsilon))),i);i.assign(d)})),this.iteration.assign(Vi(this.iteration,1)),this.accBeta1.assign(Ba(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Ri(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedWeightedInfNorm&&Ri(this.accumulatedWeightedInfNorm.map((t=>t.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}tu.className="Adamax",Ni(tu);class eu extends zi{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const r=sr.registeredVariables[e];$i((()=>{const t=Vi(Ba(this.c,s),r);r.assign(t)}))})),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=Di(Li(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}eu.className="SGD",Ni(eu);class nu extends eu{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=Li(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=sr.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:`${e}/momentum`,variable:$i((()=>Go(s).variable(t)))}}const r=this.accumulations[n].variable,i=Array.isArray(t)?t[n].tensor:t[e];null!=i&&$i((()=>{let t;const e=Vi(Ba(this.m,r),i);t=this.useNesterov?Vi(Ba(this.c,Vi(i,Ba(e,this.m))),s):Vi(Ba(this.c,e),s),r.assign(e),s.assign(t)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Ri(this.accumulations.map((t=>t.variable)))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulations=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}nu.className="Momentum",Ni(nu);class su extends zi{constructor(t,e=.9,n=0,s=null,r=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==s&&(this.epsilon=sr.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=sr.registeredVariables[e],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${e}/rms`,variable:$i((()=>Go(s).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${e}/momentum`,variable:$i((()=>Go(s).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${e}/mg`,variable:$i((()=>Go(s).variable(r)))});const i=Array.isArray(t)?t[n].tensor:t[e];if(null==i)return;const a=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;$i((()=>{const t=Vi(Ba(a,this.decay),Ba(ao(i),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,r=Vi(Ba(e,this.decay),Ba(i,1-this.decay)),l=ka(Ba(i,this.learningRate),Fo(Wa(t,Vi(ao(r),this.epsilon)))),u=Vi(Ba(o,this.momentum),l);a.assign(t),e.assign(r),o.assign(u);const c=Wa(s,u);s.assign(c)}else{const t=Vi(Ba(a,this.decay),Ba(ao(i),1-this.decay)),e=Vi(Ba(o,this.momentum),ka(Ba(i,this.learningRate),Fo(Vi(t,this.epsilon))));a.assign(t),o.assign(e);const n=Wa(s,e);s.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Ri(this.accumulatedMeanSquares.map((t=>t.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Ri(this.accumulatedMeanGrads.map((t=>t.variable))),null!=this.accumulatedMoments&&Ri(this.accumulatedMoments.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedMoments=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}su.className="RMSProp",Ni(su);class ru{static sgd(t){return new eu(t)}static momentum(t,e,n=!1){return new nu(t,e,n)}static rmsprop(t,e=.9,n=0,s=null,r=!1){return new su(t,e,n,s,r)}static adam(t=.001,e=.9,n=.999,s=null){return new Jl(t,e,n,s)}static adadelta(t=.001,e=.95,n=null){return new Zl(t,e,n)}static adamax(t=.002,e=.9,n=.999,s=null,r=0){return new tu(t,e,n,s,r)}static adagrad(t,e=.1){return new Ql(t,e)}}const iu={sgd:ru.sgd,momentum:ru.momentum,adadelta:ru.adadelta,adagrad:ru.adagrad,rmsprop:ru.rmsprop,adamax:ru.adamax,adam:ru.adam},au="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:t=>t();function ou(){return new Promise((t=>au((()=>t()))))}function lu(t,e){const n=t[0].length;t.forEach(((t,e)=>{E(t.length===n,(()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`))})),E(e>=0&&e<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const s=t[0];t.forEach(((t,r)=>{for(let i=0;i<n;i++)E(i===e||t[i]===s[i],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${t}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`))}))}function uu(t,e){const n=t[0].slice();for(let s=1;s<t.length;s++)n[e]+=t[s][e];return n}const cu=30;function hu(t){return t<=cu?t:Q(t,Math.floor(Math.sqrt(t)))}function pu(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}function du(t,e,n,s=!0){let r=[];if(s)r=r.concat(e.slice(0)),r.push(t[0]/n),r=r.concat(t.slice(1));else{r=r.concat(t[0]);const n=e.length;for(let s=0;s<n;++s)r=r.concat([t[s+1]/e[s],e[s]]);r=r.concat(t.slice(n+1))}return r}function fu(t,e,n=!0){const s=[];if(n){s.push(e);for(let n=e+1;n<t;++n)n<=2*e?(s.push(n),s.push(n-(e+1))):s.push(n)}else{const n=[],r=[];for(let s=1;s<t;++s)s>=2*e+1||s%2==1?r.push(s):n.push(s);s.push(...n),s.push(0),s.push(...r)}return s}function mu(t,e,n,s=!0){const r=[];s?r.push(t[0]/n):r.push(t[0]*n);for(let n=1;n<t.length;++n)n<=e.length?s?r.push(e[n-1]*t[n]):r.push(t[n]/e[n-1]):r.push(t[n]);return r}function gu(t,e){const n=[0];for(let s=0;s<e;++s)n.push(t[s][0]);return n}function yu(t,e,n){const s=t.slice(0,1);for(let r=0;r<n;++r)s.push(t[r+1]-e[r][0]-e[r][1]);return s}function bu(t,e){const n=t.shape.length,s=e.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${n}`);if(0===O(t.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const r=e.shape,i=r[r.length-1];let a=1;for(let t=0;t<r.length-1;++t)a*=r[t];const o=t.shape,l=r.slice();l.pop();let u=1;for(let t=i;t<n;++t)u*=o[t],l.push(o[t]);const c=[...J(t.shape).map((t=>t/u)),1].slice(0,i);return[l,a,u,c]}function xu(t,e,n){const s=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(i+` update.rank < ${r}. `);if(t.length<s+(n.rank-r))throw new Error(i+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+t.length-s)throw new Error(i+" update.rank != "+(r+t.length-s));for(let t=0;t<r;++t)if(n.shape[t]!==e.shape[t])throw new Error(i+` updates.shape[${t}] (${n.shape[t]}) != indices.shape[${t}] (${e.shape[t]}).`);for(let e=0;e<n.rank-r;++e)if(n.shape[e+r]!==t[e+s])throw new Error(i+` updates.shape[${e+r}] (${n.shape[e+r]}) != shape[${e+r}] (${t[e+r]})`)}function vu(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===e.size)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(0===t.size)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}xu(n,e,t)}function wu(t,e,n){const s=e.shape.length,r=s>1?e.shape[s-1]:1,i=n.length;let a=1;for(let t=r;t<i;++t)a*=n[t];const o=r<1?1:r;return{sliceRank:r,numUpdates:O(e.shape)/o,sliceSize:a,strides:[...J(n.slice(0,r)),1],outputSize:O(n)}}const _u=1.7580993408473768,ku=1.0507009873554805,Tu=.3275911,Su=.254829592,Iu=-.284496736,Cu=1.421413741,Nu=-1.453152027,Au=1.061405429;function Eu(...t){ht().getBool("IS_TEST")||console.warn(...t)}function $u(...t){ht().getBool("IS_TEST")||console.log(...t)}function Ru(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let s=0;s<n.length;s+=2)n[s]=t[s/2],n[s+1]=e[s/2];return n}function Du(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let s=0;s<t.length;s+=2)e[s/2]=t[s],n[s/2]=t[s+1];return{real:e,imag:n}}function Ou(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),s=new Float32Array(e);for(let e=0;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],s[Math.floor(e/4)]=t[e+1];return{real:n,imag:s}}function Fu(t){const e=Math.floor(t.length/4),n=new Float32Array(e),s=new Float32Array(e);for(let e=2;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],s[Math.floor(e/4)]=t[e+1];return{real:n,imag:s}}function Mu(t,e){return{real:t[2*e],imag:t[2*e+1]}}function Lu(t,e,n,s){t[2*s]=e,t[2*s+1]=n}function zu(t,e){const n=new Float32Array(t/2),s=new Float32Array(t/2);for(let r=0;r<Math.ceil(t/2);r++){const i=(e?2:-2)*Math.PI*(r/t);n[r]=Math.cos(i),s[r]=Math.sin(i)}return{real:n,imag:s}}function Pu(t,e,n){const s=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(s),imag:Math.sin(s)}}function Vu(t,e,n=0){let s=[];if("number"==typeof e)E(t.shape[n]%e==0,(()=>"Number of splits must evenly divide the axis.")),s=new Array(e).fill(t.shape[n]/e);else{const r=e.reduce(((t,e)=>(-1===e&&(t+=1),t)),0);E(r<=1,(()=>"There should be only one negative value in split array."));const i=e.indexOf(-1);if(-1!==i){const s=e.reduce(((t,e)=>e>0?t+e:t));e[i]=t.shape[n]-s}E(t.shape[n]===e.reduce(((t,e)=>t+e)),(()=>"The sum of sizes must match the size of the axis dimension.")),s=e}return s}function Bu(t,e){let n,s=!1;for(t<=cu?(n=t,s=!0):n=Q(t,Math.floor(Math.sqrt(t)));!s;)n>e||n===t?s=!0:n=Q(t,n+1);return n}function Wu(t,e,n){const s=[],r=t.length;for(let i=0;i<r;i++)i!==e?s.push(t[i]):s.push(n);return s}function qu(t,e,n,s){const r=e.shape.length,i=t.shape.length;if(0!==s&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>i)throw new Error(`batchDims (${s}) must be less than rank(x) (\n    ${i}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let n=0;n<s;++n)if(t.shape[n]!==e.shape[n])throw new Error(`x.shape[${n}]: ${t.shape[n]} should be equal to indices.shape[${n}]: ${e.shape[n]}.`);const a=t.shape[n],o=[];let l=1,u=1,c=1;for(let e=0;e<s;++e)o.push(t.shape[e]),l*=t.shape[e];for(let e=s;e<n;e++)o.push(t.shape[e]),u*=t.shape[e];for(let t=s;t<r;t++)o.push(e.shape[t]);for(let e=n+1;e<i;e++)o.push(t.shape[e]),c*=t.shape[e];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:a,outputShape:o}}function Uu(t){try{return t.map((t=>_s(t)))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function Gu(t){return t.map((t=>ws(t)))}function ju(t,e){const n=[];for(let t=0;t<e.length;t++)e[t]&&n.push(t);const s=Yr(t,"int32"),r=Yr([n.length,t.length],"int32");for(let e=0;e<n.length;e++){const i=s.indexToLoc(n[e]),a=e*t.length;r.values.set(i,a)}return r.toTensor()}const Hu={kernelName:gt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ba(t,nl(Zr(n,"float32"),-1))}}},Xu={kernelName:yt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=ao(Zr(n,"float32")),s=Fo(Wa(Li(1),e));return lo(ka(t,s))}}}},Ku={kernelName:bt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Fo(Wa(ao(Zr(n,"float32")),1));return ka(t,e)}}}},Yu={kernelName:xt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Ca(n.shape,s.shape);return{a:()=>{let e=t;const s=Ia(n.shape,r);return s.length>0&&(e=qa(e,s)),sa(e,n.shape)},b:()=>{let e=t;const n=Ia(s.shape,r);return n.length>0&&(e=qa(e,n)),sa(e,s.shape)}}}},Zu={kernelName:vt,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach(((e,s)=>{n[s]=()=>t.clone()})),n}},Qu={kernelName:kt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Go(n)}}},Ju={kernelName:Tt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Go(n)}}},tc={kernelName:St,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ka(t,Fo(Wa(Li(1),ao(Zr(n,"float32")))))}}},ec={kernelName:It,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Fo(Vi(Li(1),ao(Zr(n,"float32"))));return ka(t,e)}}}},nc={kernelName:At,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Ca(n.shape,s.shape);return{a:()=>{const e=Vi(ao(n),ao(s));let i=Ba(t,ka(s,e));const a=Ia(n.shape,r);return a.length>0&&(i=qa(i,a)),sa(i,n.shape)},b:()=>{const e=Vi(ao(n),ao(s));let i=lo(Ba(t,ka(n,e)));const a=Ia(s.shape,r);return a.length>0&&(i=qa(i,a)),sa(i,s.shape)}}}},sc={kernelName:Ct,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ka(t,Vi(ao(Zr(n,"float32")),1))}}},rc={kernelName:Nt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ka(t,Wa(Li(1),ao(Zr(n,"float32"))))}}},ic=dr({avgPool3dGrad_:function(t,e,n,s,r,i){const a=hr(t,"dy","avgPool3dGrad"),o=hr(e,"input","avgPool3dGrad");let l=a,u=o,c=!1;4===o.rank&&(c=!0,l=sa(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),u=sa(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),E(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),E(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),null!=i&&E(M(r),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h={dy:l,input:u},p={filterSize:n,strides:s,pad:r,dimRoundingMode:i},d=sr.runKernel(Dt,h,p);return c?sa(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),ac={kernelName:Rt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{filterSize:r,strides:i,pad:a,dimRoundingMode:o}=n;return{x:()=>ic(t,s,r,i,a,o)}}},oc=dr({avgPoolGrad_:function(t,e,n,s,r){const i=hr(t,"dy","avgPoolGrad"),a=hr(e,"input","avgPoolGrad");E(a.rank===i.rank,(()=>`Rank of input (${a.rank}) does not match rank of dy (${i.rank})`));let o=a,l=i,u=!1;3===a.rank&&(u=!0,o=sa(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=sa(i,[1,i.shape[0],i.shape[1],i.shape[2]])),E(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),E(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:s,pad:r},p=sr.runKernel($t,c,h);return u?sa(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),lc={kernelName:Et,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{filterSize:r,strides:i,pad:a}=n;return{x:()=>oc(t,s,r,i,a)}}},uc={kernelName:Ot,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[s,r]=e,{transposeA:i,transposeB:a}=n;return i||a?!i&&a?{a:()=>hl(t,r,!1,!1),b:()=>hl(t,s,!0,!1)}:i&&!a?{a:()=>hl(r,t,!1,!0),b:()=>hl(s,t,!1,!1)}:{a:()=>hl(r,t,!0,!0),b:()=>hl(t,s,!0,!0)}:{a:()=>hl(t,r,!1,!0),b:()=>hl(s,t,!0,!1)}}},cc=dr({spaceToBatchND_:function(t,e,n){const s=hr(t,"x","spaceToBatchND");E(s.rank>=1+e.length,(()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`)),E(n.length===e.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`)),E(s.shape.reduce(((t,s,r)=>r>0&&r<=e.length?t&&(s+n[r-1][0]+n[r-1][1])%e[r-1]==0:t),!0),(()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`));const r={x:s},i={blockShape:e,paddings:n};return sr.runKernel(Vn,r,i)}}),hc={kernelName:Ft,gradFunc:(t,e,n)=>{const{blockShape:s,crops:r}=n;return{x:()=>cc(t,s,r)}}},pc={kernelName:"BroadcastTo",gradFunc:(t,e,n)=>{const s=n,r=s.inputShape,i=s.shape,a=Array.from(i);for(let t=r.length-1;t>=0;t--)if(r[t]===i[t])a[t]=1;else if(1!==r[t])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${i}].`);const o=[];for(let t=0;t<a.length;t++)a[t]>1&&o.push(t);return{x:()=>qa(t,o,!0)}}},dc={kernelName:Lt,gradFunc:t=>({x:()=>t.clone()})},fc={kernelName:zt,gradFunc:t=>({x:()=>Go(t)})},mc={kernelName:Pt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{clipValueMin:r,clipValueMax:i}=n;return{x:()=>Uo(Ga(Ma(s,r),Fl(s,i)),t,Go(t))}}},gc={kernelName:Bt,inputsToSave:["x"],gradFunc:Hu.gradFunc},yc={kernelName:Wt,saveAllInputs:!0,gradFunc:(t,e,n)=>{const s=e.map((t=>t.shape)),{axis:r}=n,i=B(r,e[0].shape)[0],a=s.map((t=>t[i]));return Oo(t,a,i).map((t=>()=>t))}},bc={kernelName:qt,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,{dilations:i,strides:a,pad:o,dataFormat:l}=n;return E(ta(i),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`)),{x:()=>ba(s.shape,t,r,a,o,l),filter:()=>tl(s,t,r.shape,a,o,l)}}},xc={kernelName:Gt,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,{strides:i,pad:a,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>ga(t,r,i,a,o,1,l),filter:()=>tl(t,s,r.shape,i,a,o,l)}}},vc=dr({conv3DBackpropFilter_:function(t,e,n,s,r){let i=t;4===t.rank&&(i=sa(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let a=e;4===a.rank&&(a=sa(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),E(5===i.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`)),E(5===a.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`)),E(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),E(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),E(a.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:i,dy:a},l={strides:s,pad:r,filterShape:n};return sr.runKernel(Ht,o,l)}}),wc=dr({conv3DBackpropInput_:function(t,e,n,s,r){E(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let i=t,a=e,o=!1;4===e.rank&&(o=!0,a=sa(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),i=[1,t[0],t[1],t[2],t[3]]);const l=i[4],u=a.shape[4];E(5===i.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`)),E(5===a.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`)),E(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),E(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),E(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:a,filter:n},h={pad:r,strides:s,inputShape:i},p=sr.runKernel(Xt,c,h);return o?sa(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),_c={kernelName:jt,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:s,strides:r,pad:i}=n;E(ta(s),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const[a,o]=e;return{x:()=>wc(a.shape,t,o,r,i),filter:()=>vc(a,t,o.shape,r,i)}}},kc=dr({sin_:function(t){const e={x:hr(t,"x","sin")};return sr.runKernel(Dn,e)}}),Tc={kernelName:Kt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ba(lo(kc(Zr(n,"float32"))),t)}}},Sc=dr({sinh_:function(t){const e={x:hr(t,"x","sinh")};return sr.runKernel(On,e)}}),Ic={kernelName:Yt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ba(Sc(Zr(n,"float32")),t)}}},Cc=dr({cumsum_:function(t,e=0,n=!1,s=!1){const r={x:hr(t,"x","cumsum")},i={axis:e,exclusive:n,reverse:s};return sr.runKernel(Zt,r,i)}}),Nc={kernelName:Zt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:r,exclusive:i,reverse:a}=n;return{x:()=>{const e=so([r],s.rank);let n=Cc(t,r,i,!a);return null!=e&&(n=jo(n,e)),n}}}},Ac={kernelName:ee,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:s,strides:r,pad:i,dimRoundingMode:a}=n,o=null==s?[1,1]:s;E(ta(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=e;return E(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),E(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),E(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),E(ea(r,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`)),null!=a&&E(M(i),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${i}.`)),{x:()=>ul(l.shape,t,u,r,i,s,a),filter:()=>ll(l,t,u.shape,r,i,s,a)}}},Ec={kernelName:ie,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,i={x:s,filter:r,dy:t},a={x:s,filter:r,dy:t};return{x:()=>sr.runKernel(ae,i,n),filter:()=>sr.runKernel(oe,a,n)}}},$c={kernelName:ue,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,s={dy:t,y:n};return{x:()=>sr.runKernel(ce,s)}}},Rc={kernelName:he,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,s=Ba(Pa(lo(ao(n))),2/Math.sqrt(Math.PI));return{x:()=>Ba(t,s)}}},Dc={kernelName:de,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ba(t,n)}}},Oc={kernelName:fe,inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>sa(t,n.shape)}}},Fc={kernelName:me,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ba(t,Pa(n))}}},Mc={kernelName:xe,gradFunc:t=>({x:()=>Go(t)})},Lc={kernelName:ve,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Ca(n.shape,s.shape);return{a:()=>{const e=ka(t,Zr(s,"float32")),i=Ia(n.shape,r);return i.length>0?sa(qa(e,i),n.shape):e},b:()=>{let e=Ba(t,Zr(n,"float32"));const i=Ia(s.shape,r);i.length>0&&(e=sa(qa(e,i),s.shape));const a=ao(s);return lo(ka(e,Zr(a,"float32")))}}}},zc=dr({rsqrt_:function(t){const e={x:hr(t,"x","rsqrt")};return sr.runKernel(Nn,e)}}),Pc={kernelName:we,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:s}=n,[r,i,a,o]=e,l=null==o?Li(1):o,u=Ia(i.shape,r.shape),c=[];if(1===i.rank){for(let t=0;t<r.shape.length-1;++t)c.push(r.shape[t]);c.push(1)}const h=Wa(r,i),p=Ba(t,l),d=zc(Vi(a,Li(s))),f=Ba(Ba(Ba(d,d),d),Li(-.5));return{x:()=>1===i.rank?sa(Ba(Ba(t,Ea(sa(d,[1,1,1,i.shape[0]]),c)),l),r.shape):sa(Ba(Ba(t,d),l),r.shape),mean:()=>{let t=Ba(Ba(d,Li(-1)),p);return 1===i.rank&&(t=qa(t,u)),sa(t,i.shape)},variance:()=>{let t=Ba(Ba(f,h),p);return 1===i.rank&&(t=qa(t,u)),sa(t,i.shape)},scale:()=>{const e=Ba(h,d);let n=Ba(t,e);return 1===i.rank&&(n=qa(n,u)),sa(n,i.shape)},offset:()=>{let e=t;return 1===i.rank&&(e=qa(e,u)),sa(e,i.shape)}}}},Vc=dr({unsortedSegmentSum_:function(t,e,n){const s=hr(t,"x","unsortedSegmentSum"),r=hr(e,"segmentIds","unsortedSegmentSum","int32");E(M(n),(()=>"numSegments must be of dtype int"));const i={x:s,segmentIds:r},a={numSegments:n};return sr.runKernel(ns,i,a)}}),Bc={kernelName:_e,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[s,r]=e,{axis:i}=n,a=B(i,s.shape)[0];return{x:()=>{const e=s.shape,n=r.size,o=e.slice(0,a),l=o.length,u=e.slice(i,e.length).slice(1),c=u.length,h=Wc(0,l),p=Wc(l+1,l+1+c),d=qc([o,[n],u]),f=sa(t,d),m=sa(r,[n]),g=qc([[l],h,p]),y=jo(f,g);let b=Vc(y,m,s.shape[a]);const x=ro(g);return b=jo(b,x),b},indices:()=>r}}};function Wc(t,e){const n=[];for(let s=t;s<e;++s)n.push(s);return n}function qc(t){const e=[];for(let n=0;n<t.length;++n)for(let s=0;s<t[n].length;++s)e.push(t[n][s]);return e}const Uc={kernelName:Se,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>Go(n),b:()=>Go(s)}}},Gc={kernelName:Ie,gradFunc:t=>({x:()=>Zr(t,"float32")})},jc={kernelName:Ae,gradFunc:t=>({x:()=>Go(t)})},Hc={kernelName:Ee,gradFunc:t=>({x:()=>Go(t)})},Xc={kernelName:$e,gradFunc:t=>({x:()=>Go(t)})},Kc={kernelName:Re,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{alpha:r}=n,i=Fa(s,0);return{x:()=>Uo(i,t,Ba(t,r))}}},Yc={kernelName:Le,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ka(t,Vi(n,1))}}},Zc={kernelName:Me,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ka(t,Zr(n,"float32"))}}},Qc={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s]=e,{axis:r}=n;return{logits:()=>{const e=Pa(s);return Wa(t,Ba(qa(t,r,!0),e))}}}},Jc=dr({localResponseNormalizationBackprop_:function(t,e,n,s=5,r=1,i=1,a=.5){const o={x:t,y:e,dy:n},l={depthRadius:s,bias:r,alpha:i,beta:a};return sr.runKernel(We,o,l)}}),th={kernelName:Be,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{depthRadius:i,bias:a,alpha:o,beta:l}=n;return{x:()=>Jc(s,r,t,i,a,o,l)}}};function eh(t,e,n,s){return e.rank<n.rank&&(e=sa(e,eo(e.shape,s))),t.rank<n.rank&&(t=sa(t,eo(t.shape,s))),{x:()=>Ba(t,Zr(Na(n,e),t.dtype))}}const nh={kernelName:qe,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const s=n,{reductionIndices:r}=s,i=e[0],a=eh(t,e[1],i,B(r,i.shape));return{x:()=>a.x()}}},sh=dr({less_:function(t,e){let n=hr(t,"a","less"),s=hr(e,"b","less");[n,s]=Ks(n,s),Ca(n.shape,s.shape);const r={a:n,b:s};return sr.runKernel(De,r)}}),rh={kernelName:Ue,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>Ba(t,Zr(Ma(n,s),"float32")),b:()=>Ba(t,Zr(sh(n,s),"float32"))}}},ih=dr({maxPool3dGrad_:function(t,e,n,s,r,i,a){const o=hr(t,"dy","maxPool3dGrad"),l=hr(e,"input","maxPool3dGrad"),u=hr(n,"output","maxPool3dGrad");let c=o,h=l,p=u,d=!1;4===l.rank&&(d=!0,c=sa(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=sa(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=sa(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),E(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),E(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),E(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),null!=a&&E(M(i),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${i}.`));const f={dy:c,input:h,output:p},m={filterSize:s,strides:r,pad:i,dimRoundingMode:a},g=sr.runKernel(Xe,f,m);return d?sa(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),ah={kernelName:He,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=n;return{x:()=>ih(t,s,r,i,a,o,l)}}},oh=dr({maxPoolGrad_:function(t,e,n,s,r,i,a){const o=hr(t,"dy","maxPoolGrad"),l=hr(e,"input","maxPoolGrad"),u=hr(n,"output","maxPoolGrad");E(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),E(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),E(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),null!=a&&E(M(i),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${i}.`));const c={dy:o,input:l,output:u},h={filterSize:s,strides:r,pad:i,dimRoundingMode:a};return sr.runKernel(je,c,h)}}),lh={kernelName:Ge,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{filterSize:i,strides:a,pad:o}=n;return{x:()=>oh(t,s,r,i,a,o)}}},uh={kernelName:Ye,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:r}=n,i=B(r,s.shape),a=O(to(s.shape,i)[1]);return{x:()=>{const e=s.shape.slice();i.forEach((t=>{e[t]=1}));const n=sa(t,e);return ka(Ba(n,po(s.shape,"float32")),a)}}}},ch={kernelName:Ze,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const s=n,{axis:r}=s,[i,a]=e,o=eh(t,a,i,B(r,i.shape));return{x:()=>o.x()}}},hh={kernelName:Qe,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>Ba(t,Zr(Fl(n,s),"float32")),b:()=>Ba(t,Zr(Fa(n,s),"float32"))}}},ph={kernelName:Je,inputsToSave:["x"],gradFunc:(t,e,n)=>{const s=e[0],{paddings:r}=n,i=r.map((t=>t[0]));return{x:()=>Co(t,i,s.shape)}}},dh={kernelName:tn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Ca(n.shape,s.shape);return{a:()=>{const e=Ia(n.shape,r);return e.length>0?sa(qa(t,e),n.shape):t},b:()=>{const e=Ba(t,lo(Da(ka(n,s)))),i=Ia(s.shape,r);return i.length>0?sa(qa(e,i),s.shape):e}}}},fh={kernelName:nn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Ca(n.shape,s.shape);return{a:()=>{const e=Ba(t,Zr(s,"float32")),i=Ia(n.shape,r);return i.length>0?sa(qa(e,i),n.shape):e},b:()=>{const e=Ba(t,Zr(n,"float32")),i=Ia(s.shape,r);return i.length>0?sa(qa(e,i),s.shape):e}}}},mh={kernelName:sn,gradFunc:t=>({x:()=>lo(t)})},gh={kernelName:cn,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>ho(n.shape,"float32")}}},yh={kernelName:un,gradFunc:t=>({x:()=>Go(t)})},bh={kernelName:hn,saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:s}=n;return Wo(t,s).map((t=>()=>t))}},xh={kernelName:pn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const s=e[0],{paddings:r}=n,i=r.map((t=>t[0]));return{x:()=>Co(t,i,s.shape)}}},vh={kernelName:dn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,s,r]=e,i=n,a=s,o=Ca(i.shape,a.shape);return{a:()=>{const e=Zr(a,"float32");let n=Ba(t,Ba(e,zl(i,Wa(e,Li(1)))));const s=Ia(i.shape,o);return s.length>0&&(n=qa(n,s)),sa(n,i.shape)},b:()=>{const e=Fa(i,0),n=Uo(e,za(i),Go(i));let s=Ba(t,Ba(r,n));const l=Ia(a.shape,o);return l.length>0&&(s=qa(s,l)),sa(s,a.shape)}}}},wh={kernelName:fn,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,s]=e,r=Fa(n,0);return{x:()=>Uo(r,t,Ba(t,s)),alpha:()=>{let e=Uo(r,Go(t),Ba(t,n));const i=Ia(s.shape,t.shape);return i.length>0&&(e=qa(e,i)),sa(e,s.shape)}}}},_h={kernelName:le,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Ca(n.shape,s.shape);return{a:()=>{const e=ka(t,Zr(s,"float32")),i=Ia(n.shape,r);return i.length>0?sa(qa(e,i),n.shape):e},b:()=>{let e=Ba(t,Zr(n,"float32"));const i=Ia(s.shape,r);i.length>0&&(e=sa(qa(e,i),s.shape));const a=ao(s);return lo(ka(e,Zr(a,"float32")))}}}},kh={kernelName:bn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ka(t,lo(ao(n)))}}},Th={kernelName:Sn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,s=Ba(Fl(n,6),nl(n));return{x:()=>Ba(t,Zr(s,"float32"))}}},Sh={kernelName:xn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ba(t,Zr(nl(n),"float32"))}}},Ih={kernelName:vn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>sa(t,n.shape)}}},Ch={kernelName:kn,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[s]=e,r={dy:t,images:s};return{images:()=>sr.runKernel(Tn,r,n)}}},Nh={kernelName:wn,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[s]=e,r={dy:t,images:s};return{images:()=>sr.runKernel(_n,r,n)}}},Ah={kernelName:In,gradFunc:(t,e,n)=>{const{dims:s}=n,r=B(s,t.shape);return{x:()=>ko(t,r)}}},Eh={kernelName:Cn,gradFunc:t=>({x:()=>Go(t)})},$h={kernelName:Nn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>lo(ka(t,Ba(zl(n,1.5),2)))}}},Rh=dr({logicalNot_:function(t){const e={x:hr(t,"x","logicalNot","bool")};return sr.runKernel(Pe,e)}}),Dh={kernelName:En,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>Zr(Go(n),"float32"),t:()=>Ba(t,Zr(n,t.dtype)),e:()=>Ba(t,Zr(Rh(n),t.dtype))}}},Oh={kernelName:$n,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Fa(n,Li(0)),s=Li(_u),r=Li(ku),i=Ba(t,r),a=Ba(Ba(t,s),Pa(Zr(n,"float32")));return Uo(e,i,a)}}}},Fh={kernelName:Mn,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ba(t,Ba(n,Wa(Li(1),n)))}}},Mh={kernelName:Fn,gradFunc:t=>({x:()=>Go(t)})},Lh=dr({cos_:function(t){const e={x:hr(t,"x","cos")};return sr.runKernel(Kt,e)}}),zh={kernelName:Dn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ba(Lh(Zr(n,"float32")),t)}}},Ph=dr({cosh_:function(t){const e={x:hr(t,"x","cosh")};return sr.runKernel(Yt,e)}}),Vh={kernelName:On,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ba(Ph(Zr(n,"float32")),t)}}},Bh={kernelName:Rn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{begin:r,size:i}=n,a=s.shape,[o,l]=Ti(s,r,i),u=[];for(let e=0;e<t.rank;e++)u.push([o[e],a[e]-o[e]-l[e]]);return{x:()=>mo(t,u)}}},Wh={kernelName:Wn,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s]=e,{dim:r}=n,i=Ba(t,s);return{logits:()=>Wa(i,Ba(qa(i,[r],!0),s))}}},qh={kernelName:Ln,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ba(t,Io(n))}}},Uh=dr({batchToSpaceND_:function(t,e,n){const s=hr(t,"x","batchToSpaceND"),r=e.reduce(((t,e)=>t*e));E(s.rank>=1+e.length,(()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`)),E(n.length===e.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`)),E(s.shape[0]%r==0,(()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${r}`));const i={x:s},a={blockShape:e,crops:n};return sr.runKernel(Ft,i,a)}}),Gh={kernelName:Vn,gradFunc:(t,e,n)=>{const{blockShape:s,paddings:r}=n;return{x:()=>Uh(t,s,r)}}},jh={kernelName:Bn,gradFunc:(t,e,n)=>{const{axis:s}=n;return{x:()=>ha(t,s)}}},Hh=[Hu,Xu,Ku,Yu,Zu,Qu,Ju,tc,ec,nc,sc,rc,ac,lc,uc,hc,pc,dc,fc,mc,gc,yc,xc,bc,_c,Tc,Ic,Nc,Ac,Ec,_h,$c,Rc,Dc,Oc,Fc,Lc,Mc,Pc,Bc,Uc,Gc,jc,Hc,Xc,Kc,Yc,Zc,Qc,th,nh,nh,rh,ah,lh,uh,ch,hh,ph,dh,fh,mh,gh,yh,bh,xh,xh,vh,wh,kh,Th,Sh,Ih,Ch,Nh,Ah,Eh,$h,Dh,Oh,Fh,Mh,zh,Vh,Bh,Wh,qh,Gh,Gh,jh,jh,{kernelName:zn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ka(t,Ba(Fo(Zr(n,"float32")),2))}}},{kernelName:qn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Li(2);return{a:()=>Ba(t,Ba(r,Wa(n,s))),b:()=>Ba(t,Ba(r,Wa(s,n)))}}},{kernelName:Un,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ba(t,Ba(Zr(n,"float32"),2))}}},{kernelName:rs,gradFunc:t=>({x:()=>Go(t)})},{kernelName:Gn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Ca(n.shape,s.shape);return{a:()=>{let e=t;const s=Ia(n.shape,r);return s.length>0&&(e=qa(e,s)),sa(e,n.shape)},b:()=>{let e=t;const n=Ia(s.shape,r);return n.length>0&&(e=qa(e,n)),sa(lo(e),s.shape)}}}},{kernelName:Pn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,r=s.shape.slice(),{axis:i}=n;B(i,s.shape).forEach((t=>{r[t]=1}));const a=sa(t,r),o=Ba(a,po(s.shape,"float32"));return{x:()=>o}}},{kernelName:Xn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ka(t,ao(Lh(n)))}}},{kernelName:Kn,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ba(Wa(Li(1),ao(n)),t)}}},{kernelName:Yn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{reps:r}=n;return{x:()=>{let e=Go(s);if(1===s.rank)for(let n=0;n<r[0];++n)e=Vi(e,Co(t,[n*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let n=0;n<r[0];++n)for(let i=0;i<r[1];++i)e=Vi(e,Co(t,[n*s.shape[0],i*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let n=0;n<r[0];++n)for(let i=0;i<r[1];++i)for(let a=0;a<r[2];++a)e=Vi(e,Co(t,[n*s.shape[0],i*s.shape[1],a*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);for(let n=0;n<r[0];++n)for(let i=0;i<r[1];++i)for(let a=0;a<r[2];++a)for(let o=0;o<r[3];++o)e=Vi(e,Co(t,[n*s.shape[0],i*s.shape[1],a*s.shape[2],o*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return e}}}},{kernelName:Jn,gradFunc:(t,e,n)=>{const s=n,{perm:r}=s,i=ro(r);return{x:()=>jo(t,i)}}},{kernelName:es,gradFunc:(t,e,n)=>{const s=n,{axis:r}=s;return{value:()=>Lo(t,r)}}},{kernelName:ns,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=Xa(e,Go(e)),s=Oa(t,n);let r=Ma(e,Li(0,"int32"));const i=s.rank-r.rank;for(let t=0;t<i;++t)r=Aa(r,t+1);r=Ga(r,po(s.shape,"bool"));const a=Go(s);return Uo(r,s,a)}(t,n)}}},{kernelName:ss,gradFunc:t=>({x:()=>Go(t)})}];for(const t of Hh)gs(t);Ps().prototype.abs=function(){return this.throwIfDisposed(),Pi(this)};const Xh=dr({acos_:function(t){const e={x:hr(t,"x","acos")};return sr.runKernel(yt,e)}});Ps().prototype.acos=function(){return this.throwIfDisposed(),Xh(this)};const Kh=dr({acosh_:function(t){const e={x:hr(t,"x","acosh")};return sr.runKernel(bt,e)}});Ps().prototype.acosh=function(){return this.throwIfDisposed(),Kh(this)},Ps().prototype.add=function(t){return this.throwIfDisposed(),Vi(this,t)},Ps().prototype.all=function(t,e){return this.throwIfDisposed(),Bi(this,t,e)},Ps().prototype.any=function(t,e){return this.throwIfDisposed(),Wi(this,t,e)},Ps().prototype.argMax=function(t){return this.throwIfDisposed(),qi(this,t)};const Yh=dr({argMin_:function(t,e=0){const n={x:hr(t,"x","argMin")},s={axis:e};return sr.runKernel(Tt,n,s)}});Ps().prototype.argMin=function(t){return this.throwIfDisposed(),Yh(this,t)},Ps().prototype.asScalar=function(){return this.throwIfDisposed(),E(1===this.size,(()=>"The array must have only 1 element.")),sa(this,[])},Ps().prototype.asType=function(t){return this.throwIfDisposed(),Zr(this,t)},Ps().prototype.as1D=function(){return this.throwIfDisposed(),sa(this,[this.size])},Ps().prototype.as2D=function(t,e){return this.throwIfDisposed(),sa(this,[t,e])},Ps().prototype.as3D=function(t,e,n){return this.throwIfDisposed(),sa(this,[t,e,n])},Ps().prototype.as4D=function(t,e,n,s){return this.throwIfDisposed(),sa(this,[t,e,n,s])},Ps().prototype.as5D=function(t,e,n,s,r){return this.throwIfDisposed(),sa(this,[t,e,n,s,r])};const Zh=dr({asin_:function(t){const e={x:hr(t,"x","asin")};return sr.runKernel(St,e)}});Ps().prototype.asin=function(){return this.throwIfDisposed(),Zh(this)};const Qh=dr({asinh_:function(t){const e={x:hr(t,"x","asinh")};return sr.runKernel(It,e)}});Ps().prototype.asinh=function(){return this.throwIfDisposed(),Qh(this)};const Jh=dr({atan_:function(t){const e={x:hr(t,"x","atan")};return sr.runKernel(Ct,e)}});Ps().prototype.atan=function(){return this.throwIfDisposed(),Jh(this)};const tp=dr({atan2_:function(t,e){let n=hr(t,"a","atan2"),s=hr(e,"b","atan2");[n,s]=Ks(n,s);const r={a:n,b:s};return sr.runKernel(At,r)}});Ps().prototype.atan2=function(t){return this.throwIfDisposed(),tp(this,t)};const ep=dr({atanh_:function(t){const e={x:hr(t,"x","atanh")};return sr.runKernel(Nt,e)}});Ps().prototype.atanh=function(){return this.throwIfDisposed(),ep(this)},Ps().prototype.avgPool=function(t,e,n,s){return this.throwIfDisposed(),ra(this,t,e,n,s)},Ps().prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),Uh(this,t,e)},Ps().prototype.batchNorm=function(t,e,n,s,r){return this.throwIfDisposed(),aa(this,t,e,n,s,r)},Ps().prototype.broadcastTo=function(t){return this.throwIfDisposed(),qo(this,t)},Ps().prototype.cast=function(t){return this.throwIfDisposed(),Zr(this,t)};const np=dr({ceil_:function(t){const e={x:hr(t,"x","ceil")};return sr.runKernel(zt,e)}});Ps().prototype.ceil=function(){return this.throwIfDisposed(),np(this)},Ps().prototype.clipByValue=function(t,e){return this.throwIfDisposed(),ca(this,t,e)},Ps().prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof zs&&(t=[t]),ha([this,...t],e)},Ps().prototype.conv1d=function(t,e,n,s,r,i){return this.throwIfDisposed(),ya(this,t,e,n,s,r,i)},Ps().prototype.conv2dTranspose=function(t,e,n,s,r){return this.throwIfDisposed(),xa(this,t,e,n,s,r)},Ps().prototype.conv2d=function(t,e,n,s,r,i){return this.throwIfDisposed(),ga(this,t,e,n,s,r,i)},Ps().prototype.cos=function(){return this.throwIfDisposed(),Lh(this)},Ps().prototype.cosh=function(){return this.throwIfDisposed(),Ph(this)},Ps().prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),Cc(this,t,e,n)};const sp=dr({depthToSpace_:function(t,e,n="NHWC"){const s=hr(t,"x","depthToSpace"),r="NHWC"===n?s.shape[1]:s.shape[2],i="NHWC"===n?s.shape[2]:s.shape[3],a="NHWC"===n?s.shape[3]:s.shape[1];E(r*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${e}  for depthToSpace with input shape\n    ${s.shape}`)),E(i*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${e} for depthToSpace with input shape\n        ${s.shape}`)),E(a%(e*e)==0,(()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${s.shape}`));const o={x:s},l={blockSize:e,dataFormat:n};return sr.runKernel(te,o,l)}});Ps().prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),sp(this,t,e)},Ps().prototype.depthwiseConv2d=function(t,e,n,s,r,i){return this.throwIfDisposed(),wa(this,t,e,n,s,r,i)};const rp=dr({dilation2d_:function(t,e,n,s,r=[1,1],i="NHWC"){const a=hr(t,"x","dilation2d"),o=hr(e,"filter","dilation2d");E(3===a.rank||4===a.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`)),E(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),E("NHWC"===i,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`));let l=a,u=!1;3===a.rank&&(l=sa(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0);const c={x:l,filter:o},h={strides:n,pad:s,dilations:r},p=sr.runKernel(ie,c,h);return u?sa(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});Ps().prototype.dilation2d=function(t,e,n,s,r){return this.throwIfDisposed(),rp(this,t,e,n,s,r)};const ip=dr({divNoNan_:function(t,e){let n=hr(t,"a","div"),s=hr(e,"b","div");[n,s]=Ks(n,s);const r=ka(n,s),i=Go(r),a=Na(s,i);return Uo(a,i,r)}});Ps().prototype.divNoNan=function(t){return this.throwIfDisposed(),ip(this,t)},Ps().prototype.div=function(t){return this.throwIfDisposed(),ka(this,t)};const ap=dr({dot_:function(t,e){const n=hr(t,"t1","dot"),s=hr(e,"t2","dot");E(!(1!==n.rank&&2!==n.rank||1!==s.rank&&2!==s.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`));const r=1===n.rank?n.size:n.shape[1],i=1===s.rank?s.size:s.shape[0];if(E(r===i,(()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${i}.`)),1===n.rank&&1===s.rank){const t=sa(n,[1,-1]),e=sa(s,[-1,1]),r=hl(t,e);return sa(r,[])}if(1===n.rank&&2===s.rank){const t=sa(n,[1,-1]),e=sa(s,[s.shape[0],s.shape[1]]),r=hl(t,e);return sa(r,[r.size])}if(2===n.rank&&1===s.rank){const t=sa(s,[-1,1]),e=hl(n,t);return sa(e,[e.size])}{const t=sa(s,[s.shape[0],s.shape[1]]);return hl(n,t)}}});Ps().prototype.dot=function(t){return this.throwIfDisposed(),ap(this,t)},Ps().prototype.elu=function(){return this.throwIfDisposed(),Ta(this)},Ps().prototype.equal=function(t){return this.throwIfDisposed(),Na(this,t)};const op=dr({erf_:function(t){let e=hr(t,"x","erf");E("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=Zr(e,"float32"));const n={x:e};return sr.runKernel(he,n)}});Ps().prototype.erf=function(){return this.throwIfDisposed(),op(this)},Ps().prototype.exp=function(){return this.throwIfDisposed(),Pa(this)},Ps().prototype.expandDims=function(t){return this.throwIfDisposed(),Aa(this,t)};const lp=dr({expm1_:function(t){const e={x:hr(t,"x","expm1")};return sr.runKernel(me,e)}});Ps().prototype.expm1=function(){return this.throwIfDisposed(),lp(this)},Ps().prototype.fft=function(){return this.throwIfDisposed(),Yo(this)},Ps().prototype.flatten=function(){return this.throwIfDisposed(),sa(this,[this.size])},Ps().prototype.floor=function(){return this.throwIfDisposed(),Da(this)},Ps().prototype.floorDiv=function(t){return this.throwIfDisposed(),_a(this,t)},Ps().prototype.gather=function(t,e){return this.throwIfDisposed(),Oa(this,t,e)},Ps().prototype.greaterEqual=function(t){return this.throwIfDisposed(),Ma(this,t)},Ps().prototype.greater=function(t){return this.throwIfDisposed(),Fa(this,t)},Ps().prototype.ifft=function(){return this.throwIfDisposed(),Qo(this)},Ps().prototype.irfft=function(){return this.throwIfDisposed(),Jo(this)};const up=dr({isFinite_:function(t){const e={x:hr(t,"x","isFinite")};return sr.runKernel(Ae,e)}});Ps().prototype.isFinite=function(){return this.throwIfDisposed(),up(this)};const cp=dr({isInf_:function(t){const e={x:hr(t,"x","isInf")};return sr.runKernel(Ee,e)}});Ps().prototype.isInf=function(){return this.throwIfDisposed(),cp(this)};const hp=dr({isNaN_:function(t){const e={x:hr(t,"x","isNaN")};return sr.runKernel($e,e)}});Ps().prototype.isNaN=function(){return this.throwIfDisposed(),hp(this)},Ps().prototype.leakyRelu=function(t){return this.throwIfDisposed(),La(this,t)},Ps().prototype.lessEqual=function(t){return this.throwIfDisposed(),Fl(this,t)},Ps().prototype.less=function(t){return this.throwIfDisposed(),sh(this,t)};const pp=dr({localResponseNormalization_:function(t,e=5,n=1,s=1,r=.5){const i=hr(t,"x","localResponseNormalization");E(4===i.rank||3===i.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`)),E(M(e),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`));let a=i,o=!1;3===i.rank&&(o=!0,a=sa(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:a},u={depthRadius:e,bias:n,alpha:s,beta:r},c=sr.runKernel(Be,l,u);return o?sa(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});Ps().prototype.localResponseNormalization=function(t,e,n,s){return this.throwIfDisposed(),pp(this,t,e,n,s)};const dp=dr({logSigmoid_:function(t){const e=hr(t,"x","logSigmoid");return Mi((t=>({value:lo(Do(lo(t))),gradFunc:e=>Ba(e,Io(lo(t)))})))(e)}});Ps().prototype.logSigmoid=function(){return this.throwIfDisposed(),dp(this)},Ps().prototype.logSoftmax=function(t){return this.throwIfDisposed(),Ua(this,t)},Ps().prototype.logSumExp=function(t,e){return this.throwIfDisposed(),Xl(this,t,e)},Ps().prototype.log=function(){return this.throwIfDisposed(),za(this)},Ps().prototype.log1p=function(){return this.throwIfDisposed(),Hl(this)},Ps().prototype.logicalAnd=function(t){return this.throwIfDisposed(),Ga(this,t)},Ps().prototype.logicalNot=function(){return this.throwIfDisposed(),Rh(this)};const fp=dr({logicalOr_:function(t,e){const n=hr(t,"a","logicalOr","bool"),s=hr(e,"b","logicalOr","bool");Ca(n.shape,s.shape);const r={a:n,b:s};return sr.runKernel(Ve,r)}});Ps().prototype.logicalOr=function(t){return this.throwIfDisposed(),fp(this,t)};const mp=dr({logicalXor_:function(t,e){const n=hr(t,"a","logicalXor","bool"),s=hr(e,"b","logicalXor","bool");return Ca(n.shape,s.shape),Ga(fp(t,e),Rh(Ga(t,e)))}});Ps().prototype.logicalXor=function(t){return this.throwIfDisposed(),mp(this,t)},Ps().prototype.matMul=function(t,e,n){return this.throwIfDisposed(),hl(this,t,e,n)},Ps().prototype.maxPool=function(t,e,n,s){return this.throwIfDisposed(),ja(this,t,e,n,s)},Ps().prototype.max=function(t,e){return this.throwIfDisposed(),Va(this,t,e)},Ps().prototype.maximum=function(t){return this.throwIfDisposed(),Xa(this,t)},Ps().prototype.mean=function(t,e){return this.throwIfDisposed(),Ka(this,t,e)},Ps().prototype.min=function(t,e){return this.throwIfDisposed(),Ya(this,t,e)},Ps().prototype.minimum=function(t){return this.throwIfDisposed(),Za(this,t)};const gp=dr({mirrorPad_:function(t,e,n){E("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const s=hr(t,"x","mirrorPad");if(0===s.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");E(e.length===s.rank,(()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`));const r="reflect"===n?1:0;for(let t=0;t<s.rank;t++)E(2===e[t].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),E(e[t][0]>=0&&e[t][0]<=s.shape[t]-r&&e[t][1]>=0&&e[t][1]<=s.shape[t]-r,(()=>`Padding in dimension ${t} cannot be greater than or equal to ${s.shape[t]-r} or less than 0 for input of shape ${s.shape}`));const i={paddings:e,mode:n},a={x:s};return sr.runKernel(Je,a,i)}});Ps().prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),gp(this,t,e)};const yp=dr({mod_:function(t,e){let n=hr(t,"a","mod"),s=hr(e,"b","mod");[n,s]=Ks(n,s);const r={a:n,b:s};return sr.runKernel(tn,r)}});Ps().prototype.mod=function(t){return this.throwIfDisposed(),yp(this,t)},Ps().prototype.mul=function(t){return this.throwIfDisposed(),Ba(this,t)},Ps().prototype.neg=function(){return this.throwIfDisposed(),lo(this)},Ps().prototype.norm=function(t,e,n){return this.throwIfDisposed(),Vl(this,t,e,n)},Ps().prototype.notEqual=function(t){return this.throwIfDisposed(),uo(this,t)},Ps().prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),co(this,t,e,n)},Ps().prototype.onesLike=function(){return this.throwIfDisposed(),fo(this)},Ps().prototype.pad=function(t,e){return this.throwIfDisposed(),mo(this,t,e)};const bp=dr({pool_:function(t,e,n,s,r,i){null==r&&(r=[1,1]),null==i&&(i=1),0===s&&(s="valid");const a=hr(t,"x","maxPool");let o=a,l=!1;3===a.rank&&(l=!0,o=sa(a,[1,a.shape[0],a.shape[1],a.shape[2]])),E(ea(i,r),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${r}'`));const u=Gi(o.shape,e,i,r,s),c=[u.dilationHeight,u.dilationWidth];let h;h="same"===s?function(t,e){const n=t.map(((t,n)=>t+(t-1)*(e[n]-1))).map((t=>t-1)),s=n.map((t=>Math.floor(t/2))),r=n.map(((t,e)=>t-s[e]));return n.map(((t,e)=>[s[e],r[e]]))}([u.filterHeight,u.filterWidth],c):[[0,0],[0,0]];const p=1===c[0]&&1===c[1],[d,f]=function(t,e,n){const s=n.map((t=>t[0])),r=n.map((t=>t[1])),i=t.concat(s,r),a=e.map(((t,e)=>(t-i[e]%t)%t)),o=r.map(((t,e)=>t+a[e]));return[e.map(((t,e)=>[s[e],o[e]])),e.map(((t,e)=>[0,a[e]]))]}([u.inHeight,u.inWidth],c,h),m=p?s:"valid",g=p?o:cc(o,c,d),y=("avg"===n?()=>ra(g,e,i,m):()=>ja(g,e,i,m))(),b=p?y:Uh(y,c,f);return l?sa(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});Ps().prototype.pool=function(t,e,n,s,r){return this.throwIfDisposed(),bp(this,t,e,n,s,r)},Ps().prototype.pow=function(t){return this.throwIfDisposed(),zl(this,t)},Ps().prototype.prelu=function(t){return this.throwIfDisposed(),go(this,t)};const xp=dr({prod_:function(t,e=null,n=!1){let s=hr(t,"x","prod");"bool"===s.dtype&&(s=Zr(s,"int32"));const r={x:s},i={axis:e,keepDims:n};return sr.runKernel(mn,r,i)}});Ps().prototype.prod=function(t,e){return this.throwIfDisposed(),xp(this,t,e)};const vp=dr({reciprocal_:function(t){const e={x:hr(t,"x","reciprocal")};return sr.runKernel(bn,e)}});Ps().prototype.reciprocal=function(){return this.throwIfDisposed(),vp(this)},Ps().prototype.relu=function(){return this.throwIfDisposed(),_o(this)},Ps().prototype.relu6=function(){return this.throwIfDisposed(),el(this)},Ps().prototype.reshapeAs=function(t){return this.throwIfDisposed(),sa(this,t.shape)},Ps().prototype.reshape=function(t){return this.throwIfDisposed(),sa(this,t)},Ps().prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),Rl(this,t,e,n)},Ps().prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),Dl(this,t,e,n)},Ps().prototype.reverse=function(t){return this.throwIfDisposed(),ko(this,t)},Ps().prototype.rfft=function(){return this.throwIfDisposed(),Zo(this)};const wp=dr({round_:function(t){const e={x:hr(t,"x","round")};return sr.runKernel(Cn,e)}});Ps().prototype.round=function(){return this.throwIfDisposed(),wp(this)},Ps().prototype.rsqrt=function(){return this.throwIfDisposed(),zc(this)},Ps().prototype.selu=function(){return this.throwIfDisposed(),To(this)},Ps().prototype.separableConv2d=function(t,e,n,s,r,i){return this.throwIfDisposed(),So(this,t,e,n,s,r,i)},Ps().prototype.sigmoid=function(){return this.throwIfDisposed(),Io(this)};const _p=dr({sign_:function(t){const e={x:hr(t,"x","sign")};return sr.runKernel(Fn,e)}});Ps().prototype.sign=function(){return this.throwIfDisposed(),_p(this)},Ps().prototype.sin=function(){return this.throwIfDisposed(),kc(this)},Ps().prototype.sinh=function(){return this.throwIfDisposed(),Sc(this)},Ps().prototype.slice=function(t,e){return this.throwIfDisposed(),Co(this,t,e)},Ps().prototype.softmax=function(t){return this.throwIfDisposed(),Ro(this,t)},Ps().prototype.softplus=function(){return this.throwIfDisposed(),Do(this)},Ps().prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),cc(this,t,e)},Ps().prototype.split=function(t,e){return this.throwIfDisposed(),Oo(this,t,e)},Ps().prototype.sqrt=function(){return this.throwIfDisposed(),Fo(this)},Ps().prototype.square=function(){return this.throwIfDisposed(),ao(this)},Ps().prototype.squaredDifference=function(t){return this.throwIfDisposed(),jl(this,t)},Ps().prototype.squeeze=function(t){return this.throwIfDisposed(),Mo(this,t)},Ps().prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof zs?[this,t]:[this,...t];return Lo(n,e)},Ps().prototype.step=function(t){return this.throwIfDisposed(),nl(this,t)};const kp=dr({stridedSlice_:function(t,e,n,s,r=0,i=0,a=0,o=0,l=0){const u={x:hr(t,"x","stridedSlice")},c={begin:e,end:n,strides:s,beginMask:r,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};return sr.runKernel(Hn,u,c)}});Ps().prototype.stridedSlice=function(t,e,n,s,r,i,a,o){return this.throwIfDisposed(),kp(this,t,e,n,s,r,i,a,o)},Ps().prototype.sub=function(t){return this.throwIfDisposed(),Wa(this,t)},Ps().prototype.sum=function(t,e){return this.throwIfDisposed(),qa(this,t,e)};const Tp=dr({tan_:function(t){const e={x:hr(t,"x","tan")};return sr.runKernel(Xn,e)}});Ps().prototype.tan=function(){return this.throwIfDisposed(),Tp(this)},Ps().prototype.tanh=function(){return this.throwIfDisposed(),zo(this)},Ps().prototype.tile=function(t){return this.throwIfDisposed(),Ea(this,t)},Ps().prototype.toBool=function(){return this.throwIfDisposed(),Zr(this,"bool")},Ps().prototype.toFloat=function(){return this.throwIfDisposed(),Zr(this,"float32")},Ps().prototype.toInt=function(){return this.throwIfDisposed(),Zr(this,"int32")};const Sp=dr({topk_:function(t,e=1,n=!0){const s=hr(t,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(e>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${e}`);const i={x:s},a={k:e,sorted:n},[o,l]=sr.runKernel(Zn,i,a);return{values:o,indices:l}}});Ps().prototype.topk=function(t,e){return this.throwIfDisposed(),Sp(this,t,e)},Ps().prototype.transpose=function(t){return this.throwIfDisposed(),jo(this,t)};const Ip=dr({unique_:function(t,e=0){const n=hr(t,"x","unique","string_or_numeric");E(n.rank>0,(()=>"The input tensor must be at least 1D"));const s={x:n},r={axis:e},[i,a]=sr.runKernel(ts,s,r);return{values:i,indices:a}}});let Cp;function Np(){return null==Cp&&(Cp=sr.backend.epsilon()),Cp}Ps().prototype.unique=function(t){return this.throwIfDisposed(),Ip(this,t)},Ps().prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),Vc(this,t,e)},Ps().prototype.unstack=function(t){return this.throwIfDisposed(),Wo(this,t)},Ps().prototype.where=function(t,e){return this.throwIfDisposed(),Uo(t,this,e)},Ps().prototype.zerosLike=function(){return this.throwIfDisposed(),Go(this)};class Ap extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Ap.prototype)}}class Ep extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Ep.prototype)}}class $p extends Error{constructor(t){super(t),Object.setPrototypeOf(this,$p.prototype)}}class Rp extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Rp.prototype)}}class Dp extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Dp.prototype)}}function Op(t,e){if(Array.isArray(t)){let n=[];for(let s=0;s<e;s++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function Fp(t,e){if(!t)throw new Dp(e)}function Mp(t,e){let n=0;for(const s of t)s===e&&n++;return n}function Lp(t){return 1===t.length?t[0]:t}function zp(t){return Array.isArray(t)?t:[t]}function Pp(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function Vp(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,((t,e)=>e.toUpperCase()))}let Bp={};function Wp(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function qp(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach((t=>qp(t)));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"==typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!=typeof e.value?qp(e):t[n]=e.value)}}}function Up(t,e={},n={},s="object",r=!1){if("string"==typeof t){const r=t;let i;if(r in n)i=n[r];else if(r in Bp)i=Bp[r];else if(i=e[r],null==i)throw new $p(`Unknown ${s}: ${t}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const i=t;if(null==i.className||null==i.config)throw new $p(`${s}: Improper config format: ${JSON.stringify(i)}.\n'className' and 'config' must set.`);const a=i.className;let o,l;if(a in n?[o,l]=n[a]:a in Bp?[o,l]=Bp.className:a in e&&([o,l]=e[a]),null==o)throw new $p(`Unknown ${s}: ${a}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const t={};for(const e of Object.keys(Bp))t[e]=Bp[e];for(const e of Object.keys(n))t[e]=n[e];i.config.customObjects=t;const e=Object.assign({},Bp);for(const t of Object.keys(n))Bp[t]=n[t];qp(i.config);const s=l(o,i.config,n,r);return Bp=Object.assign({},e),s}{const t=Object.assign({},Bp);for(const t of Object.keys(n))Bp[t]=n[t];const e=new o(i.config);return Bp=Object.assign({},t),e}}}function Gp(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function jp(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function Hp(t){if(null==t)throw new $p(`Invalid value in obj: ${JSON.stringify(t)}`);for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function Xp(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new $p(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function Kp(t,e,n=0,s=1/0){return Fp(n>=0),Fp(s>=n),Array.isArray(t)&&t.length>=n&&t.length<=s&&t.every((t=>typeof t===e))}function Yp(t,e){Array.isArray(t)?(E(t.length>0,(()=>`${e} is unexpectedly an empty array.`)),t.forEach(((t,n)=>Yp(t,`element ${n+1} of ${e}`)))):E(Number.isInteger(t)&&t>0,(()=>`Expected ${e} to be a positive integer, but got ${Zp(t)}.`))}function Zp(t){return null===t?"null":Array.isArray(t)?"["+t.map((t=>Zp(t))).join(",")+"]":"string"==typeof t?`"${t}"`:`${t}`}function Qp(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}function Jp(t,e){return $i((()=>Fo(qa(Ba(t,t),e,!0))))}class td extends Ii{getConfig(){return{}}}class ed extends td{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return $i((()=>{const e=Jp(t,this.axis),n=ca(e,0,this.maxValue);return Ba(t,ka(n,Vi(Np(),e)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}ed.className="MaxNorm",Ni(ed);class nd extends td{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return $i((()=>ka(t,Vi(Np(),Jp(t,this.axis)))))}getConfig(){return{axis:this.axis}}}nd.className="UnitNorm",Ni(nd);class sd extends td{apply(t){return _o(t)}}sd.className="NonNeg",Ni(sd);class rd extends td{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return $i((()=>{const e=Jp(t,this.axis),n=Vi(Ba(this.rate,ca(e,this.minValue,this.maxValue)),Ba(1-this.rate,e));return Ba(t,ka(n,Vi(Np(),e)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}rd.className="MinMaxNorm",Ni(rd);const id={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function ad(t){return Wp(t)}function od(t,e={}){return Up(t,Ci.getMap().classNameMap,e,"constraint")}function ld(t){return null==t?null:"string"==typeof t?od({className:t in id?id[t]:t,config:{}}):t instanceof td?t:od(t)}const ud=["channelsFirst","channelsLast"],cd=["nearest","bilinear"],hd=["valid","same","causal"],pd=["max","avg"],dd=["sum","mul","concat","ave"],fd=new Map;function md(t){Xp(ud,"DataFormat",t)}function gd(t){Xp(hd,"PaddingMode",t)}function yd(t){Xp(pd,"PoolMode",t)}const bd=[];function xd(t,e){bd.push(t);try{const t=e();return bd.pop(),t}catch(t){throw bd.pop(),t}}function vd(t){if(!kd(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===bd.length?"":bd.join("/")+"/")+t}function wd(t){if(!kd(t))throw new Error("Not a valid tensor name: '"+t+"'");fd.has(t)||fd.set(t,0);const e=fd.get(t);if(fd.set(t,fd.get(t)+1),e>0){const n=`${t}_${e}`;return fd.set(n,1),n}return t}const _d=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function kd(t){return!!t.match(_d)}function Td(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let s=1;for(let r=e;r<n;++r)s*=t[r];return s}function Sd(t){return Po(t=Array.isArray(t)?new Float32Array(t):t)}function Id(t){return Ya(Sd(t)).dataSync()[0]}function Cd(t){return Va(Sd(t)).dataSync()[0]}function Nd(t,e){if(e<t)throw new $p(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let s=t;s<e;++s)n.push(s);return n}function Ad(t,e){return t.asType(e)}function Ed(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),t.reshape(n)}function $d(t,e,n){return $i((()=>{switch(t.rank){case 1:return No(t,e,n);case 2:return Ao(t,[e,0],[n,t.shape[1]]);case 3:return Eo(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return $o(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return Co(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return Co(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new $p(`sliceAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function Rd(t,e,n){return $i((()=>{switch(t.rank){case 1:return No(t,e,n);case 2:return Ao(t,[0,e],[t.shape[0],n]);case 3:return Eo(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return $o(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new $p(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function Dd(t,e,n,s){return $i((()=>{switch(t.rank){case 1:return No(t,e,n);case 2:switch(s){case 1:return $d(t,e,n);case 2:return Rd(t,e,n);default:throw new $p(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return $d(t,e,n);case 2:return Eo(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return Rd(t,e,n);default:throw new $p(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return $d(t,e,n);case 2:return $o(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return $o(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return Rd(t,e,n);default:throw new $p(`The axis is not within the rank of the tensor ${s}`)}default:throw new $p(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function Od(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),ha(t,e)}function Fd(t,e){switch(t.rank){case 1:return pa([t,e]);case 2:return da([t,e],0);case 3:return fa([t,e],0);case 4:return ma([t,e],0);default:throw new $p(`concatAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}function Md(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new $p(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return Ea(t,e)}function Ld(t,e=0,n=1,s,r){return vo(t,e,n,s,r)}function zd(t,e,n,s){if(t.rank<2||e.rank<2)throw new Rp(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3&&t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new Rp(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${e.shape}`);if(2===t.rank&&2===e.rank)return pl({a:t,b:e,transposeA:!1,transposeB:!1,bias:s?Bd(t.rank,s,"channelsLast"):null,activation:n});{const r=t.shape.slice(),i=r.pop();t=t.reshape([-1,i]);const a=e.shape.slice(),o=a.pop(),l=a.pop(),u=[...a,o],c=Array.from({length:e.rank},((t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n));e=e.transpose(c).reshape([l,-1]);const h=[...r,...u];return pl({a:t,b:e,transposeA:!1,transposeB:!1,bias:s?Bd(t.rank,s,"channelsLast"):null,activation:n}).reshape(h)}}function Pd(t,e,n){return $i((()=>(e=Array.isArray(e)?Po(e,"int32"):e.toInt(),Oa(t,e,n))))}function Vd(t){return Ba(t,t)}function Bd(t,e,n){const s=e.shape;if(1!==e.rank&&e.rank!==t)throw new $p(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${t}`);if(5===t){if("channelsFirst"===n)return 1===s.length?e.reshape([1,s[0],1,1,1]):e.reshape([1,s[3],s[0],s[1],s[2]]);if("channelsLast"===n)return 1===s.length?e.reshape([1,1,1,1,s[0]]):e.reshape([1].concat(s))}else if(4===t){if("channelsFirst"===n)return 1===s.length?e.reshape([1,s[0],1,1]):e.reshape([1,s[2],s[0],s[1]]);if("channelsLast"===n)return 1===s.length?e.reshape([1,1,1,s[0]]):e.reshape([1].concat(s))}else if(3===t){if("channelsFirst"===n)return 1===s.length?e.reshape([1,s[0],1]):e.reshape([1,s[1],s[0]]);if("channelsLast"===n)return 1===s.length?e.reshape([1,1,s[0]]):e.reshape([1].concat(s))}else if(t<3)return e;throw new $p(`Unsupported input rank by biasAdd: ${e.rank}`)}function Wd(t,e,n){return $i((()=>(null==n&&(n="channelsLast"),md(n),t.add(Bd(t.rank,e,n)))))}function qd(t,e,n,s){return $i((()=>Ho(t,e,n,s)))}function Ud(t,e,n=!1){return n?t():e()}const Gd=["fanIn","fanOut","fanAvg"],jd=["normal","uniform","truncatedNormal"];class Hd extends Ii{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Xd extends Hd{apply(t,e){return ho(t,e)}}Xd.className="Zeros",Ni(Xd);class Kd extends Hd{apply(t,e){return po(t,e)}}Kd.className="Ones",Ni(Kd);class Yd extends Hd{constructor(t){if(super(),"object"!=typeof t)throw new $p(`Expected argument of type ConstantConfig but got ${t}`);if(void 0===t.value)throw new $p(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return $i((()=>Ba(Li(this.value),po(t,e))))}getConfig(){return{value:this.value}}}Yd.className="Constant",Ni(Yd);class Zd extends Hd{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return wo(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Zd.className="RandomUniform",Ni(Zd);class Qd extends Hd{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Rp(`randomNormal does not support dType ${e}.`);return Ld(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Qd.className="RandomNormal",Ni(Qd);class Jd extends Hd{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Rp(`truncatedNormal does not support dType ${e}.`);return Bo(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Jd.className="TruncatedNormal",Ni(Jd);class tf extends Hd{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return $i((()=>{if(2!==t.length||t[0]!==t[1])throw new $p("Identity matrix initializer can only be used for 2D square matrices.");return Ba(this.gain,$a(t[0]))}))}getConfig(){return{gain:this.gain}}}tf.className="Identity",Ni(tf);class ef extends Hd{constructor(t){if(super(),t.scale<0)throw new $p(`scale must be a positive float. Got: ${t.scale}`);var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,Xp(Gd,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){Xp(jd,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,s;if(md(e),2===t.length)n=t[0],s=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=Td(t,2);n=t[1]*e,s=t[0]*e}else if("channelsLast"===e){const e=Td(t,0,t.length-2);n=t[t.length-2]*e,s=t[t.length-1]*e}}else{const e=Td(t);n=Math.sqrt(e),s=Math.sqrt(e)}return[n,s]}(t),s=n[0],r=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,s):"fanOut"===this.mode?i/=Math.max(1,r):i/=Math.max(1,(s+r)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Rp(`${this.getClassName()} does not support dType ${e}.`);return Bo(t,0,n,e,this.seed)}{const n=Math.sqrt(3*i);return wo(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}ef.className="VarianceScaling",Ni(ef);class nf extends ef{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return ef.className}}nf.className="GlorotUniform",Ni(nf);class sf extends ef{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return ef.className}}sf.className="GlorotNormal",Ni(sf);class rf extends ef{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return ef.className}}rf.className="HeNormal",Ni(rf);class af extends ef{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return ef.className}}af.className="HeUniform",Ni(af);class of extends ef{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return ef.className}}of.className="LeCunNormal",Ni(of);class lf extends ef{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return ef.className}}lf.className="LeCunNormal",Ni(lf);class uf extends Hd{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new Rp("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return $i((()=>{if(t.length<2)throw new Rp("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=Ld(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=Yl.gramSchmidt(e);return t[0]>t[1]&&(n=n.transpose()),Ba(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}uf.className="Orthogonal",Ni(uf);const cf={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function hf(t,e={}){return Up(t,Ci.getMap().classNameMap,e,"initializer")}function pf(t){return Wp(t)}function df(t){if("string"==typeof t){const e=t in cf?cf[t]:t;if("GlorotNormal"===e)return new sf;if("GlorotUniform"===e)return new nf;if("HeNormal"===e)return new rf;if("HeUniform"===e)return new af;if("LeCunNormal"===e)return new of;if("LeCunUniform"===e)return new lf;{const t={};return t.className=e,t.config={},hf(t)}}return t instanceof Hd?t:hf(t)}let ff=0;function mf(){return ff++}const gf={};function yf(t=""){return t in gf||(gf[t]=0),gf[t]+=1,t+gf[t].toString()}function bf(t){return Array.isArray(t)&&Array.isArray(t[0])}function xf(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function vf(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new $p(`Expected Tensor length to be 1; got ${t.length}`);e=t[0]}else e=t;return e}function wf(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return t[0];throw new $p(`Expected exactly 1 Shape; got ${t.length}`)}return t}function _f(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce(((t,e)=>t*e));return e}const kf="Variable";class Tf{constructor(t,e="float32",n=kf,s=!0,r=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=mf(),n=null==n?kf:n,this.originalName=vd(n),this.name=wd(this.originalName),this.trainable_=s,this.constraint=r,this.val=function(t,e=!0,n,s){return sr.makeVariable(t,e,n,s)}(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function Sf(t){return t.map((t=>t.read()))}function If(t){t.forEach((t=>{t[0].write(t[1])}))}class Cf{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class Nf{constructor(t,e,n,s,r,i,a){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=a,this.id=mf(),null!=i&&(this.originalName=vd(i),this.name=wd(this.originalName)),this.rank=e.length}}let Af=0;class Ef{constructor(t,e){this.callArgs=e,this.id=Af++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const e of t.inboundLayers)null!=e&&e.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let $f=0;class Rf extends Ii{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=$f++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=Pp(t)+"_"+yf(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new Ep(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new $p(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return Lp(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return Lp(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Ap(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Ap(`Layer ${this.name} is not connected, no input to return.`);return Lp(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Ap(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Ap(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Lp(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((t=>t()))}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach((e=>e.trainable=t)),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((t=>t.trainable)):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((t=>!t.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=zp(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=zp(this.inputSpec);if(t.length!==e.length)throw new $p(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let n=0;n<t.length;n++){const s=t[n],r=e[n];if(null==r)continue;const i=s.rank;if(null!=r.ndim&&i!==r.ndim)throw new $p(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${i}`);if(null!=r.maxNDim&&i>r.maxNDim)throw new $p(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${i}`);if(null!=r.minNDim&&i<r.minNDim)throw new $p(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${i}.`);if(null!=r.dtype&&s.dtype!==r.dtype)throw new $p(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){const t=s.shape;for(const e in r.axes){const s=Number(e),i=r.axes[e],a=s>=0?t[s]:t[t.length+s];if(null!=i&&-1===[i,null].indexOf(a))throw new $p(`Input ${n} is incompatible with layer ${this.name}: expected axis ${s} of input shape to have value ${i} but got shape ${t}.`)}}if(null!=r.shape)for(let t=0;t<r.shape.length;++t){const e=r.shape[t],i=s.shape[t];if(null!=e&&null!=i&&e!==i)throw new $p(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=zp(t);let s=!0;for(const t of n)if(!(t instanceof Nf)){s=!1;break}let r=!0;for(const t of n)if(t instanceof Nf){r=!1;break}if(s===r)throw new $p("Arguments to apply() must be all SymbolicTensors or all Tensors");return xd(this.name,(()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of zp(t))e.push(n.shape);this.build(Lp(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(t),r){let s=this.call(t,e);const r=zp(s),i=[];for(let t of r)-1!==n.indexOf(t)&&(t=t.clone()),i.push(t);if(s=Lp(i),null!=this.activityRegularizer)throw new Rp("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}{const n=function(t){t=zp(t);const e=[];for(const n of t)e.push(n.shape);return Lp(e)}(t),s=this.computeOutputShape(n);let r;const i="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),r=null!=s&&s.length>0&&Array.isArray(s[0])?s.map(((n,s)=>new Nf(i,n,this,zp(t),e,this.name,s))):new Nf(i,s,this,zp(t),e,this.name),this.addInboundNode(t,r,null,null,n,s,e),this._refCount++,null!=this.activityRegularizer)throw new Rp("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach(((n,s)=>{null!=n&&null!=t[s]&&t[s]!==n&&(e=!0)})),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Ap(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new Ap(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Ep(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return _f(this.weights)}build(t){this.built=!0}getWeights(t=!1){return Sf(t?this.trainableWeights:this.weights)}setWeights(t){$i((()=>{const e=this.weights;if(e.length!==t.length)throw new $p(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],s=Sf(e);for(let r=0;r<s.length;++r){const i=s[r],a=e[r],o=t[r];if(!F(i.shape,o.shape))throw new $p(`Layer weight shape ${i.shape} not compatible with provided weight shape ${o.shape}`);n.push([a,o])}If(n)}))}addWeight(t,e,n,s,r,i,a){if(-1!==this._addedWeightNames.indexOf(t))throw new $p(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(s=df("zeros"));const o=s.apply(e,n),l=new Tf(o,n,t,i,a);return o.dispose(),null!=r&&this.addLoss((()=>r.apply(l.read()))),null==i&&(i=!0),i?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=zp(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach((t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return e}addInboundNode(t,e,n,s,r,i,a=null){const o=zp(t);e=zp(e),n=zp(n),s=zp(s),r=xf(r),i=xf(i);const l=[],u=[],c=[];for(const t of o)l.push(t.sourceLayer),u.push(t.nodeIndex),c.push(t.tensorIndex);new Ef({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:e,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:i},a);for(let t=0;t<e.length;t++)e[t].sourceLayer=this,e[t].nodeIndex=this.inboundNodes.length-1,e[t].tensorIndex=t}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach((t=>t.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function Df(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const s=Df(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of s)-1===e.indexOf(t)&&e.push(t)}return e}}}class Of extends Rf{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:yf("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new $p("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new $p("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new $p("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const s=new Nf(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new Ef({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new $p(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function Ff(t){if(null==t)return;const e=[],n=[],s=[];for(const r in t){const i=t[r];if("number"!=typeof i){const t=i;e.push(t.data()),n.push(r),s.push(t)}}if(e.length>0){const r=await Promise.all(e);for(let e=0;e<r.length;++e)t[n[e]]=r[e][0];Ri(s)}}function Mf(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}var Lf;Of.className="InputLayer",Ni(Of),function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(Lf||(Lf={}));class zf{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class Pf{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class Vf extends zf{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const t in e){const s=e[t];if("number"==typeof s)this.totals.hasOwnProperty(t)||(this.totals[t]=0),this.totals[t]=this.totals[t]+s*n;else{let e;t in this.totals?e=this.totals[t]:this.totals[t]=0;const r=$i((()=>Vi(this.totals[t],Ba(s,n))));this.totals[t]=r,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const t of this.params.metrics)null!=this.totals[t]&&("number"==typeof this.totals[t]?e[t]=this.totals[t]/this.seen:$i((()=>{const n=Ba(ka(1,this.seen),this.totals[t]);e[t]=n,this.totals[t].dispose(),Di(e[t])})))}}class Bf extends zf{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const t in e)null==this.history[t]&&(this.history[t]=[]),this.history[t].push(e[t])}async syncData(){const t=[],e=[],n=[];for(const s in this.history){const r=this.history[s];for(let i=0;i<r.length;++i)if("number"!=typeof r[i]){const a=r[i];t.push(a.data()),e.push(s),n.push(i)}}const s=await Promise.all(t);for(let t=0;t<s.length;++t)this.history[e[t]][n[t]].dispose(),this.history[e[t]][n[t]]=s[t][0]}}class Wf extends zf{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");K(this.yieldEvery)&&(this.maybeWait=function(t,e){let n,s=vs();return(...r)=>{const i=vs();return i-s<e||(s=i,n=t(...r)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const s=[];null!=this.yield&&(await Ff(n),s.push(this.yield(t,e,n))),s.push(ou()),await Promise.all(s)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await Ff(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await Ff(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(ou()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await Ff(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await Ff(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(ou()):K(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await Ff(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await Ff(t),await this.trainEnd(t))}}function qf(t,e){return null==t&&(t={}),t instanceof zf?[t]:Array.isArray(t)&&t[0]instanceof zf?t:zp(t).map((t=>new Wf(t,e)))}class Uf{constructor(){}static registerCallbackConstructor(t,e){E(t>=0&&Number.isInteger(t),(()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`)),Uf.checkForDuplicate(e),null==Uf.constructors[t]&&(Uf.constructors[t]=[]),Uf.constructors[t].push(e)}static checkForDuplicate(t){for(const e in Uf.constructors)Uf.constructors[+e].forEach((e=>{if(e===t)throw new $p("Duplicate callback constructor.")}))}static clear(){Uf.constructors={}}static createCallbacks(t){const e=[];for(const n in Uf.constructors){const s=+n;t>=s&&e.push(...Uf.constructors[s])}return e.map((t=>new t))}}function Gf(t,e,n,s,r,i,a,o,l){const u=new Bf,c=[new Vf,...Uf.createCallbacks(e)];null!=t&&c.push(...t),c.push(u);const h=new Pf(c);return h.setParams({epochs:n,initialEpoch:s,samples:r,steps:i,batchSize:a,verbose:e,doValidation:o,metrics:l}),{callbackList:h,history:u}}function jf(t,e={},n=!1){return Up(t,Ci.getMap().classNameMap,e,"layer",n)}function Hf(t,e){return $i((()=>{"float32"!==t.dtype&&(t=t.asType("float32"));const n=qa(Vd(t),e,!0),s=Ra(n.shape,Np()),r=Fo(Xa(n,s));return ka(t,r)}))}function Xf(t,e){return $i((()=>Ka(Vd(Wa(e,t)),-1)))}function Kf(t,e){return $i((()=>Ka(Pi(Wa(e,t)),-1)))}function Yf(t,e){return $i((()=>{const n=Wa(t,e),s=ca(Pi(t),Np(),Number.MAX_VALUE),r=Pi(ka(n,s));return Ba(100,Ka(r,-1))}))}function Zf(t,e,n=!1){return $i((()=>{if(n)e=Ro(e);else{const t=qa(e,e.shape.length-1,!0);e=ka(e,t)}return e=ca(e,Np(),1-Np()),lo(qa(Ba(t.toFloat(),za(e)),e.shape.length-1))}))}function Qf(t,e,n=!1){return $i((()=>{const s=Da(function(t){const e=[Td(t.shape)];return t.reshape(e)}(t)).toInt(),r=(e=ca(e,Np(),1-Np())).shape;return Zf(co(s,r[r.length-1]).reshape(r),e,n)}))}function Jf(t,e){return $i((()=>{let n;return n=ca(e,Np(),1-Np()),n=za(ka(n,Wa(1,n))),Ka(function(t,e){if(!F(t.shape,e.shape))throw new $p(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return $i((()=>{const n=e.relu(),s=e.abs().neg();return n.sub(e.mul(t)).add(s.exp().log1p())}))}(t,n),-1)}))}function tm(t,e){return $i((()=>{const n=Hf(t,-1),s=Hf(e,-1),r=Ba(n,s);return lo(qa(r,-1))}))}Uf.constructors={};const em={meanSquaredError:Xf,meanAbsoluteError:Kf,meanAbsolutePercentageError:Yf,meanSquaredLogarithmicError:function(t,e){return $i((()=>{const n=ca(e,Np(),Number.MAX_VALUE),s=za(Vi(1,n)),r=ca(t,Np(),Number.MAX_VALUE),i=za(Vi(1,r));return Ka(Vd(Wa(s,i)),-1)}))},squaredHinge:function(t,e){return $i((()=>{const n=Xa(0,Wa(1,Ba(t,e)));return Ka(Vd(n),-1)}))},hinge:function(t,e){return $i((()=>{const n=Xa(0,Wa(1,Ba(t,e)));return Ka(n,-1)}))},categoricalHinge:function(t,e){return $i((()=>{const n=qa(Ba(t,e),-1),s=Va(Ba(Wa(1,t),e),-1);return Xa(0,Vi(1,Wa(s,n)))}))},logcosh:function(t,e){return $i((()=>{const n=Math.log(2),s=Wa(e,t),r=Wa(Vi(s,Do(Ba(-2,s))),n);return Ka(r,-1)}))},categoricalCrossentropy:Zf,sparseCategoricalCrossentropy:Qf,binaryCrossentropy:Jf,kullbackLeiblerDivergence:function(t,e){return $i((()=>{const n=ca(t,Np(),1),s=ca(e,Np(),1);return qa(Ba(t,za(ka(n,s))),-1)}))},poisson:function(t,e){return $i((()=>{const n=za(Vi(Np(),e));return Ka(Wa(e,Ba(t,n)),-1)}))},cosineProximity:tm};function nm(t){if("string"==typeof t){if(t in em)return em[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new $p(e)}return t}function sm(t,e){return $i((()=>{const n=Ba(.5,fo(e)),s=Ad(Fa(e,n),t.dtype);return Ka(Na(t,s),-1)}))}function rm(t,e){return $i((()=>Ad(Na(qi(t,-1),qi(e,-1)),"float32")))}function im(t,e){return Jf(t,e)}function am(t,e){return t.rank===e.rank&&(t=t.squeeze([t.rank-1])),(e=e.argMax(-1)).dtype!==t.dtype&&(e=e.asType(t.dtype)),Na(t,e).asType("float32")}const om=Zf,lm=Qf,um={binaryAccuracy:sm,categoricalAccuracy:rm,precision:function(t,e){return $i((()=>{const n=function(t,e){return $i((()=>Ga(t.equal(1),e.equal(1)).sum().cast("float32")))}(t,e),s=function(t,e){return $i((()=>Ga(t.equal(0),e.equal(1)).sum().cast("float32")))}(t,e),r=n.add(s);return Uo(Fa(r,0),n.div(r),0).cast("float32")}))},categoricalCrossentropy:om,sparseCategoricalCrossentropy:lm,mse:Xf,MSE:Xf,mae:Kf,MAE:Kf,mape:Yf,MAPE:Yf,cosine:tm};function cm(t){if("string"==typeof t&&t in um)return um[t];if("string"!=typeof t&&null!=t)return t;throw new $p(`Unknown metric ${t}`)}function hm(t){if(Fp(null!==t,`Unknown LossOrMetricFn ${t}`),"string"==typeof t)return t;{let e;for(const n of Object.keys(em))if(em[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(um))if(um[n]===t){e=n;break}return void 0!==e?e:t.name}}function pm(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!dm(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function dm(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!=typeof n)return!1;if(!dm(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!dm(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function fm(t,e,n=console.log){let s="";for(let n=0;n<t.length;++n)n>0&&(s=s.slice(0,s.length-1)+" "),s+=t[n],s=s.slice(0,e[n]),s+=" ".repeat(e[n]-s.length);n(s)}function mm(t,e,n){let s;try{s=JSON.stringify(t.outputShape)}catch(t){s="multiple"}fm([`${t.name} (${t.getClassName()})`,s,t.countParams().toString()],e,n)}function gm(t,e,n,s){let r;try{r=JSON.stringify(t.outputShape)}catch(t){r="multiple"}const i=[];for(const e of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(e)))for(let t=0;t<e.inboundLayers.length;++t){const n=e.inboundLayers[t].name,s=e.nodeIndices[t],r=e.tensorIndices[t];i.push(`${n}[${s}][${r}]`)}const a=t.name,o=t.getClassName(),l=0===i.length?"":i[0];fm([`${a} (${o})`,r,t.countParams().toString(),l],e,s);for(let t=1;t<i.length;++t)fm(["","","",i[t]],e,s)}function ym(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function bm(t,e){if(null===t)return null;if("string"==typeof t)return Vp(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],s=t.length;for(let r=0;r<s;++r){const s=t[r];ym(e,r,s)?n.push(s):n.push(bm(s,e))}return n}{const e={};for(const n of Object.keys(t)){const s=t[n];if("name"===n&&"string"==typeof s)e[n]=s;else{const t=Vp(n);e[t]=bm(s,t)}}return e}}function xm(t,e){if(null==t)return null;if("string"==typeof t)return Pp(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],s=t.length;for(let r=0;r<s;++r){const s=t[r];ym(e,r,s)?n.push(s):n.push(xm(s,e))}return n}{const e={};for(const n of Object.keys(t)){const s=t[n];e[Pp(n)]="name"!==n&&"className"!==n||"string"!=typeof s?xm(s,n):s}return e}}const vm="3.3.0";class wm{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof wm)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new $p(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return Zr(e,t.dtype)}catch(n){throw new $p(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Nf){if(null==this.id2Value[t.id])throw new $p(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new $p(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof Nf){if(null==this.id2Value[t.id])throw new $p(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new $p(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&Ri(this.id2Mask)}}const _m={},km={};function Tm(t,e,n,s){const r=null!=n&&n.training,i=Array.isArray(t),a=i?t:[t],o=a.map((t=>t.name)),l=[],u=e.names();for(const t of o)-1!==u.indexOf(t)?l.push(e.getValue(t)):l.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const c=o.join(",")+"|"+e.names().join(",");let h,p;if(null==_m[c]){const t=function(t,e){E(null!=t&&t.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===t.length){const r=Im(t[0],e);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const i of t){const{sorted:t,recipientMap:a}=Im(i,e);for(const e of t)r.has(e.name)||(n.push(e),r.add(e.name));for(const t in a)null==s[t]&&(s[t]=new Set),a[t].forEach((e=>s[t].add(e)))}}return{sorted:n,recipientCounts:Sm(s)}}(a,e);h=t.sorted,p=t.recipientCounts,_m[c]=h,km[c]=p}h=_m[c],p={},r||Object.assign(p,km[c]);const d=new wm(e);for(let t=0;t<h.length;++t){if(null!=s){const t=Ei().numTensors;t>s.maxNumTensors&&(s.maxNumTensors=t),t<s.minNumTensors&&(s.minNumTensors=t)}const i=h[t],a=i.sourceLayer;if(a instanceof Of)continue;const u=[],c=[],f=[];let m=!1;for(const t of i.inputs){const n=d.getValue(t),s=d.getMask(t);u.push(n),c.push(s),null!=s&&(m=!0),r||(p[t.name]--,0!==p[t.name]||e.hasKey(t)||-1!==o.indexOf(t.name)||n.isDisposed||!0===t.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=zp(a.apply(u,n));let y=null;a.supportsMasking&&(y=a.computeMask(u,c));const b=Cm(i),x=Array.isArray(b)?b:[b];for(let t=0;t<x.length;++t){d.hasKey(x[t])||d.add(x[t],g[t],Array.isArray(y)?y[0]:y);const e=o.indexOf(x[t].name);-1!==e&&(l[e]=g[t])}r||Ri(f)}return d.disposeMasks(),i?l:l[0]}function Sm(t){const e={};for(const n in t)e[n]=t[n].size;return e}function Im(t,e){const n=new Set,s=[],r={};for(const t of e.names())n.add(t);const i=[],a=[];for(i.push(t);i.length>0;){const t=i[i.length-1];if(n.has(t.name)){i.pop();continue}const e=a[a.length-1]===i.length-1;if(0===t.inputs.length||e)i.pop(),s.push(t),n.add(t.name),e&&a.pop();else{a.push(i.length-1);for(const e of t.inputs)null==r[e.name]&&(r[e.name]=new Set),r[e.name].add(t.name),n.has(e.name)||i.push(e)}}return{sorted:s,recipientMap:r}}function Cm(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const s of t.sourceLayer.inboundNodes[e].outputTensors)if(s.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}class Nm extends Rf{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=yf(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],jp(this.inputs).length!==this.inputs.length)throw new $p(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((t=>t.name))}`);jp(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((t=>t.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const t of this.outputs){const e=t.sourceLayer,n=t.nodeIndex,s=t.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(s)}for(const t of this.inputs){const e=t.sourceLayer,n=t.nodeIndex,s=t.tensorIndex;Fp(0===n,"input layer has >1 nodes"),Fp(0===s,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(s)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e];if(!(n instanceof Of))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${e} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const t of this.outputLayers)this.outputNames.push(t.name);this.internalInputShapes=this.inputs.map((t=>t.shape)),this.internalOutputShapes=this.outputs.map((t=>t.shape));const e={},n={},s={},r={},i={},a=[],o=(t,e,n,s,r,l)=>{null!=s&&null!=r&&null!=l||(s=t.sourceLayer,r=t.nodeIndex,l=t.tensorIndex);const u=s.inboundNodes[r];if(-1!==n.indexOf(u))throw new Ep(`The tensor ${t.name} at layer "${s.name}" is part of a cycle.`);if(-1!==e.indexOf(u))return;this.containerNodes.add(Nm.nodeKey(s,r)),s.id in i||(i[s.id]=Object.keys(i).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let t=0;t<c;t++){const s=u.inputTensors[t],r=u.inboundLayers[t],i=u.nodeIndices[t],a=u.tensorIndices[t];o(s,e,n,r,i,a)}for(e.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);a.push(u)},l=[],u=[];for(const t of this.outputs)o(t,l,u);const c=a.slice().reverse();for(const t of c){n[t.id]=t,t.id in e||(e[t.id]=0);let i=e[t.id];const a=null==s[t.outboundLayer.id]?0:s[t.outboundLayer.id];i=Math.max(i,a),s[t.outboundLayer.id]=i,r[t.outboundLayer.id]=t.outboundLayer,e[t.id]=i;for(let s=0;s<t.inboundLayers.length;s++){const r=t.inboundLayers[s],a=t.nodeIndices[s],o=r.inboundNodes[a],l=null==e[o.id]?0:e[o.id];e[o.id]=Math.max(i+1,l),n[o.id]=o}}const h={};for(const t in e){const s=e[t];s in h||(h[s]=[]),h[s].push(n[t])}const p={};for(const t in s){const e=s[t];e in p||(p[e]=[]),p[e].push(r[t])}let d=Object.keys(p).map((t=>parseInt(t,10))).sort(Gp);this.layers=[];for(const t of d){const e=p[t];e.sort(((t,e)=>{const n=i[t.id],s=i[e.id];return n<s?-1:n>s?1:0}));for(const t of e)t instanceof Nm&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=p,d=Object.keys(h).map((t=>parseInt(t,10))).sort(Gp);const f=this.inputs.slice(),m=[];for(const t of d)for(const e of h[t]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new Ep(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${m}`);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=h;const g=this.layers.map((t=>t.name));for(const t of g){const e=g.filter((e=>e===t)).length;if(1!==e)throw new Ep(`The name "${t}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Ef({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((t=>null)),outputMasks:this.outputs.map((t=>null)),inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs.map((t=>t.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach((e=>{e._trainableWeights.forEach((e=>e.trainable=t))})),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new $p("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let s=0;for(const t of this.layers)for(const e of t.weights){if(null!=n[e.originalName])throw new $p(`Duplicate weight name: ${e.originalName}`);n[e.originalName]=e,s++}const r=[];for(const s in t){let i=s;if(null==n[s]){const t=s.split("/");i=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[i])r.push([n[i],t[s]]);else if(e)throw new $p(`Provided weight data has no target variable: ${s}`);delete n[i]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new $p(`${t.length} of ${s} weights are not set: ${t}`)}If(r)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${vm}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=xm(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return $i((()=>{t=zp(t);const n=new wm;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return Tm(this.outputs,n,e)}))}computeMask(t,e){return $i((()=>{let n;return t=zp(t),n=null==e?Op(null,t.length):zp(e),this.runInternalGraph(t,n)[1]}))}computeOutputShape(t){const e=xf(t);if(e.length!==this.inputLayers.length)throw new $p(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let t=0;t<e.length;t++){const s=this.inputLayers[t],r=e[t];n[s.name+"_0_0"]=r}const s=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(Gp);if(s.length>1)for(const t of s){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((t=>t.id)).indexOf(e.id))continue;const s=[];for(let e=0;e<t.inboundLayers.length;e++){const r=t.inboundLayers[e],i=t.nodeIndices[e],a=t.tensorIndices[e],o=n[`${r.name}_${i}_${a}`];s.push(o)}const r=xf(e.computeOutputShape(Lp(s))),i=e.inboundNodes.indexOf(t);for(let t=0;t<r.length;t++)n[`${e.name}_${i}_${t}`]=r[t]}}const r=[],i=[];for(let t=0;t<this.outputLayers.length;t++){const e=this.outputLayers[t],n=this.outputLayersNodeIndices[t],s=this.outputLayersTensorIndices[t],r=`${e.name}_${n}_${s}`;i.push(r)}for(let t=0;t<i.length;t++){const e=i[t];Fp(e in n),r.push(n[e])}return Lp(r)}runInternalGraph(t,e){null==e&&(e=Op(null,t.length));const n={};for(let s=0;s<this.inputs.length;++s){const r=this.inputs[s],i=t[s],a=e[s];n[r.id]=[i,a]}const s=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(Gp);for(const t of s){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer,s=t.inputTensors,r=t.outputTensors,i=new Array;for(const t of s)t.id in n&&i.push(n[t.id]);if(i.length===s.length){let s,a,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===i.length){const[t,n]=i[0];null==u.mask&&(u.mask=n),o=zp(e.call(t,u)),l=zp(e.computeMask(t,n)),s=[t],a=[n]}else s=i.map((t=>t[0])),a=i.map((t=>t[1])),null==u.mask&&(u.mask=a),o=zp(e.call(s,u)),l=zp(e.computeMask(s,a));if(e.activityRegularizer)throw new Rp("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<r.length;++t){const e=r[t],s=o[t],i=l[t];n[e.id]=[s,i]}}}}const r=[],i=[],a=[];for(const t of this.outputs){Fp(t.id in n,`Could not compute output ${t.name} : ${t.id}`);const[e,s]=n[t.id];a.push(e.shape),r.push(e),i.push(s)}return[r,i,a]}buildNodeConversionMap(t){const e={};let n;for(const t of this.layers){n=t instanceof Nm?1:0;for(let s=0;s<t.inboundNodes.length;s++){const r=Nm.nodeKey(t,s);this.containerNodes.has(r)&&(e[r]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new $p(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new $p("Provide either a layer name or layer index");for(const e of this.layers)if(e.name===t)return e;throw new $p(`No such layer: ${t}`)}calculateLosses(){return $i((()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const s=Nm.nodeKey(e,n);this.containerNodes.has(s)&&t.push(...e.calculateLosses())}return t}))}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const t of this.layers){const s=t.getClassName(),r=t.getConfig(),i=[];for(let n=0;n<t.inboundNodes.length;n++){const s=t.inboundNodes[n],r=Nm.nodeKey(t,n);let a={};if(this.containerNodes.has(r)){if(s.callArgs)try{JSON.stringify(s.callArgs),a=s.callArgs}catch(e){console.warn(`Layer ${t.name} was passed non-serializable keyword arguments: ${s.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),a={}}if(s.inboundLayers.length>0){const t=[];for(let n=0;n<s.inboundLayers.length;n++){const r=s.inboundLayers[n],i=s.nodeIndices[n],o=s.tensorIndices[n];let l=e[Nm.nodeKey(r,i)];null==l&&(l=0),t.push([r.name,l,o,a])}i.push(t)}}}const a={};a.name=t.name,a.className=s,a.config=r,a.inboundNodes=i,n.push(a)}t.layers=n;const s=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t],r=this.inputLayersNodeIndices[t],i=Nm.nodeKey(n,r);if(!this.containerNodes.has(i))continue;let a=e[i];null==a&&(a=0);const o=this.inputLayersTensorIndices[t];s.push([n.name,a,o])}t.inputLayers=s;const r=[];for(let t=0;t<this.outputLayers.length;t++){const n=this.outputLayers[t],s=this.outputLayersNodeIndices[t],i=Nm.nodeKey(n,s);if(!this.containerNodes.has(i))continue;let a=e[i];null==a&&(a=0);const o=this.outputLayersTensorIndices[t];r.push([n.name,a,o])}return t.outputLayers=r,t}static fromConfig(t,e,n={},s=!1){const r={},i={};function a(t,e){t.name in i?i[t.name].push(e):i[t.name]=[e]}function o(t,e){const n=[];let s;for(const i of e){const o=i[0],l=i[1],u=i[2];if(s=null==i[3]?{}:i[3],!(o in r))return void a(t,e);const c=r[o];if(c.inboundNodes.length<=l)return void a(t,e);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&t.apply(Lp(n),s)}function l(t){const n=t.name,i=jf(t,null!=e.customObjects?e.customObjects:{});i.setFastWeightInitDuringBuild(s),r[n]=i,t.inboundNodes.forEach((t=>{if(!(t instanceof Array))throw new $p(`Corrupted configuration, expected array for nodeData: ${t}`);a(i,t)}))}const u=e.name,c=e.layers;for(const t of c)l(t);for(;!Hp(i);)for(const t of c){const e=r[t.name];if(e.name in i){const t=i[e.name];delete i[e.name];for(const n of t)o(e,n)}}const h=[],p=[],d=e.inputLayers;for(const t of d){const e=t[0],n=t[1],s=t[2];Fp(e in r);const i=r[e].inboundNodes[n].outputTensors;h.push(i[s])}const f=e.outputLayers;for(const t of f){const e=t[0],n=t[1],s=t[2];Fp(e in r);const i=r[e].inboundNodes[n].outputTensors;p.push(i[s])}return new t({inputs:h,outputs:p,name:u})}get stateful(){if(this._stateful)throw new $p("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){$i((()=>{this.layers.forEach((t=>{t.stateful&&t.resetStates()}))}))}}function Am(t,e){return function(t,e,n){const s=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>null));if(1===s)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==s)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach((e=>{e in t?n.push(t[e]):n.push(null)})),n}throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}(t,e,"classWeight")}async function Em(t,e,n,s){if(null!=e||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=$i((()=>{if(1===t.shape.length)return t.clone();if(2===t.shape.length){if(t.shape[1]>1){const e=1;return t.argMax(e)}if(1===t.shape[1])return t.reshape([t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),s=Array.from(await e.data());Ri(e);const r=[];return s.forEach((t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);r.push(n[t])})),Po(r,"float32")}return null}function $m(t,e){return Ba(t,e)}function Rm(t,e){let n,s;const r=e;n=r.xs,s=r.ys,E(null!=n&&null!=s,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`));const i=Dm("input",t.inputNames,n),a=Dm("output",t.outputNames,s),o=i[0].shape[0];E(i.length===t.inputs.length,(()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`)),E(a.length===t.outputs.length,(()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`));for(let e=0;e<i.length;e++)E(i[e].shape[0]===o,(()=>`Batch size mismatch: input ${t.inputNames[e]} has ${i[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));for(let e=0;e<a.length;e++)E(a[e].shape[0]===o,(()=>`Batch size mismatch: output ${t.outputNames[e]} has ${a[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));return{xs:i,ys:a}}function Dm(t,e,n){if(n instanceof zs)return[n];if(Array.isArray(n))return E(n.length===e.length,(()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`)),n;{const s=[];for(const r of e){if(null==n[r])throw new $p(`The feature data generated by the dataset lacks the required ${t} key '${r}'.`);s.push(n[r])}return s}}function Om(t){return"function"==typeof t.iterator}function Fm(t){E(t>0&&Number.isInteger(t),(()=>`batchSize is required to be a positive integer, but got ${t}`))}function Mm(t,e,n){return null==t?[null]:Array.isArray(t)?t.map((t=>$d(t,e,n-e))):$d(t,e,n-e)}function Lm(t,e){return $i((()=>null==t?null:Array.isArray(t)?t.map((t=>Lm(t,e))):Pd(t,"int32"===e.dtype?e:e.toInt())))}function zm(t,e){const n=[];let s=0,r=null;for(;s<t;)r=s+e,r>=t&&(r=t),n.push([s,r]),s=r;return n}function Pm(t){const e=[];t instanceof zs&&(t=[t]);for(let n=0;n<t.length;++n){const s=t[n];if(1===s.rank)e.push(Ed(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function Vm(t,e){if(null==t)return;const n=[];if(e instanceof zs)n.push(e.id);else if(Array.isArray(e))e.forEach((t=>n.push(t.id)));else if(null!=e)for(const t in e){const s=e[t];n.push(s.id)}const s=[];if(t instanceof zs)-1===n.indexOf(t.id)&&s.push(t);else if(Array.isArray(t))t.forEach((t=>{-1===n.indexOf(t.id)&&s.push(t)}));else if(null!=t)for(const e in t){const r=t[e];-1===n.indexOf(r.id)&&s.push(r)}s.forEach((t=>{t.isDisposed||t.dispose()}))}function Bm(t){return Array.isArray(t)}function Wm(t){return!function(t){return t instanceof zs}(t)&&!Bm(t)}function qm(t,e,n,s=!0,r=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(Bm(t)&&t.length>0)e=!0;else if(Wm(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new $p(`Error when checking model ${r} expected no data, but got ${t}`)}return[]}if(null==t)return e.map((t=>null));let i;if(Wm(t)){i=[];for(const n of e){if(null==t[n])throw new $p(`No data provided for "${n}". Need data for each key in: ${e}`);i.push(t[n])}}else if(Bm(t)){if(t.length!==e.length)throw new $p(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);i=t}else{if(e.length>1)throw new $p(`The model ${r} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);i=[t]}if(i=Pm(i),null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const a=i[t];if(a.shape.length!==n[t].length)throw new $p(`Error when checking ${r}: expected ${e[t]} to have ${n[t].length} dimension(s). but got array with shape ${a.shape}`);for(let i=0;i<n[t].length;++i){if(0===i&&!s)continue;const o=a.shape[i],l=n[t][i];if(null!=l&&l>=0&&o!==l)throw new $p(`Error when checking ${r}: expected ${e[t]} to have shape [${n[t]}], but got array with shape [${a.shape}].`)}}return i}function Um(t,e,n,s=!0,r=""){let i;if(Array.isArray(t)){if(t.length!==e.length)throw new $p(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);i=t}else{if(e.length>1)throw new $p(`The model expects ${e.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);i=[t]}if(null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const a=i[t];if(a.shape.length!==n[t].length)throw new $p(`Error when checking ${r}: expected ${e[t]} to have ${n[t].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let i=0;i<n[t].length;++i){if(0===i&&!s)continue;const o=a.shape[i],l=n[t][i];if(null!=l&&l!==o)throw new $p(`Error when checking ${r}: expected ${e[t]} to have shape ${JSON.stringify(n[t])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}class Gm extends Nm{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new $p("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(t,e,n,s=console.log){const r=function(t){let e=!0;const n=[],s=[];for(const e in t.nodesByDepth)n.push(t.nodesByDepth[e]);for(const t of n){if(t.length>1||1===t.length&&t[0].inboundLayers.length>1){e=!1;break}s.push(...t)}if(e)for(const n of t.layers){let t=!1;for(const r of n.inboundNodes)if(-1!==s.indexOf(r)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),i=["Layer (type)","Output shape","Param #"];let a;if(r?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((t=>Math.floor(e*t)))),!r){i.push("Receives inputs"),a=[];for(const e in t.nodesByDepth)a.push(...t.nodesByDepth[e])}s("_".repeat(e)),fm(i,n,s),s("=".repeat(e));const o=t.layers;for(let t=0;t<o.length;++t)r?mm(o[t],n,s):gm(o[t],n,a,s),s((t===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const l=function(t){let e;return e=null!=t.collectedTrainableWeights?_f(t.collectedTrainableWeights):_f(t.trainableWeights),e}(t),u=_f(t.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(e))}(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>iu.adagrad(.01),Adadelta:()=>iu.adadelta(1,.95,Np()),Adam:()=>iu.adam(.001,.9,.999,Np()),Adamax:()=>iu.adamax(.002,.9,.999,Np(),0),RMSProp:()=>iu.rmsprop(.001,.9,0,Np()),SGD:()=>iu.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new $p(`Unknown Optimizer ${t}`)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof zi))throw new $p("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new $p(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map((t=>nm(t)))}else{const n=nm(t.loss);this.outputs.forEach((t=>{e.push(n)}))}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new $p(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(nm(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let t=0;t<this.outputs.length;++t){const e=this.internalOutputShapes[t],n=this.outputNames[t];this.feedOutputNames.push(n),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[t])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],xd("loss",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}}));const s=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>[]));let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);n=t}if(Array.isArray(n))return e.map((t=>n));{const t=[];for(const s of e){let e=n.hasOwnProperty(s)?n[s]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),r=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};xd("metric",(()=>{for(let t=0;t<this.outputs.length;++t)-1===n.indexOf(t)&&(e=>{let n,s,i;for(const a of e){if("string"==typeof a&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(a)){const e=this.internalOutputShapes[t];let r;1===e[e.length-1]||this.lossFunctions[t]===Jf?-1!==["accuracy","acc"].indexOf(a)?s=sm:-1!==["crossentropy","ce"].indexOf(a)&&(s=im):this.lossFunctions[t]===Qf?-1!==["accuracy","acc"].indexOf(a)?s=am:-1!==["crossentropy","ce"].indexOf(a)&&(s=lm):-1!==["accuracy","acc"].indexOf(a)?s=rm:-1!==["crossentropy","ce"].indexOf(a)&&(s=om),-1!==["accuracy","acc"].indexOf(a)?r="acc":-1!==["crossentropy","ce"].indexOf(a)&&(r="ce"),i=s,n=""+r}else{const t=cm(a);i=t,n=""+hm(a)}let e;xd(n,(()=>{e=i})),r(t,n,e)}})(s[t])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const s=null==n.batchSize?32:n.batchSize;Fm(s);const r=this.standardizeUserDataXY(t,e,!0,s);try{const t=r[0].concat(r[1]);this.makeTestFunction();const e=this.testFunction;return Lp(this.testLoop(e,t,s,n.verbose,n.steps))}finally{Vm(r[0],t),Vm(r[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const s=null!=(n=n||{}).batches,r=t.testFunction;let i=[];if(n.verbose>0)throw new Rp("Verbose mode is not implemented yet.");E(!s||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const a="function"==typeof e.next?e:await e.iterator();let o=0,l=0;for(;!s||l<n.batches;){const e=await a.next();if(i=$i((()=>{if(e.value){const{xs:n,ys:s}=Rm(t,e.value),a=n.concat(s),u=$i((()=>r(a)));if(Ri(a),0===l)for(let t=0;t<u.length;++t)i.push(Li(0));const c=a[0].shape[0];for(let t=0;t<u.length;++t){const e=u[t],n=i[t];i[t]=$i((()=>Vi(i[t],Ba(c,e)))),l>0&&Ri(n)}Ri(u),o+=c,++l}return i})),e.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let t=0;t<i.length;++t){const e=i[t];i[t]=ka(i[t],o),Ri(e)}return Lp(i)}(this,t,e)}checkNumSamples(t,e,n,s="steps"){let r;if(null!=n){if(r=null,null!=e)throw new $p(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else{if(null==t)throw new $p(`Either the input data should have a defined shape, or ${s} shoud be specified.`);r=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return r}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new $p("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),s=n?e:[e],r=this.retrieveSymbolicTensors(s),i=new wm;if(t instanceof zs&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new $p(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)i.add(this.inputs[e],t[e])}else for(const e of this.inputs){const n=t[e.name];if(null==n)throw new $p(`No value is provided for the model's input ${e.name}`);i.add(e,n)}const a=Tm(r,i);return n?a:a[0]}retrieveSymbolicTensors(t){const e=Op(null,t.length);let n=t.length;for(const s of this.layers){const r=Array.isArray(s.output)?s.output:[s.output],i=r.map((t=>t.name));for(let s=0;s<t.length;++s){const a=i.indexOf(t[s]);if(-1!==a&&(e[s]=r[a],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach(((e,s)=>{null==e&&n.push(t[s])})),new $p(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return e}predictLoop(t,e=32,n=!1){return $i((()=>{const s=this.checkNumSamples(t);if(n)throw new Rp("Verbose predictLoop() is not implemented yet.");const r=zm(s,e),i=this.outputs.map((t=>[]));for(let e=0;e<r.length;++e)$i((()=>{const n=r[e][0],s=r[e][1],i=Mm(t,n,s),a=[];if(Array.isArray(i))for(let t=0;t<i.length;++t)a.push({key:this.inputs[t],value:i[t]});else a.push({key:this.inputs[0],value:i});const o=new wm(a);return Tm(this.outputs,o)})).forEach(((t,e)=>i[e].push(t)));return Lp(i.map((t=>ha(t,0))))}))}predict(t,e={}){const n=Pm(t);Um(n,this.inputNames,this.feedInputShapes,!1);try{const t=null==e.batchSize?32:e.batchSize;return Fm(t),this.predictLoop(n,t)}finally{Vm(n,t)}}predictOnBatch(t){Um(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,s){if(null==this.optimizer_)throw new Ep("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let t=0;t<this.feedOutputShapes.length;++t){const e=this.feedOutputShapes[t];this.feedLossFns[t]===Qf?r.push(e.slice(0,e.length-1).concat([1])):r.push(e)}if(function(t,e,n){const s=jp(t.map((t=>t.shape[0])));s.sort();const r=jp(e.map((t=>t.shape[0])));if(r.sort(),s.length>1)throw new $p(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((t=>t.shape)))}`);if(r.length>1)throw new $p(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((t=>t.shape)))}`);if(s.length>0&&r.length>0&&!F(s,r))throw new $p(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}(t=qm(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=qm(e,this.feedOutputNames,r,!1,"target")),function(t,e,n){const s=[Xf,Jf,Zf];for(let r=0;r<t.length;++r){const i=t[r],a=e[r],o=n[r];if(null!=a){if(a===Zf&&1===i.shape[i.shape.length-1])throw new $p(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(a)){const t=i.shape.slice(1),e=o.slice(1);for(let n=0;n<t.length;++n){const s=t[n],r=e[n];if(null!=r&&s!==r)throw new $p(`A target Tensor with shape ${i.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=s&&s>0&&t[0].shape[0]%s!=0)throw new $p(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,s,r=!0,i){const[a,o]=this.standardizeUserDataXY(t,e,r,i);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=s){const t=Am(s,this.outputNames);l=[];for(let e=0;e<t.length;++e)l.push(await Em(o[e],null,t[e]))}return[a,o,l]}testLoop(t,e,n,s=0,r){return $i((()=>{const i=this.checkNumSamples(e,n,r,"steps"),a=[];if(s>0)throw new Rp("Verbose mode is not implemented yet.");if(null!=r)throw new Rp("steps mode in testLoop() is not implemented yet");{const s=zm(i,n),r=Po(Nd(0,i));for(let n=0;n<s.length;++n){const i=s[n][0],o=s[n][1],l=$d(r,i,o-i),u=Lm(e,l),c=t(u);if(0===n)for(let t=0;t<c.length;++t)a.push(Li(0));for(let t=0;t<c.length;++t){const e=c[t];a[t]=Vi(a[t],Ba(o-i,e))}}for(let t=0;t<a.length;++t)a[t]=ka(a[t],i)}return a}))}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const s=t[n];let r=s;Mp(t,s)>1&&(r+=`_${Mp(t.slice(0,n),s)}`),e.push(r)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],a=this.collectedTrainableWeights.map((t=>t.read()));return[this.optimizer_.minimize((()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const a=new wm(t),o=Tm(this.outputs,a,{training:!0});let l;for(let t=0;t<this.lossFunctions.length;++t){let n=(0,this.lossFunctions[t])(s[t],o[t]);null!=r[t]&&(n=$m(n,r[t]));const i=Ka(n);e.push(i),l=0===t?n:Vi(l,n)}for(let t=0;t<this.metricsTensors.length;++t){let n;if(this.outputs.length>1&&t<this.outputs.length)n=e[t];else{const e=this.metricsTensors[t][0],r=this.metricsTensors[t][1];n=Ka(e(s[r],o[r]))}Di(n),i.push(n)}return l=Ka(l),this.calculateLosses().forEach((t=>{l=Vi(l,t)})),l}),!0,a)].concat(i)}}makeTestFunction(){this.testFunction=t=>$i((()=>{const e=[];let n;const s=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let t=0;t<this.inputs.length;++t)i.push({key:this.inputs[t],value:s[t]});const a=new wm(i),o=Tm(this.outputs,a);for(let t=0;t<this.lossFunctions.length;++t){const s=this.lossFunctions[t],i=Ka(s(r[t],o[t]));n=0===t?i:Vi(n,i),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],s=this.metricsTensors[t][1],i=Ka(n(r[s],o[s]));e.push(i)}return e}))}async fit(t,e,n={}){return async function(t,e,n,s={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,i,a,o,l,u,c;t.isTraining=!0;try{const h=null==s.batchSize?32:s.batchSize;Fm(h);const p=!1,d=await t.standardizeUserData(e,n,s.sampleWeight,s.classWeight,p,h);r=d[0],i=d[1],c=d[2];let f,m=!1;if(null!=s.validationData&&s.validationData.length>0){if(m=!0,2!==s.validationData.length)throw 3===s.validationData.length?new Rp("validationData including sample weights is not supported yet."):new $p(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);a=s.validationData[0],o=s.validationData[1];const e=!0,n=await t.standardizeUserData(a,o,null,null,e,h);l=n[0],u=n[1],f=l.concat(u)}else if(null!=s.validationSplit&&s.validationSplit>0&&s.validationSplit<1){m=!0;const t=Math.floor(r[0].shape[0]*(1-s.validationSplit)),e=r[0].shape[0];l=Mm(r,t,e),r=Mm(r,0,t),u=Mm(i,t,e),i=Mm(i,0,t),f=l.concat(u)}else null!=s.validationSteps&&(m=!0);const g=r.concat(i).concat(c);t.checkTrainableWeightsConsistency();const y=t.makeTrainFunction(),b=t.getDedupedMetricsNames();let x,v;m?(t.makeTestFunction(),x=t.testFunction,v=b.slice().concat(b.map((t=>"val_"+t)))):(x=null,f=[],v=b.slice());const w=qf(s.callbacks,s.yieldEvery),_=await async function(t,e,n,s,r,i,a,o,l,u,c,h,p,d,f){null==r&&(r=32),null==i&&(i=1),null==c&&(c=!0),null==p&&(p=0);let m=!1;null!=l&&null!=u&&(m=!0);const g=t.checkNumSamples(n,r,d,"steps_per_epoch");let y;null!=g&&(y=Nd(0,g)),null==a&&(a=1);const{callbackList:b,history:x}=Gf(o,a,i,p,g,d,r,m,h);b.setModel(t),t.history=x,await b.onTrainBegin(),t.stopTraining_=!1;for(let a=p;a<i;++a){await b.onEpochBegin(a);const i={};{if("batch"===c)throw new Rp("batch shuffling is not implemneted yet");c&&C(y);const a=Po(y),o=zm(g,r);for(let c=0;c<o.length;++c){const h={};if(await b.onBatchBegin(c,h),$i((()=>{const p=o[c][0],d=o[c][1],f=$d(a,p,d-p);h.batch=c,h.size=d-p;const g=Lm(n,f),y=e(g);for(let t=0;t<s.length;++t){const e=s[t],n=y[t];h[e]=n,Di(n)}if(c===o.length-1&&m){const e=t.testLoop(l,u,r);for(let t=0;t<s.length;++t){const n=s[t],r=e[t];Di(r),i["val_"+n]=r}}})),await b.onBatchEnd(c,h),Mf(h),t.stopTraining_)break}a.dispose()}if(await b.onEpochEnd(a,i),t.stopTraining_)break}return await b.onTrainEnd(),await t.history.syncData(),t.history}(t,y,g,b,h,s.epochs,s.verbose,w,x,f,s.shuffle,v,s.initialEpoch,null);return _}finally{t.isTraining=!1,Vm(r,e),Vm(i,n),Vm(l,a),Vm(u,o),null!=c&&Ri(c)}}(this,t,e,n)}async fitDataset(t,e){return async function(t,e,n){const s=null!=n.batchesPerEpoch;if(E(null!=t.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),E(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),E(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),E(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),E(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const r=null!=n.validationData;let i,a;if(r)if(Om(n.validationData))E(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const t=function(t){if(3===t.length)throw new Rp("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);i=t.xs,a=t.ys}const o=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let u;u=r?l.slice().concat(l.map((t=>"val_"+t))):l.slice();const c=qf(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:d}=Gf(c,h,n.epochs,null,null,function(t,e){let n=null;return null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size),n}(e,n),null,r,u);p.setModel(t),t.history=d,await p.onTrainBegin(),t.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await e.iterator();for(;f<n.epochs;){const u={};await p.onEpochBegin(f);let c=0,h=0;for(s||(m=await e.iterator());!s||c<n.batchesPerEpoch;){const e=await m.next();if(s&&e.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:s,ys:r}=Rm(t,e.value),i={};i.batch=h,i.size=s[0].shape[0],await p.onBatchBegin(h,i);const a=[];if(null!=n.classWeight){const e=Am(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)a.push(await Em(r[t],null,e[t]))}const u=s.concat(r).concat(a),d=o(u);Ri(u);for(let t=0;t<l.length;++t){const e=l[t],n=d[t];i[e]=n,Di(n)}await p.onBatchEnd(h,i),Mf(i),h++,c++}if(s?c>=n.batchesPerEpoch:e.done){if(r){let e;e=Om(n.validationData)?zp(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):zp(t.evaluate(i,a,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)u[`val_${t.metricsNames[n]}`]=e[n]}break}if(t.stopTraining_)break}if(await p.onEpochEnd(f,u),f++,t.stopTraining_)break}return await p.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),s=n[0],r=n[1],i=this.makeTrainFunction()(s.concat(r)),a=[];for(const t of i){const e=await t.data();a.push(e[0])}return Ri(i),Lp(a)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let t=0;t<s.length;++t)n&&!s[t].trainable||e.push({name:s[t].originalName,tensor:r[t]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=Ei().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-Ei().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=Pp(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map((t=>Pp(t)))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const s of e){if("string"!=typeof n[s])throw new Error("Serialization of non-string loss is not supported.");t[s]=Pp(n[s])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Pp(hm(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((t=>Pp(hm(t))));{const t={};for(const e in this.metrics)t[e]=Pp(hm(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=jf(bm(t.optimizer_config));let n,s;if("string"==typeof t.loss)n=Vp(t.loss);else if(Array.isArray(t.loss))n=t.loss.map((t=>Vp(t)));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=Vp(t.loss[e])}if(Array.isArray(t.metrics))s=t.metrics.map((t=>Vp(t)));else if(null!=t.metrics){s={};for(const e in t.metrics)s[e]=Vp(t.metrics[e])}this.compile({loss:n,metrics:s,optimizer:e})}async save(t,e){if("string"==typeof t){const e=Ir(t);if(0===e.length)throw new $p(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new $p(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new $p("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await br(this.getNamedWeights(e)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${vm}`,convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:r}=await br(await this.optimizer.getWeights(),t);n.specs.push(...r),n.data=_r([n.data,e])}if(null!=this.userDefinedMetadata){const t=!0;pm(this.userDefinedMetadata,this.name,t),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=n.data,s.weightSpecs=n.specs,t.save(s)}setUserDefinedMetadata(t){pm(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Gm.className="Model",Ni(Gm);class jm extends Gm{}jm.className="Functional",Ni(jm);class Hm extends Gm{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:yf("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some((t=>t<0)))throw new $p(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof Hm||t instanceof Gm;let n;if(e){if(n=t,1!==n.outputs.length)throw new $p("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new $p("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new $p("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=function(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new $p("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new Of({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new $p(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new $p("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=Df(this.outputs[0])}this.inboundNodes=[],new Ef({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Op(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(wf(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Gm({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new Ep("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new Ep("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new Ep("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new Ep("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},s=!1){let r,i={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new $p("Legacy serialization format not supported yet.");r=e}else E(null!=e.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),r=e.layers,delete e.layers,i=e;const a=new t(i);if(!(a instanceof Hm))throw new Rp(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const t of r){const e=jf(t,void 0,s);s&&e.setFastWeightInitDuringBuild(!0),a.add(e)}return a}set stopTraining(t){if(null==this.model)throw new $p("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new $p("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}Hm.className="Sequential",Ni(Hm);class Xm extends Ii{getConfig(){return{}}}class Km extends Xm{apply(t,e=1){return function(t,e=1){if(1!==e)throw new Rp(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return Ta(t)}(t,e)}}Km.className="elu",Ni(Km);class Ym extends Xm{apply(t){return To(t)}}Ym.className="selu",Ni(Ym);class Zm extends Xm{apply(t){return _o(t)}}Zm.className="relu",Ni(Zm);class Qm extends Xm{apply(t){return $i((()=>Za(6,_o(t))))}}Qm.className="relu6",Ni(Qm);class Jm extends Xm{apply(t){return t}}Jm.className="linear",Ni(Jm);class tg extends Xm{apply(t){return Io(t)}}tg.className="sigmoid",Ni(tg);class eg extends Xm{apply(t){return function(t){return $i((()=>{const e=Vi(.5,Ba(.2,t));return ca(e,0,1)}))}(t)}}eg.className="hardSigmoid",Ni(eg);class ng extends Xm{apply(t){return Do(t)}}ng.className="softplus",Ni(ng);class sg extends Xm{apply(t){return function(t){return $i((()=>ka(t,Pi(t).add(1))))}(t)}}sg.className="softsign",Ni(sg);class rg extends Xm{apply(t){return zo(t)}}rg.className="tanh",Ni(rg);class ig extends Xm{apply(t,e=-1){return Ro(t,e)}}ig.className="softmax",Ni(ig);class ag extends Xm{apply(t,e=-1){return Ua(t,e)}}ag.className="logSoftmax",Ni(ag);class og extends Xm{apply(t,e=1){return $i((()=>Io(t.mul(e)).mul(t)))}}function lg(t){return t.getClassName()}function ug(t,e={}){return Up(t,Ci.getMap().classNameMap,e,"activation")}function cg(t){if(null==t){return ug({className:"linear",config:{}})}if("string"==typeof t){const e={};return e.className=t,e.config={},ug(e)}return t instanceof Xm?t:ug(t)}og.className="swish",Ni(og);class hg extends Ii{}class pg extends hg{constructor(t){super(),function(t){if(null!=t&&"object"!=typeof t)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return $i((()=>{let e=ho([1]);return this.hasL1&&(e=Vi(e,qa(Ba(this.l1,Pi(t))))),this.hasL2&&(e=Vi(e,qa(Ba(this.l2,Vd(t))))),e.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}pg.className="L1L2",Ni(pg);const dg={l1l2:"L1L2"};function fg(t){return Wp(t)}function mg(t,e={}){return Up(t,Ci.getMap().classNameMap,e,"regularizer")}function gg(t){return null==t?null:"string"==typeof t?mg({className:t in dg?dg[t]:t,config:{}}):t instanceof hg?t:mg(t)}class yg extends Rf{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=vf(t);let n=_o(t);return null!=this.maxValue&&(n=ca(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}yg.className="ReLU",Ni(yg);class bg extends Rf{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=vf(t);return La(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}bg.className="LeakyReLU",Ni(bg);class xg extends Rf{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=df(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=gg(t.alphaRegularizer),this.alphaConstraint=ld(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new $p(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=wf(t)).slice(1);if(null!=this.sharedAxes)for(const t of this.sharedAxes)e[t-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let e=1;e<t.length;++e)n[e]=t[e];this.inputSpec=[new Cf({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=vf(t),go(t,this.alpha.read())}getConfig(){const t={alphaInitializer:pf(this.alphaInitializer),alphaRegularizer:fg(this.alphaRegularizer),alphaConstraint:ad(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}xg.className="PReLU",Ni(xg);class vg extends Rf{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new Rp(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=vf(t);return Ta(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}vg.className="ELU",Ni(vg);class wg extends Rf{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=vf(t);return n.mul(Ad(n.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}wg.className="ThresholdedReLU",Ni(wg);class _g extends Rf{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new ig).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=vf(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function kg(t,e,n){if("number"==typeof t)return Op(t,e);if(t.length!==e)throw new $p(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let r=0;r<e;++r){const i=t[r];if((s=i)!==parseInt(s.toString(),10))throw new $p(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${i}`)}return t;var s}function Tg(t,e,n,s,r=1){if(null==t)return t;let i;return i="same"===n?t:t-(e+(e-1)*(r-1))+1,Math.floor((i+s-1)/s)}function Sg(t,e,n,s){if(null==t)return null;if("valid"===s)t=t*e+Cd([n-e,0]);else{if("same"!==s)throw new $p(`Unsupport padding mode: ${s}.`);t*=e}return t}function Ig(t,e){return $i((()=>(md(e),"channelsFirst"===e?jo(t,[0,2,3,1]):t)))}function Cg(t,e){return $i((()=>(md(e),"channelsFirst"===e?jo(t,[0,2,3,4,1]):t)))}function Ng(t,e,n,s=[1,1],r="valid",i,a,o=null){return $i((()=>{if(null==i&&(i="channelsLast"),md(i),3!==t.rank&&4!==t.rank)throw new $p(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new $p(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let l=Ig(t,i);if("causal"===r)throw new Rp("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=ol({x:l,filter:e,strides:s,pad:"same"===r?"same":"valid",dilations:a,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===i&&(l=jo(l,[0,3,1,2])),l}))}_g.className="Softmax",Ni(_g);class Ag extends Rf{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Ag.verifyArgs(e),this.rank=t,Yp(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Rp(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=kg(e.kernelSize,t,"kernelSize"),this.strides=kg(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,gd(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,md(this.dataFormat),this.activation=cg(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=df(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=ld(e.biasConstraint),this.biasRegularizer=gg(e.biasRegularizer),this.activityRegularizer=gg(e.activityRegularizer),this.dilationRate=kg(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new $p(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new $p(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new $p(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(t){if(Fp("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!Kp(t.kernelSize,"number",1,3))throw new $p(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:lg(this.activation),useBias:this.useBias,biasInitializer:pf(this.biasInitializer),biasRegularizer:fg(this.biasRegularizer),activityRegularizer:fg(this.activityRegularizer),biasConstraint:ad(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class Eg extends Ag{constructor(t,e){super(t,e),this.kernel=null,Eg.verifyArgs(e),this.filters=e.filters,Yp(this.filters,"filters"),this.kernelInitializer=df(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=ld(e.kernelConstraint),this.kernelRegularizer=gg(e.kernelRegularizer)}build(t){t=wf(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new $p(`The channel dimension of the input should be defined. Found ${t[e]}`);const n=t[e],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return $i((()=>{let e;t=vf(t);const n=null==this.bias?null:this.bias.read(),s=Qp(this.activation.getClassName());if(null!=s&&2===this.rank)e=Ng(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(1===this.rank)e=function(t,e,n,s=1,r="valid",i,a=1){return $i((()=>{if(null==i&&(i="channelsLast"),md(i),3!==t.shape.length)throw new $p(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(3!==e.shape.length)throw new $p(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new $p(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if("channelsFirst"===i&&(t=jo(t,[0,2,1])),"causal"===r)throw new Rp("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=ya(t,e,s,"same"===r?"same":"valid","NWC",a);return null!=n&&(o=Wd(o,n)),o}))}(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=Ng(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Rp("convolutions greater than 3D are not implemented yet.");e=function(t,e,n,s=[1,1,1],r="valid",i,a){return $i((()=>{if(null==i&&(i="channelsLast"),md(i),4!==t.rank&&5!==t.rank)throw new $p(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(4!==e.rank&&5!==e.rank)throw new $p(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let o=Cg(t,i);if("causal"===r)throw new Rp("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=va(o,e,s,"same"===r?"same":"valid","NDHWC",a),null!=n&&(o=Wd(o,n)),"channelsFirst"===i&&(o=jo(o,[0,4,1,2,3])),o}))}(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e}))}computeOutputShape(t){t=wf(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let t=0;t<n.length;++t){const s=Tg(n[t],this.kernelSize[t],this.padding,this.strides[t],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[t]);e.push(s)}let s=[t[0]];return"channelsLast"===this.dataFormat?(s=s.concat(e),s.push(this.filters)):(s.push(this.filters),s=s.concat(e)),s}getConfig(){const t={filters:this.filters,kernelInitializer:pf(this.kernelInitializer),kernelRegularizer:fg(this.kernelRegularizer),kernelConstraint:ad(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new $p(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class $g extends Eg{constructor(t){super(2,t),$g.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!Kp(t.kernelSize,"number",1,2))throw new $p(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}$g.className="Conv2D",Ni($g);class Rg extends Eg{constructor(t){super(3,t),Rg.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new $p(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}Rg.className="Conv3D",Ni(Rg);class Dg extends $g{constructor(t){if(super(t),this.inputSpec=[new Cf({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new $p(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(4!==(t=wf(t)).length)throw new $p("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new $p("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Cf({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return $i((()=>{let e=vf(t);if(4!==e.shape.length)throw new $p(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,s=n[0];let r,i;"channelsFirst"===this.dataFormat?(r=2,i=3):(r=1,i=2);const a=n[r],o=n[i],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],p=[s,Sg(a,c,l,this.padding),Sg(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=jo(e,[0,2,3,1]));let d=xa(e,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=jo(d,[0,3,1,2])),null!=this.bias&&(d=Wd(d,this.bias.read(),this.dataFormat)),null!=this.activation&&(d=this.activation.apply(d)),d}))}computeOutputShape(t){const e=(t=wf(t)).slice();let n,s,r;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3):(n=3,s=1,r=2);const i=this.kernelSize[0],a=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return e[n]=this.filters,e[s]=Sg(e[s],o,i,this.padding),e[r]=Sg(e[r],l,a,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Dg.className="Conv2DTranspose",Ni(Dg);class Og extends Eg{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new $p("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new $p("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new $p(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=df(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=gg(e.depthwiseRegularizer),this.depthwiseConstraint=ld(e.depthwiseConstraint),this.pointwiseInitializer=df(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=gg(e.pointwiseRegularizer),this.pointwiseConstraint=ld(e.pointwiseConstraint)}build(t){if((t=wf(t)).length<this.rank+2)throw new $p(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new $p(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const n=t[e],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let t=0;t<this.rank;++t)r.push(1);r.push(n*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new Cf({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return $i((()=>{let e;if(t=vf(t),1===this.rank)throw new Rp("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=jo(t,[0,2,3,1])),e=So(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=Wd(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=jo(e,[0,3,1,2])),e}))}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=pf(this.depthwiseInitializer),t.pointwiseInitializer=pf(this.pointwiseInitializer),t.depthwiseRegularizer=fg(this.depthwiseRegularizer),t.pointwiseRegularizer=fg(this.pointwiseRegularizer),t.depthwiseConstraint=ad(this.depthwiseConstraint),t.pointwiseConstraint=ad(this.pointwiseConstraint),t}}Og.className="SeparableConv";class Fg extends Og{constructor(t){super(2,t)}}Fg.className="SeparableConv2D",Ni(Fg);class Mg extends Eg{constructor(t){super(1,t),Mg.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!Kp(t.kernelSize,"number",1,1))throw new $p(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}Mg.className="Conv1D",Ni(Mg);class Lg extends Rf{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return $i((()=>{if(t=vf(t),"channelsLast"===this.dataFormat){const e=Dd(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Dd(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=Dd(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Dd(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Lg.className="Cropping2D",Ni(Lg);class zg extends Rf{constructor(t){var e;super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,md(this.dataFormat),this.interpolation=null==t.interpolation?"nearest":t.interpolation,e=this.interpolation,Xp(cd,"InterpolationFormat",e)}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return $i((()=>{let e=vf(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=jo(e,[0,2,3,1]);const t=this.size[0]*n[2],s=this.size[1]*n[3],r="nearest"===this.interpolation?e.resizeNearestNeighbor([t,s]):e.resizeBilinear([t,s]);return jo(r,[0,3,1,2])}{const t=this.size[0]*n[1],s=this.size[1]*n[2];return"nearest"===this.interpolation?e.resizeNearestNeighbor([t,s]):e.resizeBilinear([t,s])}}))}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}zg.className="UpSampling2D",Ni(zg);class Pg extends Ag{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=df(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=ld(t.depthwiseConstraint),this.depthwiseRegularizer=gg(t.depthwiseRegularizer)}build(t){if((t=wf(t)).length<4)throw new $p(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new $p(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return $i((()=>{let e=function(t,e,n=[1,1],s="valid",r,i){return $i((()=>{null==r&&(r="channelsLast"),md(r);let a=Ig(t,r);if(4!==t.rank)throw new $p(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(4!==e.rank)throw new $p(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=wa(a,e,n,"same"===s?"same":"valid","NHWC",i),"channelsFirst"===r&&(a=jo(a,[0,3,1,2])),a}))}(t=vf(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=Wd(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e}))}computeOutputShape(t){t=wf(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],s="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,r=Tg(e,this.kernelSize[0],this.padding,this.strides[0]),i=Tg(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],s,r,i]:[t[0],r,i,s]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=pf(this.depthwiseInitializer),t.depthwiseRegularizer=fg(this.depthwiseRegularizer),t.depthwiseConstraint=ad(this.depthwiseRegularizer),t}}function Vg(t,e,n,s){if(Array.isArray(t)){if(null!=e||null!=n)throw new $p("When inputs is an array, neither initialState or constants should be provided");null!=s&&(n=t.slice(t.length-s,t.length),t=t.slice(0,t.length-s)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function r(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=r(e),constants:n=r(n)}}function Bg(t,e,n,s=!1,r,i,a=!1,o=!1){return $i((()=>{const l=e.shape.length;if(l<3)throw new $p(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Nd(2,l));if(e=jo(e,u),null!=i)throw new Rp("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&((r=r.asType("bool").asType("float32")).rank===l-1&&(r=Aa(r,-1)),r=jo(r,u)),s&&(e=ko(e,0),null!=r&&(r=ko(r,0)));const c=[];let h,p=n;const d=e.shape[0],f=Wo(e);let m,g;null!=r&&(m=Wo(r));for(let e=0;e<d;++e){const n=f[e],s=$i((()=>t(n,p)));if(null==r)h=s[0],p=s[1];else{const t=$i((()=>{const t=m[e],n=fo(t).sub(t);return{output:s[0].mul(t).add(p[0].mul(n)),newStates:p.map(((e,r)=>s[1][r].mul(t).add(e.mul(n))))}}));h=t.output,p=t.newStates}o&&c.push(h)}return o&&(g=Lo(c,1)),[h,g,p]}))}Pg.className="DepthwiseConv2D",Ni(Pg);class Wg extends Rf{constructor(t){let e;if(super(t),null==t.cell)throw new $p("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new Yg({cells:t.cell}):t.cell,null==e.stateSize)throw new $p("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new Cf({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Nd(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((t=>null)):this.states_}setStates(t){this.states_=t}computeOutputShape(t){bf(t)&&(t=t[0]);let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let s;if(s=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const s of e)n.push([t[0],s]);return[s].concat(n)}return s}computeMask(t,e){return $i((()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map((t=>null));return[t].concat(e)}return t}))}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new Rp("Constants support is not implemented in RNN yet.");bf(t)&&(t=t[0]);const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new Cf({shape:[e,null,...n]});const s=[t[0]].concat(t.slice(2));let r;if(this.cell.build(s),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!F(this.stateSpec.map((t=>t.shape[t.shape.length-1])),r))throw new $p(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((t=>new Cf({shape:[null,t]})));this.stateful&&this.resetStates()}resetStates(t,e=!1){$i((()=>{if(!this.stateful)throw new Ap("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new $p("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>ho([n,t]))):this.states_=[ho([n,this.cell.stateSize])];else if(null==t)Ri(this.states_),null!=this.keptStates&&(Ri(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>ho([n,t]))):this.states_[0]=ho([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new $p(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);!0===e?this.keptStates.push(this.states_.slice()):Ri(this.states_);for(let e=0;e<this.states_.length;++e){const s=t[e],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,i=[n,r];if(!F(s.shape,i))throw new $p(`State ${e} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${s.shape}`);this.states_[e]=s}}this.states_=this.states_.map((t=>Di(t.clone())))}))}apply(t,e){let n=null==e?null:e.initialState,s=null==e?null:e.constants;null==e&&(e={});const r=Vg(t,n,s,this.numConstants);t=r.inputs,n=r.initialState,s=r.constants;let i=[],a=[];if(null!=n){e.initialState=n,i=i.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new Cf({shape:t.shape}));a=a.concat(this.stateSpec)}if(null!=s&&(e.constants=s,i=i.concat(s),this.numConstants=s.length),i[0]instanceof Nf){const n=[t].concat(i),s=this.inputSpec.concat(a),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,e);return this.inputSpec=r,o}return super.apply(t,e)}call(t,e){return $i((()=>{const n=null==e?null:e.mask,s=null==e?null:e.training;let r=null==e?null:e.initialState;t=vf(t),null==r&&(r=this.stateful?this.states_:this.getInitialState(t));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==i)throw new $p(`RNN Layer has ${i} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:s},o=Bg(((t,e)=>{const n=this.cell.call([t].concat(e),a);return[n[0],n.slice(1)]}),t,r,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,s);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(t){return $i((()=>{let e=ho(t.shape);return e=qa(e,[1,2]),e=Ed(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((t=>t>1?Md(e,[1,t]):e)):this.cell.stateSize>1?[Md(e,[1,this.cell.stateSize])]:[e]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Wg.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,t,e)}static fromConfig(t,e,n={}){const s=jf(e.cell,n);return new t(Object.assign(e,{cell:s}))}}Wg.className="RNN",Ni(Wg);class qg extends Rf{}class Ug extends qg{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Yp(this.units,"units"),this.activation=cg(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=df(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=df(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=df(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=gg(t.kernelRegularizer),this.recurrentRegularizer=gg(t.recurrentRegularizer),this.biasRegularizer=gg(t.biasRegularizer),this.kernelConstraint=ld(t.kernelConstraint),this.recurrentConstraint=ld(t.recurrentConstraint),this.biasConstraint=ld(t.biasConstraint),this.dropout=Id([1,Cd([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Id([1,Cd([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=wf(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return $i((()=>{if(2!==t.length)throw new $p(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const s=null!=e.training&&e.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Zg({ones:()=>fo(t),rate:this.dropout,training:s})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Zg({ones:()=>fo(n),rate:this.recurrentDropout,training:s}));const i=this.dropoutMask,a=this.recurrentDropoutMask;r=zd(null!=i?Ba(t,i):t,this.kernel.read()),null!=this.bias&&(r=Wd(r,this.bias.read())),null!=a&&(n=Ba(n,a));let o=Vi(r,zd(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:lg(this.activation),useBias:this.useBias,kernelInitializer:pf(this.kernelInitializer),recurrentInitializer:pf(this.recurrentInitializer),biasInitializer:pf(this.biasInitializer),kernelRegularizer:fg(this.kernelRegularizer),recurrentRegularizer:fg(this.recurrentRegularizer),biasRegularizer:fg(this.biasRegularizer),activityRegularizer:fg(this.activityRegularizer),kernelConstraint:ad(this.kernelConstraint),recurrentConstraint:ad(this.recurrentConstraint),biasConstraint:ad(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}Ug.className="SimpleRNNCell",Ni(Ug);class Gg extends Wg{constructor(t){t.cell=new Ug(t),super(t)}call(t,e){return $i((()=>{null!=this.cell.dropoutMask&&(Ri(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ri(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,s=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:r})}))}static fromConfig(t,e){return new t(e)}}Gg.className="SimpleRNN",Ni(Gg);class jg extends qg{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new $p("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Yp(this.units,"units"),this.activation=cg(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=cg(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=df(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=df(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=df(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=gg(t.kernelRegularizer),this.recurrentRegularizer=gg(t.recurrentRegularizer),this.biasRegularizer=gg(t.biasRegularizer),this.kernelConstraint=ld(t.kernelConstraint),this.recurrentConstraint=ld(t.recurrentConstraint),this.biasConstraint=ld(t.biasConstraint),this.dropout=Id([1,Cd([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Id([1,Cd([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=wf(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return $i((()=>{if(2!==t.length)throw new $p(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const n=null!=e.training&&e.training;let s=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Zg({ones:()=>fo(t),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Zg({ones:()=>fo(s),rate:this.recurrentDropout,training:n,count:3}));const r=this.dropoutMask,i=this.recurrentDropoutMask;let a,o,l;0<this.dropout&&this.dropout<1&&(t=Ba(t,r[0]));let u=zd(t,this.kernel.read());this.useBias&&(u=Wd(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=Ba(s,i[0]));const c=this.recurrentKernel.read(),[h,p]=Oo(c,[2*this.units,this.units],c.rank-1),d=zd(s,h),[f,m,g]=Oo(u,3,u.rank-1),[y,b]=Oo(d,2,d.rank-1);a=this.recurrentActivation.apply(Vi(f,y)),o=this.recurrentActivation.apply(Vi(m,b));const x=zd(Ba(o,s),p);l=this.activation.apply(Vi(g,x));const v=Vi(Ba(a,s),Ba(Vi(1,lo(a)),l));return[v,v]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:lg(this.activation),recurrentActivation:lg(this.recurrentActivation),useBias:this.useBias,kernelInitializer:pf(this.kernelInitializer),recurrentInitializer:pf(this.recurrentInitializer),biasInitializer:pf(this.biasInitializer),kernelRegularizer:fg(this.kernelRegularizer),recurrentRegularizer:fg(this.recurrentRegularizer),biasRegularizer:fg(this.biasRegularizer),activityRegularizer:fg(this.activityRegularizer),kernelConstraint:ad(this.kernelConstraint),recurrentConstraint:ad(this.recurrentConstraint),biasConstraint:ad(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}jg.className="GRUCell",Ni(jg);class Hg extends Wg{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new jg(t),super(t)}call(t,e){return $i((()=>{null!=this.cell.dropoutMask&&(Ri(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ri(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,s=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:r})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Hg.className="GRU",Ni(Hg);class Xg extends qg{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Yp(this.units,"units"),this.activation=cg(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=cg(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=df(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=df(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=df(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=gg(t.kernelRegularizer),this.recurrentRegularizer=gg(t.recurrentRegularizer),this.biasRegularizer=gg(t.biasRegularizer),this.kernelConstraint=ld(t.kernelConstraint),this.recurrentConstraint=ld(t.recurrentConstraint),this.biasConstraint=ld(t.biasConstraint),this.dropout=Id([1,Cd([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Id([1,Cd([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=wf(t))[t.length-1];let s;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;s=new((e=class extends Hd{apply(e,s){const r=t.apply([n]),i=(new Kd).apply([n]),a=t.apply([2*n]);return Fd(Fd(r,i),a)}}).className="CustomInit",e)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return $i((()=>{const n=null!=e.training&&e.training;if(3!==t.length)throw new $p(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let s=t[1];const r=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Zg({ones:()=>fo(t),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Zg({ones:()=>fo(s),rate:this.recurrentDropout,training:n,count:4}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(t=Ba(t,i[0]));let h=zd(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=Ba(s,a[0])),h=Vi(h,zd(s,this.recurrentKernel.read())),this.useBias&&(h=Wd(h,this.bias.read()));const[p,d,f,m]=Oo(h,4,h.rank-1);o=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(d),u=Vi(Ba(l,r),Ba(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=Ba(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:lg(this.activation),recurrentActivation:lg(this.recurrentActivation),useBias:this.useBias,kernelInitializer:pf(this.kernelInitializer),recurrentInitializer:pf(this.recurrentInitializer),biasInitializer:pf(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:fg(this.kernelRegularizer),recurrentRegularizer:fg(this.recurrentRegularizer),biasRegularizer:fg(this.biasRegularizer),activityRegularizer:fg(this.activityRegularizer),kernelConstraint:ad(this.kernelConstraint),recurrentConstraint:ad(this.recurrentConstraint),biasConstraint:ad(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}Xg.className="LSTMCell",Ni(Xg);class Kg extends Wg{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Xg(t),super(t)}call(t,e){return $i((()=>{null!=this.cell.dropoutMask&&(Ri(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ri(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,s=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:r})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Kg.className="LSTM",Ni(Kg);class Yg extends qg{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return $i((()=>{let n=t.slice(1);const s=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?s.push(n.splice(0,t.stateSize.length)):s.push(n.splice(0,1));s.reverse();const r=[];let i;for(let a=0;a<this.cells.length;++a){const o=this.cells[a];n=s[a],i=0===a?[t[0]].concat(n):[i[0]].concat(n),i=o.call(i,e),r.push(i.slice(1))}n=[];for(const t of r.slice().reverse())n.push(...t);return[i[0]].concat(n)}))}build(t){let e;bf(t)&&(t=t[0]),this.cells.forEach(((n,s)=>{xd(`RNNCell_${s}`,(()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]}))})),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map((t=>({className:t.getClassName(),config:t.getConfig()})))};return Object.assign({},t,e)}static fromConfig(t,e,n={}){const s=[];for(const t of e.cells)s.push(jf(t,n));return new t({cells:s})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return Sf(t)}setWeights(t){const e=[];for(const n of this.cells){const s=n.weights.length,r=t.splice(s);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],r[t]])}If(e)}}function Zg(t){const{ones:e,rate:n,training:s=!1,count:r=1}=t,i=()=>qd(e(),n),a=()=>Ud(i,e,s);return!r||r<=1?Di(a().clone()):Array(r).fill(void 0).map(a).map((t=>Di(t.clone())))}Yg.className="StackedRNNCells",Ni(Yg);var Qg,Jg;class ty extends Wg{constructor(t){if(t.unroll)throw new Rp("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new Rp("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new Cf({ndim:5})]}call(t,e){return $i((()=>{if(null!=this.cell.dropoutMask&&(Ri(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ri(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new $p("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,s=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:r})}))}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return $i((()=>{const{stateSize:e}=this.cell,n=t.shape,s=this.computeSingleOutputShape(n),r=ho([s[0],...s.slice(2)]);return Array.isArray(e)?Array(e.length).fill(r):[r]}))}resetStates(t,e=!1){$i((()=>{if(!this.stateful)throw new Ap("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(null==n[0])throw new $p("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>ho(r))):this.states_=[ho(r)];else if(null==t)Ri(this.states_),null!=this.keptStates&&(Ri(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>ho(r))):this.states_[0]=ho(r);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new $p(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):Ri(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],s=r;if(!F(n.shape,s))throw new $p(`State ${e} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[e]=n}}this.states_=this.states_.map((t=>Di(t.clone())))}))}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:s,padding:r,strides:i,dilationRate:a}=this.cell,o="channelsFirst"===e,l=t[o?3:2],u=t[o?4:3],c=Tg(l,s[0],r,i[0],a[0]),h=Tg(u,s[1],r,i[1],a[1]);return[...t.slice(0,2),...o?[n,c,h]:[c,h,n]]}}ty.className="ConvRNN2D";class ey extends Xg{constructor(t){const{filters:e,kernelSize:n,strides:s,padding:r,dataFormat:i,dilationRate:a}=t;super(Object.assign({},t,{units:e})),this.filters=e,Yp(this.filters,"filters"),this.kernelSize=kg(n,2,"kernelSize"),this.kernelSize.forEach((t=>Yp(t,"kernelSize"))),this.strides=kg(s||1,2,"strides"),this.strides.forEach((t=>Yp(t,"strides"))),this.padding=r||"valid",gd(this.padding),this.dataFormat=i||"channelsLast",md(this.dataFormat),this.dilationRate=kg(a||1,2,"dilationRate"),this.dilationRate.forEach((t=>Yp(t,"dilationRate")))}build(t){var e;t=wf(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new $p(`The channel dimension of the input should be defined. Found ${t[n]}`);const s=t[n],r=this.kernelSize.concat([s,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,s=this.filters;t=new((e=class extends Hd{apply(t,e){return Od([n.apply([s]),po([s]),n.apply([2*s])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return $i((()=>{if(3!==t.length)throw new $p(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training||!1,s=t[0],r=t[1],i=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Zg({ones:()=>fo(s),rate:this.dropout,training:n,count:4}));const a=this.dropoutMask,o=(t,e,n)=>e&&e[n]?Ba(e[n],t):t;let l=o(s,a,0),u=o(s,a,1),c=o(s,a,2),h=o(s,a,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Zg({ones:()=>fo(r),rate:this.recurrentDropout,training:n,count:4}));const p=this.recurrentDropoutMask;let d=o(r,p,0),f=o(r,p,1),m=o(r,p,2),g=o(r,p,3);const[y,b,x,v]=Oo(this.kernel.read(),4,3),[w,_,k,T]=this.useBias?Oo(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,w,this.padding),u=this.inputConv(u,b,_,this.padding),c=this.inputConv(c,x,k,this.padding),h=this.inputConv(h,v,T,this.padding);const[S,I,C,N]=Oo(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,S),f=this.recurrentConv(f,I),m=this.recurrentConv(m,C),g=this.recurrentConv(g,N);const A=this.recurrentActivation.apply(Vi(l,d)),E=this.recurrentActivation.apply(Vi(u,f)),$=Vi(Ba(E,i),Ba(A,this.activation.apply(Vi(c,m)))),R=Ba(this.recurrentActivation.apply(Vi(h,g)),this.activation.apply($));return[R,R,$]}))}getConfig(){const t=super.getConfig(),{units:e}=t,n=function(t,e){var n={};for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&e.indexOf(s)<0&&(n[s]=t[s]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(t);r<s.length;r++)e.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(t,s[r])&&(n[s[r]]=t[s[r]])}return n}(t,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,s)}inputConv(t,e,n,s){const r=ga(t,e,this.strides,s||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Wd(r,n,this.dataFormat):r}recurrentConv(t,e){return ga(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}ey.className="ConvLSTM2DCell",Ni(ey);class ny extends ty{constructor(t){const e=new ey(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}ny.className="ConvLSTM2D",Ni(ny);class sy extends Rf{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let t=0;t<this.noiseShape.length;++t)n.push(null==this.noiseShape[t]?e[t]:this.noiseShape[t]);return n}call(t,e){return $i((()=>{this.invokeCallHook(t,e);const n=vf(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,s=this.getNoiseShape(n);return Ud((()=>qd(n,this.rate,s,this.seed)),(()=>n),t)}return t}))}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}sy.className="Dropout",Ni(sy);class ry extends sy{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}ry.className="SpatialDropout1D",Ni(ry);class iy extends Rf{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,Yp(this.units,"units"),this.activation=cg(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=df(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=df(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=ld(t.kernelConstraint),this.biasConstraint=ld(t.biasConstraint),this.kernelRegularizer=gg(t.kernelRegularizer),this.biasRegularizer=gg(t.biasRegularizer),this.activityRegularizer=gg(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=wf(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=wf(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return $i((()=>{this.invokeCallHook(t,e);const n=vf(t),s=Qp(this.activation.getClassName());let r;return null!=s?r=zd(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=zd(n,this.kernel.read()),null!=this.bias&&(r=Wd(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const t={units:this.units,activation:lg(this.activation),useBias:this.useBias,kernelInitializer:pf(this.kernelInitializer),biasInitializer:pf(this.biasInitializer),kernelRegularizer:fg(this.kernelRegularizer),biasRegularizer:fg(this.biasRegularizer),activityRegularizer:fg(this.activityRegularizer),kernelConstraint:ad(this.kernelConstraint),biasConstraint:ad(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}iy.className="Dense",Ni(iy);class ay extends Rf{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=wf(t);for(const e of t.slice(1))if(null==e)throw new $p(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],Td(t,1)]}call(t,e){return $i((()=>{this.invokeCallHook(t,e);let n=vf(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=n.transpose(t)}return function(t){if(t.rank<=1)throw new $p(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],Td(t.shape,1)];return t.reshape(e)}(n)}))}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}ay.className="Flatten",Ni(ay);class oy extends Rf{constructor(t){super(t),this.supportsMasking=!0,this.activation=cg(t.activation)}call(t,e){return $i((()=>{this.invokeCallHook(t,e);const n=vf(t);return this.activation.apply(n)}))}getConfig(){const t={activation:lg(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}oy.className="Activation",Ni(oy);class ly extends Rf{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return $i((()=>{return t=vf(t),e=t,n=this.n,$i((()=>{if(2!==e.shape.length)throw new $p(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return Md(Ed(e,1),[1,n,1])}));var e,n}))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}ly.className="RepeatVector",Ni(ly);class uy extends Rf{constructor(t){super(t),this.targetShape=t.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",s=e.slice();let r=1,i=null;for(let t=0;t<s.length;++t){const e=s[t];if(this.isUnknown(e)){if(null!==i)throw new $p("Can only specifiy one unknown dimension.");i=t}else r*=e}const a=Td(t);if(null!==i){if(0===r||a%r!=0)throw new $p(n);s[i]=a/r}else if(a!==r)throw new $p(n);return s}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return $i((()=>{this.invokeCallHook(t,e);const n=vf(t),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return n.reshape(r)}))}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}uy.className="Reshape",Ni(uy);class cy extends Rf{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=Nd(1,t.dims.length+1);if(!F(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Cf({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=wf(t)).slice();return this.dims.forEach(((n,s)=>{e[s+1]=t[n]})),e}call(t,e){return jo(vf(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}cy.className="Permute",Ni(cy);class hy extends Rf{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=vf(t);return Wi(uo(n,this.maskValue),-1)}call(t,e){return $i((()=>{this.invokeCallHook(t,e);const n=vf(t),s=Wi(uo(n,this.maskValue),-1,!0);return n.mul(s.asType(n.dtype))}))}}hy.className="Masking",Ni(hy);class py extends Rf{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(zp(t.inputLength))}this.inputDim=t.inputDim,Yp(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Yp(this.outputDim,"outputDim"),this.embeddingsInitializer=df(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=gg(t.embeddingsRegularizer),this.activityRegularizer=gg(t.activityRegularizer),this.embeddingsConstraint=ld(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return $i((()=>this.maskZero?(t=vf(t),uo(t,Go(t))):null))}computeOutputShape(t){if(t=wf(t),null==this.inputLength)return[...t,this.outputDim];const e=zp(this.inputLength);if(e.length!==t.length-1)throw new $p(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let s=0;s<e.length;++s){const r=e[s],i=t[s+1];if(null!=r&&null!=i&&r!==i)throw new $p(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);null==r&&(e[n]=i),n++}}return[t[0],...e,this.outputDim]}call(t,e){return $i((()=>{this.invokeCallHook(t,e);let n=vf(t);return"int32"!==n.dtype&&(n=Ad(n,"int32")),Pd(this.embeddings.read(),n.as1D()).reshape(wf(this.computeOutputShape(n.shape)))}))}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:pf(this.embeddingsInitializer),embeddingsRegularizer:fg(this.embeddingsRegularizer),activityRegularizer:fg(this.activityRegularizer),embeddingsConstraint:ad(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}py.className="Embedding",Ni(py);class dy extends Rf{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Rp}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let s=0;s<e.length;++s){const r=t[t.length-e.length+s],i=e[s];if(null==r||null==i||r<0||i<0)n.push(null);else if(1===r)n.push(i);else if(1===i)n.push(r);else{if(r!==i)throw new $p("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(r)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[wf(t)]),t.length<2)throw new $p(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const n of t)null!=n&&null!==n[0]&&e.push(n[0]);if(e=jp(e),e.length>1)throw new $p(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let e=1;e<t.length;++e){const s=null==t[e]?null:t[e].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}const s=t.map((t=>t.length));-1===t.indexOf(null)&&1===jp(s).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return $i((()=>{if(this.reshapeRequired){const e=[],n=t.map((t=>t.rank));if(-1===n.indexOf(null)){const s=Cd(n);for(let n of t){const t=n.rank;for(let e=0;e<s-t;++e)n=Ed(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const s of t){const t=s.rank;if(null==t){const t=s.shape,r=t[0],i=t.slice(1).concat([r]);let a=s.reshape([r].concat(Td(t.slice(1))));a=jo(a,[1,0]),a=a.reshape(i),e.push(a),n=!0}else if(t>1){const r=Nd(1,t).concat([0]);e.push(jo(s,r)),n=!0}else e.push(s)}let s=this.mergeFunction(e);const r=s.rank;if(n)if(null==r){const t=s.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));s=jo(s.reshape([-1,e]),[1,0]).reshape(n)}else if(r>1){const t=[r-1].concat(Nd(0,r-1));s=jo(s,t)}return s}}return this.mergeFunction(t)}))}computeOutputShape(t){let e;e=null==t[0]?null:t[0].slice(1);for(let n=1;n<t.length;++n){const s=null==t[n]?null:t[n].slice(1);e=this.computeElementwiseOpOutputShape(e,s)}let n=[];for(const e of t)null!=e&&null!==e[0]&&n.push(e[0]);return n=jp(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return $i((()=>{if(null==e)return null;if(!Array.isArray(e))throw new $p("`mask` should be an Array");if(!Array.isArray(t))throw new $p("`inputs` should be an Array");if(e.length!==t.length)throw new $p(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every((t=>null==t)))return null;let n=(e=e.map((t=>null==t?t:Aa(t,0))))[0];for(let t=1;t<e.length-1;++t)n=Ga(n,e[t]);return n}))}}class fy extends dy{constructor(t){super(t)}mergeFunction(t){return $i((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Vi(e,t[n]);return e}))}}fy.className="Add",Ni(fy);class my extends dy{constructor(t){super(t)}mergeFunction(t){return $i((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Ba(e,t[n]);return e}))}}my.className="Multiply",Ni(my);class gy extends dy{constructor(t){super(t)}mergeFunction(t){return $i((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Vi(e,t[n]);return Ba(1/t.length,e)}))}}gy.className="Average",Ni(gy);class yy extends dy{constructor(t){super(t)}mergeFunction(t){return $i((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Xa(e,t[n]);return e}))}}yy.className="Maximum",Ni(yy);class by extends dy{constructor(t){super(t)}mergeFunction(t){return $i((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Za(e,t[n]);return e}))}}by.className="Minimum",Ni(by);class xy extends dy{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new $p("A `Concatenate` layer should be called on a list of at least 2 inputs");let e=!0;for(const n of t)if(null!=n){e=!1;break}if(e)return;const n=[];for(let e=0;e<t.length;++e){const s=t[e].slice();s.splice(this.axis,1);let r=!1;for(const t of n)if(F(t,s)){r=!0;break}r||n.push(s)}if(n.length>1)throw new $p("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return $i((()=>Od(t,this.axis)))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new $p("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(const t of e.slice(1)){if(null==n[s]||null==t[s]){n[s]=null;break}n[s]+=t[s]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new $p("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new $p("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new $p(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return $i((()=>{let n=!0;if(e.forEach((t=>{null==t||(n=!1)})),n)return null;const s=[];for(let n=0;n<t.length;++n)null==e[n]?s.push(fo(t[n]).asType("bool")):e[n].rank<t[n].rank?s.push(Aa(e[n],-1)):s.push(e[n]);const r=ha(s,this.axis);return Bi(r,-1,!1)}))}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function vy(t,e){for(;t<0;)t+=e;return t}xy.className="Concatenate",Ni(xy);class wy extends dy{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){E(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new Rp("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(e,n);if(e[s[0]]!==n[s[1]])throw new $p(`Dimension incompatibility: ${e[s[0]]} !== ${n[s[1]]}`)}mergeFunction(t){if(2!==t.length)throw new $p(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],s=t[1];return e=Array.isArray(this.axes)?this.axes.map(((e,n)=>vy(e,t[n].shape.length))):[vy(this.axes,n.shape.length),vy(this.axes,s.shape.length)],this.normalize&&(n=Hf(n,e[0]),s=Hf(s,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new Rp("batchDot is not implemented for tensors of 4D or higher rank yet");if(E(t.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${t.shape.length}`)),E(t.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new Rp("batchDot is not implemented for complex64-type Tensors yet.");const s=t.shape.length,r=e.shape.length;null==n&&(n=[s-1,r-2]);const i=n;return $i((()=>{let n,a;if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)a=i[0]===i[1]?t.mul(e).sum(i[0]):t.transpose([1,0]).mul(e).sum(i[1]);else{const n=i[0]!==t.shape.length-1,s=i[1]===e.shape.length-1;a=t.matMul(e,n,s)}if(n>0){let t;t=s>r?s+r-3:s-1;const e=[];for(let s=t;s<t+n;++s)e.push(s);a=a.squeeze(e)}return 1===a.shape.length&&(a=a.expandDims(1)),a}))}(n,s,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[vy(this.axes,t.length),vy(this.axes,e.length)],n}computeOutputShape(t){E(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new Rp("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(e,n);e.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const r=e.concat(n);return 1===r.length&&r.push(1),r}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}wy.className="Dot",Ni(wy);class _y extends Rf{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return $i((()=>{this.invokeCallHook(t,e);const n=vf(t);return Ud((()=>Ld(n.shape,0,this.stddev).add(n)),(()=>n),e.training||!1)}))}}_y.className="GaussianNoise",Ni(_y);class ky extends Rf{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return $i((()=>{this.invokeCallHook(t,e);const n=vf(t);return this.rate>0&&this.rate<1?Ud((()=>{const t=Math.sqrt(this.rate/(1-this.rate));return n.mul(Ld(n.shape,1,t))}),(()=>n),e.training||!1):n}))}}ky.className="GaussianDropout",Ni(ky);class Ty extends Rf{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||vf(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return $i((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return Ud((()=>{const e=vf(t),s=-1.7580993408473766;let r=Ma(wo(n),this.rate);r=Ad(r,"float32");const i=((1-this.rate)*(1+this.rate*s**2))**-.5,a=-i*s*this.rate;return e.mul(r).add(r.add(-1).mul(s)).mul(i).add(a)}),(()=>vf(t)),e.training||!1)}return t}))}}function Sy(t,e,n,s,r,i=.001){let a;if(2===t.rank)a=oa(t,e,n,s,r,i);else if(3===t.rank)a=la(t,e,n,s,r,i);else{if(4!==t.rank)throw new Rp(`batchNormalization is not implemented for array of rank ${t.rank} yet`);a=ua(t,e,n,s,r,i)}return a}Ty.className="AlphaDropout",Ni(Ty);class Iy extends Rf{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=df(t.betaInitializer||"zeros"),this.gammaInitializer=df(t.gammaInitializer||"ones"),this.movingMeanInitializer=df(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=df(t.movingVarianceInitializer||"ones"),this.betaConstraint=ld(t.betaConstraint),this.gammaConstraint=ld(t.gammaConstraint),this.betaRegularizer=gg(t.betaRegularizer),this.gammaRegularizer=gg(t.gammaRegularizer)}build(t){t=wf(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new $p(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new Cf({ndim:t.length,axes:{[e]:n}})];const s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return $i((()=>{const n=null!=e.training&&e.training,s=vf(t),r=s.shape,i=r.length,a=Nd(0,i),o=this.axis>=0?this.axis:this.axis+i;a.splice(o,1);const l=Op(1,i);l[o]=r[o];const u=a.slice();u.sort();const c=!F(u,Nd(0,i).slice(0,i-1));if(!n)return(()=>{if(c){const t=this.movingMean.read().reshape(l),e=this.movingVariance.read().reshape(l),n=this.center?this.beta.read().reshape(l):null,r=this.scale?this.gamma.read().reshape(l):null;return Sy(s,t,e,n,r,this.epsilon)}return Sy(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,d]=function(t,e,n,s,r=.001){return F(s.slice().sort(),Nd(0,t.rank-1))?function(t,e,n,s,r=.001){return $i((()=>{const i=oo(t,s),a=i.mean,o=i.variance;return[Sy(t,a,o,n,e,r),a,o]}))}(t,e,n,s,r):function(t,e,n,s,r=.001){return $i((()=>{const i=oo(t,s),a=i.mean,o=i.variance,l=[];for(const e of Nd(0,t.rank))-1!==s.indexOf(e)?l.push(1):l.push(t.shape[e]);const u=a.reshape(l),c=o.reshape(l),h=null==e?null:e.reshape(l),p=null==n?null:n.reshape(l);return[Sy(t,u,c,p,h,r),a,o]}))}(t,e,n,s,r)}(s,this.gamma.read(),this.beta.read(),a,this.epsilon),f=(t,e,n)=>{$i((()=>{const s=1-n,r=t.read(),i=r.sub(e).mul(s);t.write(r.sub(i))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,d,this.momentum)})(),h}))}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:pf(this.betaInitializer),gammaInitializer:pf(this.gammaInitializer),movingMeanInitializer:pf(this.movingMeanInitializer),movingVarianceInitializer:pf(this.movingVarianceInitializer),betaRegularizer:fg(this.betaRegularizer),gammaRegularizer:fg(this.gammaRegularizer),betaConstraint:ad(this.betaConstraint),gammaConstraint:ad(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Iy.className="BatchNormalization",Ni(Iy);class Cy extends Rf{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=df(t.betaInitializer||"zeros"),this.gammaInitializer=df(t.gammaInitializer||"ones"),this.betaRegularizer=gg(t.betaRegularizer),this.gammaRegularizer=gg(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=wf(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let t=0;t<this.axis.length;++t)this.axis[t]<0&&(this.axis[t]+=e);for(const t of this.axis)if(t<0||t>=e)throw new Error(`Invalid axis: ${t}`);if(this.axis.length!==jp(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((e=>t[e]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(t,e){const n=vf(t),s=n.shape,r=s.length;return $i((()=>{let{mean:t,variance:e}=oo(n,this.axis,!0);const i=Op(1,r);for(const t of this.axis)i[t]=s[t];const a=t=>null!=t&&t.shape.length!==r&&this.axis!==[r-1]?t.reshape(i):t;let o=a(this.gamma.read()),l=a(this.beta.read());const u=[],c=[];for(let t=0;t<r;++t)-1!==this.axis.indexOf(t)?(u.push(s[t]),c.push(1)):(u.push(1),c.push(s[t]));return t=t.tile(u),e=e.tile(u),o=o.tile(c),l=l.tile(c),Sy(n,t,e,l,o,this.epsilon)}))}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:pf(this.betaInitializer),gammaInitializer:pf(this.gammaInitializer),betaRegularizer:fg(this.betaRegularizer),gammaRegularizer:fg(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}Cy.className="LayerNormalization",Ni(Cy);class Ny extends Rf{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new $p(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new $p(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new $p(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new Cf({ndim:4})]}computeOutputShape(t){let e,n;return t=wf(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return $i((()=>{return e=vf(t),n=this.padding,s=this.dataFormat,$i((()=>{if(4!==e.rank)throw new $p(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new $p("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==s&&(s="channelsLast"),"channelsLast"!==s&&"channelsFirst"!==s)throw new $p(`Unknown data format: ${s}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let t;return t="channelsFirst"===s?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],mo(e,t)}));var e,n,s}))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function Ay(t,e,n,s,r,i){return $i((()=>{let a;md(r),yd(i),gd(s),null==n&&(n=[1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==i&&(i="max"),t=Ig(t,r);const o="same"===s?"same":"valid";return a="max"===i?ja(t,e,n,o):ra(t,e,n,o),"channelsFirst"===r&&(a=jo(a,[0,3,1,2])),a}))}function Ey(t,e,n,s,r,i){return $i((()=>{let a;md(r),yd(i),gd(s),null==n&&(n=[1,1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==i&&(i="max"),t=Cg(t,r);const o="same"===s?"same":"valid";return a="max"===i?Ha(t,e,n,o):ia(t,e,n,o),"channelsFirst"===r&&(a=jo(a,[0,4,1,2,3])),a}))}Ny.className="ZeroPadding2D",Ni(Ny);class $y extends Rf{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new $p(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if(Yp(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new $p(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}Yp(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,gd(this.padding),this.inputSpec=[new Cf({ndim:3})]}computeOutputShape(t){const e=Tg((t=wf(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return $i((()=>{this.invokeCallHook(t,e),t=Ed(vf(t),2);const n=this.poolingFunction(vf(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Mo(n,[2])}))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class Ry extends $y{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return md(r),gd(s),Ay(t,e,n,s,r,"max")}}Ry.className="MaxPooling1D",Ni(Ry);class Dy extends $y{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return md(r),gd(s),Ay(t,e,n,s,r,"avg")}}Dy.className="AveragePooling1D",Ni(Dy);class Oy extends Rf{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new $p(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];Yp(this.poolSize,"poolSize"),Yp(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,md(this.dataFormat),gd(this.padding),this.inputSpec=[new Cf({ndim:4})]}computeOutputShape(t){t=wf(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=Tg(e,this.poolSize[0],this.padding,this.strides[0]),n=Tg(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return $i((()=>(this.invokeCallHook(t,e),this.poolingFunction(vf(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Fy extends Oy{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return md(r),gd(s),Ay(t,e,n,s,r,"max")}}Fy.className="MaxPooling2D",Ni(Fy);class My extends Oy{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return md(r),gd(s),Ay(t,e,n,s,r,"avg")}}My.className="AveragePooling2D",Ni(My);class Ly extends Rf{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new $p(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Yp(this.poolSize,"poolSize"),Yp(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,md(this.dataFormat),gd(this.padding),this.inputSpec=[new Cf({ndim:5})]}computeOutputShape(t){t=wf(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],s="channelsFirst"===this.dataFormat?t[4]:t[3];return e=Tg(e,this.poolSize[0],this.padding,this.strides[0]),n=Tg(n,this.poolSize[1],this.padding,this.strides[1]),s=Tg(s,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,s]:[t[0],e,n,s,t[4]]}call(t,e){return $i((()=>(this.invokeCallHook(t,e),this.poolingFunction(vf(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class zy extends Ly{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return md(r),gd(s),Ey(t,e,n,s,r,"max")}}zy.className="MaxPooling3D",Ni(zy);class Py extends Ly{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return md(r),gd(s),Ey(t,e,n,s,r,"avg")}}Py.className="AveragePooling3D",Ni(Py);class Vy extends Rf{constructor(t){super(t),this.inputSpec=[new Cf({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Rp}}class By extends Vy{constructor(t){super(t||{})}call(t,e){return $i((()=>{const e=vf(t);return Ka(e,1)}))}}By.className="GlobalAveragePooling1D",Ni(By);class Wy extends Vy{constructor(t){super(t||{})}call(t,e){return $i((()=>{const e=vf(t);return Va(e,1)}))}}Wy.className="GlobalMaxPooling1D",Ni(Wy);class qy extends Rf{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,md(this.dataFormat),this.inputSpec=[new Cf({ndim:4})]}computeOutputShape(t){return"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Rp}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Uy extends qy{call(t,e){return $i((()=>{const e=vf(t);return"channelsLast"===this.dataFormat?Ka(e,[1,2]):Ka(e,[2,3])}))}}Uy.className="GlobalAveragePooling2D",Ni(Uy);class Gy extends qy{call(t,e){return $i((()=>{const e=vf(t);return"channelsLast"===this.dataFormat?Va(e,[1,2]):Va(e,[2,3])}))}}Gy.className="GlobalMaxPooling2D",Ni(Gy);class jy extends Rf{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const s=jf(e.layer,n);delete e.layer;const r={layer:s};return Object.assign(r,e),new t(r)}}class Hy extends jy{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=wf(t)).length<3)throw new $p(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=wf(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),s=t[1];return[n[0],s].concat(n.slice(1))}call(t,e){return $i((()=>Bg(((t,n)=>[vf(this.layer.call(t,e)),[]]),t=vf(t),[],!1,null,null,!1,!0)[1]))}}Hy.className="TimeDistributed",Ni(Hy);class Xy extends jy{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=jf(n),e.goBackwards=!0!==e.goBackwards;const s={};var r;if(s.className=t.layer.getClassName(),s.config=e,this.backwardLayer=jf(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,r=this.mergeMode,Xp(dd,"BidirectionalMergeMode",r),t.weights)throw new Rp("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,s,r=this.forwardLayer.computeOutputShape(t);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(s=r.slice(1),e=r[0]):e=r[0],"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(s).concat(s.slice()):[e].concat(s).concat(s.slice()):Lp(n)}apply(t,e){let n=null==e?null:e.initialState,s=null==e?null:e.constants;null==e&&(e={});const r=Vg(t,n,s,this.numConstants);if(t=r.inputs,n=r.initialState,s=r.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==s)return super.apply(t,e);const i=[],a=[];if(null!=n){const t=n.length;if(t%2>0)throw new $p("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,i.push(...n);const s=n.map((t=>new Cf({shape:t.shape})));this.forwardLayer.stateSpec=s.slice(0,t/2),this.backwardLayer.stateSpec=s.slice(t/2),a.push(...s)}if(null!=s)throw new Rp("Support for constants in Bidirectional layers is not implemented yet.");const o=i[0]instanceof Nf;for(const t of i)if(t instanceof Nf!==o)throw new $p("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[t].concat(i),s=this.inputSpec.concat(a),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,e);return this.inputSpec=r,o}return super.apply(t,e)}call(t,e){return $i((()=>{const n=e.initialState;let s,r,i,a;if(null==n)s=this.forwardLayer.call(t,e),r=this.backwardLayer.call(t,e);else{const i=n.slice(0,n.length/2),a=n.slice(n.length/2);s=this.forwardLayer.call(t,Object.assign(e,{initialState:i})),r=this.backwardLayer.call(t,Object.assign(e,{initialState:a}))}return this.returnState&&(Array.isArray(s)&&(i=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=ko(r,1)),"concat"===this.mergeMode?a=Od([s,r]):"sum"===this.mergeMode?a=Vi(s,r):"ave"===this.mergeMode?a=Ba(.5,Vi(s,r)):"mul"===this.mergeMode?a=Ba(s,r):null==this.mergeMode&&(a=[s,r]),this.returnState?null==this.mergeMode?a.concat(i):[a].concat(i):a}))}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){xd(this.forwardLayer.name,(()=>{this.forwardLayer.build(t)})),xd(this.backwardLayer.name,(()=>{this.backwardLayer.build(t)})),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map((t=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=jf(e.layer);if(delete e.layer,null!=e.numConstants)throw new Rp("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=e;return s.layer=n,new t(s)}}Xy.className="Bidirectional",Ni(Xy),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(Qg||(Qg={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(Jg||(Jg={}));const Ky={};function Yy(t){return Ky[t]}function Zy(t,e,n,s,r){const i=e.inputParams[t];if(i&&void 0!==i.inputIndexStart){const t=i.inputIndexStart,a=0===i.inputIndexEnd?void 0:void 0===i.inputIndexEnd?t+1:i.inputIndexEnd;if("tensor"===i.type)return Qy(e.inputNames[i.inputIndexStart],n,s,r);if("tensors"===i.type)return e.inputNames.slice(t,a).map((t=>Qy(t,n,s,r)));const o=Qy(e.inputNames.slice(t)[0],n,s,r),l=o.dataSync();return"number"===i.type?l[0]:et(o.shape,l)}const a=e.attrParams[t];return a&&a.value}function Qy(t,e,n,s){const[r,i]=eb(t);if(null!=s){const t=s.getHashTableHandleByName(r);if(null!=t)return t}const a=n.currentContextIds.find((t=>!!e[tb(r,t)]));return void 0!==a?e[tb(r,a)][i]:void 0}function Jy(t,e){const[n,s]=eb(t);return[tb(n,e&&e.currentContextId),s]}function tb(t,e){return e?`${t}-${e}`:t}function eb(t){const e=t.split(":");return 1===e.length?[t,0]:[e[0],Number(e[e.length-1])]}function nb(t,e,n){let s=Zy("pad",t,e,n);if("explicit"===s){s=Zy("explicitPaddings",t,e,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let t=0;t<4;t++)r[t][0]=s[2*t],r[t][1]=s[2*t+1];return r}return s}function sb(t){return t.kept?t:Qr(t)}const rb=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],ib=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],ab=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],ob=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],lb=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],ub=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],cb=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],hb=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],pb=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],db=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],fb=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],mb=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],gb=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],yb=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],bb=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],xb=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],vb=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];class wb{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[].concat(...[r,i,a,o,l,u,c,f,d,h,m,g,y,b,x,v,p].map((t=>t.json)));this.opMappers=t.reduce(((t,e)=>(t[e.tfOpName]=e,t)),{})}transformGraph(t,e={}){const n=t.node,s=[],r=[],i=[],a=n.reduce(((t,e)=>(t[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?s.push(t[e.name]):"Const"===e.op?r.push(t[e.name]):null!=e.input&&0!==e.input.length||i.push(t[e.name]),t)),{});let o=[];const l=[];let u={},c={};null!=e&&(u=this.mapSignatureEntries(e.inputs),c=this.mapSignatureEntries(e.outputs));const h=Object.keys(a);h.forEach((t=>{const e=a[t];e.inputNames.forEach((t=>{const[n]=Jy(t);e.inputs.push(a[n]),a[n].children.push(e)}))})),0===Object.keys(c).length?h.forEach((t=>{const e=a[t];0===e.children.length&&l.push(e)})):Object.keys(c).forEach((t=>{const[e]=Jy(t),n=a[e];null!=n&&(n.signatureKey=c[t],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((t=>{const[e]=Jy(t),n=a[e];n&&(n.signatureKey=u[t],o.push(n))})):o=s;let p={};null!=t.library&&null!=t.library.function&&(p=t.library.function.reduce(((t,e)=>(t[e.signature.name]=this.mapFunction(e),t)),{}));const d={nodes:a,inputs:o,outputs:l,weights:r,placeholders:s,signature:e,functions:p};return i.length>0&&(d.initNodes=i),d}mapSignatureEntries(t){return Object.keys(t||{}).reduce(((e,n)=>(e[t[n].name]=n,e)),{})}mapNode(t){const e=Yy(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map((t=>t.startsWith("^")?t.substr(1):t)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr};return null!=e.inputs&&(n.inputParams=e.inputs.reduce(((t,e)=>(t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t)),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce(((e,n)=>{const s=n.type;let r;switch(n.type){case"string":r=kb(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=kb(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=Db(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Db(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=Sb(t.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=Sb(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=Rb(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Rb(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=Tb(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Tb(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=Fb(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Fb(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=$b(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=$b(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=Ob(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Ob(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=Nb(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Nb(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=Ab(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Ab(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=Cb(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Cb(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${t.op}`)}return e[n.name]={value:r,type:s},e}),{})),n}mapFunction(t){const e=t.nodeDef,n=[];let s={};null!=e&&(s=e.reduce(((t,e)=>(t[e.name]=this.mapNode(e),"Const"===e.op&&n.push(t[e.name]),t)),{}));const r=[],i=[];t.signature.inputArg.forEach((t=>{const[e]=Jy(t.name),n={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Ib(t.type),type:"dtype"}},children:[]};n.signatureKey=t.name,r.push(n),s[e]=n})),Object.keys(s).forEach((t=>{const e=s[t];e.inputNames.forEach((t=>{const[n]=Jy(t);e.inputs.push(s[n]),s[n].children.push(e)}))}));const a=t.ret;t.signature.outputArg.forEach((t=>{const[e,n]=Jy(a[t.name]),r=s[e];null!=r&&(r.defaultOutput=n,i.push(r))}));const o=this.mapArgsToSignature(t);return{nodes:s,inputs:r,outputs:i,weights:n,placeholders:[],signature:o}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce(((t,e)=>(t[e.name]=this.mapArgToTensorInfo(e),t)),{}),outputs:t.signature.outputArg.reduce(((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e)),{})}}mapArgToTensorInfo(t,e){let n=t.name;return null!=e&&(n=e[n]),{name:n,dtype:t.type}}}function _b(t,e){const n=Array.isArray(t)?String.fromCharCode.apply(null,t):function(t){const e=ht().global;if(void 0!==e.atob)return e.atob(t);if("undefined"!=typeof Buffer)return new Buffer(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(t);return e?n:n.toLowerCase()}function kb(t,e,n,s=!1){const r=t[e];return null!=r?_b(r.s,s):n}function Tb(t,e,n){const s=t[e];return s?s.b:n}function Sb(t,e,n){const s=t[e]||{},r=null!=s.i?s.i:null!=s.f?s.f:n;return"number"==typeof r?r:parseInt(r,10)}function Ib(t){switch("string"==typeof t&&(t=Qg[t]),t){case Qg.DT_FLOAT:return"float32";case Qg.DT_INT32:case Qg.DT_INT64:case Qg.DT_INT8:case Qg.DT_UINT8:return"int32";case Qg.DT_BOOL:return"bool";case Qg.DT_DOUBLE:return"float32";case Qg.DT_STRING:return"string";default:return null}}function Cb(t,e,n){const s=t[e];return s&&s.func?s.func.name:n}function Nb(t,e,n){const s=t[e];return s&&s.type?Ib(s.type):n}function Ab(t,e,n){const s=t[e];return s&&s.list&&s.list.type?s.list.type.map((t=>Ib(t))):n}function Eb(t){if(!t.unknownRank)return null!=t.dim?t.dim.map((t=>"number"==typeof t.size?t.size:parseInt(t.size,10))):[]}function $b(t,e,n){const s=t[e];return s&&s.shape?Eb(s.shape):n}function Rb(t,e,n){const s=t[e];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map((t=>"number"==typeof t?t:parseInt(t,10))):n}function Db(t,e,n,s=!1){const r=t[e];return r&&r.list&&r.list.s?r.list.s.map((t=>_b(t,s))):n}function Ob(t,e,n){const s=t[e];return s&&s.list&&s.list.shape?s.list.shape.map((t=>Eb(t))):n}function Fb(t,e,n){const s=t[e];return s&&s.list&&s.list.b?s.list.b:n}class Mb{constructor(t,e,n){this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map((t=>this.getInput(t))),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce(((t,e)=>(t[e]=this.getAttr(e),t)),{}))}getInput(t){return Qy(t,this.tensorMap,this.context)}getAttr(t,e){const n=this.node.rawAttrs[t];if(null!=n.tensor)return Qy(t,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Sb(this.node.rawAttrs,t,e);if(null!=n.s)return kb(this.node.rawAttrs,t,e);if(null!=n.b)return Tb(this.node.rawAttrs,t,e);if(null!=n.shape)return $b(this.node.rawAttrs,t,e);if(null!=n.type)return Nb(this.node.rawAttrs,t,e);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Rb(this.node.rawAttrs,t,e);if(null!=n.list.s)return Db(this.node.rawAttrs,t,e);if(null!=n.list.shape)return Ob(this.node.rawAttrs,t,e);if(null!=n.list.b)return Fb(this.node.rawAttrs,t,e);if(null!=n.list.type)return Ab(this.node.rawAttrs,t,e)}return e}}const Lb=dr({addN_:function(t){E(Array.isArray(t),(()=>"The argument passed to tf.addN() must be a list of tensors")),E(t.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${t.length}`));const e=t.map(((t,e)=>hr(t,`tensors${e}`,"addN"))),n=e[0];e.forEach((t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),e.forEach((t=>{if(!F(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const s=e;return sr.runKernel(vt,s)}});function zb(t,e,n=""){if("number"!=typeof t&&"number"!=typeof e){E(t.length===e.length,(()=>n+` Shapes ${t} and ${e} must match`));for(let s=0;s<t.length;s++){const r=t[s],i=e[s];E(r<0||i<0||r===i,(()=>n+` Shapes ${t} and ${e} must match`))}}}function Pb(t){return"number"!=typeof t&&!t.some((t=>t<0))}function Vb(t,e,n){let s=Bb(t,n);const r=!Pb(s);if(r&&0===e.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&e.forEach((t=>{s=Bb(t.shape,s)})),!Pb(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function Bb(t,e){if("number"==typeof t)return e;if("number"==typeof e)return t;if(t.length!==e.length)throw new Error(`Incompatible ranks during merge: ${t} vs. ${e}`);const n=[];for(let s=0;s<t.length;++s){const r=t[s],i=e[s];if(r>=0&&i>=0&&r!==i)throw new Error(`Incompatible shape during merge: ${t} vs. ${e}`);n[s]=r>=0?r:i}return n}class Wb{constructor(t,e,n,s,r,i,a){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=s,this.identicalElementShapes=r,this.dynamicSize=i,this.clearAfterRead=a,this.tensors=[],this.closed_=!1,this.idTensor=Li(0),Di(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.tensor.id)||e.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map((t=>this.read(t)))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},\n          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),zb(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);n.tensor=e,Di(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach(((t,n)=>this.write(t,e[n])))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let e=0;e<this.size();e++)t.push(e)}if(0===t.length)return gr([],[0].concat(this.elementShape));const n=this.readMany(t);return zb(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Lo(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(0===this.size())return gr([],[0].concat(this.elementShape));const e=[];for(let t=0;t<this.size();t++)e.push(t);const n=this.readMany(e);return zb(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),ha(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(t,Wo(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let n=0;const s=t.map((t=>(n+=t,n)));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const r=0===n?0:e.size/n,i=[];$i((()=>{e=sa(e,[1,n,r]);for(let n=0;n<t.length;++n){const a=[0,0===n?0:s[n-1],0],o=[1,t[n],r];i[n]=sa(Co(e,a,o),this.elementShape)}return i}));const a=[];for(let e=0;e<t.length;e++)a[e]=e;this.writeMany(a,i)}}class qb{constructor(t,e,n,s=-1){this.tensors=t,this.elementShape=e,this.elementDtype=n,null!=t&&t.forEach((t=>{if(n!==t.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${t.dtype}`);zb(e,t.shape,"TensorList shape mismatch: "),Di(t)})),this.idTensor=Li(0),this.maxNumElements=s,Di(this.idTensor)}get id(){return this.idTensor.id}copy(){return new qb([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.id)||e.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,n=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);zb(t,this.elementShape,"TensorList shape mismatch: ");const s=Vb(this.elementShape,this.tensors,t);return $i((()=>{const t=this.tensors.map((t=>sa(t,s)));return Lo(t,0)}))}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=Vb(this.elementShape,this.tensors,t),s=this.tensors.pop();return zb(s.shape,t,"TensorList shape mismatch: "),sa(s,n)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(zb(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Di(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=t}getItem(t,e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[t])throw new Error(`element at index ${t} is null.`);zb(this.tensors[t].shape,e,"TensorList shape mismatch: ");const s=Vb(this.elementShape,this.tensors,e);return sa(this.tensors[t],s)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||-1!==this.maxNumElements&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);zb(this.elementShape,e.shape,"TensorList shape mismatch: "),Di(e),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);zb(this.elementShape,n,"TensorList shape mismatch: "),t=t.slice(0,this.size());const s=Vb(this.elementShape,this.tensors,n);return 0===t.length?gr([],[0].concat(s)):$i((()=>{const e=t.map((t=>sa(this.tensors[t],s)));return Lo(e,0)}))}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);zb(this.elementShape,e,"TensorList shape mismatch: ");const n=Vb(this.elementShape,this.tensors,e);return 0===this.size()?gr([],[0].concat(n)):$i((()=>{const t=this.tensors.map((t=>sa(t,n)));return ha(t,0)}))}}const Ub=dr({maxPoolWithArgmax_:function(t,e,n,s,r=!1){const i={x:hr(t,"x","maxPoolWithArgmax")},a={filterSize:e,strides:n,pad:s,includeBatchInIndex:r},o=sr.runKernel(Ke,i,a);return{result:o[0],indexes:o[1]}}});function Gb(t,e,n){const[s,r]=Zy("fusedOps",t,e,n),i="biasadd"===s,a="prelu"===r,o="fusedbatchnorm"===s,l=Zy("numArgs",t,e,n);if(i){if(a&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(o)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const u=Zy("strides",t,e,n),c=nb(t,e,n),h=Zy("dataFormat",t,e,n).toUpperCase(),p=Zy("dilations",t,e,n),[d,f]=Zy("args",t,e,n);return{stride:u,pad:c,dataFormat:h,dilations:p,biasArg:d,preluArg:f,activationFunc:r,leakyreluAlpha:Zy("leakyreluAlpha",t,e,n)}}function jb(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const s={start:t,stop:e,num:n};return sr.runKernel(Fe,{},s)}const Hb=dr({multinomial_:function(t,e,n,s=!1){const r=hr(t,"logits","multinomial"),i=r.size,a=r.rank;if(i<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${i}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);n=n||Math.random();const o={logits:1===a?sa(r,[1,-1]):r},l={numSamples:e,seed:n,normalized:s},u=sr.runKernel(en,o,l);return 1===a?sa(u,[u.size]):u}}),Xb=async function(t){const e=hr(t,"condition","whereAsync","bool"),n=await e.data(),s=ju(e.shape,n);return t!==e&&e.dispose(),s};function Kb(t,e,n){return{boxes:Zy("boxes",t,e,n),scores:Zy("scores",t,e,n),maxOutputSize:Zy("maxOutputSize",t,e,n),iouThreshold:Zy("iouThreshold",t,e,n),scoreThreshold:Zy("scoreThreshold",t,e,n),softNmsSigma:Zy("softNmsSigma",t,e,n)}}class Yb{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=Li(0),this.tensorMap=new Map,Di(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Li(this.size(),"int32")}async import(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),$i((()=>{const t=Wo(e),s=n.length,r=t.length;E(s===r,(()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${r} elements.`));for(let e=0;e<s;e++){const s=n[e],r=t[e];Di(r),this.tensorMap.set(s,r)}return this.handle}))}async find(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return $i((()=>{const t=[];for(let s=0;s<n.length;s++){const r=n[s],i=this.findWithDefault(r,e);t.push(i)}return Lo(t)}))}findWithDefault(t,e){const n=this.tensorMap.get(t);return null!=n?n:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}}const Zb=dr({sparseToDense_:function(t,e,n,s=0){const r=hr(t,"sparseIndices","sparseToDense","int32"),i=hr(e,"sparseValues","sparseToDense"),a=hr(s,"defaultValue","sparseToDense",i.dtype);!function(t,e,n,s){if("int32"!==t.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const r=t.rank>0?t.shape[0]:1,i=t.rank>1?t.shape[1]:1;if(n.length!==i)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${i}.`);const a=e.size;if(0!==e.rank&&(1!==e.rank||a!==r))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${r}]`);if(e.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,i,n,a);const o={sparseIndices:r,sparseValues:i,defaultValue:a},l={outputShape:n};return sr.runKernel(jn,o,l)}}),Qb=dr({bincount_:function(t,e,n){const s=hr(t,"x","bincount"),r=hr(e,"weights","bincount");E("int32"===s.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`)),E(n>=0,(()=>`size must be non-negative, but got ${n}.`)),E(r.size===s.size||0===r.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`));const i={x:s,weights:r},a={size:n};return sr.runKernel(Mt,i,a)}}),Jb=dr({denseBincount_:function(t,e,n,s=!1){const r=hr(t,"x","denseBincount"),i=hr(e,"weights","denseBincount");E("int32"===r.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`)),E(r.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`)),E(n>=0,(()=>`size must be non-negative, but got ${n}.`)),E(i.size===r.size||0===i.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${i.shape}.`));const a={x:r,weights:i},o={size:n,binaryOutput:s};return sr.runKernel(Jt,a,o)}}),tx=dr({scatterND_:function(t,e,n){const s=hr(t,"indices","scatterND","int32"),r=hr(e,"updates","scatterND");vu(r,s,n);const i={indices:s,updates:r},a={shape:n};return sr.runKernel(An,i,a)}}),ex=dr({gatherND_:function(t,e){const n=hr(e,"indices","gatherND","int32"),s={params:hr(t,"x","gatherND"),indices:n};return sr.runKernel(ke,s)}});function nx(t,e,n,s){const r=((t,e,n)=>{switch(t.category){case"arithmetic":return $i((()=>((t,e,n)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[Vi(Zy("a",t,e,n),Zy("b",t,e,n))];case"AddN":return[Lb(Zy("tensors",t,e,n))];case"FloorMod":case"Mod":return[yp(Zy("a",t,e,n),Zy("b",t,e,n))];case"Mul":return[Ba(Zy("a",t,e,n),Zy("b",t,e,n))];case"RealDiv":case"Div":return[ka(Zy("a",t,e,n),Zy("b",t,e,n))];case"DivNoNan":return[ip(Zy("a",t,e,n),Zy("b",t,e,n))];case"FloorDiv":return[_a(Zy("a",t,e,n),Zy("b",t,e,n))];case"Sub":return[Wa(Zy("a",t,e,n),Zy("b",t,e,n))];case"Minimum":return[Za(Zy("a",t,e,n),Zy("b",t,e,n))];case"Maximum":return[Xa(Zy("a",t,e,n),Zy("b",t,e,n))];case"Pow":return[zl(Zy("a",t,e,n),Zy("b",t,e,n))];case"SquaredDifference":return[jl(Zy("a",t,e,n),Zy("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"basic_math":return $i((()=>((t,e,n)=>{switch(t.op){case"Abs":case"ComplexAbs":return[Pi(Zy("x",t,e,n))];case"Acos":return[Xh(Zy("x",t,e,n))];case"Acosh":return[Kh(Zy("x",t,e,n))];case"Asin":return[Zh(Zy("x",t,e,n))];case"Asinh":return[Qh(Zy("x",t,e,n))];case"Atan":return[Jh(Zy("x",t,e,n))];case"Atan2":return[tp(Zy("x",t,e,n),Zy("y",t,e,n))];case"Atanh":return[ep(Zy("x",t,e,n))];case"Ceil":return[np(Zy("x",t,e,n))];case"Complex":return[fr(Zy("real",t,e,n),Zy("imag",t,e,n))];case"Cos":return[Lh(Zy("x",t,e,n))];case"Cosh":return[Ph(Zy("x",t,e,n))];case"Elu":return[Ta(Zy("x",t,e,n))];case"Erf":return[op(Zy("x",t,e,n))];case"Exp":return[Pa(Zy("x",t,e,n))];case"Expm1":return[lp(Zy("x",t,e,n))];case"Floor":return[Da(Zy("x",t,e,n))];case"Log":return[za(Zy("x",t,e,n))];case"Log1p":return[Hl(Zy("x",t,e,n))];case"Imag":return[Xo(Zy("x",t,e,n))];case"Neg":return[lo(Zy("x",t,e,n))];case"Reciprocal":return[vp(Zy("x",t,e,n))];case"Real":return[Ko(Zy("x",t,e,n))];case"Relu":return[_o(Zy("x",t,e,n))];case"Round":return[wp(Zy("x",t,e,n))];case"Selu":return[To(Zy("x",t,e,n))];case"Sigmoid":return[Io(Zy("x",t,e,n))];case"Sin":return[kc(Zy("x",t,e,n))];case"Sign":return[_p(Zy("x",t,e,n))];case"Sinh":return[Sc(Zy("x",t,e,n))];case"Softplus":return[Do(Zy("x",t,e,n))];case"Sqrt":return[Fo(Zy("x",t,e,n))];case"Square":return[ao(Zy("x",t,e,n))];case"Tanh":return[zo(Zy("x",t,e,n))];case"Tan":return[Tp(Zy("x",t,e,n))];case"ClipByValue":return[ca(Zy("x",t,e,n),Zy("clipValueMin",t,e,n),Zy("clipValueMax",t,e,n))];case"Relu6":return[el(Zy("x",t,e,n))];case"Rsqrt":return[zc(Qy(t.inputNames[0],e,n))];case"Prod":return[xp(Zy("x",t,e,n),Zy("axes",t,e,n))];case"LeakyRelu":return[La(Zy("x",t,e,n),Zy("alpha",t,e,n))];case"Prelu":return[go(Zy("x",t,e,n),Zy("alpha",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"control":return(async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const s=Zy("thenBranch",t,e,n),r=Zy("elseBranch",t,e,n),i=Zy("cond",t,e,n),a=Zy("args",t,e,n);return(await i.data())[0]?n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const s=Zy("body",t,e,n),r=Zy("cond",t,e,n),i=Zy("args",t,e,n),a=await n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap),o=i.map((t=>t.id));let l=await a[0].data();a.forEach((t=>{t.kept||-1!==o.indexOf(t.id)||t.dispose()}));let u=i;for(;l[0];){const t=u;u=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const e=u.map((t=>t.id));t.forEach((t=>{t.kept||-1!==o.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}));const i=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await i[0].data(),i.forEach((t=>{t.kept||-1!==o.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}))}return u}case"LoopCond":return[sb(Zy("pred",t,e,n))];case"Switch":{const s=Zy("pred",t,e,n);let r=Zy("data",t,e,n);return r.kept||(r=sb(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=t.inputNames.find((t=>void 0!==Qy(t,e,n)));return s?[sb(Qy(s,e,n))]:void 0}case"Enter":{const s=Zy("frameName",t,e,n),r=Zy("tensor",t,e,n);return n.enterFrame(s),[sb(r)]}case"Exit":{const s=Zy("tensor",t,e,n);return n.exitFrame(),[sb(s)]}case"NextIteration":{const s=Zy("tensor",t,e,n);return n.nextIteration(),[sb(s)]}case"TensorArrayV3":{const s=Zy("size",t,e,n),r=Zy("dtype",t,e,n),i=Zy("elementShape",t,e,n),a=Zy("dynamicSize",t,e,n),o=Zy("clearAfterRead",t,e,n),l=Zy("identicalElementShapes",t,e,n),u=Zy("name",t,e,n),c=new Wb(u,r,s,i,l,a,o);return n.addTensorArray(c),[c.idTensor,Li(1)]}case"TensorArrayWriteV3":{const s=Zy("tensorArrayId",t,e,n),r=Zy("index",t,e,n),i=Zy("tensor",t,e,n),a=n.getTensorArray(s.id);return a.write(r,i),[a.idTensor]}case"TensorArrayReadV3":{const s=Zy("tensorArrayId",t,e,n),r=Zy("index",t,e,n);return[n.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=Zy("tensorArrayId",t,e,n),r=Zy("indices",t,e,n),i=Zy("dtype",t,e,n);return[n.getTensorArray(s.id).gather(r,i)]}case"TensorArrayScatterV3":{const s=Zy("tensorArrayId",t,e,n),r=Zy("indices",t,e,n),i=Zy("tensor",t,e,n),a=n.getTensorArray(s.id);return a.scatter(r,i),[a.idTensor]}case"TensorArrayConcatV3":{const s=Zy("tensorArrayId",t,e,n),r=n.getTensorArray(s.id),i=Zy("dtype",t,e,n);return[r.concat(i)]}case"TensorArraySplitV3":{const s=Zy("tensorArrayId",t,e,n),r=Zy("tensor",t,e,n),i=Zy("lengths",t,e,n),a=n.getTensorArray(s.id);return a.split(i,r),[a.idTensor]}case"TensorArraySizeV3":{const s=Zy("tensorArrayId",t,e,n);return[Li(n.getTensorArray(s.id).size(),"int32")]}case"TensorArrayCloseV3":{const s=Zy("tensorArrayId",t,e,n),r=n.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=Zy("tensorListId",t,e,n),r=Zy("index",t,e,n),i=Zy("tensor",t,e,n),a=n.getTensorList(s.id);return a.setItem(r,i),[a.idTensor]}case"TensorListGetItem":{const s=Zy("tensorListId",t,e,n),r=Zy("index",t,e,n),i=Zy("elementShape",t,e,n),a=Zy("elementDType",t,e,n);return[n.getTensorList(s.id).getItem(r,i,a)]}case"TensorListScatterV2":case"TensorListScatter":{const s=Zy("indices",t,e,n),r=function(t,e,n,s){if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const r=Math.max(...e);if(null!=s&&-1!==s&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const i=new qb([],n,t.dtype,s),a=Wo(t,0);return e.forEach(((t,e)=>{i.setItem(t,a[e])})),i}(Zy("tensor",t,e,n),s,Zy("elementShape",t,e,n),Zy("numElements",t,e,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=Zy("elementShape",t,e,n),r=Zy("elementDType",t,e,n);let i;i="TensorListReserve"===t.op?"numElements":"maxNumElements";const a=function(t,e,n){return new qb([],t,e,n)}(s,r,Zy(i,t,e,n));return n.addTensorList(a),[a.idTensor]}case"TensorListGather":{const s=Zy("tensorListId",t,e,n),r=Zy("indices",t,e,n),i=Zy("elementShape",t,e,n),a=Zy("elementDType",t,e,n);return[n.getTensorList(s.id).gather(r,a,i)]}case"TensorListStack":{const s=Zy("tensorListId",t,e,n),r=Zy("elementShape",t,e,n),i=Zy("elementDType",t,e,n),a=Zy("numElements",t,e,n);return[n.getTensorList(s.id).stack(r,i,a)]}case"TensorListFromTensor":{const s=function(t,e,n){const s=t.dtype;if(t.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${t.shape}`);if(t.dtype!==n)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${n}`);zb(t.shape.slice(1),e,"TensorList shape mismatch: ");const r=Wo(t);return new qb(r,e,s)}(Zy("tensor",t,e,n),Zy("elementShape",t,e,n),Zy("elementDType",t,e,n));return n.addTensorList(s),[s.idTensor]}case"TensorListConcat":{const s=Zy("tensorListId",t,e,n),r=n.getTensorList(s.id),i=Zy("dtype",t,e,n),a=Zy("elementShape",t,e,n);return[r.concat(i,a)]}case"TensorListPushBack":{const s=Zy("tensorListId",t,e,n),r=Zy("tensor",t,e,n),i=n.getTensorList(s.id);return i.pushBack(r),[i.idTensor]}case"TensorListPopBack":{const s=Zy("tensorListId",t,e,n),r=Zy("elementShape",t,e,n),i=Zy("elementDType",t,e,n);return[n.getTensorList(s.id).popBack(r,i)]}case"TensorListSplit":{const s=Zy("tensor",t,e,n),r=Zy("elementShape",t,e,n),i=function(t,e,n){let s=0;const r=e.map((t=>(s+=t,s)));if(s!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${s}, and tensor's shape is: ${t.shape}`);const i=Bb(t.shape.slice(1),n),a=0===s?0:t.size/s,o=$i((()=>{const n=[];t=sa(t,[1,s,a]);for(let s=0;s<e.length;++s){const o=[0,0===s?0:r[s-1],0],l=[1,e[s],a];n[s]=sa(Co(t,o,l),i)}return t.dispose(),n})),l=new qb([],n,t.dtype,e.length);for(let t=0;t<o.length;t++)l.setItem(t,o[t]);return l}(s,Zy("lengths",t,e,n),r);return n.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n);case"convolution":return $i((()=>((t,e,n)=>{switch(t.op){case"Conv1D":{const s=Zy("stride",t,e,n),r=Zy("pad",t,e,n),i=Zy("dataFormat",t,e,n).toUpperCase(),a=Zy("dilation",t,e,n);return[ya(Zy("x",t,e,n),Zy("filter",t,e,n),s,r,i,a)]}case"Conv2D":{const s=Zy("strides",t,e,n),r=nb(t,e,n),i=Zy("dataFormat",t,e,n).toUpperCase(),a=Zy("dilations",t,e,n);return[ga(Zy("x",t,e,n),Zy("filter",t,e,n),[s[1],s[2]],r,i,[a[1],a[2]])]}case"_FusedConv2D":{const{stride:s,pad:r,dataFormat:i,dilations:a,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:c}=Gb(t,e,n);return[ol({x:Zy("x",t,e,n),filter:Zy("filter",t,e,n),strides:[s[1],s[2]],pad:r,dataFormat:i,dilations:[a[1],a[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:r,dataFormat:i,dilations:a,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:c}=Gb(t,e,n);return[cl({x:Zy("x",t,e,n),filter:Zy("filter",t,e,n),strides:[s[1],s[2]],pad:r,dataFormat:i,dilations:[a[1],a[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=Zy("outputShape",t,e,n),r=Zy("strides",t,e,n),i=nb(t,e,n);return[xa(Zy("x",t,e,n),Zy("filter",t,e,n),s,[r[1],r[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=Zy("strides",t,e,n),r=nb(t,e,n),i=Zy("dilations",t,e,n),a=Zy("dataFormat",t,e,n).toUpperCase();return[wa(Zy("input",t,e,n),Zy("filter",t,e,n),[s[1],s[2]],r,a,[i[1],i[2]])]}case"Conv3D":{const s=Zy("strides",t,e,n),r=Zy("pad",t,e,n),i=Zy("dataFormat",t,e,n).toUpperCase(),a=Zy("dilations",t,e,n);return[va(Zy("x",t,e,n),Zy("filter",t,e,n),[s[1],s[2],s[3]],r,i,[a[1],a[2],a[3]])]}case"AvgPool":{const s=Zy("strides",t,e,n),r=Zy("pad",t,e,n),i=Zy("kernelSize",t,e,n);return[ra(Zy("x",t,e,n),[i[1],i[2]],[s[1],s[2]],r)]}case"MaxPool":{const s=Zy("strides",t,e,n),r=Zy("pad",t,e,n),i=Zy("kernelSize",t,e,n);return[ja(Zy("x",t,e,n),[i[1],i[2]],[s[1],s[2]],r)]}case"MaxPoolWithArgmax":{const s=Zy("strides",t,e,n),r=Zy("pad",t,e,n),i=Zy("kernelSize",t,e,n),a=Zy("includeBatchInIndex",t,e,n),{result:o,indexes:l}=Ub(Zy("x",t,e,n),[i[1],i[2]],[s[1],s[2]],r,a);return[o,l]}case"AvgPool3D":{const s=Zy("strides",t,e,n),r=Zy("pad",t,e,n),i=Zy("kernelSize",t,e,n);return[ia(Zy("x",t,e,n),[i[1],i[2],i[3]],[s[1],s[2],s[3]],r)]}case"MaxPool3D":{const s=Zy("strides",t,e,n),r=Zy("pad",t,e,n),i=Zy("kernelSize",t,e,n);return[Ha(Zy("x",t,e,n),[i[1],i[2],i[3]],[s[1],s[2],s[3]],r)]}case"Dilation2D":{const s=Zy("strides",t,e,n),r=Zy("pad",t,e,n),i=Zy("dilations",t,e,n),a=s[1],o=s[2],l=i[1],u=i[2];return[rp(Zy("x",t,e,n),Zy("filter",t,e,n),[a,o],r,[l,u],"NHWC")]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"creation":return $i((()=>((t,e,n)=>{switch(t.op){case"Fill":{const s=Zy("shape",t,e,n),r=Zy("dtype",t,e,n);return[Ra(s,Zy("value",t,e,n),r)]}case"LinSpace":return[jb(Zy("start",t,e,n),Zy("stop",t,e,n),Zy("num",t,e,n))];case"Multinomial":{const s=Zy("logits",t,e,n),r=Zy("numSamples",t,e,n),i=Zy("seed",t,e,n);return[Hb(s,r,i)]}case"OneHot":{const s=Zy("indices",t,e,n),r=Zy("depth",t,e,n),i=Zy("onValue",t,e,n),a=Zy("offValue",t,e,n);return[co(s,r,i,a)]}case"Ones":return[po(Zy("shape",t,e,n),Zy("dtype",t,e,n))];case"OnesLike":return[fo(Zy("x",t,e,n))];case"RandomUniform":return[wo(Zy("shape",t,e,n),Zy("minval",t,e,n),Zy("maxval",t,e,n),Zy("dtype",t,e,n))];case"Range":return[Ml(Zy("start",t,e,n),Zy("stop",t,e,n),Zy("step",t,e,n),Zy("dtype",t,e,n))];case"TruncatedNormal":{const s=Zy("shape",t,e,n),r=Zy("mean",t,e,n),i=Zy("stdDev",t,e,n),a=Zy("seed",t,e,n);return[Bo(s,r,i,Zy("dtype",t,e,n),a)]}case"Zeros":return[ho(Zy("shape",t,e,n),Zy("dtype",t,e,n))];case"ZerosLike":return[Go(Zy("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"dynamic":return(async(t,e,n)=>{switch(t.op){case"NonMaxSuppressionV5":{const{boxes:s,scores:r,maxOutputSize:i,iouThreshold:a,scoreThreshold:o,softNmsSigma:l}=Kb(t,e,n),u=await Kl.nonMaxSuppressionWithScoreAsync(s,r,i,a,o,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:s,scores:r,maxOutputSize:i,iouThreshold:a,scoreThreshold:o}=Kb(t,e,n),l=Zy("padToMaxOutputSize",t,e,n),u=await Kl.nonMaxSuppressionPaddedAsync(s,r,i,a,o,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:s,scores:r,maxOutputSize:i,iouThreshold:a,scoreThreshold:o}=Kb(t,e,n);return[await Kl.nonMaxSuppressionAsync(s,r,i,a,o)]}case"Where":{const s=Zr(Zy("condition",t,e,n),"bool"),r=[await Xb(s)];return s.dispose(),r}case"ListDiff":return async function(t,e){const n=hr(t,"x","setdiff1d"),s=hr(e,"y","setdiff1d");E(n.dtype===s.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`)),E(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),E(1===s.rank,(()=>`y should be 1D tensor, but got y (${s.shape}).`));const r=await n.data(),i=await s.data(),a=new Set(i);let o=0;for(let t=0;t<r.length;t++)a.has(r[t])||o++;const l=new Os([o],n.dtype),u=new Os([o],"int32");for(let t=0,e=0;t<r.length;t++)a.has(r[t])||(l.values[e]=r[t],u.values[e]=t,e++);return[l.toTensor(),u.toTensor()]}(Zy("x",t,e,n),Zy("y",t,e,n));default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n);case"evaluation":return $i((()=>((t,e,n)=>{switch(t.op){case"TopKV2":{const s=Zy("x",t,e,n),r=Zy("k",t,e,n),i=Zy("sorted",t,e,n),a=Sp(s,r,i);return[a.values,a.indices]}case"Unique":{const s=Zy("x",t,e,n),r=Ip(s);return[r.values,r.indices]}case"UniqueV2":{const s=Zy("x",t,e,n),r=Zy("axis",t,e,n),i=Ip(s,r);return[i.values,i.indices]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"image":return $i((()=>((t,e,n)=>{switch(t.op){case"ResizeBilinear":{const s=Zy("images",t,e,n),r=Zy("size",t,e,n),i=Zy("alignCorners",t,e,n),a=Zy("halfPixelCenters",t,e,n);return[Kl.resizeBilinear(s,[r[0],r[1]],i,a)]}case"ResizeNearestNeighbor":{const s=Zy("images",t,e,n),r=Zy("size",t,e,n),i=Zy("alignCorners",t,e,n),a=Zy("halfPixelCenters",t,e,n);return[Kl.resizeNearestNeighbor(s,[r[0],r[1]],i,a)]}case"CropAndResize":{const s=Zy("image",t,e,n),r=Zy("boxes",t,e,n),i=Zy("boxInd",t,e,n),a=Zy("cropSize",t,e,n),o=Zy("method",t,e,n),l=Zy("extrapolationValue",t,e,n);return[Kl.cropAndResize(s,r,i,a,o,l)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"graph":return $i((()=>((t,e,n)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const s=Zy("default",t,e,n);return[Qy(t.name,e,n)||s];case"Placeholder":return[Qy(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[sb(Zy("x",t,e,n))];case"IdentityN":return Zy("x",t,e,n).map((t=>sb(t)));case"Shape":return[Po(Zy("x",t,e,n).shape,"int32")];case"ShapeN":return Zy("x",t,e,n).map((t=>Po(t.shape)));case"Size":return[Li(Zy("x",t,e,n).size,"int32")];case"Rank":return[Li(Zy("x",t,e,n).rank,"int32")];case"NoOp":return[Li(1)];case"Print":const r=Zy("x",t,e,n),i=Zy("data",t,e,n),a=Zy("message",t,e,n),o=Zy("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(a);for(let t=0;t<i.length;t++)console.log(Array.prototype.slice.call(i[t].dataSync()).slice(0,o));return[r];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"logical":return $i((()=>((t,e,n)=>{switch(t.op){case"Equal":return[Na(Zy("a",t,e,n),Zy("b",t,e,n))];case"NotEqual":return[uo(Zy("a",t,e,n),Zy("b",t,e,n))];case"Greater":return[Fa(Zy("a",t,e,n),Zy("b",t,e,n))];case"GreaterEqual":return[Ma(Zy("a",t,e,n),Zy("b",t,e,n))];case"Less":return[sh(Zy("a",t,e,n),Zy("b",t,e,n))];case"LessEqual":return[Fl(Zy("a",t,e,n),Zy("b",t,e,n))];case"LogicalAnd":return[Ga(Zy("a",t,e,n),Zy("b",t,e,n))];case"LogicalNot":return[Rh(Zy("a",t,e,n))];case"LogicalOr":return[fp(Zy("a",t,e,n),Zy("b",t,e,n))];case"Select":case"SelectV2":return[Uo(Zy("condition",t,e,n),Zy("a",t,e,n),Zy("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"matrices":return $i((()=>((t,e,n)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[hl(Zy("a",t,e,n),Zy("b",t,e,n),Zy("transposeA",t,e,n),Zy("transposeB",t,e,n))];case"Transpose":return[jo(Zy("x",t,e,n),Zy("perm",t,e,n))];case"_FusedMatMul":const[s,r]=Zy("fusedOps",t,e,n),i="biasadd"===s,a="prelu"===r,o=Zy("numArgs",t,e,n),l=Zy("leakyreluAlpha",t,e,n);if(i){if(a&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,c]=Zy("args",t,e,n);return[pl({a:Zy("a",t,e,n),b:Zy("b",t,e,n),transposeA:Zy("transposeA",t,e,n),transposeB:Zy("transposeB",t,e,n),bias:u,activation:r,preluActivationWeights:c,leakyreluAlpha:l})];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"normalization":return $i((()=>((t,e,n)=>{switch(t.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[aa(Zy("x",t,e,n),Zy("mean",t,e,n),Zy("variance",t,e,n),Zy("offset",t,e,n),Zy("scale",t,e,n),Zy("epsilon",t,e,n))];case"LRN":return[pp(Zy("x",t,e,n),Zy("radius",t,e,n),Zy("bias",t,e,n),Zy("alpha",t,e,n),Zy("beta",t,e,n))];case"Softmax":return[Ro(Zy("x",t,e,n))];case"LogSoftmax":return[Ua(Zy("x",t,e,n))];case"SparseToDense":return[Zb(Zy("sparseIndices",t,e,n),Zy("outputShape",t,e,n),Zy("sparseValues",t,e,n),Zy("defaultValue",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"reduction":return $i((()=>((t,e,n)=>{switch(t.op){case"Max":{const s=Zy("axis",t,e,n),r=Zy("keepDims",t,e,n);return[Va(Zy("x",t,e,n),s,r)]}case"Mean":{const s=Zy("axis",t,e,n),r=Zy("keepDims",t,e,n);return[Ka(Zy("x",t,e,n),s,r)]}case"Min":{const s=Zy("axis",t,e,n),r=Zy("keepDims",t,e,n);return[Ya(Zy("x",t,e,n),s,r)]}case"Sum":{const s=Zy("axis",t,e,n),r=Zy("keepDims",t,e,n);return[qa(Zy("x",t,e,n),s,r)]}case"All":{const s=Zy("axis",t,e,n),r=Zy("keepDims",t,e,n);return[Bi(Zy("x",t,e,n),s,r)]}case"Any":{const s=Zy("axis",t,e,n),r=Zy("keepDims",t,e,n);return[Wi(Zy("x",t,e,n),s,r)]}case"ArgMax":{const s=Zy("axis",t,e,n);return[qi(Zy("x",t,e,n),s)]}case"ArgMin":{const s=Zy("axis",t,e,n);return[Yh(Zy("x",t,e,n),s)]}case"Prod":{const s=Zy("axis",t,e,n),r=Zy("keepDims",t,e,n);return[xp(Zy("x",t,e,n),s,r)]}case"Cumsum":{const s=Zy("axis",t,e,n),r=Zy("exclusive",t,e,n),i=Zy("reverse",t,e,n);return[Cc(Zy("x",t,e,n),s,r,i)]}case"Bincount":const s=Zy("x",t,e,n),r=Zy("weights",t,e,n),i=Zy("size",t,e,n);return[Qb(s,r,i)];case"DenseBincount":{const s=Zy("x",t,e,n),r=Zy("weights",t,e,n),i=Zy("size",t,e,n),a=Zy("binaryOutput",t,e,n);return[Jb(s,r,i,a)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"slice_join":return $i((()=>((t,e,n)=>{switch(t.op){case"ConcatV2":case"Concat":{const s=Zy("n",t,e,n),r=Zy("axis",t,e,n);let i=Zy("tensors",t,e,n);return i=i.slice(0,s),[ha(i,r)]}case"Gather":{const s=Zy("x",t,e,n),r=Zy("indices",t,e,n);return[Oa(s,Zr(r,"int32"),0)]}case"GatherV2":{const s=Zy("axis",t,e,n),r=Zy("batchDims",t,e,n),i=Zy("x",t,e,n),a=Zy("indices",t,e,n);return[Oa(i,Zr(a,"int32"),s,r)]}case"Reverse":{const s=Zy("dims",t,e,n),r=[];for(let t=0;t<s.length;t++)s[t]&&r.push(t);const i=Zy("x",t,e,n);return[ko(i,r)]}case"ReverseV2":{const s=Zy("axis",t,e,n),r=Zy("x",t,e,n);return[ko(r,s)]}case"Slice":{const s=Zy("begin",t,e,n),r=Zy("size",t,e,n);return[Co(Zy("x",t,e,n),s,r)]}case"StridedSlice":{const s=Zy("begin",t,e,n),r=Zy("end",t,e,n),i=Zy("strides",t,e,n),a=Zy("beginMask",t,e,n),o=Zy("endMask",t,e,n),l=Zy("ellipsisMask",t,e,n),u=Zy("newAxisMask",t,e,n),c=Zy("shrinkAxisMask",t,e,n),h=Zy("x",t,e,n);return[kp(h,s,r,i,a,o,l,u,c)]}case"Pack":return $i((()=>{const s=Zy("axis",t,e,n),r=Zy("tensors",t,e,n),i=r[0].shape,a=Mo(r[0]).shape,o=r.map((t=>{const e=F(t.shape,i);if(!e&&!F(Mo(t).shape,a))throw new Error("the input tensors shape does not match");return e?t:sa(t,i)}));return[Lo(o,s)]}));case"Unpack":{const s=Zy("axis",t,e,n),r=Zy("tensor",t,e,n);return Wo(r,s)}case"Tile":{const s=Zy("reps",t,e,n);return[Ea(Zy("x",t,e,n),s)]}case"Split":case"SplitV":{const s=Zy("axis",t,e,n),r=Zy("numOrSizeSplits",t,e,n),i=Zy("x",t,e,n);return Oo(i,r,s)}case"ScatterNd":{const s=Zy("indices",t,e,n),r=Zy("values",t,e,n),i=Zy("shape",t,e,n);return[tx(s,r,i)]}case"GatherNd":{const s=Zy("x",t,e,n),r=Zy("indices",t,e,n);return[ex(s,r)]}case"SparseToDense":{const s=Zy("sparseIndices",t,e,n),r=Zy("outputShape",t,e,n),i=Zy("sparseValues",t,e,n),a=Zy("defaultValue",t,e,n);return[Zb(s,i,r,i.dtype===a.dtype?a:Zr(a,i.dtype))]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"spectral":return $i((()=>((t,e,n)=>{switch(t.op){case"FFT":return[Yo(Zy("x",t,e,n))];case"IFFT":return[Qo(Zy("x",t,e,n))];case"RFFT":return[Zo(Zy("x",t,e,n))];case"IRFFT":return[Jo(Zy("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"transformation":return $i((()=>((t,e,n)=>{switch(t.op){case"Cast":return[Zr(Zy("x",t,e,n),Zy("dtype",t,e,n))];case"ExpandDims":{const s=Zy("axis",t,e,n);return[Aa(Zy("x",t,e,n),s)]}case"Squeeze":{const s=Zy("axis",t,e,n);return[Mo(Zy("x",t,e,n),s)]}case"Reshape":return[sa(Zy("x",t,e,n),Zy("shape",t,e,n))];case"MirrorPad":return[gp(Zy("x",t,e,n),Zy("padding",t,e,n),Zy("mode",t,e,n))];case"PadV2":case"Pad":return[mo(Zy("x",t,e,n),Zy("padding",t,e,n),Zy("constantValue",t,e,n))];case"SpaceToBatchND":{const s=Zy("blockShape",t,e,n),r=Zy("paddings",t,e,n);return[cc(Zy("x",t,e,n),s,r)]}case"BatchToSpaceND":{const s=Zy("blockShape",t,e,n),r=Zy("crops",t,e,n);return[Uh(Zy("x",t,e,n),s,r)]}case"DepthToSpace":{const s=Zy("blockSize",t,e,n),r=Zy("dataFormat",t,e,n).toUpperCase();return[sp(Zy("x",t,e,n),s,r)]}case"BroadcastTo":return[qo(Zy("x",t,e,n),Zy("shape",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"hash_table":return(async(t,e,n,s)=>{switch(t.op){case"HashTable":case"HashTableV2":{const r=Zy("keyDType",t,e,n),i=Zy("valueDType",t,e,n),a=new Yb(r,i);return s.addHashTable(t.name,a),[a.handle]}case"LookupTableImport":case"LookupTableImportV2":{const r=Zy("tableHandle",t,e,n,s),i=Zy("keys",t,e,n),a=Zy("values",t,e,n),o=s.getHashTableById(r.id);return[await o.import(i,a)]}case"LookupTableFind":case"LookupTableFindV2":{const r=Zy("tableHandle",t,e,n,s),i=Zy("keys",t,e,n),a=Zy("defaultValue",t,e,n),o=s.getHashTableById(r.id);return[await o.find(i,a)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=Zy("tableHandle",t,e,n,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n,s);case"custom":const r=Yy(t.op);if(r&&r.customExecutor)return r.customExecutor(new Mb(t,e,n));throw TypeError(`Custom op ${t.op} is not registered.`);default:throw TypeError(`Unknown op '${t.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(t,e,n);return lt(r)?r.then((t=>[].concat(t))):[].concat(r)}class sx{constructor(t={},e={},n={},s={}){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=n,this.functionMap=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map((t=>0===t.id&&0===t.iterationId?"":`${t.frameName}-${t.iterationId}`)).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}function rx(t,e,n,s){const r=new Set,i=[];let a=null,o=null;const l=new Set,u=Object.keys(t).map((t=>eb(t)[0]));let c=[];null!=s&&(c=s.map((t=>eb(t.name)[0])));const h=[...e];for(;h.length>0;){const t=h.pop();(lx(t)||ux(t)||cx(t))&&null==a&&(a=t,o=a.children.map((t=>t.name)).filter((t=>r.has(t)))),r.add(t.name),null==n[t.name]&&-1===u.indexOf(t.name)&&-1===c.indexOf(t.name)&&(0!==t.inputs.length?t.inputs.forEach((t=>{l.has(t.name)||(l.add(t.name),h.push(t))})):i.push(t.name))}return{inputs:t,outputs:e,usedNodes:r,missingInputs:i,dynamicNode:a,syncInputs:o}}const ix=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],ax=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],ox=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function lx(t){return ix.indexOf(t.op)>=0}function ux(t){return ax.indexOf(t.op)>=0}function cx(t){return ox.indexOf(t.op)>=0}class hx{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach((e=>{this._functionExecutorMap[e]=new hx(t.functions[e],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map((e=>t[e].map((t=>t.id))));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((t=>t.signatureKey||t.name))}get outputNodes(){return this._outputs.map((t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e}))}get functions(){return Object.keys(this._functions).reduce(((t,e)=>(t[e]=this._functions[e].signature,t)),{})}getCompilationKey(t,e){const n=t.map((t=>t.name)).sort(),s=e.map((t=>t.name)).sort();return n.join(this.SEPERATOR)+"--"+s.join(this.SEPERATOR)}compile(t,e){const n=rx(t,e,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:r,syncInputs:i}=n;if(null!=r)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(s.length>0){const n=e.map((t=>t.name)),r=Object.keys(t);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${r}]. Missing the following inputs: [${s}]`)}return function(t,e,n){const{usedNodes:s,inputs:r}=n,i=[],a=Object.keys(r).map((t=>eb(t)[0])).map((e=>t.nodes[e])),o=t.initNodes;a.forEach((t=>{s.has(t.name)&&i.push(t)})),t.weights.forEach((t=>{s.has(t.name)&&i.push(t)})),null!=o&&o.forEach((t=>{s.has(t.name)&&i.push(t)}));const l=new Set,u=[];for(;i.length>0;){const t=i.pop();l.add(t.name),e[t.name]||u.push(t),t.children.forEach((t=>{!l.has(t.name)&&s.has(t.name)&&t.inputs.every((t=>l.has(t.name)))&&i.push(t)}))}return u}(this.graph,this.weightMap,n)}execute(t,e){t=this.mapInputs(t);const n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const s=n.map((t=>this.graph.nodes[eb(t)[0]])),r=e.map((t=>eb(t)[0]));let i=r.map((t=>this.graph.nodes[t]));0===i.length&&(i=this._outputs);const a=this.getCompilationKey(s,i);let o=this.compiledMap.get(a);null==o&&(o=this.compile(t,i),this.compiledMap.set(a,o));const l={},u={};return $i((()=>{const n=new sx(this.weightMap,l,u,this.functionExecutorMap),s=Object.assign({},this.weightMap);Object.keys(t).forEach((e=>{const[n,r]=eb(e),i=[];i[r]=t[e],s[n]=i}));const i=this.getFrozenTensorIds(s),a={};for(let t=0;t<o.length;t++){const e=o[t];if(!s[e.name]){const t=nx(e,s,n,this._resourceManager);if(lt(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);s[e.name]=t,this.checkTensorForDisposal(e.name,e,s,n,i,r,a)}}return null==this.parent&&n.dispose(i),e.map((t=>Qy(t,s,n)))}))}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map((e=>t[e])).map((t=>t.map((t=>t.id)))));return new Set(e)}checkTensorForDisposal(t,e,n,s,r,i,a){"control"!==e.category&&-1===i.indexOf(t)&&(n[t].forEach((t=>{null!=t&&(a[t.id]=(a[t.id]||0)+e.children.length)})),e.inputs.forEach((t=>{if("control"!==t.category){const e=function(t,e,n){return e[tb(t,n.currentContextId)]}(t.name,n,s);null!=e&&e.forEach((t=>{if(t&&!r.has(t.id)){const e=a[t.id];1===e?(t.dispose(),delete a[t.id]):null!=e&&a[t.id]--}}))}})))}async executeAsync(t,e){return this._executeAsync(t,e)}async _executeAsync(t,e,n=!1,s={},r={}){n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));const i=new sx(this.weightMap,s,r,this.functionExecutorMap),a=await this.executeWithControlFlow(t,i,e,n),o=e.map((t=>Qy(t,a,i))),l=o.map((t=>t.id)),u=Object.keys(t).map((e=>t[e].id)),c=new Set([...l,...u,...this.weightIds]);return Object.keys(a).forEach((t=>{a[t].forEach((t=>{!t||t.isDisposed||c.has(t.id)||t.dispose()}))})),null==this.parent&&i.dispose(c),o}async executeFunctionAsync(t,e,n){const s=t.reduce(((t,e,n)=>(t[this.inputs[n].name]=e,t)),{});return this._executeAsync(s,this.outputNodes,!0,e,n)}async executeWithControlFlow(t,e,n,s){const r=Object.keys(t),i=r.map((t=>this.graph.nodes[eb(t)[0]])),a=n.map((t=>eb(t)[0]));let o=a.map((t=>this.graph.nodes[t]));0===o.length&&(o=this._outputs);const{usedNodes:l,missingInputs:u,dynamicNode:c,syncInputs:h}=rx(t,o,this.weightMap,this._initNodes),p=[...i,...this.graph.weights,...this._initNodes||[]].map((t=>({node:t,contexts:e.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(t).forEach((e=>{const[n,s]=eb(e),r=[];r[s]=t[e],d[n]=r}));const f={},m=this.getFrozenTensorIds(d),g={};for(;p.length>0;){const t=this.processStack(i,p,e,d,g,m,a,f,l);await Promise.all(t)}null!=c||s||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((t=>!lx(t)&&!Qy(t.name,d,e))).map((t=>t.name));if(y.length>0){let t="";throw null!=c&&(t=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${r}]. Consider providing the following inputs: [${u}]. ${t}`)}return d}processStack(t,e,n,s,r,i,a,o,l){const u=[];for(;e.length>0;){const t=e.pop();n.currentContext=t.contexts;let c="";if("Enter"===t.node.op&&Zy("isConstant",t.node,s,n)&&([c]=Jy(t.node.name,n)),null==s[t.node.name]){const h=nx(t.node,s,n,this._resourceManager);c||([c]=Jy(t.node.name,n));const p=n.currentContext;lt(h)?u.push(h.then((u=>(s[c]=u,n.currentContext=p,this.checkTensorForDisposal(c,t.node,s,n,i,a,o),this.processChildNodes(t.node,e,n,s,r,l),u)))):(s[c]=h,this.checkTensorForDisposal(c,t.node,s,n,i,a,o),this.processChildNodes(t.node,e,n,s,r,l))}else this.processChildNodes(t.node,e,n,s,r,l)}return u}processChildNodes(t,e,n,s,r,i){t.children.forEach((t=>{const[a]=Jy(t.name,n);!r[a]&&i.has(t.name)&&("Merge"===t.op?t.inputNames.some((t=>!!Qy(t,s,n)))&&(r[a]=!0,e.push({contexts:n.currentContext,node:t})):t.inputNames.every((t=>!!Qy(t,s,n)))&&(r[a]=!0,e.push({contexts:n.currentContext,node:t})))}))}dispose(){Object.keys(this.weightMap).forEach((t=>this.weightMap[t].forEach((t=>t.dispose()))))}checkInputShapeAndType(t){Object.keys(t).forEach((e=>{const n=t[e],[s]=eb(e),r=this.graph.nodes[s];if(r.attrParams.shape&&r.attrParams.shape.value){const t=r.attrParams.shape.value;E(t.length===n.shape.length&&n.shape.every(((e,n)=>-1===t[n]||t[n]===e)),(()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${t}], but was [${n.shape}]`))}r.attrParams.dtype&&r.attrParams.dtype.value&&E(n.dtype===r.attrParams.dtype.value,(()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(t){const e={};for(const n in t)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?e[this._signature.inputs[n].name]=t[n]:e[n]=t[n];return e}checkInputs(t){const e=Object.keys(t).filter((t=>{const[e]=eb(t);return null==this.graph.nodes[e]}));if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map((t=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[t]?this._signature.outputs[t].name:t),{})}checkOutputs(t){t.forEach((t=>{const[e]=eb(t);if(!this.graph.nodes[e])throw new Error(`The output '${t}' is not found in the graph`)}))}}class px{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}class dx{constructor(t,e={}){this.modelUrl=t,this.loadOptions=e,this.version="n/a",null==e&&(this.loadOptions={}),this.resourceManager=new px}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=oi(t,this.loadOptions);else{const s=(e=t,n=this.loadOptions,Sr.getLoadHandlers(e,n));if(0===s.length)s.push(oi(t,this.loadOptions));else if(s.length>1)throw new Error(`Found more than one (${s.length}) load handlers for URL '${[t]}'`);this.handler=s[0]}var e,n}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=await this.handler.load();return this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${e.versions.producer}.${e.versions.minConsumer}`;const s=function(t,e){const n={};let s,r=0;for(const i of e){const e=i.name,a=i.dtype,o=i.shape,l=O(o);let u;if("quantization"in i){const n=i.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${i.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${i.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==a)throw new Error(`Weight ${i.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${a}.`)}const o=yr[n.dtype],c=t.slice(r,r+l*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===a)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];u[t]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===s&&(s=Tr()),u=s(h)}else{if("int32"!==a)throw new Error(`Unsupported dtype in weight '${e}': ${a}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];u[t]=Math.round(e*n.scale+n.min)}}r+=l*o}else if("string"===a){const e=O(i.shape);u=[];for(let n=0;n<e;n++){const e=new Uint32Array(t.slice(r,r+4))[0];r+=4;const n=new Uint8Array(t.slice(r,r+e));u.push(n),r+=e}}else{const s=yr[a],i=t.slice(r,r+l*s);if("float32"===a)u=new Float32Array(i);else if("int32"===a)u=new Int32Array(i);else if("bool"===a)u=new Uint8Array(i);else{if("complex64"!==a)throw new Error(`Unsupported dtype in weight '${e}': ${a}`);{u=new Float32Array(i);const t=new Float32Array(u.length/2),s=new Float32Array(u.length/2);for(let e=0;e<t.length;e++)t[e]=u[2*e],s[e]=u[2*e+1];const r=gr(t,o,"float32"),a=gr(s,o,"float32");n[e]=fr(r,a),r.dispose(),a.dispose()}}r+=l*s}"complex64"!==a&&(n[e]=gr(u,o,a))}return n}(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new hx(wb.Instance.transformGraph(e,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,null!=t.modelInitializer&&null!=t.modelInitializer.node){const e=wb.Instance.transformGraph(t.modelInitializer);this.initializer=new hx(e),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if("string"==typeof t){const e=Ir(t);if(0===e.length)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Error(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){return this.execute(t,this.outputNodes)}normalizeInputs(t){if(!(t instanceof zs||Array.isArray(t)))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce(((e,n,s)=>(e[n]=t[s],e)),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce(((e,n)=>(e[n]=[t[n]],e)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}var fx,mx,gx=n(377);function yx(t,e,n=new Map,s=new Set){if(null==t)return null;if(s.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const r=e(t);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(wx(t)){const r=Array.isArray(t)?[]:{};s.add(t);for(const i in t){const a=yx(t[i],e,n,s);r[i]=a}return s.delete(t),r}throw new Error(`Can't recurse into non-iterable type: ${t}`)}return n.set(t,r.value),r.value}function bx(t,e=vx){return xx(t,e)}function xx(t,e,n=new Set){const s=t[0];if(n.has(s))throw new Error("Circular references are not supported.");const r=e(t);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(wx(s)){const r=Array.isArray(s)?[]:{};n.add(s);for(const i in s){const s=xx(t.map((t=>t[i])),e,n);r[i]=s}return n.delete(s),r}throw new Error(`Can't recurse into non-iterable type: ${s}`)}return r.value}function vx(t){return null===t?null:wx(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}function wx(t){return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"==typeof t&&!(t instanceof zs))}function _x(t){return yx(t,kx)}function kx(t){return t instanceof zs?{value:t.clone(),recurse:!1}:wx(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}class Tx{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class Sx extends Tx{constructor(){super(Sx.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let t=0;t<n;t++)e[t]=this.get(this.wrap(this.begin+t));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}Sx.INITIAL_CAPACITY=32;class Ix{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new Fx(this,t)}filter(t){return new Dx(this,t)}map(t){return new Ox(this,t)}mapAsync(t){return new Mx(this,t)}serialMapAsync(t){return new Mx(this,t).serial()}flatmap(t){return new zx(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile((t=>!0===t))}rowMajorBatch(t,e=!0){return new Rx(this,t,e)}columnMajorBatch(t,e=!0,n=vx){return this.rowMajorBatch(t,e).map((t=>bx(t,n)))}concatenate(t,e){return new Px(new Cx([this,t]),e)}take(t){return t<0||null==t?this:new $x(this,t)}skip(t){return t<0||null==t?this:new Ex(this,t)}prefetch(t){return new Vx(this,t)}shuffle(t,e){return new Bx(this,t,e)}serial(){return new Ax(this)}}class Cx extends Ix{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:_x(t),done:!1}}}class Nx extends Ix{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}}class Ax extends Ix{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Ex extends Ix{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;Ri(t.value)}return this.upstream.next()}}class $x extends Ix{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Rx extends Ix{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class Dx extends Ix{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;Ri(t.value)}}}class Ox extends Ix{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=Zs(t.value),n=this.transform(t.value),s=Zs(n);for(const t of e)Ys(t,s)||t.dispose();return{value:n,done:!1}}}class Fx extends Ix{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class Mx extends Ix{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=Zs(t.value),n=await this.transform(t.value),s=Zs(n);for(const t of e)Ys(t,s)||t.dispose();return{value:n,done:!1}}}class Lx extends Ix{constructor(){super(),this.outputQueue=new Sx,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class zx extends Lx{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=Zs(t.value),n=this.transform(t.value),s=Zs(n);this.outputQueue.pushAll(n);for(const t of e)Ys(t,s)||t.dispose();return!0}}class Px extends Ix{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}(mx=fx||(fx={}))[mx.FAIL=0]="FAIL",mx[mx.SHORTEST=1]="SHORTEST",mx[mx.LONGEST=2]="LONGEST";class Vx extends Ix{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new Tx(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class Bx extends Vx{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=gx.alea(n||vs().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Wx{constructor(){this.size=null}batch(t,e=!0){const n=this;let s;return E(t>0,(()=>`batchSize needs to be positive, but it is\n      ${t}`)),s=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),qx((async()=>(await n.iterator()).columnMajorBatch(t,e,Ux)),s)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,qx((async()=>(await e.iterator()).concatenate(await t.iterator())),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,qx((async()=>(await e.iterator()).filter((e=>$i((()=>t(e)))))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return qx((async()=>(await e.iterator()).map((e=>$i((()=>t(e)))))),this.size)}mapAsync(t){const e=this;return qx((async()=>(await e.iterator()).mapAsync(t)),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return qx((async()=>(await e.iterator()).prefetch(t)),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,qx((async()=>{return n=(r=async()=>({value:await e.iterator(),done:!1}),new Nx(r)).take(t),new Px(n,s);var n,s,r}),n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,qx((async()=>(await e.iterator()).skip(t)),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,r=gx.alea(e||vs().toString());return qx((async()=>{let e=r.int32();return n&&(e+=r.int32()),(await s.iterator()).shuffle(t,e.toString())}),this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,qx((async()=>(await e.iterator()).take(t)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function qx(t,e=null){return new class extends Wx{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function Ux(t){if(null===t)return null;return null==(e=t[0])||null===(n=e)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(e)||"object"==typeof e&&e instanceof zs||j(e)?{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof zs?Lo(t):gr(t)}(t),recurse:!1}:{value:null,recurse:!0};var e,n}function Gx(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&E("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the CPU backend.`))}))}Wx.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const jx=ju;class Hx extends S{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new T(this,Ai())}nextDataId(){return Hx.nextDataId++}write(t,e,n){this.firstUse&&(this.firstUse=!1,ht().get("IS_NODE")&&Eu("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const s={id:this.nextDataId()};return this.data.set(s,{values:t,dtype:n,refCount:1}),s}makeTensorInfo(t,e,n){let s;if("string"===e&&null!=n&&n.length>0&&X(n[0])){const r=n.map((t=>ws(t)));s=this.write(r,t,e)}else s=this.write(n,t,e);return{dataId:s,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){this.data.get(t).refCount++}decRef(t){this.data.has(t)&&this.data.get(t).refCount--}move(t,e,n,s,r){this.data.set(t,{values:e,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);return"complex64"===e?Ru(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map((t=>_s(t)))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return Yr(t.shape,t.dtype,n)}makeOutput(t,e,n){const s=this.write(t,e,n);return Ai().makeTensorFromDataId(s,e,n,this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(t);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=vs();return t(),{kernelMs:vs()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){Gx([t],"where");const e=this.readSync(t.dataId);return jx(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function Xx(t,e,n){return({inputs:s,attrs:r,backend:i})=>{const{x:a}=s;if(Gx(a,t),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=i,l=o.data.get(a.dataId).values,u=O(a.shape),c=n||a.dtype,h=U(c,u);for(let t=0;t<u;++t)h[t]=e(l[t],r);return o.makeTensorInfo(a.shape,c,h)}}function Kx(t,e,n){return({inputs:s,attrs:r,backend:i})=>{const{x:a}=s;if(Gx(a,t),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=i,l=o.data.get(a.dataId).values,u=n||a.dtype,c=e(l,u,r);return o.makeTensorInfo(a.shape,u,c)}}Hx.nextDataId=0,Fi("cpu",(()=>new Hx),1);const Yx=Xx(ue,(t=>t>=0?t:Math.exp(t)-1)),Zx={kernelName:ue,backendName:"cpu",kernelFunc:Yx};function Qx(t){const{inputs:e,backend:n}=t,{x:s}=e;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const Jx={kernelName:Ie,backendName:"cpu",kernelFunc:Qx};function tv(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{alpha:i}=s;Gx([r],"leakyRelu");const a=O(r.shape),o=n.data.get(r.dataId).values,l=q("float32",a);for(let t=0;t<o.length;t++)l[t]=o[t]<0?i*o[t]:o[t];return n.makeTensorInfo(r.shape,"float32",l)}const ev={kernelName:Re,backendName:"cpu",kernelFunc:tv};function nv(t){return(e,n,s,r,i)=>{const a=Ca(e,n),o=a.length,l=J(a),u=q(i,O(a)),c=e.length,h=n.length,p=J(e),d=J(n),f=Sa(e,a),m=Sa(n,a);if(f.length+m.length===0)for(let e=0;e<u.length;++e)u[e]=t(s[e%s.length],r[e%r.length]);else for(let e=0;e<u.length;++e){const n=ot(e,o,l),i=n.slice(-c);f.forEach((t=>i[t]=0));const a=at(i,c,p),g=n.slice(-h);m.forEach((t=>g[t]=0));const y=at(g,h,d);u[e]=t(s[a],r[y])}return[u,a]}}const sv=nv(((t,e)=>t<0?e*t:t));function rv(t){const{inputs:e,backend:n}=t,{x:s,alpha:r}=e;Gx([s,r],"prelu");const i=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values,[o,l]=sv(s.shape,r.shape,i,a,s.dtype);return n.makeTensorInfo(l,s.dtype,o)}const iv={kernelName:fn,backendName:"cpu",kernelFunc:rv},av=Xx(xn,(t=>Math.max(0,t))),ov={kernelName:xn,backendName:"cpu",kernelFunc:av},lv=Xx(Sn,(t=>Math.min(Math.max(0,t),6))),uv={kernelName:Sn,backendName:"cpu",kernelFunc:lv};function cv(t,e,n,s,r){if("linear"===n)return Qx({inputs:{x:e},backend:t});if("relu"===n)return av({inputs:{x:e},backend:t});if("elu"===n)return Yx({inputs:{x:e},backend:t});if("relu6"===n)return lv({inputs:{x:e},backend:t});if("prelu"===n)return rv({inputs:{x:e,alpha:s},backend:t});if("leakyrelu"===n)return tv({inputs:{x:e},backend:t,attrs:{alpha:r}});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function hv(t){const{inputs:e,backend:n}=t,{real:s,imag:r}=e,i=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values,o=n.makeTensorInfo(s.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",i),imag:n.makeTensorInfo(r.shape,"float32",a)},o}const pv={kernelName:Vt,backendName:"cpu",kernelFunc:hv};function dv(t,e,n="float32"){if("complex64"===n)return hv({inputs:{real:dv(t,e,"float32"),imag:dv(t,e,"float32")},backend:t});const s=st(O(e),n);return t.makeTensorInfo(e,n,s)}function fv(t){const{inputs:e,backend:n}=t,{input:s}=e,r=n.data.get(s.dataId).complexTensorInfos.real,i=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,i)}const mv={kernelName:yn,backendName:"cpu",kernelFunc:fv};function gv(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{dtype:i}=s;if("complex64"===i){if("complex64"===r.dtype)return Qx({inputs:{x:r},backend:n});const t=dv(n,r.shape,r.dtype),e=gv({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),s=hv({inputs:{real:e,imag:t},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),s}if("complex64"===r.dtype){const t=fv({inputs:{input:r},backend:n}),e=gv({inputs:{x:t},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(t),e}if(!G(r.dtype,i)){const t=Qx({inputs:{x:r},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:i}}if("int32"===i){const t=n.data.get(r.dataId).values,e=Int32Array.from(t);return n.makeTensorInfo(r.shape,"int32",e)}if("bool"===i){const t=n.data.get(r.dataId).values,e=xs([0],r.dtype),[s,i]=nv(((t,e)=>t!==e?1:0))(r.shape,[],t,e,"bool");return n.makeTensorInfo(i,"bool",s)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${i}`)}const yv={kernelName:Lt,backendName:"cpu",kernelFunc:gv};function bv(t,e,n,s){return null==n?({inputs:n,backend:r})=>{const{a:i,b:a}=n,o=r;Gx([i,a],t);const l=o.data.get(i.dataId).values,u=o.data.get(a.dataId).values,c=s||i.dtype,[h,p]=e(i.shape,a.shape,l,u,c);return o.makeTensorInfo(p,c,h)}:({inputs:t,backend:r})=>{const{a:i,b:a}=t,o=r;if("complex64"===i.dtype||"complex64"===a.dtype){const t=gv({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),e=o.data.get(t.dataId),s=e.complexTensorInfos.real,r=e.complexTensorInfos.imag,l=o.data.get(s.dataId).values,u=o.data.get(r.dataId).values,c=gv({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(d.dataId).values,[g,y,b]=n(i.shape,a.shape,l,u,f,m),x=o.makeTensorInfo(b,"float32",g),v=o.makeTensorInfo(b,"float32",y),w=hv({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(t),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{const t=o.data.get(i.dataId).values,n=o.data.get(a.dataId).values,r=s||i.dtype,[l,u]=e(i.shape,a.shape,t,n,r);return o.makeTensorInfo(u,r,l)}}}function xv(t){return(e,n,s,r,i,a)=>{const o=Ca(e,n),l=O(o),u=o.length,c=J(o),h=q("float32",l),p=q("float32",l),d=Sa(e,o),f=Sa(n,o),m=Ru(s,r),g=Ru(i,a),y=e.length,b=J(e),x=n.length,v=J(n);if(d.length+f.length===0)for(let e=0;e<h.length;e++){const n=e%m.length,s=e%g.length,r=t(m[2*n],m[2*n+1],g[2*s],g[2*s+1]);h[e]=r.real,p[e]=r.imag}else for(let e=0;e<h.length;e++){const n=ot(e,u,c),s=n.slice(-y);d.forEach((t=>s[t]=0));const r=at(s,y,b),i=n.slice(-x);f.forEach((t=>i[t]=0));const a=at(i,x,v),o=t(m[2*r],m[2*r+1],g[2*a],g[2*a+1]);h[e]=o.real,p[e]=o.imag}return[h,p,o]}}const vv=nv(((t,e)=>t+e)),wv=xv(((t,e,n,s)=>({real:t+n,imag:e+s}))),_v=bv(xt,vv,wv),kv={kernelName:xt,backendName:"cpu",kernelFunc:_v};function Tv(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{shape:i}=s,a=O(r.shape),o=V(i,a),l=O(o);E(a===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(r.dataId);const u=n.data.get(r.dataId);if(null!=u.complexTensorInfos){const t=u.complexTensorInfos.real,e=u.complexTensorInfos.imag;t.shape=o,e.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}const Sv={kernelName:vn,backendName:"cpu",kernelFunc:Tv};function Iv(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:i}=e,{transposeA:a,transposeB:o}=s;Gx([r,i],"matMul");const l=r.shape.length,u=i.shape.length,c=a?r.shape[l-2]:r.shape[l-1],h=o?i.shape[u-1]:i.shape[u-2],p=a?r.shape[l-1]:r.shape[l-2],d=o?i.shape[u-2]:i.shape[u-1],f=r.shape.slice(0,-2),m=i.shape.slice(0,-2),g=O(f),y=O(m);E(l>=2&&u>=2&&(g===y||1===g||1===y),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`));const b=(g>y?r.shape.slice(0,-2):i.shape.slice(0,-2)).concat([p,d]);E(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${i.shape} and transposeA=${a} and transposeB=${o} must match.`));const x=o?[y,d,h]:[y,h,d],v=Tv({inputs:{x:r},backend:n,attrs:{shape:a?[g,c,p]:[g,p,c]}}),w=Tv({inputs:{x:i},backend:n,attrs:{shape:x}}),_=a?v.shape[1]:v.shape[2],k=a?v.shape[2]:v.shape[1],T=o?w.shape[1]:w.shape[2],S=Math.max(g,y),I=n.data.get(v.dataId).values,C=n.data.get(w.dataId).values,N=J(v.shape),A=J(w.shape),[$,R,D]=a?[N[0],1,N[1]]:[N[0],N[1],1],[F,M,L]=o?[1,A[1],A[0]]:[A[1],1,A[0]],z=k*T,P=Yr([S,k,T],v.dtype),V=P.values,B=n.blockSize;for(let t=0;t<S;t++)for(let e=0;e<k;e+=B)for(let n=0;n<T;n+=B)for(let s=0;s<_;s+=B){const r=Math.min(e+B,k),i=Math.min(n+B,T),a=Math.min(s+B,_);for(let o=e;o<r;o++)for(let e=n;e<i;e++){let n=0;for(let r=s;r<a;r++){const s=Math.min(t,g-1)*$,i=Math.min(t,y-1)*L;n+=I[s+o*R+r*D]*C[r*F+e*M+i]}V[t*z+(o*T+e)]+=n}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,P.dtype,P.values)}const Cv={kernelName:Ot,backendName:"cpu",kernelFunc:Iv},Nv={kernelName:os,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:i,bias:a,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;let p,d,f;const m=[];p=Iv({inputs:{a:r,b:i},attrs:{transposeA:l,transposeB:u},backend:n}),a&&(d=_v({inputs:{a:p,b:a},backend:n}),m.push(p),p=d),c&&(f=cv(n,p,c,o,h),m.push(p),p=f);for(const t of m)n.disposeIntermediateTensorInfo(t);return p}};function Av(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const Ev={kernelName:gt,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;Gx(e,"abs");let s=new Float32Array(O(e.shape));return s=Av(n.data.get(e.dataId).values),n.makeOutput(s,e.shape,"float32")}},$v=Xx(yt,(t=>Math.acos(t))),Rv={kernelName:yt,backendName:"cpu",kernelFunc:$v},Dv=Xx(bt,(t=>Math.acosh(t))),Ov={kernelName:bt,backendName:"cpu",kernelFunc:Dv},Fv={kernelName:vt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,s=e;Gx(e,"addN");const r=s.map((t=>n.data.get(t.dataId).values)),i=Yr(s[0].shape,s[0].dtype),a=i.values;for(let t=0;t<s.length;t++){const e=r[t];for(let t=0;t<a.length;t++)a[t]+=e[t]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}};function Mv(t,e,n,s,r){const i=e.length,a=O(e),o=J(e),l=J(r),u=q(n,O(r));for(let e=0;e<a;++e){const n=ot(e,i,o),r=new Array(n.length);for(let t=0;t<r.length;t++)r[t]=n[s[t]];u[at(r,i,l)]=t[e]}return u}function Lv(t){const{inputs:e,attrs:n,backend:s}=t,{x:r}=e,{perm:i}=n;Gx(r,"transpose");const a=r.shape.length,o=new Array(a);for(let t=0;t<o.length;t++)o[t]=r.shape[i[t]];const l=Mv(s.data.get(r.dataId).values,r.shape,r.dtype,i,o);return{dataId:s.write(l,o,r.dtype),shape:o,dtype:r.dtype}}const zv={kernelName:Jn,backendName:"cpu",kernelFunc:Lv},Pv={kernelName:wt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s;Gx(r,"all");const o=B(i,r.shape);let l=o;const u=so(l,r.shape.length);let c=r;null!=u&&(c=Lv({inputs:{x:r},backend:n,attrs:{perm:u}}),l=io(l.length,r.shape.length)),no("all",l,c.shape.length);const[h,p]=to(c.shape,l),d=O(p),f=st(O(h),c.dtype),m=n.data.get(c.dataId).values;for(let t=0;t<f.length;++t){const e=t*d;let n=m[e];for(let t=0;t<d;++t){const s=m[e+t];n=n&&s}f[t]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(a){const t=Tv({inputs:{x:g},backend:n,attrs:{shape:eo(h,o)}});return n.disposeIntermediateTensorInfo(g),t}return g}},Vv={kernelName:_t,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s;Gx(r,"any");const o=B(i,r.shape);let l=o;const u=so(l,r.shape.length);let c=r;null!=u&&(c=Lv({inputs:{x:r},backend:n,attrs:{perm:u}}),l=io(l.length,r.shape.length)),no("any",l,c.shape.length);const[h,p]=to(c.shape,l),d=O(p),f=st(O(h),c.dtype),m=n.data.get(c.dataId).values;for(let t=0;t<f.length;++t){const e=t*d;let n=m[e];for(let t=0;t<d;++t){const s=m[e+t];n=n||s}f[t]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(a){const t=Tv({inputs:{x:g},backend:n,attrs:{shape:eo(h,o)}});return n.disposeIntermediateTensorInfo(g),t}return g}},Bv={kernelName:kt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i}=s;Gx(r,"argMax");let a=B(i,r.shape);const o=so(a,r.shape.length);let l=r;const u=[];null!=o&&(l=Lv({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),a=io(a.length,l.shape.length)),a=[a[0]],no("argMax",a,l.shape.length);const[c,h]=to(l.shape,a),p=st(O(c),"int32"),d=O(h),f=n.data.get(l.dataId).values;for(let t=0;t<p.length;++t){const e=t*d;let n=f[e],s=0;for(let t=0;t<d;++t){const r=f[e+t];r>n&&(n=r,s=t)}p[t]=s}return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(c,"int32",p)}},Wv={kernelName:Tt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i}=s;Gx(r,"argMin");let a=B(i,r.shape);const o=so(a,r.shape.length);let l=r;const u=[];null!=o&&(l=Lv({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),a=io(a.length,l.shape.length)),a=[a[0]],no("argMin",a,l.shape.length);const[c,h]=to(l.shape,a),p=st(O(c),"int32"),d=O(h),f=n.data.get(l.dataId).values;for(let t=0;t<p.length;++t){const e=t*d;let n=f[e],s=0;for(let t=0;t<d;++t){const r=f[e+t];r<n&&(n=r,s=t)}p[t]=s}return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(c,"int32",p)}},qv=Xx(St,(t=>Math.asin(t))),Uv={kernelName:St,backendName:"cpu",kernelFunc:qv},Gv=Xx(It,(t=>Math.asinh(t))),jv={kernelName:It,backendName:"cpu",kernelFunc:Gv},Hv=Xx(Ct,(t=>Math.atan(t))),Xv={kernelName:Ct,backendName:"cpu",kernelFunc:Hv},Kv=nv(((t,e)=>Math.atan2(t,e))),Yv=bv(At,Kv),Zv={kernelName:At,backendName:"cpu",kernelFunc:Yv},Qv=Xx(Nt,(t=>Math.atanh(t))),Jv={kernelName:Nt,backendName:"cpu",kernelFunc:Qv};function tw(t,e,n,s,r,i){const a=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,p=r.padInfo.top,d=r.padInfo.left,f="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Yr(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let e=0;e<r.batchSize;++e){const n=e*y,m=e*s[0];for(let e=0;e<r.inChannels;++e)for(let y=0;y<r.outHeight;++y){const v=y*a-p,w=Math.max(0,v),_=Math.min(r.inHeight,c+v),k=n+y*b;for(let n=0;n<r.outWidth;++n){const a=n*o-d,c=Math.max(0,a),p=Math.min(r.inWidth,h+a);let y=f,b=0,v=0;for(let n=w;n<_;n+=l){const r=m+n*s[1];for(let n=c;n<p;n+=u){const a=t[r+n*s[2]+e];"max"===i&&a>y?y=a:"avg"===i&&(b+=a,v++)}if(isNaN(y))break}g[k+n*x+e]="avg"===i?b/v:y}}}return m}function ew(t,e,n,s,r=!1,i=!1){const a=Yr(s.outShape,"int32"),o=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,p=s.effectiveFilterWidth,d=s.padInfo.top,f=s.padInfo.left,m=Yr(e,n,t);for(let t=0;t<s.batchSize;++t)for(let e=0;e<s.inChannels;++e)for(let n=0;n<s.outHeight;++n){const g=n*o-d;let y=g;for(;y<0;)y+=u;const b=Math.min(s.inHeight,h+g);for(let o=0;o<s.outWidth;++o){const h=o*l-f;let d=h;for(;d<0;)d+=c;const x=Math.min(s.inWidth,p+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<b;n+=u){const a=n-g;for(let o=d;o<x;o+=c){const l=o-h,u=m.get(t,n,o,e);u>v&&(v=u,w=r?i?((t*s.inHeight+n)*s.inWidth+o)*s.inChannels+e:(n*s.inWidth+o)*s.inChannels+e:a*p+l)}}a.set(w,t,n,o,e)}}return a}function nw(t,e,n,s,r,i){const a=r.strideDepth,o=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,p=r.effectiveFilterDepth,d=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,b="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Yr(r.outShape,n),v=x.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],_=r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[3]*r.outShape[4],T=r.outShape[4];for(let e=0;e<r.batchSize;++e){const n=e*w,x=e*s[0];for(let e=0;e<r.inChannels;++e)for(let w=0;w<r.outDepth;++w){const S=w*a-m;let I=S;for(;I<0;)I+=u;const C=Math.min(r.inDepth,p+S),N=n+w*_;for(let n=0;n<r.outHeight;++n){const a=n*o-g;let p=a;for(;p<0;)p+=c;const m=Math.min(r.inHeight,d+a),w=N+n*k;for(let n=0;n<r.outWidth;++n){const a=n*l-y;let o=a;for(;o<0;)o+=h;const d=Math.min(r.inWidth,f+a),g=w+n*T;let _=b,k=0,S=0;for(let n=I;n<C;n+=u){const r=x+n*s[1];for(let n=p;n<m;n+=c){const a=r+n*s[2];for(let n=o;n<d;n+=h){const r=t[a+n*s[3]+e];if("max"===i&&r>_?_=r:"avg"===i&&(k+=r,S++),isNaN(_))break}if(isNaN(_))break}if(isNaN(_))break}v[g+e]="avg"===i?k/S:_}}}}return x}const sw={kernelName:Et,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;Gx(r,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s;E(ea(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Gi(r.shape,i,a,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&F(u.inShape,u.outShape))c=Qx({inputs:{x:r},backend:n});else{const t=n.data.get(r.dataId).values,e=J(r.shape),s=tw(t,r.shape,r.dtype,e,u,"avg");c=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return c}},rw={kernelName:Rt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=s;Gx(r,"avgPool3d");const c=ji(r.shape,i,a,1,o,l,u),h=nw(n.data.get(r.dataId).values,r.shape,r.dtype,J(r.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},iw={kernelName:Dt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i}=e,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=s;Gx([r,i],"avgPool3DGrad");const c=ji(i.shape,a,o,1,l,u),h=c.strideDepth,p=c.strideHeight,d=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,_=c.effectiveFilterWidth,k=v-1-c.padInfo.front,T=_-1-c.padInfo.left,S=w-1-c.padInfo.top,I=Yr(i.shape,"float32"),C=1/(f*m*g),N=n.bufferSync(r);for(let t=0;t<c.batchSize;++t)for(let e=0;e<c.inChannels;++e)for(let n=0;n<c.inDepth;++n)for(let s=0;s<c.inHeight;++s)for(let r=0;r<c.inWidth;++r){const i=n-k,a=s-S,o=r-T;let l=0;for(let n=0;n<v;n+=y){const s=(i+n)/h;if(!(s<0||s>=c.outDepth||Math.floor(s)!==s))for(let n=0;n<w;n+=b){const r=(a+n)/p;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<_;n+=x){const i=(o+n)/d;i<0||i>=c.outWidth||Math.floor(i)!==i||(l+=N.get(t,s,r,i,e))}}}I.set(l*C,t,n,s,r,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},aw={kernelName:$t,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i}=e,a=i;Gx([r,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=Gi(a.shape,o,l,1,u),h=c.strideHeight,p=c.strideWidth,d=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,v=y-1-c.padInfo.top,w=Yr(a.shape,"float32"),_=1/(d*f),k=n.data.get(r.dataId).values,T=Yr(r.shape,"float32",k);for(let t=0;t<c.batchSize;++t)for(let e=0;e<c.inChannels;++e)for(let n=0;n<c.inHeight;++n)for(let s=0;s<c.inWidth;++s){const r=n-v,i=s-x;let a=0;for(let n=0;n<y;n+=m){const s=(r+n)/h;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<b;n+=g){const r=(i+n)/p;r<0||r>=c.outWidth||Math.floor(r)!==r||(a+=T.get(t,s,r,e))}}w.set(a*_,t,n,s,e)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},ow={kernelName:we,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,scale:i,offset:a,mean:o,variance:l}=e;E(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),E(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),E(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Gx([r,o,l,i,a],"batchNorm");let{varianceEpsilon:u}=s;null==u&&(u=.001);const c=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,p=n.data.get(l.dataId).values,d=i?n.data.get(i.dataId).values:new Float32Array([1]),f=a?n.data.get(a.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=d.length,b=p.length,x=h.length;let v=0,w=0,_=0,k=0;for(let t=0;t<c.length;++t)m[t]=f[v++]+(c[t]-h[w++])*d[_++]/Math.sqrt(p[k++]+u),v>=g&&(v=0),w>=x&&(w=0),_>=y&&(_=0),k>=b&&(k=0);return n.makeTensorInfo(r.shape,r.dtype,m)}};function lw(t,e,n,s,r){const i=_i(s,e,n),a=O(n),o=J(s);if(i){const n=ki(e,o);return"string"===r?t.slice(n,n+a):t.subarray(n,n+a)}const l=Yr(s,r,"string"===r?Uu(t):t),u=Yr(n,r);for(let t=0;t<u.size;++t){const n=u.indexToLoc(t),s=n.map(((t,n)=>t+e[n]));u.set(l.get(...s),...n)}return"string"===r?Gu(u.values):u.values}function uw(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:i,size:a}=s;Gx(r,"slice");const[o,l]=Ti(r,i,a);ci(r,o,l);const u=lw(n.data.get(r.dataId).values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}const cw={kernelName:Rn,backendName:"cpu",kernelFunc:uw},hw={kernelName:Ft,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:i,crops:a}=s;Gx([r],"batchToSpaceND");const o=i.reduce(((t,e)=>t*e)),l=du(r.shape,i,o),u=fu(l.length,i.length),c=mu(r.shape,i,o),h=gu(a,i.length),p=yu(c,a,i.length),d=Tv({inputs:{x:r},backend:n,attrs:{shape:l}}),f=Lv({inputs:{x:d},backend:n,attrs:{perm:u}}),m=Tv({inputs:{x:f},backend:n,attrs:{shape:c}}),g=uw({inputs:{x:m},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function pw(t,e,n,s,r){const i=O(s),a=st(r,n);for(let n=0;n<t.length;n++){const s=t[n];if(s<0)throw new Error("Input x must be non-negative!");s>=r||(a[s]+=i>0?e[n]:1)}return a}function dw(t,e,n,s=!1){const r=t.shape[0],i=t.shape[1],a=Yr([r,n],e.dtype);for(let o=0;o<r;o++)for(let r=0;r<i;r++){const i=t.get(o,r);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(s?a.set(1,o,i):e.size>0?a.set(a.get(o,i)+e.get(o,r),o,i):a.set(a.get(o,i)+1,o,i))}return a}const fw={kernelName:Mt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,weights:i}=e,{size:a}=s,o=pw(n.data.get(r.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,o)}};function mw(t){return(e,n,s)=>{const r=q(n,e.length);for(let n=0;n<e.length;++n)r[n]=t(e[n],s);return r}}const gw=mw((t=>Math.ceil(t))),yw=Kx(zt,gw),bw={kernelName:zt,backendName:"cpu",kernelFunc:yw},xw=Xx(Pt,((t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t})),vw={kernelName:Pt,backendName:"cpu",kernelFunc:xw},ww={kernelName:Bt,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend,s=new Float32Array(O(e.shape)),r=n.data.get(e.dataId),i=r.complexTensorInfos.real,a=r.complexTensorInfos.imag,o=n.data.get(i.dataId).values,l=n.data.get(a.dataId).values;for(let t=0;t<o.length;t++){const e=o[t],n=l[t];s[t]=Math.hypot(e,n)}return n.makeOutput(s,e.shape,"float32")}};function _w(t,e,n,s){const r=U(n,O(e));if(s&&"string"!==n){let e=0;t.forEach((t=>{const n=O(t.shape);r.set(t.vals,e),e+=n}))}else{let s=0;t.forEach((t=>{const i="string"===n?Uu(t.vals):t.vals;let a=0;for(let n=0;n<t.shape[0];++n){const o=n*e[1]+s;for(let e=0;e<t.shape[1];++e)r[o+e]=i[a++]}s+=t.shape[1]}))}return r}function kw(t){const{inputs:e,backend:n}=t,{input:s}=e,r=n.data.get(s.dataId).complexTensorInfos.imag,i=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,i)}const Tw={kernelName:Ne,backendName:"cpu",kernelFunc:kw};function Sw(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s,i=B(r,e[0].shape)[0];let a=uu(e.map((t=>t.shape)),i);if(0===O(a))return n.makeTensorInfo(a,e[0].dtype,[]);const o=e.filter((t=>O(t.shape)>0));if(1===o.length)return Qx({inputs:{x:o[0]},backend:n});const l=o.map((t=>t.shape));if(lu(l,i),"complex64"===o[0].dtype){const t=o.map((t=>fv({inputs:{input:t},backend:n}))),e=o.map((t=>kw({inputs:{input:t},backend:n}))),s=Sw({inputs:t,backend:n,attrs:{axis:i}}),r=Sw({inputs:e,backend:n,attrs:{axis:i}}),a=hv({inputs:{real:s,imag:r},backend:n});return t.forEach((t=>n.disposeIntermediateTensorInfo(t))),e.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),a}const u=o.map((t=>{const e=O(t.shape.slice(i));return Tv({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})})),c=u.map((t=>({vals:n.data.get(t.dataId).values,shape:t.shape})));a=uu(u.map((t=>t.shape)),1);const h=1===u[0].shape[0],p=_w(c,a,e[0].dtype,h),d=uu(o.map((t=>t.shape)),i),f=n.makeTensorInfo(d,e[0].dtype,p);return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),f}const Iw={kernelName:Wt,backendName:"cpu",kernelFunc:Sw};function Cw(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i}=e,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s;Gx([r,i],"conv2d");const h=na(l),p=Hi(r.shape,i.shape,a,u,o,c,!1,h),d=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x="channelsLast"===p.dataFormat,v=new Os(p.outShape,r.dtype),w=J(r.shape),_=J(i.shape),k=w[0],T=x?w[1]:w[2],S=x?w[2]:1,I=x?1:w[1],C=v.strides[0],N=x?v.strides[1]:v.strides[2],A=x?v.strides[2]:1,E=x?1:v.strides[1],$=n.data.get(r.dataId).values,R=n.data.get(i.dataId).values,D=v.values;for(let t=0;t<p.batchSize;++t){const e=t*k,n=t*C;for(let t=0;t<p.outHeight;++t){const s=n+t*N,r=t*p.strideHeight-b;for(let t=0;t<d;++t){const n=r+t*m;if(n<0||n>=p.inHeight)continue;const i=t*_[0],a=e+n*T;for(let t=0;t<p.outWidth;++t){const e=s+t*A,n=t*p.strideWidth-y;for(let t=0;t<f;++t){const s=n+t*g;if(s<0||s>=p.inWidth)continue;const r=a+s*S;let o=i+t*_[1];for(let t=0;t<p.inChannels;++t){const n=$[r+t*I];for(let t=0;t<p.outChannels;++t)D[e+t*E]+=n*R[o+t];o+=p.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,D)}const Nw={kernelName:qt,backendName:"cpu",kernelFunc:Cw},Aw={kernelName:Ut,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:i}=e,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;Gx([r,i],"conv2dBackpropFilter");const h=na(l),p=Hi(r.shape,c,a,1,o,u,!1,h),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new Os(p.filterShape,"float32"),x=p.padInfo.left,v=p.padInfo.top,w=n.data.get(r.dataId).values,_=n.data.get(i.dataId).values,k=new Os(r.shape,r.dtype,w),T=new Os(i.shape,i.dtype,_);for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((v-t)/d)),n=Math.min(p.outHeight,(p.inHeight+v-t)/d);for(let s=0;s<g;++s){const r=Math.max(0,Math.ceil((x-s)/f)),i=Math.min(p.outWidth,(p.inWidth+x-s)/f);for(let a=0;a<p.inChannels;++a)for(let o=0;o<p.outChannels;++o){let l=0;for(let u=0;u<p.batchSize;++u)for(let c=e;c<n;++c){const e=t+c*d-v;for(let t=r;t<i;++t){const n=s+t*f-x;l+=y?k.get(u,e,n,a)*T.get(u,c,t,o):k.get(u,a,e,n)*T.get(u,o,c,t)}}b.set(l,t,s,a,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},Ew={kernelName:Gt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:i}=e,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s;Gx([r,i],"conv2dBackpropInput");const h=J(i.shape),p=J(r.shape);let d=na(u);const f=Hi(a,i.shape,o,1,l,c,!1,d),m=new Os(f.inShape,"float32"),g=m.values,y=n.data.get(r.dataId).values,b=n.data.get(i.dataId).values,[x,v,w]=h,{batchSize:_,filterHeight:k,filterWidth:T,inChannels:S,inHeight:I,inWidth:C,outChannels:N,outHeight:A,outWidth:E,strideHeight:$,strideWidth:R}=f;d=f.dataFormat;const D=k-1-f.padInfo.top,O=T-1-f.padInfo.left,F="channelsLast"===d,M=m.strides[0],L=F?m.strides[1]:m.strides[2],z=F?m.strides[2]:1,P=F?1:m.strides[1],V=p[0],B=F?p[1]:p[2],W=F?p[2]:1,q=F?1:p[1];for(let t=0;t<_;++t)for(let e=0;e<S;++e)for(let n=0;n<I;++n){const s=n-D,r=Math.max(0,Math.ceil(s/$)),i=Math.min(A,(k+s)/$);for(let a=0;a<C;++a){const o=a-O,l=Math.max(0,Math.ceil(o/R)),u=Math.min(E,(T+o)/R);let c=0;for(let n=r;n<i;++n){const r=n*$-s;for(let s=l;s<u;++s){const i=V*t+B*n+W*s,a=x*(k-1-r)+v*(T-1-(s*R-o))+w*e;for(let t=0;t<N;++t)c+=y[i+q*t]*b[a+t]}}g[M*t+L*n+z*a+P*e]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},$w={kernelName:jt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i}=e,{strides:a,pad:o,dilations:l}=s;Gx([r,i],"conv3d");const u=Xi(r.shape,i.shape,a,l,o),{filterDepth:c,filterHeight:h,filterWidth:p,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,v=new Os(u.outShape,r.dtype),w=n.data.get(r.dataId).values,_=n.data.get(i.dataId).values,k=v.values,T=J(r.shape),S=J(i.shape);for(let t=0;t<u.batchSize;++t){const e=t*T[0],n=t*v.strides[0];for(let t=0;t<u.outDepth;++t){const s=n+t*v.strides[1],r=t*u.strideDepth-y;for(let t=0;t<c;++t){const n=r+t*d;if(n<0||n>=u.inDepth)continue;const i=t*S[0],a=e+n*T[1];for(let t=0;t<u.outHeight;++t){const e=s+t*v.strides[2],n=t*u.strideHeight-x;for(let t=0;t<h;++t){const s=n+t*f;if(s<0||s>=u.inHeight)continue;const r=i+t*S[1],o=a+s*T[2];for(let t=0;t<u.outWidth;++t){const n=e+t*u.outChannels,s=t*u.strideWidth-b;for(let t=0;t<p;++t){const e=s+t*m;if(e<0||e>=u.inWidth)continue;const i=r+t*S[2],a=o+e*u.inChannels;let l=i;for(let t=0;t<u.inChannels;++t){const e=w[a+t];for(let t=0;t<u.outChannels;++t)k[n+t]+=e*_[l+t];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},Rw={kernelName:Ht,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:i}=e,{strides:a,pad:o,filterShape:l}=s;Gx([r,i],"conv3dBackpropFilterV2");const u=J(r.shape),c=J(i.shape),h=Xi(r.shape,l,a,1,o),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Os(h.filterShape,"float32"),x=b.values,[v,w,_,k]=b.strides,T=n.data.get(i.dataId).values,[S,I,C,N]=c,A=n.data.get(r.dataId).values,[E,$,R,D]=u,O=h.padInfo.front,F=h.padInfo.left,M=h.padInfo.top;for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((O-t)/p)),n=Math.min(h.outDepth,(h.inDepth+O-t)/p),s=t*v;for(let r=0;r<g;++r){const i=Math.max(0,Math.ceil((M-r)/d)),a=Math.min(h.outHeight,(h.inHeight+M-r)/d),o=r*w+s;for(let s=0;s<y;++s){const l=Math.max(0,Math.ceil((F-s)/f)),u=Math.min(h.outWidth,(h.inWidth+F-s)/f),c=s*_+o;for(let o=0;o<h.inChannels;++o){const m=o*k+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*E,y=m*S;for(let m=e;m<n;++m){const e=(t+m*p-O)*$+h,n=m*I+y;for(let t=i;t<a;++t){const i=(r+t*d-M)*R+e,a=t*C+n;for(let t=l;t<u;++t){const e=t*N+a;g+=A[(s+t*f-F)*D+i+o]*T[e+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},Dw={kernelName:Xt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:i}=e,{pad:a,strides:o,inputShape:l}=s;Gx([r],"conv3dBackpropInputV2");const u=J(r.shape),c=J(i.shape),h=Xi(l,i.shape,o,1,a),p=new Os(h.inShape,"float32"),d=p.values,[f,m,g,y]=p.strides,b=n.data.get(r.dataId).values,[x,v,w,_]=u,k=n.data.get(i.dataId).values,[T,S,I,C]=c,{batchSize:N,filterDepth:A,filterHeight:E,filterWidth:$,inChannels:R,inDepth:D,inHeight:O,inWidth:F,outChannels:M,outDepth:L,outHeight:z,outWidth:P,strideDepth:V,strideHeight:B,strideWidth:W}=h,q=A-1-h.padInfo.front,U=E-1-h.padInfo.top,G=$-1-h.padInfo.left;for(let t=0;t<N;++t)for(let e=0;e<R;++e)for(let n=0;n<D;++n){const s=n-q,r=Math.max(0,Math.ceil(s/V)),i=Math.min(L,(A+s)/V);for(let a=0;a<O;++a){const o=a-U,l=Math.max(0,Math.ceil(o/B)),u=Math.min(z,(E+o)/B);for(let c=0;c<F;++c){const h=c-G,p=Math.max(0,Math.ceil(h/W)),N=Math.min(P,($+h)/W);let R=0;for(let n=r;n<i;++n){const r=n*V-s;for(let s=l;s<u;++s){const i=s*B-o;for(let a=p;a<N;++a){const o=x*t+v*n+w*s+_*a,l=T*(A-1-r)+S*(E-1-i)+I*($-1-(a*W-h))+C*e;for(let t=0;t<M;++t)R+=b[o+t]*k[l+t]}}}d[f*t+m*n+g*a+y*c+e]=R}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},Ow=Xx(Kt,(t=>Math.cos(t))),Fw={kernelName:Kt,backendName:"cpu",kernelFunc:Ow},Mw=Xx(Yt,(t=>Math.cosh(t))),Lw={kernelName:Yt,backendName:"cpu",kernelFunc:Mw},zw={kernelName:Qt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{image:r,boxes:i,boxInd:a}=e,{cropSize:o,method:l,extrapolationValue:u}=s,[c,h,p,d]=r.shape,f=i.shape[0],[m,g]=o,y=Yr([f,m,g,d],"float32"),b=n.data.get(i.dataId).values,x=n.data.get(a.dataId).values,v=n.data.get(r.dataId).values,w=J(r.shape),_=J(y.shape);for(let t=0;t<f;t++){const e=4*t,n=b[e],s=b[e+1],r=b[e+2],i=b[e+3],a=x[t];if(a>=c)continue;const o=m>1?(r-n)*(h-1)/(m-1):0,f=g>1?(i-s)*(p-1)/(g-1):0;for(let e=0;e<m;e++){const c=m>1?n*(h-1)+e*o:.5*(n+r)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let s=0;s<d;s++){const r=s+n*_[2]+e*_[1]+t*_[0];y.values[r]=u}else if("bilinear"===l){const n=Math.floor(c),r=Math.ceil(c),o=c-n;for(let l=0;l<g;l++){const c=g>1?s*(p-1)+l*f:.5*(s+i)*(p-1);if(c<0||c>p-1){for(let n=0;n<d;n++){const s=n+l*_[2]+e*_[1]+t*_[0];y.values[s]=u}continue}const h=Math.floor(c),m=Math.ceil(c),b=c-h;for(let s=0;s<d;s++){let i=s+h*w[2]+n*w[1]+a*w[0];const u=v[i];i=s+m*w[2]+n*w[1]+a*w[0];const c=v[i];i=s+h*w[2]+r*w[1]+a*w[0];const p=v[i];i=s+m*w[2]+r*w[1]+a*w[0];const d=u+(c-u)*b,f=p+(v[i]-p)*b;i=s+l*_[2]+e*_[1]+t*_[0],y.values[i]=d+(f-d)*o}}}else for(let n=0;n<g;++n){const r=g>1?s*(p-1)+n*f:.5*(s+i)*(p-1);if(r<0||r>p-1){for(let s=0;s<d;s++){const r=s+n*_[2]+e*_[1]+t*_[0];y.values[r]=u}continue}const o=Math.round(r),l=Math.round(c);for(let s=0;s<d;s++){const r=s+o*w[2]+l*w[1]+a*w[0],i=s+n*_[2]+e*_[1]+t*_[0];y.values[i]=v[r]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},Pw={kernelName:Zt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,exclusive:a,reverse:o}=s;Gx(r,"cumsum");const l=so([i],r.shape.length);let u=r;null!=l&&(u=Lv({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=io(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Hs(u.dtype,"int32"),p=st(O(u.shape),h),d=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(t,e)=>t+f-e-1:(t,e)=>t+e;for(let t=0;t<d.length;t+=f)for(let e=0;e<f;e++){const n=m(t,e);if(0===e)p[n]=a?0:d[n];else{const s=m(t,e-1);p[n]=a?d[s]+p[s]:d[n]+p[s]}}const g=n.makeTensorInfo(u.shape,h,p);if(null!=l){const t=Lv({inputs:{x:g},backend:n,attrs:{perm:ro(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),t}return g}},Vw={kernelName:Jt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,weights:i}=e,{size:a,binaryOutput:o}=s;if(1===r.shape.length){const t=pw(n.data.get(r.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,t)}if(2===r.shape.length){const t=dw(n.bufferSync(r),n.bufferSync(i),a,o);return n.makeTensorInfo(t.shape,i.dtype,t.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}},Bw={kernelName:te,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockSize:i,dataFormat:a}=s;E("NHWC"===a,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`)),E(i>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${i}`));const o=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],h=l*i,p=u*i,d=c/(i*i),f=n.data.get(r.dataId).values,m=new Float32Array(o*h*p*d);let g=0;for(let t=0;t<o;++t)for(let e=0;e<h;++e){const n=Math.floor(e/i),s=e%i;for(let e=0;e<p;++e){const r=Math.floor(e/i),a=(s*i+e%i)*d;for(let e=0;e<d;++e){const s=e+a+c*(r+u*(n+l*t));m[g++]=f[s]}}}return n.makeTensorInfo([o,h,p,d],r.dtype,m)}};function Ww(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i}=e,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=s;Gx([r,i],"depthwiseConv2DNative");const c=J(r.shape),h=J(i.shape);let p=l;null==p&&(p=[1,1]),E(ea(a,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${p}'`));const d=Hi(r.shape,i.shape,a,p,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=d,x=b.left,v=b.top,w=d.outChannels/d.inChannels,_=new Os(d.outShape,r.dtype),k=n.data.get(r.dataId).values,T=n.data.get(i.dataId).values,S=_.values;for(let t=0;t<d.batchSize;++t){const e=t*c[0],n=t*_.strides[0];for(let t=0;t<d.outHeight;++t){const s=n+t*_.strides[1],r=t*d.strideHeight-x;for(let t=0;t<f;++t){const n=r+t*g;if(n<0||n>=d.inHeight)continue;const i=t*h[0],a=e+n*c[1];for(let t=0;t<d.outWidth;++t){const e=s+t*_.strides[2],n=t*d.strideWidth-v;for(let t=0;t<m;++t){const s=n+t*y;if(s<0||s>=d.inWidth)continue;const r=i+t*h[1],o=a+s*d.inChannels;let l=e,u=r;for(let t=0;t<d.inChannels;++t){const e=k[o+t];for(let t=0;t<w;++t)S[l+t]+=e*T[u+t];l+=w,u+=w}}}}}}return n.makeTensorInfo(_.shape,_.dtype,_.values)}const qw={kernelName:ee,backendName:"cpu",kernelFunc:Ww},Uw={kernelName:ne,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s;Gx([r,i],"depthwiseConv2dNativeBackpropFilter");const h=Hi(r.shape,c,a,o,l,u,!0),{strideHeight:p,strideWidth:d,filterHeight:f,filterWidth:m}=h,g=new Os(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(r.dataId).values,w=new Os(r.shape,r.dtype,v),_=n.data.get(i.dataId).values,k=new Os(i.shape,i.dtype,_);for(let t=0;t<f;++t){const e=Math.max(0,Math.ceil((b-t)/p)),n=Math.min(h.outHeight,(h.inHeight+b-t)/p);for(let s=0;s<m;++s){const r=Math.max(0,Math.ceil((y-s)/d)),i=Math.min(h.outWidth,(h.inWidth+y-s)/d);for(let a=0;a<h.outChannels;++a){const o=Math.trunc(a/x),l=a%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=e;c<n;++c){const e=t+c*p-b;for(let t=r;t<i;++t){const n=s+t*d-y;u+=w.get(l,e,n,o)*k.get(l,c,t,a)}}g.set(u,t,s,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},Gw={kernelName:se,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s;Gx([r,i],"depthwiseConv2DNativeBackpropInput");const h=J(r.shape),p=J(i.shape),d=Hi(c,i.shape,a,o,l,u,!0),f=new Os(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(r.dataId).values,[v,w,_]=h,k=n.data.get(i.dataId).values,[T,S,I]=p,{batchSize:C,filterHeight:N,filterWidth:A,inChannels:E,inHeight:$,inWidth:R,outChannels:D,outHeight:O,outWidth:F,strideHeight:M,strideWidth:L}=d,z=N-1-d.padInfo.top,P=A-1-d.padInfo.left,V=D/E;for(let t=0;t<C;++t)for(let e=0;e<E;++e)for(let n=0;n<$;++n){const s=n-z,r=Math.max(0,Math.ceil(s/M)),i=Math.min(O,(N+s)/M);for(let a=0;a<R;++a){const o=a-P,l=Math.max(0,Math.ceil(o/L)),u=Math.min(F,(A+o)/L);let c=0;for(let n=r;n<i;++n){const r=n*M-s;for(let s=l;s<u;++s){const i=v*t+w*n+_*s,a=T*(N-1-r)+S*(A-1-(s*L-o))+I*e;for(let t=0;t<V;++t)c+=x[i+(e*V+t)]*k[a+t]}}m[g*t+y*n+b*a+e]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},jw={kernelName:re,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s}=e,r=O(s.shape),i=n.data.get(s.dataId).values,a=Yr([r,r],s.dtype),o=a.values;for(let t=0;t<i.length;t++)o[t*r+t]=i[t];const l=[...s.shape,...s.shape];return n.makeTensorInfo(l,a.dtype,a.values)}},Hw={kernelName:ie,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:r}=t,{strides:i,pad:a,dilations:o}=n,l=e,u=l.data.get(s.dataId).values,c=s.shape.length,h=l.data.get(r.dataId).values,p=r.shape.length,{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:_,filterWidth:k,dilationHeight:T,dilationWidth:S,outShape:I}=Ui(s.shape,r.shape,i,a,"NHWC",o),C=O(I),N=I.length,A=U(s.dtype,C);for(let t=0;t<d;++t)for(let e=0;e<y;++e){const n=e*v-x.top;for(let i=0;i<b;++i){const a=i*w-x.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let e=0;e<_;++e){const i=n+e*T;if(i>=0&&i<f)for(let n=0;n<k;++n){const d=a+n*S;if(d>=0&&d<m){const a=at([t,i,d,o],c,J(s.shape)),f=at([e,n,o],p,J(r.shape)),m=u[a]+h[f];m>l&&(l=m)}}}A[at([t,e,i,o],N,J(I))]=l}}}return{dataId:l.write(xs(A,s.dtype),I,s.dtype),shape:I,dtype:s.dtype}}},Xw={kernelName:oe,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:r,dy:i}=t,{strides:a,pad:o,dilations:l}=n,u=e,c=et(s.shape,u.data.get(s.dataId).values),h=et(r.shape,u.data.get(r.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:_,dilationHeight:k,dilationWidth:T,outShape:S}=Ui(s.shape,r.shape,a,o,"NHWC",l);E(i.rank===S.length,(()=>`Error in ${oe}, dy must have the same rank as output ${S.length}, but got ${i.rank}`));const I=et(S,u.data.get(i.dataId).values),C=rt(r.shape,r.dtype);for(let t=0;t<p;++t)for(let e=0;e<g;++e){const n=e*x-b.top;for(let s=0;s<y;++s){const r=s*v-b.left;for(let i=0;i<m;++i){let a=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let e=0;e<w;++e){const s=n+e*k;if(s>=0&&s<d)for(let n=0;n<_;++n){const u=r+n*T;if(u>=0&&u<f){const r=c[t][s][u][i]+h[e][n][i];r>a&&(a=r,o=e,l=n)}}}C[o][l][i]+=I[t][e][s][i]}}}return{dataId:u.write(xs(C,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Kw={kernelName:ae,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:r,dy:i}=t,{strides:a,pad:o,dilations:l}=n,u=e,c=et(s.shape,u.data.get(s.dataId).values),h=et(r.shape,u.data.get(r.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:_,dilationHeight:k,dilationWidth:T,outShape:S}=Ui(s.shape,r.shape,a,o,"NHWC",l);E(i.rank===S.length,(()=>`Error in ${ae}, dy must have the same rank as output ${S.length}, but got ${i.rank}`));const I=et(S,u.data.get(i.dataId).values),C=rt(s.shape,s.dtype);for(let t=0;t<p;++t)for(let e=0;e<g;++e){const n=e*x-b.top;for(let s=0;s<y;++s){const r=s*v-b.left;for(let i=0;i<m;++i){let a=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=r<0?0:r;for(let e=0;e<w;++e){const s=n+e*k;if(s>=0&&s<d)for(let n=0;n<_;++n){const u=r+n*T;if(u>=0&&u<f){const r=c[t][s][u][i]+h[e][n][i];r>a&&(a=r,o=s,l=u)}}}C[t][o][l][i]+=I[t][e][s][i]}}}return{dataId:u.write(xs(C,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Yw={kernelName:ce,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{dy:s,y:r}=e;Gx([s,r],"eluGrad");const i=new Float32Array(O(r.shape)),a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values;for(let t=0;t<a.length;++t){const e=a[t];i[t]=e>=1?o[t]:o[t]*(e+1)}return n.makeTensorInfo(r.shape,"float32",i)}},Zw=nv(((t,e)=>t===e?1:0)),Qw=bv(pe,Zw,null,"bool"),Jw={kernelName:pe,backendName:"cpu",kernelFunc:Qw},t_=Tu,e_=Su,n_=Iu,s_=Cu,r_=Nu,i_=Au,a_=Xx(he,(t=>{const e=Math.sign(t),n=Math.abs(t),s=1/(1+t_*n);return e*(1-((((i_*s+r_)*s+s_)*s+n_)*s+e_)*s*Math.exp(-n*n))})),o_={kernelName:he,backendName:"cpu",kernelFunc:a_},l_=mw((t=>Math.exp(t))),u_=Kx(de,l_),c_={kernelName:de,backendName:"cpu",kernelFunc:u_};function h_(t){const{inputs:e,backend:n,attrs:s}=t,{input:r}=e,{dim:i}=s,a=r.shape.length,o=r.shape.slice();let l=i;return i<0&&(E(-(a+1)<=i,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),l=a+i+1),o.splice(l,0,1),Tv({inputs:{x:r},backend:n,attrs:{shape:o}})}const p_={kernelName:fe,backendName:"cpu",kernelFunc:h_},d_=mw((t=>Math.expm1(t))),f_=Kx(me,d_),m_={kernelName:me,backendName:"cpu",kernelFunc:f_},g_=nv(((t,e)=>t*e)),y_=xv(((t,e,n,s)=>({real:t*n-e*s,imag:t*s+e*n}))),b_=bv(nn,g_,y_),x_={kernelName:nn,backendName:"cpu",kernelFunc:b_},v_=nv(((t,e)=>t/e)),w_=bv(le,v_),__={kernelName:le,backendName:"cpu",kernelFunc:w_},k_=nv(((t,e)=>t-e)),T_=xv(((t,e,n,s)=>({real:t-n,imag:e-s}))),S_=bv(Gn,k_,T_),I_={kernelName:Gn,backendName:"cpu",kernelFunc:S_};function C_(t,e,n){const s=t.shape,r=s[0],i=s[1],a=n.data.get(t.dataId),o=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,u=[r,i],c=O(u),h=q("float32",c),p=q("float32",c);for(let t=0;t<r;t++){const s=uw({inputs:{x:o},backend:n,attrs:{begin:[t,0],size:[1,i]}}),r=uw({inputs:{x:l},backend:n,attrs:{begin:[t,0],size:[1,i]}}),a=hv({inputs:{real:s,imag:r},backend:n}),{real:u,imag:c}=N_(a,e,n),d=Ru(u,c);for(let e=0;e<i;e++){const n=Mu(d,e);h[t*i+e]=n.real,p[t*i+e]=n.imag}n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a)}const d=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",p),m=hv({inputs:{real:d,imag:f},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}function N_(t,e,n){const s=O(t.shape),r=n.data.get(t.dataId),i=n.data.get(r.complexTensorInfos.real.dataId).values,a=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0==((o=s)&o-1)){const r=A_(i,a,s,e,n),o=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(o,"float32",r.real),e=n.makeTensorInfo(o,"float32",r.imag),i=n.makeTensorInfo([],"float32",bs(s,"float32")),a=Qx({inputs:{x:i},backend:n}),l=__.kernelFunc({inputs:{a:t,b:i},backend:n}),u=__.kernelFunc({inputs:{a:e,b:a},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return r}{const t=function(t,e,n){const s=new Float32Array(2*e);for(let r=0;r<e;r++){let i=0,a=0;for(let s=0;s<e;s++){const o=Pu(r*s,e,n),l=Mu(t,s);i+=l.real*o.real-l.imag*o.imag,a+=l.real*o.imag+l.imag*o.real}n&&(i/=e,a/=e),Lu(s,i,a,r)}return s}(Ru(i,a),s,e);return Du(t)}var o}function A_(t,e,n,s,r){if(1===n)return{real:t,imag:e};const i=Ru(t,e),a=n/2,o=Ou(i),l=o.real,u=o.imag,c=[l.length],h=r.makeTensorInfo(c,"float32",l),p=r.makeTensorInfo(c,"float32",u),d=hv({inputs:{real:h,imag:p},backend:r}),f=Fu(i),m=f.real,g=f.imag,y=[m.length],b=r.makeTensorInfo(y,"float32",m),x=r.makeTensorInfo(y,"float32",g),v=hv({inputs:{real:b,imag:x},backend:r}),w=A_(l,u,a,s,r),_=w.real,k=w.imag,T=[_.length],S=r.makeTensorInfo(T,"float32",_),I=r.makeTensorInfo(T,"float32",k),C=hv({inputs:{real:S,imag:I},backend:r}),N=A_(m,g,a,s,r),A=N.real,E=N.imag,$=[A.length],R=r.makeTensorInfo($,"float32",A),D=r.makeTensorInfo($,"float32",E),O=hv({inputs:{real:R,imag:D},backend:r}),F=zu(n,s),M=[F.real.length],L=r.makeTensorInfo(M,"float32",F.real),z=r.makeTensorInfo(M,"float32",F.imag),P=hv({inputs:{real:L,imag:z},backend:r}),V=b_({inputs:{a:P,b:O},backend:r}),B=_v({inputs:{a:C,b:V},backend:r}),W=S_({inputs:{a:C,b:V},backend:r}),q=fv({inputs:{input:B},backend:r}),U=fv({inputs:{input:W},backend:r}),G=kw({inputs:{input:B},backend:r}),j=kw({inputs:{input:W},backend:r}),H=Sw({inputs:[q,U],backend:r,attrs:{axis:0}}),X=Sw({inputs:[G,j],backend:r,attrs:{axis:0}}),K=r.data.get(H.dataId).values,Y=r.data.get(X.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(S),r.disposeIntermediateTensorInfo(I),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(O),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(X),{real:K,imag:Y}}const E_={kernelName:ge,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:s}=e,r=O(s.shape),i=s.shape[s.shape.length-1],a=Tv({inputs:{x:s},backend:n,attrs:{shape:[r/i,i]}}),o=C_(a,!1,n),l=Tv({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}};function $_(t){const{backend:e,attrs:n}=t,{shape:s,value:r,dtype:i}=n,a=i||Y(r),o=U(a,O(s));return function(t,e,n){t.fill(e)}(o,r),e.makeTensorInfo(s,a,o)}const R_={kernelName:ye,backendName:"cpu",kernelFunc:$_},D_={kernelName:be,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,r=n,i=q(s.dtype,O(s.shape)),[a,o,l,u]=s.shape,c=r.data.get(s.dataId).values;for(let t=0;t<a;t++){const e=t*l*o*u;for(let t=0;t<o;t++){const n=t*(l*u);for(let s=0;s<l;s++){const r=s*u;for(let o=0;o<u;o++){const h=[a,t,s,o][2],p=Math.round(l-h),d=e+n+r+o;let f=c[d];p>=0&&p<l&&(f=c[e+n+p*u+o]),i[d]=f}}}}return{dataId:r.write(i,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},O_=mw((t=>Math.floor(t))),F_=Kx(xe,O_),M_={kernelName:xe,backendName:"cpu",kernelFunc:F_},L_=nv(((t,e)=>Math.floor(t/e))),z_=bv(ve,L_,null,"int32"),P_={kernelName:ve,backendName:"cpu",kernelFunc:z_},V_={kernelName:ls,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s;let m=Cw({inputs:{x:r,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p}});if(a){const t=m;m=_v({inputs:{a:m,b:a},backend:n}),n.disposeIntermediateTensorInfo(t)}if(d){const t=m;m=cv(n,m,d,o,f),n.disposeIntermediateTensorInfo(t)}return m}},B_={kernelName:us,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s;let m=Ww({inputs:{x:r,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p}});if(a){const t=m;m=_v({inputs:{a:m,b:a},backend:n}),n.disposeIntermediateTensorInfo(t)}if(d){const t=m;m=cv(n,m,d,o,f),n.disposeIntermediateTensorInfo(t)}return m}},W_={kernelName:ke,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:s,indices:r}=e,i=O(s.shape),a=r.shape,o=a[a.length-1],[l,u,c,h]=bu(s,r);if(0===u)return n.makeTensorInfo(l,s.dtype,[]);const p=Yr([u,c],s.dtype),d=n.data.get(r.dataId).values,f=n.data.get(s.dataId).values;for(let t=0;t<u;t++){const e=[];let n=0;for(let s=0;s<o;s++){const r=d[t*o+s];n+=r*h[s],e.push(r)}if(n<0||n>=i/c)throw new Error(`Invalid indices: ${e} does not index into ${s.shape}`);for(let e=0;e<c;e++)p.values[t*c+e]=f[n*c+e]}return n.makeTensorInfo(l,p.dtype,p.values)}};function q_(t,e,n){const s=Yr(n,t.dtype);for(let n=0;n<s.size;++n){const r=s.indexToLoc(n).slice(),i=r[0],a=r[2],o=e.locToIndex([i,a]);r[2]=e.values[o];const l=t.locToIndex(r);s.values[n]=t.values[l]}return s}const U_={kernelName:_e,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,indices:i}=e,{axis:a,batchDims:o}=s;Gx([r,i],"gatherV2");let l=o;null==o&&(l=0);const u=O(i.shape),c=qu(r,i,B(a,r.shape)[0],l),h=Tv({inputs:{x:r},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=Tv({inputs:{x:i},backend:n,attrs:{shape:[c.batchSize,u/c.batchSize]}}),d=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize],f=n.bufferSync(p),m=q_(n.bufferSync(h),f,d);return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.makeTensorInfo(c.outputShape,m.dtype,m.values)}},G_=nv(((t,e)=>t>e?1:0)),j_=bv(Te,G_,null,"bool"),H_={kernelName:Te,backendName:"cpu",kernelFunc:j_},X_=nv(((t,e)=>t>=e?1:0)),K_=bv(Se,X_,null,"bool"),Y_={kernelName:Se,backendName:"cpu",kernelFunc:K_},Z_={kernelName:Ce,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:s}=e,r=O(s.shape),i=s.shape[s.shape.length-1],a=Tv({inputs:{x:s},backend:n,attrs:{shape:[r/i,i]}}),o=C_(a,!0,n),l=Tv({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}},Q_=Xx(Ae,(t=>Number.isFinite(t)?1:0),"bool"),J_={kernelName:Ae,backendName:"cpu",kernelFunc:Q_},tk=Xx(Ee,(t=>Math.abs(t)===1/0?1:0),"bool"),ek={kernelName:Ee,backendName:"cpu",kernelFunc:tk},nk=Xx($e,(t=>Number.isNaN(t)?1:0),"bool"),sk={kernelName:$e,backendName:"cpu",kernelFunc:nk},rk=nv(((t,e)=>t<e?1:0)),ik=bv(De,rk,null,"bool"),ak={kernelName:De,backendName:"cpu",kernelFunc:ik},ok=nv(((t,e)=>t<=e?1:0)),lk=bv(Oe,ok,null,"bool"),uk={kernelName:Oe,backendName:"cpu",kernelFunc:lk};function ck(t,e,n){const s=(e-t)/(n-1),r=st(n,"float32");r[0]=t;for(let t=1;t<r.length;t++)r[t]=r[t-1]+s;return r}const hk={kernelName:Fe,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:s,stop:r,num:i}=n,a=ck(s,r,i);return e.makeTensorInfo([a.length],"float32",a)}},pk=mw((t=>Math.log(t))),dk=Kx(Me,pk),fk={kernelName:Me,backendName:"cpu",kernelFunc:dk},mk=Xx(Le,(t=>Math.log1p(t))),gk={kernelName:Le,backendName:"cpu",kernelFunc:mk},yk=nv(((t,e)=>t&&e)),bk=bv(ze,yk,null,"bool"),xk={kernelName:ze,backendName:"cpu",kernelFunc:bk},vk=Xx(Pe,(t=>t?0:1),"bool"),wk={kernelName:Pe,backendName:"cpu",kernelFunc:vk},_k=nv(((t,e)=>t||e)),kk=bv(Ve,_k,null,"bool"),Tk={kernelName:Ve,backendName:"cpu",kernelFunc:kk},Sk={kernelName:Be,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{depthRadius:i,bias:a,alpha:o,beta:l}=s;Gx(r,"LRN");const u=r.shape[3],c=u-1,h=n.data.get(r.dataId).values,p=O(r.shape),d=new Float32Array(p);function f(t){const e=t%u;let n=t-e+Math.max(0,e-i);const s=t-e+Math.min(e+i,c);let r=0;for(;n<=s;n++){const t=h[n];r+=t*t}return r}for(let t=0;t<p;t++){const e=f(t),n=h[t]*Math.pow(a+o*e,-l);d[t]=n}return n.makeTensorInfo(r.shape,r.dtype,d)}},Ik={kernelName:We,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,y:i,dy:a}=e,{depthRadius:o,bias:l,alpha:u,beta:c}=s;Gx(a,"LRNGrad");const h=O(a.shape),p=a.shape[3],d=n.data.get(a.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(i.dataId).values,g=new Float32Array(h),y=h;for(let t=0;t<y;t++){const e=t%p,n=t-e+Math.max(0,e-o),s=t-e+Math.min(p,e+o+1);let r=0;for(let t=n;t<s;t++)r+=Math.pow(f[t],2);r=u*r+l;for(let e=n;e<s;e++){let n=-2*u*c*f[e]*m[t]/r;t===e&&(n+=Math.pow(r,-c)),n*=d[t],g[e]+=n}}return n.makeTensorInfo(a.shape,r.dtype,g)}};function Ck(t,e,n,s){const r=q(s,O(n));for(let n=0;n<r.length;++n){const s=n*e;let i=t[s];for(let n=0;n<e;++n){const e=t[s+n];e>i&&(i=e)}r[n]=i}return r}function Nk(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{reductionIndices:i,keepDims:a}=s,o=n;let l=r.shape;const u=l.length,c=B(i,l);let h=c;const p=so(h,u);let d=o.data.get(r.dataId).values;if(null!=p){const t=new Array(u);for(let e=0;e<t.length;e++)t[e]=l[p[e]];d=Mv(d,l,r.dtype,p,t),h=io(h.length,u),l=t}Gx(r,"max"),no("max",h,u);const[f,m]=to(l,h),g=Ck(d,O(m),f,r.dtype),y=o.write(g,f,r.dtype);let b=f;return a&&(b=eo(f,c)),{dataId:y,shape:b,dtype:r.dtype}}const Ak={kernelName:qe,backendName:"cpu",kernelFunc:Nk},Ek=nv(((t,e)=>Math.max(t,e))),$k=bv(Ue,Ek),Rk={kernelName:Ue,backendName:"cpu",kernelFunc:$k},Dk={kernelName:Ge,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;Gx(r,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s;E(ea(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Gi(r.shape,i,a,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&F(u.inShape,u.outShape))c=Qx({inputs:{x:r},backend:n});else{const t=n.data.get(r.dataId).values,e=J(r.shape),s=tw(t,r.shape,r.dtype,e,u,"max");c=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return c}},Ok={kernelName:He,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=s;Gx(r,"maxPool3d");const c=ji(r.shape,i,a,1,o,l,u),h=nw(n.data.get(r.dataId).values,r.shape,r.dtype,J(r.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},Fk={kernelName:Xe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i}=e,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=s;Gx([r,i],"maxPool3DGrad");const c=ji(i.shape,a,o,1,l,u),h=function(t,e){const n=Yr(e.outShape,"int32"),s=e.strideDepth,r=e.strideHeight,i=e.strideWidth,a=e.dilationDepth,o=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.front,d=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let g=0;g<e.inChannels;++g)for(let y=0;y<e.outDepth;++y){const b=y*s-p;let x=b;for(;x<0;)x+=a;const v=Math.min(e.inDepth,u+b);for(let s=0;s<e.outHeight;++s){const u=s*r-d;let p=u;for(;p<0;)p+=o;const w=Math.min(e.inHeight,c+u);for(let r=0;r<e.outWidth;++r){const d=r*i-f;let _=d;for(;_<0;)_+=l;const k=Math.min(e.inWidth,h+d);let T=Number.NEGATIVE_INFINITY,S=-1;for(let e=x;e<v;e+=a){const n=e-b;for(let s=p;s<w;s+=o){const r=s-u;for(let i=_;i<k;i+=l){const a=i-d,o=t.get(m,e,s,i,g);o>=T&&(T=o,S=n*c*h+r*c+a)}}}n.set(S,m,y,s,r,g)}}}return n}(n.bufferSync(i),c),p=c.strideDepth,d=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,v=c.effectiveFilterWidth,w=b-1-c.padInfo.front,_=v-1-c.padInfo.left,k=x-1-c.padInfo.top,T=Yr(i.shape,"float32"),S=n.bufferSync(r);for(let t=0;t<c.batchSize;++t)for(let e=0;e<c.inChannels;++e)for(let n=0;n<c.inDepth;++n)for(let s=0;s<c.inHeight;++s)for(let r=0;r<c.inWidth;++r){const i=n-w,a=s-k,o=r-_;let l=0;for(let n=0;n<b;n+=m){const s=(i+n)/p;if(!(s<0||s>=c.outDepth||Math.floor(s)!==s))for(let r=0;r<x;r+=g){const i=(a+r)/d;if(!(i<0||i>=c.outHeight||Math.floor(i)!==i))for(let a=0;a<v;a+=y){const u=(o+a)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const p=b*x*v-1-h.get(t,s,i,u,e)===n*x*v+r*v+a?1:0;0!==p&&(l+=S.get(t,s,i,u,e)*p)}}}T.set(l,t,n,s,r,e)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},Mk={kernelName:je,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i,output:a}=e,o=i;Gx([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,p=Gi(o.shape,l,u,1,c,h),d=n.data.get(o.dataId).values,f=Yr(p.outShape,o.dtype,ew(d,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,v=p.effectiveFilterWidth,w=v-1-p.padInfo.left,_=x-1-p.padInfo.top,k=Yr(o.shape,"float32"),T=n.data.get(r.dataId).values,S=Yr(r.shape,"float32",T);for(let t=0;t<p.batchSize;++t)for(let e=0;e<p.inChannels;++e)for(let n=0;n<p.inHeight;++n)for(let s=0;s<p.inWidth;++s){const r=n-_,i=s-w;let a=0;for(let n=0;n<x;n+=y){const s=(r+n)/m;if(!(s<0||s>=p.outHeight||Math.floor(s)!==s))for(let r=0;r<v;r+=b){const o=(i+r)/g;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const l=x*v-1-f.get(t,s,o,e)===n*v+r?1:0;0!==l&&(a+=S.get(t,s,o,e)*l)}}k.set(a,t,n,s,e)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},Lk={kernelName:Ke,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{filterSize:r,strides:i,pad:a,includeBatchInIndex:o}=e,l=n;Gx(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,c=Gi(s.shape,r,i,[1,1],a),[h,p]=function(t,e,n,s,r){const i=tw(t,0,n,J(e),r,"max"),a=ew(t,e,n,r,!0,s);return[i.values,a.values]}(u,s.shape,s.dtype,o,c),d=l.write(h,c.outShape,s.dtype),f=l.write(p,c.outShape,s.dtype);return[{dataId:d,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};function zk(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s;let o;Gx(r,"sum"),o="bool"===r.dtype?gv({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):Qx({inputs:{x:r},backend:n});const l=o.shape.length,u=B(i,o.shape),c=so(u,l);let h=u,p=o;null!=c&&(p=Lv({inputs:{x:o},backend:n,attrs:{perm:c}}),h=io(h.length,l)),no("sum",h,p.shape.length);const[d,f]=to(p.shape,h);let m=dv(n,d,Hs(p.dtype,"int32"));const g=O(f),y=n.data.get(m.dataId).values,b=n.data.get(p.dataId).values;for(let t=0;t<y.length;++t){const e=t*g;let n=0;for(let t=0;t<g;++t)n+=b[e+t];y[t]=n}if(a){const t=m;m=Tv({inputs:{x:m},backend:n,attrs:{shape:eo(m.shape,u)}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(p),m}const Pk={kernelName:Pn,backendName:"cpu",kernelFunc:zk},Vk={kernelName:Ye,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s,o=B(i,r.shape),l=O(to(r.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=gv({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});u.push(h);const p=w_({inputs:{a:h,b:c},backend:n});u.push(p);const d=zk({inputs:{x:p},backend:n,attrs:{axis:i,keepDims:a}});return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),d}},Bk={kernelName:Ze,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s;Gx(r,"min");const o=B(i,r.shape);let l=o;const u=so(l,r.shape.length);let c=r;null!=u&&(c=Lv({inputs:{x:r},backend:n,attrs:{perm:u}}),l=io(l.length,r.shape.length)),no("min",l,c.shape.length);const[h,p]=to(c.shape,l),d=O(p),f=st(O(h),c.dtype),m=n.data.get(c.dataId).values;for(let t=0;t<f.length;++t){const e=t*d;let n=m[e];for(let t=0;t<d;++t){const s=m[e+t];s<n&&(n=s)}f[t]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(a){const t=Tv({inputs:{x:g},backend:n,attrs:{shape:eo(h,o)}});return n.disposeIntermediateTensorInfo(g),t}return g}},Wk=nv(((t,e)=>Math.min(t,e))),qk=bv(Qe,Wk),Uk={kernelName:Qe,backendName:"cpu",kernelFunc:qk},Gk={kernelName:Je,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{paddings:i,mode:a}=s;Gx(r,"mirrorPad");const o=i.map(((t,e)=>t[0]+r.shape[e]+t[1])),l=i.map((t=>t[0])),u=i.map(((t,e)=>t[0]+r.shape[e])),c="reflect"===a?0:1,h=n.data.get(r.dataId).values,p=r.shape.length,d=J(r.shape),f=O(o),m=o.length,g=J(o),y=q(r.dtype,f);for(let t=0;t<f;t++){let e=ot(t,m,g);for(let t=0;t<m;t++)e[t]<l[t]?e[t]=2*l[t]-e[t]-c:e[t]>=u[t]&&(e[t]=2*(u[t]-1)-e[t]+c);e=e.map(((t,e)=>t-l[e]));const n=at(e,p,d);y[t]=h[n]}return{dataId:n.write(y,o,r.dtype),shape:o,dtype:r.dtype}}},jk=nv(((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e})),Hk=bv(tn,jk),Xk={kernelName:tn,backendName:"cpu",kernelFunc:Hk};var Kk=n(948);function Yk(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{dim:i}=s,a=r.shape.length;let o=i;if(-1===o&&(o=a-1),o!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${o}`);const l=B([o],r.shape),u=Nk({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=eo(u.shape,l),h=Tv({inputs:{x:u},backend:n,attrs:{shape:c}}),p=S_({inputs:{a:r,b:h},backend:n}),d=u_({inputs:{x:p},backend:n}),f=zk({inputs:{x:d},backend:n,attrs:{axis:l,keepDims:!1}}),m=Tv({inputs:{x:f},backend:n,attrs:{shape:c}}),g=w_({inputs:{a:d,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const Zk={kernelName:Wn,backendName:"cpu",kernelFunc:Yk},Qk={kernelName:en,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{numSamples:i,seed:a,normalized:o}=s;Gx(r,"multinomial");const l=o?r:Yk({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,p=[u,i],d=st(O(p),"int32");for(let t=0;t<u;++t){const e=t*c,n=new Float32Array(c-1);n[0]=h[e];for(let t=1;t<n.length;++t)n[t]=n[t-1]+h[e+t];const s=Kk.alea(a.toString()),r=t*i;for(let t=0;t<i;++t){const e=s();d[r+t]=n.length;for(let s=0;s<n.length;s++)if(e<n[s]){d[r+t]=s;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",d)}};function Jk(t,e,n){const s=bs(-1,n);return g_([],e,s,t,n)}const tT={kernelName:sn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s}=e;Gx(s,"neg");const r=n.data.get(s.dataId).values,[i,a]=Jk(r,s.shape,s.dtype);return n.makeTensorInfo(a,s.dtype,i)}},eT=kl,nT={kernelName:an,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=s;Gx(r,"NonMaxSuppression");const u=n.data.get(r.dataId).values,c=n.data.get(i.dataId).values,{selectedIndices:h}=eT(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},sT=Tl,rT={kernelName:on,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s;Gx(r,"NonMaxSuppressionPadded");const c=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,{selectedIndices:p,validOutputs:d}=sT(c,h,a,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},iT=Sl,aT={kernelName:ln,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s;Gx(r,"NonMaxSuppressionWithScore");const c=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,p=a,d=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=iT(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},oT=nv(((t,e)=>t!==e?1:0)),lT=bv(rn,oT,null,"bool"),uT={kernelName:rn,backendName:"cpu",kernelFunc:lT},cT={kernelName:cn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{indices:r}=e,{depth:i,onValue:a,offValue:o}=s;Gx(r,"oneHot");const l=O(r.shape),u=new Float32Array(l*i);u.fill(o);const c=n.data.get(r.dataId).values;for(let t=0;t<l;++t)c[t]>=0&&c[t]<i&&(u[t*i+c[t]]=a);return n.makeTensorInfo([...r.shape,i],"int32",u)}};function hT(t){const{inputs:e,backend:n}=t,{x:s}=e;if("string"===s.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===s.dtype){const t=fv({inputs:{input:s},backend:n}),e=hT({inputs:{x:t},backend:n}),r=kw({inputs:{input:s},backend:n}),i=hT({inputs:{x:r},backend:n}),a=hv({inputs:{real:e,imag:i},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),a}return $_({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const pT={kernelName:ss,backendName:"cpu",kernelFunc:hT},dT={kernelName:un,backendName:"cpu",kernelFunc:function t(e){const{inputs:n,backend:s}=e,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const e=fv({inputs:{input:r},backend:s}),n=t({inputs:{x:e},backend:s}),i=kw({inputs:{input:r},backend:s}),a=hT({inputs:{x:i},backend:s}),o=hv({inputs:{real:n,imag:a},backend:s});return s.disposeIntermediateTensorInfo(e),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(a),o}return $_({backend:s,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function fT(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s;if(1===e.length)return h_({inputs:{input:e[0]},backend:n,attrs:{dim:r}});const i=e[0].shape,a=e[0].dtype;e.forEach((t=>{$(i,t.shape,"All tensors passed to stack must have matching shapes"),E(a===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=e.map((t=>{const e=h_({inputs:{input:t},backend:n,attrs:{dim:r}});return o.push(e),e})),u=Sw({inputs:l,backend:n,attrs:{axis:r}});return o.forEach((t=>n.disposeIntermediateTensorInfo(t))),u}const mT={kernelName:hn,backendName:"cpu",kernelFunc:fT},gT={kernelName:pn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{paddings:i,constantValue:a}=s;Gx(r,"pad");const o=i.map(((t,e)=>t[0]+r.shape[e]+t[1])),l=i.map((t=>t[0])),u=n.data.get(r.dataId).values,c=O(r.shape),h=r.shape.length,p=J(r.shape),d=O(o),f=o.length,m=J(o),g=q(r.dtype,d);0!==a&&g.fill(a);for(let t=0;t<c;t++)g[at(ot(t,h,p).map(((t,e)=>t+l[e])),f,m)]=u[t];return{dataId:n.write(g,o,r.dtype),shape:o,dtype:r.dtype}}},yT=nv(((t,e)=>Math.pow(t,e))),bT=bv(dn,yT),xT={kernelName:dn,backendName:"cpu",kernelFunc:bT};function vT(t,e,n,s){const[r,i]=to(t,s),a=Hs(e,"int32"),o=st(O(r),a),l=O(i);for(let t=0;t<o.length;++t){const e=t*l;let s=1;for(let t=0;t<l;++t)s*=n[e+t];o[t]=s}return{outVals:o,outShape:r,outDtype:a}}const wT={kernelName:mn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s;Gx(r,"prod");const o=r.shape.length,l=B(i,r.shape),u=so(l,o);let c=l,h=r;const p=[];null!=u&&(h=Lv({inputs:{x:r},backend:n,attrs:{perm:u}}),p.push(h),c=io(c.length,o));const d=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=vT(h.shape,h.dtype,d,c);let y=m;return a&&(y=eo(m,l)),p.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(y,g,f)}};function _T(t,e,n,s){if(t===e||t<e&&n<0||e<t&&n>1)return st(0,s);const r=st(Math.abs(Math.ceil((e-t)/n)),s);e<t&&1===n&&(n=-1),r[0]=t;for(let t=1;t<r.length;t++)r[t]=r[t-1]+n;return r}const kT={kernelName:gn,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:s,stop:r,dtype:i,step:a}=n,o=_T(s,r,a,i);return e.makeTensorInfo([o.length],i,o)}},TT=Xx(bn,(t=>1/t)),ST={kernelName:bn,backendName:"cpu",kernelFunc:TT},IT={kernelName:kn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:i,halfPixelCenters:a,size:o}=s;Gx(r,"resizeBilinear");const l=J(r.shape),[u,c]=o,[h,p,d,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(O([h,u,c,f])),y=[i&&u>1?p-1:p,i&&c>1?d-1:d],b=[i&&u>1?u-1:u,i&&c>1?c-1:c];let x=0;const v=y[0]/b[0],w=y[1]/b[1];for(let t=0;t<h;t++)for(let e=0;e<u;e++){let n;n=a?v*(e+.5)-.5:v*e;const s=Math.max(0,Math.floor(n)),r=n-s,i=Math.min(p-1,Math.ceil(n)),o=t*l[0]+s*l[1],u=t*l[0]+i*l[1];for(let t=0;t<c;t++){let e;e=a?w*(t+.5)-.5:w*t;const n=Math.max(0,Math.floor(e)),s=e-n,i=Math.min(d-1,Math.ceil(e)),c=o+n*l[2],h=u+n*l[2],p=o+i*l[2],y=u+i*l[2];for(let t=0;t<f;t++){const e=m[c+t],n=m[h+t],i=e+(m[p+t]-e)*s,a=i+(n+(m[y+t]-n)*s-i)*r;g[x++]=a}}}return n.makeTensorInfo([h,u,c,f],"float32",g)}},CT={kernelName:Tn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:i}=e,{alignCorners:a}=s;Gx([i,r],"resizeBilinearGrad");const o=J(r.shape),[l,u,c,h]=r.shape,[,p,d]=i.shape,f=new Float32Array(l*u*c*h),m=[a&&p>1?u-1:u,a&&d>1?c-1:c],g=[a&&p>1?p-1:p,a&&d>1?d-1:d],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(i.dataId).values;let v=0;for(let t=0;t<l;t++){const e=t*o[0];for(let t=0;t<p;t++){const n=t*y,s=Math.floor(n),r=Math.min(Math.ceil(n),u-1),i=e+s*o[1],a=e+r*o[1],l=n-s,p=1-l;for(let t=0;t<d;t++){const e=t*b,n=Math.floor(e),s=Math.min(Math.ceil(e),c-1),r=e-n,u=1-r,d=i+n*o[2],m=i+s*o[2],g=a+n*o[2],y=a+s*o[2],w=p*u,_=p*r,k=l*u,T=l*r;for(let t=0;t<h;t++){const e=x[v++];f[d+t]+=e*w,f[m+t]+=e*_,f[g+t]+=e*k,f[y+t]+=e*T}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},NT={kernelName:wn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:i,halfPixelCenters:a,size:o}=s;Gx(r,"resizeNearestNeighbor");const l=J(r.shape),[u,c]=o,[h,p,d,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(h*u*c*f),y=[i&&u>1?p-1:p,i&&c>1?d-1:d],b=[i&&u>1?u-1:u,i&&c>1?c-1:c],x=y[0]/b[0],v=y[1]/b[1];let w=0;for(let t=0;t<h;t++){const e=t*l[0];for(let t=0;t<u;t++){const n=a?x*(t+.5):x*t;let s=Math.min(p-1,i?Math.round(n):Math.floor(n));a&&(s=Math.max(0,s));const r=e+s*l[1];for(let t=0;t<c;t++){const e=a?v*(t+.5):v*t;let n=Math.min(d-1,i?Math.round(e):Math.floor(e));a&&(n=Math.max(0,n));const s=r+n*l[2];for(let t=0;t<f;t++){const e=m[s+t];g[w++]=e}}}}return n.makeTensorInfo([h,u,c,f],r.dtype,g)}},AT={kernelName:_n,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:i}=e,{alignCorners:a}=s;Gx([i,r],"resizeNearestNeighborGrad");const o=J(r.shape),l=J(i.shape),[u,c,h,p]=r.shape,[,d,f]=i.shape,m=new Float32Array(u*c*h*p),g=n.data.get(i.dataId).values,y=[a&&d>1?c-1:c,a&&f>1?h-1:h],b=[a&&d>1?d-1:d,a&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,_=1/v,k=2*Math.ceil(w)+2,T=2*Math.ceil(_)+2;for(let t=0;t<u;t++){const e=t*o[0];for(let t=0;t<c;t++){const n=e+t*o[1],s=Math.floor(t*w),r=Math.floor(s-k/2);for(let s=0;s<h;s++){const i=n+s*o[2],u=Math.floor(s*_),y=Math.floor(u-T/2);for(let n=0;n<p;n++){let o=0;for(let i=0;i<k;i++){const u=i+r;if(u<0||u>=d)continue;const p=e+u*l[1],m=u*x;if(t===Math.min(c-1,a?Math.round(m):Math.floor(m)))for(let t=0;t<T;t++){const e=t+y;if(e<0||e>=f)continue;const r=p+e*l[2],i=e*v;s===Math.min(h-1,a?Math.round(i):Math.floor(i))&&(o+=g[r+n])}}m[i+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}},ET={kernelName:In,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{dims:i}=s;Gx(r,"reverse");const a=r.shape.length,o=B(i,r.shape);if(0===a)return Qx({inputs:{x:r},backend:n});const l=new Os(r.shape,r.dtype),u=n.bufferSync(r);for(let t=0;t<l.size;t++){const e=l.indexToLoc(t),n=e.slice();o.forEach((t=>n[t]=r.shape[t]-1-n[t])),l.set(u.get(...n),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},$T={kernelName:as,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,{radians:r,fillValue:i,center:a}=e,o=n,l=q(s.dtype,O(s.shape)),[u,c,h,p]=s.shape,[d,f]=pu(a,c,h),m=Math.sin(r),g=Math.cos(r),y=o.data.get(s.dataId).values;for(let t=0;t<u;t++){const e=t*h*c*p;for(let t=0;t<c;t++){const n=t*(h*p);for(let s=0;s<h;s++){const r=s*p;for(let a=0;a<p;a++){const o=[u,t,s,a],b=o[2],x=o[1];let v=(b-d)*g-(x-f)*m,w=(b-d)*m+(x-f)*g;v=Math.round(v+d),w=Math.round(w+f);let _=i;"number"!=typeof i&&(_=3===a?255:i[a]),v>=0&&v<h&&w>=0&&w<c&&(_=y[e+w*(h*p)+v*p+a]),l[e+n+r+a]=_}}}}return{dataId:o.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},RT=Xx(Cn,(t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2==0?e:e+1})),DT={kernelName:Cn,backendName:"cpu",kernelFunc:RT},OT=mw((t=>1/Math.sqrt(t))),FT=Kx(Nn,OT),MT={kernelName:Nn,backendName:"cpu",kernelFunc:FT};function LT(t,e,n,s,r,i,a,o,l,u){const c=[s/r,r],h=t.values,p=e.values;if(0===s)return Yr(n,e.dtype);const d=Yr(c,e.dtype);d.values.fill(l);for(let t=0;t<i;t++){const i=[];let l=0;for(let e=0;e<a;e++){const n=h[t*a+e];i.push(n),l+=n*o[e]}if(l<0||l>=s/r)throw new Error(`Invalid indices: ${i} does not index into ${n}`);for(let n=0;n<r;n++)u?d.values[l*r+n]+=p[t*r+n]:d.values[l*r+n]=0===e.rank?p[0]:p[t*r+n]}return d}const zT={kernelName:An,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{indices:r,updates:i}=e,{shape:a}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=wu(0,r,a),p=LT(n.bufferSync(r),n.bufferSync(i),a,h,u,l,o,c,0,!0);return n.makeTensorInfo(a,p.dtype,p.values)}},PT={kernelName:En,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:s,t:r,e:i}=e;Gx([s,r,i],"select");const a=s.shape.length,o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(i.dataId).values,c=Hs(r.dtype,i.dtype),h=st(O(r.shape),c);let p=0;const d=0===a||a>1||1===r.shape.length?1:O(r.shape.slice(1));for(let t=0;t<o.length;t++)for(let e=0;e<d;e++)1===o[t]?h[p++]=l[t]:h[p++]=u[t];return n.makeTensorInfo(r.shape,c,h)}},VT=_u,BT=ku,WT=Xx($n,(t=>t>=0?BT*t:VT*(Math.exp(t)-1))),qT={kernelName:$n,backendName:"cpu",kernelFunc:WT},UT=Xx(Mn,(t=>1/(1+Math.exp(-t)))),GT={kernelName:Mn,backendName:"cpu",kernelFunc:UT},jT=Xx(Fn,(t=>t<0?-1:t>0?1:0)),HT={kernelName:Fn,backendName:"cpu",kernelFunc:jT},XT=Xx(Dn,(t=>Math.sin(t))),KT={kernelName:Dn,backendName:"cpu",kernelFunc:XT},YT=Xx(On,(t=>Math.sinh(t))),ZT={kernelName:On,backendName:"cpu",kernelFunc:YT},QT=Math.log(1.1920928955078125e-7)+2,JT=Xx(Ln,(t=>{const e=t>-QT,n=t<QT,s=Math.exp(t);let r;return r=n?s:e?t:Math.log(1+s),r})),tS={kernelName:Ln,backendName:"cpu",kernelFunc:JT},eS={kernelName:Vn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:i,paddings:a}=s;Gx([r],"spaceToBatchND");const o=O(i),l=[[0,0]];l.push(...a);for(let t=1+i.length;t<r.shape.length;++t)l.push([0,0]);const u=gT.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=du(u.shape,i,o,!1),h=fu(c.length,i.length,!1),p=mu(u.shape,i,o,!1),d=Tv({inputs:{x:u},backend:n,attrs:{shape:c}}),f=Lv({inputs:{x:d},backend:n,attrs:{perm:h}}),m=Tv({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}},nS={kernelName:jn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{sparseIndices:r,sparseValues:i,defaultValue:a}=e,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:p}=wu(0,r,o),d=LT(n.bufferSync(r),n.bufferSync(i),o,p,c,u,l,h,n.data.get(a.dataId).values[0],!1);return n.makeTensorInfo(o,d.dtype,d.values)}},sS={kernelName:Bn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{numOrSizeSplits:i,axis:a}=s,o=B(a,r.shape)[0],l=Vu(r,i,o),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map((t=>{const e=[...c];e[o]=t;const s=uw({inputs:{x:r},backend:n,attrs:{begin:u,size:e}});return u[o]+=t,s}))}},rS=Xx(zn,(t=>Math.sqrt(t))),iS={kernelName:zn,backendName:"cpu",kernelFunc:rS},aS={kernelName:Un,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,s=e;Gx(n,"square");const r=s.data.get(n.dataId).values,i=new Float32Array(r.length);for(let t=0;t<r.length;++t){const e=r[t];i[t]=e*e}return{dataId:s.write(i,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},oS=nv(((t,e)=>{const n=t-e;return n*n})),lS=bv(qn,oS),uS={kernelName:qn,backendName:"cpu",kernelFunc:lS},cS=Xx(rs,((t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha})),hS={kernelName:rs,backendName:"cpu",kernelFunc:cS};function pS(t,e,n,s){const r=Yr(t,e.dtype);for(let t=0;t<r.size;t++){const i=r.indexToLoc(t),a=new Array(i.length);for(let t=0;t<a.length;t++)a[t]=i[t]*n[t]+s[t];r.set(e.get(...a),...i)}return r}const dS={kernelName:Hn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=s;Gx(r,"stridedSlice");const{nonStrided:d,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=Si(r.shape,i,a,o,l,u,c,h,p),x=Tv({inputs:{x:r},backend:n,attrs:{shape:y}});let v;if(d){const t=uw({inputs:{x},backend:n,attrs:{begin:f,size:g}});v=Tv({inputs:{x:t},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(t)}else if(b.some((t=>0===t)))v=n.makeTensorInfo(b,r.dtype,[]);else{const t=pS(b,n.bufferSync(x),m,f);v=n.makeTensorInfo(t.shape,t.dtype,t.values)}const w=Tv({inputs:{x:v},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),w}},fS=Xx(Xn,(t=>Math.tan(t))),mS={kernelName:Xn,backendName:"cpu",kernelFunc:fS},gS=Xx(Kn,(t=>Math.tanh(t)));function yS(t,e){const n=new Array(t.rank);for(let s=0;s<n.length;s++)n[s]=t.shape[s]*e[s];const s=Yr(n,t.dtype);for(let e=0;e<s.values.length;++e){const n=s.indexToLoc(e),r=new Array(t.rank);for(let e=0;e<r.length;e++)r[e]=n[e]%t.shape[e];const i=t.locToIndex(r);s.values[e]=t.values[i]}return s}function bS(t,e,n,s,r){const i=e[e.length-1],[a,o]=[t.length/i,i],l=q(n,a*s),u=q("int32",a*s);for(let e=0;e<a;e++){const n=e*o,r=t.subarray(n,n+o),i=[];for(let t=0;t<r.length;t++)i.push({value:r[t],index:t});i.sort(((t,e)=>e.value-t.value));const a=e*s,c=l.subarray(a,a+s),h=u.subarray(a,a+s);for(let t=0;t<s;t++)c[t]=i[t].value,h[t]=i[t].index}const c=e.slice();return c[c.length-1]=s,[Yr(c,n,l),Yr(c,"int32",u)]}const xS={kernelName:Qn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:s}=t,{image:r,transforms:i}=e,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,p,d]=r.shape,[f,m]=null!=u?u:[h,p],g=[c,f,m,d],y=J(r.shape),b=y[0],x=y[1],v=y[2],w=q(r.dtype,O(g));w.fill(l);const _=s.data.get(r.dataId).values,k=s.data.get(i.dataId).values;for(let t=0;t<c;++t){const e=1===i.shape[0]?k:k.subarray(8*t,8*t+8);for(let n=0;n<f;++n)for(let s=0;s<m;++s)for(let r=0;r<d;++r){let i;const u=e[6]*s+e[7]*n+1;if(0===u)continue;const c=(e[0]*s+e[1]*n+e[2])/u,d=(e[3]*s+e[4]*n+e[5])/u,f=vS(c,p,o),m=vS(d,h,o);switch(a){case"nearest":i=_S(_,h,p,b,x,v,t,m,f,r,l);break;case"bilinear":i=kS(_,h,p,b,x,v,t,m,f,r,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}w[t*b+n*x+s*v+r]=i}return s.makeTensorInfo(g,r.dtype,w)}return{dataId:s.write(w,g,r.dtype),shape:r.shape,dtype:r.dtype}}};function vS(t,e,n){switch(n){case"reflect":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=2*e;n<t&&(n=t*Math.trunc(-n/t)+n),n=n<-e?n+t:-n-1}else if(n>e-1)if(e<=1)n=0;else{const t=2*e;n-=t*Math.trunc(n/t),n>=e&&(n=t-n-1)}return N(0,n,e-1)}(t,e);case"wrap":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=e-1;n+=e*(Math.trunc(-n/t)+1)}else if(n>e-1)if(e<=1)n=0;else{const t=e-1;n-=e*Math.trunc(n/t)}return N(0,n,e-1)}(t,e);case"nearest":return function(t,e){return N(0,t,e-1)}(t,e);default:return function(t,e){return t}(t)}}function wS(t,e,n,s,r,i,a,o,l,u,c){return 0<=o&&o<e&&0<=l&&l<n?t[a*s+o*r+l*i+u]:c}function _S(t,e,n,s,r,i,a,o,l,u,c){return wS(t,e,n,s,r,i,a,Math.round(o),Math.round(l),u,c)}function kS(t,e,n,s,r,i,a,o,l,u,c){const h=Math.floor(o),p=Math.floor(l),d=h+1,f=p+1;return(d-o)*((f-l)*wS(t,e,n,s,r,i,a,h,p,u,c)+(l-p)*wS(t,e,n,s,r,i,a,h,f,u,c))+(o-h)*((f-l)*wS(t,e,n,s,r,i,a,d,p,u,c)+(l-p)*wS(t,e,n,s,r,i,a,d,f,u,c))}function TS(t,e,n,s){const r=B(e,n)[0],i=[1,n[0],1];for(let t=0;t<r;t++)i[0]*=n[t];i[1]=n[r];for(let t=r+1;t<n.length;t++)i[2]*=n[t];const a={},o=new Int32Array(n[r]),l=new Os(i,s,t),u=[],c=1===i[0]&&1===i[2];for(let e=0;e<n[r];e++){let n;if(c)n=t[e].toString();else{const t=[];for(let n=0;n<i[0];n++)for(let s=0;s<i[2];s++)t.push(l.get(n,e,s));n=t.join(",")}if(void 0!==a[n])o[e]=a[n];else{const t=Object.keys(a).length;a[n]=t,o[e]=t,u.push(e)}}const h=i.slice();h[1]=Object.keys(a).length;const p=new Os(h,s);u.forEach(((t,e)=>{for(let n=0;n<i[0];n++)for(let s=0;s<i[2];s++)p.set(l.get(n,t,s),n,e,s)}));const d=n.slice();return d[r]=h[1],{outputValues:p.values,outputShape:d,indices:o}}const SS={kernelName:ns,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,segmentIds:i}=e,{numSegments:a}=s;Gx(r,"unsortedSegmentSum");const o=[],l=[],u=r.shape.length-i.shape.length;let c=i;for(let t=0;t<u;++t){const e=h_({inputs:{input:c},backend:n,attrs:{dim:t+1}});c=e,l.push(e)}for(let t=0;t<a;++t){const e=bs(t,"int32"),s=n.makeTensorInfo([],"int32",e),i=Qw({inputs:{a:s,b:c},backend:n}),a=gv({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),u=b_({inputs:{a,b:r},backend:n}),h=zk({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(s),l.push(i),l.push(a),l.push(u),l.push(h)}const h=fT({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}},IS=[Nv,Ev,Rv,Ov,kv,Fv,Pv,Vv,Bv,Wv,Uv,jv,Xv,Zv,Jv,sw,rw,iw,aw,Cv,ow,hw,fw,yv,bw,vw,pv,ww,Iw,Aw,Ew,Nw,Rw,Dw,$w,Fw,Lw,zw,Pw,Vw,Bw,qw,Uw,Gw,jw,Hw,Kw,Xw,__,Zx,Yw,Jw,o_,c_,p_,m_,E_,R_,D_,M_,P_,V_,B_,W_,U_,H_,Y_,Jx,Z_,Tw,J_,ek,sk,ev,ak,uk,hk,fk,gk,xk,wk,Tk,Sk,Ik,Rk,Dk,Ok,Fk,Mk,Lk,Ak,Vk,Bk,Uk,Gk,Xk,Qk,x_,tT,nT,rT,aT,uT,cT,dT,mT,gT,xT,iv,wT,kT,mv,ST,ov,uv,Sv,IT,CT,NT,AT,ET,$T,DT,MT,zT,PT,qT,GT,HT,KT,ZT,cw,Zk,tS,eS,nS,sS,iS,aS,uS,hS,dS,I_,Pk,mS,{kernelName:Kn,backendName:"cpu",kernelFunc:gS},{kernelName:Yn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{reps:i}=s;Gx(r,"tile");const a=yS(n.bufferSync(r),i);return n.makeTensorInfo(a.shape,a.dtype,a.values)}},{kernelName:Zn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{k:i,sorted:a}=s;Gx(r,"topk");const o=n.data.get(r.dataId).values,[l,u]=bS(o,r.shape,r.dtype,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},zv,xS,{kernelName:ts,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:s}=t,{axis:r}=n,{x:i}=e;Gx(i,"unique");const a=s.data.get(i.dataId).values,{outputValues:o,outputShape:l,indices:u}=TS(a,r,i.shape,i.dtype);return[s.makeTensorInfo(l,i.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}},{kernelName:es,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{value:r}=e;let{axis:i}=s;i<0&&(i+=r.shape.length);const a=r.shape.length,o=r.shape[i],l=new Array(a-1);let u=0;for(let t=0;t<a;t++)t!==i&&(l[u++]=r.shape[t]);const c=new Array(a).fill(0),h=r.shape.slice();h[i]=1;const p=new Array(o);for(let t=0;t<p.length;t++){c[i]=t;const e=uw({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});p[t]=Tv({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return p}},SS,pT];for(const t of IS)ms(t);const CS={},NS={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function AS(t){if(!(t in CS)){const e=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=function(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);return e.addEventListener("webglcontextlost",(e=>{e.preventDefault(),delete CS[t]}),!1),1===t?e.getContext("webgl",NS)||e.getContext("experimental-webgl",NS):e.getContext("webgl2",NS)}(t);if(null===e)return console.log("Could not get context for WebGL version",t),null;CS[t]=e}const e=CS[t];return e.isContextLost()?(delete CS[t],AS(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),CS[t])}var ES,$S,RS;function DS(t,e){return[e,t]}function OS(t){const e=O(t);return L(Math.ceil(e/4))}function FS(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function MS(t,e){const n=t;let s,r,i,a,o,l,u,c,h,p;return 2===ht().getNumber("WEBGL_VERSION")?(s=n.R32F,r=n.R16F,i=n.RGBA16F,a=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,p=n.FLOAT):(s=t.RGBA,r=t.RGBA,i=t.RGBA,a=n.RGBA,o=t.RGBA,u=4,c=4,h=null!=e?e.HALF_FLOAT_OES:null,p=t.FLOAT),l=t.RGBA,{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:a,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:p}}function LS(t,e){const n=e();return ht().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}(t,e))}(t),n}function zS(t){return!!(ht().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function PS(t,e){return HS(t,(()=>t.getExtension(e)),'Extension "'+e+'" not supported on this browser.')}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(ES||(ES={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}($S||($S={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(RS||(RS={}));const VS=/ERROR: [0-9]+:([0-9]+):/g;function BS(t,e){if(LS(t,(()=>t.validateProgram(e))),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function WS(t,e,n,s,r,i,a){const o=t.getAttribLocation(e,n);return-1!==o&&(LS(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,s))),LS(t,(()=>t.vertexAttribPointer(o,r,t.FLOAT,!1,i,a))),LS(t,(()=>t.enableVertexAttribArray(o))),!0)}function qS(t,e,n,s){LS(t,(()=>function(t,e,n){(function(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+t.TEXTURE0;if(s<t.TEXTURE0||s>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(t,n),LS(t,(()=>t.activeTexture(t.TEXTURE0+n))),LS(t,(()=>t.bindTexture(t.TEXTURE_2D,e)))}(t,e,s))),LS(t,(()=>t.uniform1i(n,s)))}function US(t,e,n){LS(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,n))),LS(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)))}function GS(t,e){LS(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,e))),LS(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)))}function jS(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}(t,e))}function HS(t,e,n){const s=LS(t,(()=>e()));if(null==s)throw new Error(n);return s}function XS(t,e=2){return O(t.slice(0,t.length-e))}function KS(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function YS(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[XS(t),...KS(t)]),e}function ZS(t){return t%2==0}function QS(t,e){if(F(t=t.slice(-2),e=e.slice(-2)))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],s=e.slice(-1)[0];if(n===s)return!0;if(ZS(n)&&ZS(s)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&ZS(t[0])&&ZS(e[0])}let JS,tI;function eI(t,e){return null!=t.getExtension(e)}function nI(t){try{if(null!=AS(t))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function sI(t){const e=MS(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const s=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,s),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const r=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(s),r}function rI(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&E("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the WebGL backend.`))}))}const iI=ht();function aI(){let t,e,n,s,r,i,a,o,l,u;return 2===ht().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",s="in",r="texture",i="outputColor",a="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",s="varying",r="texture2D",i="gl_FragColor",a="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:s,texture2D:r,output:i,defineOutput:a,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function oI(t,e,n="index"){const s=J(e);return s.map(((e,r)=>`int ${t[r]} = ${n} / ${e}; ${r===s.length-1?`int ${t[r+1]} = ${n} - ${t[r]} * ${e}`:`index -= ${t[r]} * ${e}`};`)).join("")}function lI(t){const e=J(t).map((t=>t.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}iI.registerFlag("HAS_WEBGL",(()=>iI.getNumber("WEBGL_VERSION")>0)),iI.registerFlag("WEBGL_VERSION",(()=>nI(2)?2:nI(1)?1:0)),iI.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),iI.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===iI.get("WEBGL_VERSION"))),iI.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),iI.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),iI.registerFlag("WEBGL_PACK",(()=>iI.getBool("HAS_WEBGL"))),iI.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>iI.getBool("WEBGL_PACK"))),iI.registerFlag("WEBGL_PACK_CLIP",(()=>iI.getBool("WEBGL_PACK"))),iI.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),iI.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>iI.getBool("WEBGL_PACK"))),iI.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>iI.getBool("WEBGL_PACK"))),iI.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>iI.getBool("WEBGL_PACK"))),iI.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>iI.getBool("WEBGL_PACK"))),iI.registerFlag("WEBGL_PACK_REDUCE",(()=>iI.getBool("WEBGL_PACK"))),iI.registerFlag("WEBGL_LAZILY_UNPACK",(()=>iI.getBool("WEBGL_PACK"))),iI.registerFlag("WEBGL_CONV_IM2COL",(()=>iI.getBool("WEBGL_PACK"))),iI.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(t){if(null==JS){const e=AS(t);JS=e.getParameter(e.MAX_TEXTURE_SIZE)}return JS}(iI.getNumber("WEBGL_VERSION")))),iI.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(t){if(null==tI){const e=AS(t);tI=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,tI)}(iI.getNumber("WEBGL_VERSION")))),iI.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const t=iI.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=AS(t);return e=eI(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:eI(n,"EXT_disjoint_timer_query")?1:0,e}(t)})),iI.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>iI.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!ir())),iI.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(t){if(0===t)return!1;const e=AS(t);if(1===t){if(!eI(e,"OES_texture_float"))return!1}else if(!eI(e,"EXT_color_buffer_float"))return!1;return sI(e)}(iI.getNumber("WEBGL_VERSION")))),iI.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!iI.getBool("WEBGL_FORCE_F16_TEXTURES")&&iI.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),iI.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(t){if(0===t)return!1;const e=AS(t);if(1!==t){if(eI(e,"EXT_color_buffer_float"))return sI(e);const t="EXT_color_buffer_half_float";if(eI(e,t)){const n=e.getExtension(t);return function(t,e){const n=MS(t,e),s=t.createTexture();t.bindTexture(t.TEXTURE_2D,s),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,s,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(s),t.deleteFramebuffer(r),i}(e,n)}return!1}return!!eI(e,"OES_texture_float")&&!!eI(e,"WEBGL_color_buffer_float")&&sI(e)}(iI.getNumber("WEBGL_VERSION")))),iI.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(t=iI.getNumber("WEBGL_VERSION"))&&null!=AS(t).fenceSync;var t})),iI.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>iI.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),iI.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)})),iI.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>ir()&&iI.getBool("IS_CHROME")?1:-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${t}.`)}));const uI="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class cI{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=ES.DENSE;const e=OS(t),n=aI();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${oI(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class hI{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=ES.DENSE;const e=OS(t),n=aI();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${oI(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class pI{constructor(t){this.variableNames=["A"],this.outTexUsage=$S.DOWNLOAD;const e=aI();this.outputShape=t,this.userCode=`\n      ${uI}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class dI{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=$S.DOWNLOAD;const e=aI();this.outputShape=t,this.userCode=`\n      ${uI}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class fI{constructor(t,e,n=!1){this.variableNames=["A"];const s=aI(),[r,i]=e;this.outputShape=t;let a="result";n&&(a="floor(result * 255. + 0.5)"),this.userCode=`\n      ${lI(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${i};\n        int c = imod(flatIndex, ${i});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${i}.0, ${r}.0);\n        vec4 values = ${s.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${s.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}}class mI{constructor(t,e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const s=aI(),[r,i]=e;this.outputShape=t;let a="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let e=0;e<=1;e++)for(let n=0;n<=1;n++){const o=2*e+n;a+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${t[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${e} < ${t[1]}) {\n              localCoords[1] += ${e};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${i};\n              c = imod(flatIndex, ${i});\n              uv = (vec2(c, r) + halfCR) / vec2(${i}.0, ${r}.0);\n              values = ${s.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${lI(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${a}\n\n        ${s.output} = ${o};\n      }\n    `}}function gI(t,e,n,s,r,i){!function(t,e){const n=ht().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(e,n);const a=function(t){return HS(t,(()=>t.createTexture()),"Unable to create WebGLTexture.")}(t),o=t.TEXTURE_2D;return LS(t,(()=>t.bindTexture(o,a))),LS(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE))),LS(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE))),LS(t,(()=>t.texParameteri(o,t.TEXTURE_MIN_FILTER,t.NEAREST))),LS(t,(()=>t.texParameteri(o,t.TEXTURE_MAG_FILTER,t.NEAREST))),LS(t,(()=>t.texImage2D(o,0,s,e,n,0,r,i,null))),LS(t,(()=>t.bindTexture(t.TEXTURE_2D,null))),a}function yI(t){return t.internalFormatFloat}function bI(t){return t.internalFormatHalfFloat}function xI(t){return t.downloadTextureFormat}function vI(t){return t.internalFormatPackedFloat}function wI(t){return t.internalFormatPackedHalfFloat}class _I{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=ht().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){CS[t]=e}(e,t)):this.gl=AS(e);let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(1===ht().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=PS(this.gl,t),eI(this.gl,e))this.textureHalfFloatExtension=PS(this.gl,e);else if(ht().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),eI(this.gl,s))this.colorBufferHalfFloatExtension=PS(this.gl,s);else if(ht().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",eI(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!eI(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=function(t){return function(t,e){const n=HS(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return LS(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),LS(t,(()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(t){return function(t,e){const n=HS(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return LS(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n))),LS(t,(()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(t){return HS(t,(()=>t.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=MS(this.gl,this.textureHalfFloatExtension)}get debug(){return ht().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;LS(t,(()=>t.finish())),LS(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,null))),LS(t,(()=>t.deleteFramebuffer(this.framebuffer))),LS(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,null))),LS(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null))),LS(t,(()=>t.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,i]=DS(e,n);return gI(t,r,i,yI(s),s.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,i]=DS(e,n);return gI(t,r,i,bI(s),s.textureFormatFloat,s.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,i]=DS(e,n);return gI(t,r,i,xI(s),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){LS(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),n.data instanceof Uint8Array?LS(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data))):LS(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n))),LS(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,s){this.throwIfDisposed(),function(t,e,n,s,r,i){let a,o,l;LS(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),r instanceof Uint8Array?(a=new Uint8Array(n*s*4),o=t.UNSIGNED_BYTE,l=t.RGBA):(a=new Float32Array(n*s*4),o=t.FLOAT,l=i.internalFormatPackedFloat),a.set(r),LS(t,(()=>t.texImage2D(t.TEXTURE_2D,0,l,n,s,0,t.RGBA,o,a))),LS(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,i]=FS(e,n);return gI(t,r,i,wI(s),t.RGBA,s.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,i]=FS(e,n);return gI(t,r,i,vI(s),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(GS(this.gl,this.framebuffer),this.outputTexture=null),LS(this.gl,(()=>this.gl.deleteTexture(t)))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n,s){const[r,i]=DS(e,n),a=new Uint8Array(e*n*4);return LS(t,(()=>t.readPixels(0,0,r,i,s.downloadTextureFormat,t.UNSIGNED_BYTE,a))),new Float32Array(a.buffer)}(this.gl,e,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(t,e,n,s,r,i){return function(t,e,n,s,r,i,a,o){const l=t,u=new Float32Array(function(t,e){const[n,s]=FS(t,e);return n*s*4}(i,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,t,0,0,0,r,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const s=t,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const s=function(t,e,n,s){const r=t.createBuffer();LS(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,r)));const i=16*e*n;return LS(t,(()=>t.bufferData(t.PIXEL_PACK_BUFFER,i,t.STREAM_READ))),LS(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0))),LS(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null))),r}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(ht().getBool("WEBGL_FENCE_API_ENABLED")){const s=t,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=s.clientWaitSync(r,0,0);return t===s.ALREADY_SIGNALED||t===s.CONDITION_SATISFIED},e=r}else ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n){const s=new Float32Array(e*n*4);return LS(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,s))),s}(this.gl,e,n)))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=function(t,e){const n=HS(t,(()=>t.createShader(t.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(LS(t,(()=>t.shaderSource(n,e))),LS(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){const n=VS.exec(e);if(null==n)return console.log(`Couldn't parse line number in error: ${e}`),void console.log(t);const s=+n[1],r=t.split("\n"),i=r.length.toString().length+2,a=r.map(((t,e)=>z((e+1).toString(),i)+t));let o=0;for(let t=0;t<a.length;t++)o=Math.max(a[t].length,o);const l=a.slice(0,s-1),u=a.slice(s-1,s),c=a.slice(s);console.log(l.join("\n")),console.log(e.split("\n")[0]),console.log(`%c ${z(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e,t),s=function(t){const e=aI();return function(t,e){const n=HS(t,(()=>t.createShader(t.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(LS(t,(()=>t.shaderSource(n,e))),LS(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(e),r=function(t){return HS(t,(()=>t.createProgram()),"Unable to create WebGLProgram.")}(e);return LS(e,(()=>e.attachShader(r,s))),LS(e,(()=>e.attachShader(r,n))),function(t,e){if(LS(t,(()=>t.linkProgram(e))),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,r),this.debug&&BS(e,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=function(t,e,n){return LS(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),WS(t,e,"clipSpacePos",n,3,20,0)&&WS(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),r}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&LS(this.gl,(()=>this.gl.deleteProgram(t)))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&BS(this.gl,this.program),LS(this.gl,(()=>this.gl.useProgram(t)))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return HS(t,(()=>t.getUniformLocation(e,n)),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),LS(this.gl,(()=>this.gl.getAttribLocation(t,e)))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),qS(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[s,r]=FS(e,n);this.setOutputMatrixTextureDriver(t,s,r)}setOutputMatrixWriteRegion(t,e,n,s){this.setOutputMatrixWriteRegionDriver(n,t,s,e)}setOutputPackedMatrixWriteRegion(t,e,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&BS(this.gl,this.program),jS(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),LS(t,(()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),LS(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=PS(this.gl,2===ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await P((()=>this.disposed||this.isQueryAvailable(t,ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(t,ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise((e=>{this.addItemToPoll((()=>t.isFencePassed()),(()=>e()))}))}pollItems(){const t=function(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}(this.itemsToPoll.map((t=>t.isDoneFn)));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||P((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),US(this.gl,t,this.framebuffer),this.debug&&jS(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(US(this.gl,this.outputTexture,this.framebuffer),this.debug&&jS(this.gl)):GS(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const s=this.gl;US(s,t,this.framebuffer),this.debug&&jS(s),this.outputTexture=t,LS(s,(()=>s.viewport(0,0,e,n))),LS(s,(()=>s.scissor(0,0,e,n)))}setOutputMatrixWriteRegionDriver(t,e,n,s){this.throwIfDisposed(),LS(this.gl,(()=>this.gl.scissor(t,e,n,s)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:kI}=s;function TI(t,e,n,s){const r=[];t.forEach((t=>{const e=O(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?r.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(r.push(`uniform sampler2D ${t.name};`),r.push(`uniform int offset${t.name};`))}));const i=r.join("\n"),a=t.map((t=>function(t,e,n=!1){let s="";s+=n?II(t):SI(t);const r=t.shapeInfo.logicalShape,i=e.logicalShape;return r.length<=i.length&&(s+=n?function(t,e){const n=t.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",i=t.shapeInfo.logicalShape.length,a=e.logicalShape.length,o=kI(t.shapeInfo.logicalShape,e.logicalShape),l=DI(a),u=a-i;let c;const h=["x","y","z","w","u","v"];c=0===i?"":a<2&&o.length>=1?"coords = 0;":o.map((t=>`coords.${h[t+u]} = 0;`)).join("\n");let p="";p=a<2&&i>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${h[e+u]}`)).join(", ");let d="return outputValue;";const f=1===O(t.shapeInfo.logicalShape),m=1===O(e.logicalShape);if(1!==i||f||m){if(f&&!m)d=1===a?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const t=i-2,e=i-1;o.indexOf(t)>-1&&o.indexOf(e)>-1?d="return vec4(outputValue.x);":o.indexOf(t)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(e)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${r}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${s}(${p});\n      ${d}\n    }\n  `}(t,e):function(t,e){const n=t.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",i=e.texShape,a=t.shapeInfo.texShape,o=t.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!t.shapeInfo.isUniform&&o===l&&null==t.shapeInfo.flatOffset&&F(a,i))return`\n      float ${r}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=DI(l),c=kI(t.shapeInfo.logicalShape,e.logicalShape),h=l-o;let p;const d=["x","y","z","w","u","v"];p=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((t=>`coords.${d[t+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${d[e+h]}`)).join(", "),`\n    float ${r}() {\n      ${u} coords = getOutputCoords();\n      ${p}\n      return get${s}(${f});\n    }\n  `}(t,e)),s}(t,e,s))).join("\n"),o=e.texShape,l=aI(),u=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let c,h,p=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${CI}\n    ${NI}\n    ${AI}\n  `}(l);return e.isPacked?(c=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,e);case 2:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(F(t,e))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const s=Math.ceil(t[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[2]/2),r=s*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${r};\n      index -= b * ${r};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e);default:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[t.length-1]/2),r=s*Math.ceil(t[t.length-2]/2);let i=r,a="",o="b, r, c";for(let e=2;e<t.length-1;e++)i*=t[t.length-e-1],a=`\n      int b${e} = index / ${i};\n      index -= b${e} * ${i};\n    `+a,o=`b${e}, `+o;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${a}\n\n      int b = index / ${r};\n      index -= b * ${r};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${t.length}(${o});\n    }\n  `}(t,e)}}(e.logicalShape,o),h=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(l)):(c=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=e)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(t,e){return F(t,e)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `:1===t[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===t[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=oI(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(t,e);case 4:return function(t,e){const n=oI(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e);case 5:return function(t,e){const n=oI(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=oI(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}var n}(e.logicalShape,o),h=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),s&&(p+=EI),[p,u,h,i,c,a,n].join("\n")}function SI(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[s,r]=t.shapeInfo.texShape;if(1===s&&1===r)return`\n      float ${n}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const[i,a]=t.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${i}, ${a}, ${$I(e)});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${RI(t)}\n      }\n    `;const s=t.shapeInfo.texShape,r=s[0],i=s[1];if(1===i&&1===r)return`\n      float ${n}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const a=$I(e);return 1===i?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${r}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `:1===r?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${r}, ${i}, index + ${a});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t.shapeInfo.texShape;if(null!=r&&F(e,r)){const t=r[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${r[1]}.0, ${t}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:i,keptDims:a}=W(e),o=i;if(o.length<e.length){const e=["row","col"];return`\n      ${SI(OI(t,o))}\n      float ${s}(int row, int col) {\n        return ${s}(${FI(e,a)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${RI(t)}\n      }\n    `;const l=r[0],u=r[1],c=$I(n);return 1===u?`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===l?`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${l}, ${u}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[1]*e[2],i=e[2],{newShape:a,keptDims:o}=W(e),l=a;if(l.length<e.length){const e=["row","col","depth"];return`\n        ${SI(OI(t,l))}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${FI(e,o)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${r}, ${i}, 1)));\n        ${RI(t)}\n      }\n    `;const u=t.shapeInfo.texShape,c=u[0],h=u[1],p=t.shapeInfo.flatOffset;if(h===r&&null==p)return`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===i&&null==p)return`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r} + col * ${i} + depth + ${$I(n)};\n        vec2 uv = uvFromFlat(${c}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(t);case 4:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[3],i=e[2]*r,a=e[1]*i,{newShape:o,keptDims:l}=W(e);if(o.length<e.length){const e=["row","col","depth","depth2"];return`\n      ${SI(OI(t,o))}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${FI(e,l)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${a}, ${i}, ${r}, 1)));\n        ${RI(t)}\n      }\n    `;const u=t.shapeInfo.flatOffset,c=t.shapeInfo.texShape,h=c[0],p=c[1];if(p===a&&null==u)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===r&&null==u)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${a} + col * ${i} +\n          depth * ${r} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${p}, index + ${$I(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[4],i=e[3]*r,a=e[2]*i,o=e[1]*a,{newShape:l,keptDims:u}=W(e);if(l.length<e.length){const e=["row","col","depth","depth2","depth3"];return`\n      ${SI(OI(t,l))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${FI(e,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${a}, ${i}, ${r})) +\n          depth3;\n        ${RI(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,p=h[0],d=h[1];if(d===o&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${a}, ${i}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===r&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} + depth * ${i} +\n          depth2 * ${r} + depth3 + ${$I(n)};\n      vec2 uv = uvFromFlat(${p}, ${d}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:i}=W(e);if(r.length<e.length){const e=["row","col","depth","depth2","depth3","depth4"];return`\n      ${SI(OI(t,r))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${FI(e,i)});\n      }\n    `}const a=e[5],o=e[4]*a,l=e[3]*o,u=e[2]*l,c=e[1]*u;if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${a}, 1)));\n        ${RI(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,d=p[0],f=p[1];if(f===c&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${a})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${a} + depth4 + ${$I(n)};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function II(t){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name;return`\n    vec4 ${"get"+e.charAt(0).toUpperCase()+e.slice(1)}() {\n      return ${aI().texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),s=t.shapeInfo.texShape,r=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],i=aI();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${r[0]}, ${r[1]}, index);\n      return ${i.texture2D}(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t.shapeInfo.texShape,i=r[0],a=r[1],o=aI();if(null!=r&&F(e,r))return`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const l=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(e[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t.shapeInfo.texShape,i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(1===e[0]){const n=[1,2],r=["b","row","col"];return`\n        ${II(OI(t,e.slice(1)))}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${FI(r,n)});\n        }\n      `}const a=i[0],o=i[1],l=Math.ceil(e[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${a}, ${o}, ${l*Math.ceil(e[1]/2)}, ${l}, b, row, col);\n      return ${aI().texture2D}(${n}, uv);\n    }\n  `}(t);default:return function(t){const e=t.shapeInfo.logicalShape,n=e.length,s=t.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=t.shapeInfo.texShape,a=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],o=a[0],l=a[1],u=Math.ceil(e[n-1]/2);let c=u*Math.ceil(e[n-2]/2),h="int b, int row, int col",p=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let t=2;t<n-1;t++)h=`int b${t}, `+h,c*=e[n-t-1],p=`b${t} * ${c} + `+p;return`\n    vec4 ${r}(${h}) {\n      int index = ${p};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${o});\n      return ${aI().texture2D}(${s}, uv);\n    }\n  `}(t)}}const CI="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",NI="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",AI="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",EI="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function $I(t){return`offset${t}`}function RI(t){const e=t.name,n=O(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function DI(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function OI(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function FI(t,e){return e.map((e=>t[e])).join(", ")}function MI(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach(((t,n)=>{const s=t.logicalShape,r=e[n],i=r.shape;if(!F(s,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${i} must match`);if(t.isUniform&&r.isUniform)return;const a=t.texShape,o=r.isUniform?null:r.texData.texShape;if(!F(a,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${o} must match`)}))}const{addImpl:LI,bincountImpl:zI,bincountReduceImpl:PI,ceilImpl:VI,concatImpl:BI,expImpl:WI,expm1Impl:qI,floorImpl:UI,gatherV2Impl:GI,greaterImpl:jI,lessImpl:HI,linSpaceImpl:XI,logImpl:KI,maxImpl:YI,maximumImpl:ZI,minimumImpl:QI,multiplyImpl:JI,negImpl:tC,prodImpl:eC,rangeImpl:nC,rsqrtImpl:sC,simpleAbsImpl:rC,sliceImpl:iC,stridedSliceImpl:aC,subImpl:oC,tileImpl:lC,topKImpl:uC,transposeImpl:cC,uniqueImpl:hC}=k;function pC(t,e){return["x","y","z","w","u","v"].slice(0,e).map((e=>`${t}.${e}`))}function dC(t,e){return 1===e?[t]:pC(t,e)}class fC{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=dC("rc",e),s=DI(e),r=function(t,e,n){if(1===t)return`rc > ${e[0]}`;let s="";for(let r=t-2;r<t;r++)s+=`${n[r]} >= ${e[r]}`,r<t-1&&(s+="||");return s}(e,t,n),i=function(t,e,n,s){if(1===t)return"";const r=s.slice(-2);return`\n    int r = ${r[0]};\n    int c = ${r[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${e};\n    bool rEdge = rp1 >= ${n};\n  `}(e,t[t.length-1],t[t.length-2],n),a=function(t,e){const n=t.length,s=function(t,e){const n=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let i=`${0===s?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let n=2;n<t;n++)i=`${e[e.length-1-n]},`+i;n.push(i)}return n}(n,e);return 1===n?`getA(rc),\n            rc + 1 >= ${t[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${s[0]}),\n          cEdge ? 0. : getA(${s[1]}),\n          rEdge ? 0. : getA(${s[2]}),\n          rEdge || cEdge ? 0. : getA(${s[3]})`}(t,n);this.userCode=`\n        void main() {\n          ${s} rc = getOutputCoords();\n\n          if(${r}) {\n            setOutput(vec4(0));\n          } else {\n            ${i}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}}class mC{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let t=0;t<4;t++){let e="thisRC = rc;";t%2==1&&(e+="thisRC.z += 1;"),t>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${t>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${t}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${t>0?"}":""}\n      `}var s;this.userCode=`\n      ${s=e,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${oI(["r","c","d"],s)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${lI(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${t[1]};\n        int cols = ${t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class gC{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const s=bC(e,n),r=xC(t,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const i=yC(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const t=this.freeTextures[r].shift();return this.usedTextures[r].push(t),t}let a;return s===RS.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):s===RS.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):s===RS.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):s===RS.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):s===RS.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[r].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(t,e,n,s){if(null==this.freeTextures)return;const r=bC(n,s),i=xC(e,r,s);i in this.freeTextures||(this.freeTextures[i]=[]);const a=yC(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),o=ht().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=a):(this.freeTextures[i].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const l=this.usedTextures[i],u=l.indexOf(t);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));for(const t in this.usedTextures)this.usedTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function yC(t,e,n,s,r){const i=function(t,e){switch(t){case RS.PACKED_2X2_FLOAT32:return vI(e);case RS.PACKED_2X2_FLOAT16:return wI(e);case RS.UNPACKED_FLOAT32:return yI(e);case RS.UNPACKED_FLOAT16:return bI(e);case RS.PACKED_4X1_UNSIGNED_BYTE:return xI(e);default:throw new Error(`Unknown physical texture type ${t}`)}}(e,s);let a;if(r){const[e,n]=FS(t[0],t[1]);a=e*n}else{const[e,n]=DS(t[0],t[1]);a=e*n}const o=function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${e}`)}(n,i);return a*o}function bC(t,e){if(t===$S.UPLOAD)return RS.PACKED_2X2_FLOAT32;if(t===$S.RENDER||null==t)return function(t){return ht().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?RS.PACKED_2X2_FLOAT32:RS.UNPACKED_FLOAT32:t?RS.PACKED_2X2_FLOAT16:RS.UNPACKED_FLOAT16}(e);if(t===$S.DOWNLOAD||t===$S.PIXELS)return RS.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function xC(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class vC{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const wC="if (isnan(x)) return x;",_C="return x;",kC="return abs(x);",TC="return (x >= 0.0) ? x : (exp(x) - 1.0);",SC=wC+"\n  return (x < 0.0) ? 0.0 : x;\n",IC=wC+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",CC="return x;",NC="return x;",AC="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",EC="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",$C="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n";class RC{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class DC{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=dC("rc",e),s=DI(e),r=function(t,e){if(1===t)return"rc";let n="";for(let s=0;s<t;s++)n+=e[s],s<t-1&&(n+=",");return n}(e,n),i=n.slice(-2),a=e<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${s} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${a}));\n      }\n    `}}const OC=ju,FC={};class MC extends S{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!ht().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=AS(ht().getNumber("WEBGL_VERSION"));this.binaryCache=((e=ht().getNumber("WEBGL_VERSION"))in FC||(FC[e]={}),FC[e]),this.gpgpu=new _I(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var e;this.textureManager=new gC(this.gpgpu),this.numMBBeforeWarning=null==ht().global.screen?1024:ht().global.screen.height*ht().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new T(this,Ai())}nextDataId(){return MC.nextDataId++}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,n){if((ht().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||ht().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:e,dtype:n,values:t,usage:$S.UPLOAD,refCount:1}),s}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){this.texData.get(t).refCount++}decRef(t){this.texData.has(t)&&this.texData.get(t).refCount--}move(t,e,n,s,r){if(ht().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===s)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:s,values:e,usage:$S.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:n,dtype:s,complexTensorInfos:r,slice:i,shape:a,isPacked:o}=e;if(null!=i){let e;e=o?new RC(a,CC):new vC(a,CC);const n=this.runWebGLProgram(e,[{dataId:t,shape:a,dtype:s}],s),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===s)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=vs()),c="complex64"===s?Ru(this.readSync(r.real.dataId),this.readSync(r.imag.dataId)):this.getValuesFromTexture(t),l&&(this.downloadWaitMs+=vs()-u),this.convertAndCacheOnCPU(t,c)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise((t=>e.push(t)))}const e=this.texData.get(t),{values:n,shape:s,slice:r,dtype:i,complexTensorInfos:a,isPacked:o}=e;if(null!=r){let e;e=o?new RC(s,CC):new vC(s,CC);const n=this.runWebGLProgram(e,[{dataId:t,shape:s,dtype:i}],i),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(t);if(!ht().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===ht().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==i&&ht().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(t);const e=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(e.texture,...OS(s))}if(this.pendingRead.set(t,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const t=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]);u=Ru(t[0],t[1])}else if(null==c)u=this.getValuesFromTexture(t);else{const t=O(s);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,t)}null!=l&&this.disposeIntermediateTensorInfo(l);const h=this.convertAndCacheOnCPU(t,u),p=this.pendingRead.get(t);return this.pendingRead.delete(t),p.forEach((t=>t(h))),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&Ai().removeDataId(t,this),this.pendingDeletes--),h}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map((t=>_s(t)))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return Yr(t.shape,t.dtype,n)}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!zS(n)){if(ht().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:s}=this.texData.get(t),r=O(e);if(ht().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),s=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(s.texture,...OS(e)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),i}const i=ht().getBool("WEBGL_PACK")&&!0===s,a=i?YS(e):e,o=i?new dI(a):new pI(a),l=this.runWebGLProgram(o,[{shape:a,dtype:n,dataId:t}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(t){const e=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,t();const r=D(this.activeTimers.map((t=>t.query))).filter((t=>null!=t)),i=D(this.activeTimers.map((t=>t.name))).filter((t=>null!=t));this.activeTimers=e,s&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(r);a.kernelMs=function(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}(t),a.getExtraProfileInfo=()=>t.map(((t,e)=>({name:i[e],ms:t}))).map((t=>`${t.name}: ${t.ms}`)).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:vs(),endMs:null}}endTimer(t){return ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=vs(),t)}async getQueryTime(t){if(ht().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:n}=this.texData.get(t);return null!=n&&(this.disposeData(n.real.dataId,e),this.disposeData(n.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:n,texShape:s,usage:r,isPacked:i,slice:a}=this.texData.get(t),o=a&&a.origDataId||t,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=e&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(e,s,r,i)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return ht().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=Ai().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t,e=128){const n=this.getCPUBackend();return ht().getBool("IS_TEST")||this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&t.every((t=>null==this.texData.get(t.dataId).texture&&O(t.shape)<e))}getGPGPUContext(){return this.gpgpu}where(t){Eu("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return OC(t.shape,e)}packedUnaryOp(t,e,n){const s=new RC(t.shape,e),r=this.compileAndRun(s,[t],n);return Ai().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=rC(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(ht().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,kC,t.dtype);const e=new vC(t.shape,kC),n=this.compileAndRun(e,[t]);return Ai().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(t,e,n){let s;if("string"===e&&null!=n&&n.length>0&&X(n[0])){const r=n.map((t=>ws(t)));s=this.write(r,t,e)}else s=this.write(n,t,e);return this.texData.get(s).usage=null,{dataId:s,shape:t,dtype:e}}makeOutput(t,e,n){const{dataId:s}=this.makeTensorInfo(t,e,n);return Ai().makeTensorFromDataId(s,t,e,this)}unpackTensor(t){const e=new DC(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new fC(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[XS(t.shape),...KS(t.shape)],s={dtype:t.dtype,shape:n,dataId:t.dataId},r=[XS(e),...KS(e)],i=new mC(r,n),a=this.runWebGLProgram(i,[s],t.dtype,null,!0);return{dataId:a.dataId,shape:e,dtype:a.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:s,dtype:r}=e,i=YS(s);let a;return a=n?new hI(i):new cI(i),{dtype:r,shape:s,dataId:this.runWebGLProgram(a,[{shape:i,dtype:r,dataId:t}],r,null,!0).dataId}}runWebGLProgram(t,e,n,s,r=!1){const i=this.makeTensorInfo(t.outputShape,n),a=this.texData.get(i.dataId);if(t.packedOutput&&(a.isPacked=!0),t.outPackingScheme===ES.DENSE){const e=OS(t.outputShape);a.texShape=e.map((t=>2*t))}if(null!=t.outTexUsage&&(a.usage=t.outTexUsage),0===O(i.shape))return a.values=q(i.dtype,0),i;const o=[],l=e.map((e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&O(e.shape)<=ht().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),o.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!QS(n.shape,e.shape)){const t=e,s=e.shape;e.shape=n.shape,e=this.packedReshape(e,s),o.push(e),n=this.texData.get(e.dataId),t.shape=s}return this.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const u={shape:i.shape,texData:a,isUniform:!1},c=function(t,e,n){let s="";e.concat(n).forEach((t=>{const e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?"uniform":t.texData.texShape;s+=`${t.shape}_${n}_${e}`}));const r=t.userCode;let i=t.constructor.name;return i+="_"+s+"_"+r,i}(t,l,u),h=this.getAndSaveBinary(c,(()=>function(t,e,n,s){const r=e.userCode,i=n.map(((t,n)=>{const s={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(s.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:s}})),a=i.map((t=>t.shapeInfo)),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},l=TI(i,o,r,e.packedInputs),u=t.createProgram(l);let c=null;const h=t.getUniformLocation(u,"NAN",!1);1===ht().getNumber("WEBGL_VERSION")&&(c=t.getUniformLocation(u,"INFINITY",!1));const p={};for(let n=0;n<e.variableNames.length;n++){const s=e.variableNames[n],r=!1;p[s]=t.getUniformLocation(u,s,r),p[`offset${s}`]=t.getUniformLocation(u,`offset${s}`,r)}return{program:e,source:l,webGLProgram:u,uniformLocations:p,inShapeInfos:a,outShapeInfo:o,infLoc:c,nanLoc:h}}(this.gpgpu,t,l,u))),p=null!=this.activeTimers;let d;p&&(d=this.startTimer()),function(t,e,n,s,r){MI(e.inShapeInfos,n),MI([e.outShapeInfo],[s]);const i=s.texData.texture,a=s.texData.texShape;s.texData.isPacked?t.setOutputPackedMatrixTexture(i,a[0],a[1]):t.setOutputMatrixTexture(i,a[0],a[1]),t.setProgram(e.webGLProgram),1===ht().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach(((n,s)=>{const r=e.program.variableNames[s],i=e.uniformLocations[r],a=e.uniformLocations[`offset${r}`];if(null!=i)if(n.isUniform)if(O(n.shape)<2)t.gl.uniform1f(i,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(i,e)}else null!=n.texData.slice&&null!=a&&t.gl.uniform1i(a,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,i,s)})),null!=r&&r(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,h,l,u,s),o.forEach((t=>this.disposeIntermediateTensorInfo(t))),p&&(d=this.endTimer(d),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(d)}));const f=ht().get("WEBGL_FLUSH_THRESHOLD");if(f>0){const t=vs();t-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=t)}if(!ht().getBool("WEBGL_LAZILY_UNPACK")&&a.isPacked&&!1===r){const t=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),t}return i}compileAndRun(t,e,n,s,r=!1){return n=n||e[0].dtype,this.runWebGLProgram(t,e,n,s,r)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(ht().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=$i((()=>{if(!ht().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=ht().getBool("DEBUG");ht().set("DEBUG",!1);const e=this.abs(Li(1e-8)).dataSync()[0];if(ht().set("DEBUG",t),e>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:s,values:r,texture:i,usage:a,isPacked:o}=e;if(null!=i)return;const l=null!=this.activeTimers;let u;l&&(u=vs());let c=e.texShape;if(null==c&&(c=function(t,e=!1){let n=ht().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map(((e,n)=>n>=t.length-2?A(t[n]):t[n]))).length&&(t=[2,t[0]])),2!==t.length){const e=W(t);t=e.newShape}let s=O(t);if(t.length<=1&&s<=n)return[1,s];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=XS(t);let n=2,r=2;return t.length&&([n,r]=KS(t)),s=e*(n/2)*(r/2),L(s).map((t=>2*t))}return L(s)}(n,o),e.texShape=c),null!=r){const t=YS(n);let i,a=c[1],h=c[0];const p=r instanceof Uint8Array;o?([a,h]=FS(c[0],c[1]),i=new mI(t,[h,a],p)):i=new fI(t,[h,a],p);const d=this.makeTensorInfo([h,a],s);this.texData.get(d.dataId).usage=p?$S.PIXELS:$S.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(d.dataId),a,h,r);const f=!0,m=this.runWebGLProgram(i,[d],s,null,f),g=this.texData.get(m.dataId);e.texture=g.texture,e.texShape=g.texShape,e.isPacked=g.isPacked,e.usage=g.usage,this.disposeIntermediateTensorInfo(d),this.texData.delete(m.dataId),e.values=null,l&&(this.uploadWaitMs+=vs()-u)}else{const t=this.acquireTexture(c,a,s,o);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:s}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error(`Unknown dtype ${e}`)}(e,s)),n.values}acquireTexture(t,e,n,s){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,s)}computeBytes(t,e){return t[0]*t[1]*H(e)}}MC.nextDataId=0,ar()&&Fi("webgl",(()=>new MC),2);const LC="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class zC{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=Ca(e,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const PC="\n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n";class VC{constructor(t,e,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Ca(e,n);const r=this.outputShape.length;let i="";if(s)if(0===r||1===O(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${DI(r)} coords = getOutputCoords();\n        `,1===r)i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=dC("coords",r);i+=`\n            bool nextRowOutOfBounds =\n              (${t[r-2]} + 1) >= ${this.outputShape[r-2]};\n            bool nextColOutOfBounds =\n              (${t[r-1]} + 1) >= ${this.outputShape[r-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}function BC(t){const{inputs:e,backend:n}=t,{x:s}=e;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const WC={kernelName:Ie,backendName:"webgl",kernelFunc:BC};function qC(t){const{inputs:e,backend:n}=t,{real:s,imag:r}=e,i=n.makeTensorInfo(s.shape,"complex64"),a=n.texData.get(i.dataId),o=BC({inputs:{x:s},backend:n}),l=BC({inputs:{x:r},backend:n});return a.complexTensorInfos={real:o,imag:l},i}const UC={kernelName:Vt,backendName:"webgl",kernelFunc:qC},GC="return (a < 0.) ? b * a : a;",jC="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",HC={kernelName:Re,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{alpha:i}=s,a=n.makeTensorInfo([],"float32",bs(i,"float32")),o=ht().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new VC(jC,r.shape,a.shape):new zC(GC,r.shape,a.shape),l=n.runWebGLProgram(o,[r,a],r.dtype);return n.disposeIntermediateTensorInfo(a),l}},XC="return (a < 0.) ? b * a : a;",KC="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",YC={kernelName:fn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s,alpha:r}=e,i=ht().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new VC(KC,s.shape,r.shape):new zC(XC,s.shape,r.shape);return n.runWebGLProgram(i,[s,r],s.dtype)}},ZC="if (isnan(x)) return x;";function QC({opSnippet:t,packedOpSnippet:e,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:i})=>{const{x:a}=r,o=i,l=s||a.dtype;if(o.shouldExecuteOnCPU([a])&&null!=n){const t=o.texData.get(a.dataId),e=n(t.values,l);return o.makeTensorInfo(a.shape,l,e)}let u;return u=ht().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=e?new RC(a.shape,e):new vC(a.shape,t),o.runWebGLProgram(u,[a],l)}}function JC({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:i}){return({inputs:a,backend:o})=>{const{a:l,b:u}=a,c=o;if(s&&"complex64"===l.dtype){const e=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[s,r]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,s]=e,r={dataId:n.dataId,dtype:n.dtype,shape:l.shape},i={dataId:s.dataId,dtype:s.dtype,shape:u.shape},a=new zC(t,l.shape,u.shape);return c.runWebGLProgram(a,[r,i],Hs(n.dtype,s.dtype))})),i=qC({inputs:{real:s,imag:r},backend:c});return c.disposeIntermediateTensorInfo(s),c.disposeIntermediateTensorInfo(r),i}const h=i||Hs(l.dtype,u.dtype);if(c.shouldExecuteOnCPU([l,u])&&null!=r){const t=c.texData.get(l.dataId),e=c.texData.get(u.dataId),[n,s]=r(l.shape,u.shape,t.values,e.values,h),i=c.makeTensorInfo(s,h);return c.texData.get(i.dataId).values=n,i}let p;return p=ht().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=e?new VC(e,l.shape,u.shape,n):new zC(t,l.shape,u.shape),c.runWebGLProgram(p,[l,u],h)}}function tN(t,e=!1){if("linear"===t)return e?NC:_C;if("relu"===t)return e?EC:SC;if("elu"===t)return e?AC:TC;if("relu6"===t)return e?$C:IC;if("prelu"===t)return e?KC:XC;if("leakyrelu"===t)return e?jC:GC;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class eN{constructor(t,e,n,s=!1,r=!1,i=!1,a=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=s?t[1]:t[2],c=Math.ceil(u/2),h=s?"i * 2, rc.y":"rc.y, i * 2",p=r?"rc.z, i * 2":"i * 2, rc.z",d=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";a&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${a}\n        }`:`vec4 activation(vec4 x) {\n          ${a}\n        }`,g="result = activation(result);");const y=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";t[0]<e[0]?b=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(x=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${f[0]});\n          result += (${d[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}const nN={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class sN{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Ca(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const rN="return a * b;";function iN(t){const{inputs:e,backend:n}=t,{a:s,b:r}=e,i=Hs(s.dtype,r.dtype);if("complex64"===s.dtype){const t=n.texData.get(s.dataId),e=n.texData.get(r.dataId),i=new sN(nN.REAL,s.shape,r.shape),a=new sN(nN.IMAG,s.shape,r.shape),o=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape}],l=n.runWebGLProgram(i,o,"float32"),u=n.runWebGLProgram(a,o,"float32"),c=qC({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([s,r])){const t=n.texData.get(s.dataId),e=n.texData.get(r.dataId),[a,o]=JI(s.shape,r.shape,t.values,e.values,i),l=n.makeTensorInfo(o,i);return n.texData.get(l.dataId).values=a,l}let a;return a=ht().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new VC(rN,s.shape,r.shape):new zC(rN,s.shape,r.shape),n.runWebGLProgram(a,[s,r],i)}const aN={kernelName:nn,backendName:"webgl",kernelFunc:iN};function oN(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{shape:i}=s,a=n,o=O(r.shape),l=V(i,o),u=O(l);E(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=a.texData.get(r.dataId);return!c.isPacked||QS(r.shape,l)||null!==c.texture&&QS(c.shape,l)?(a.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function(t,e,n){const s=[XS(t.shape),...KS(t.shape)],r={dtype:t.dtype,shape:s,dataId:t.dataId},i=[XS(e),...KS(e)],a=new mC(i,s),o=n.runWebGLProgram(a,[r],t.dtype,null,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}(r,l,a)}const lN={kernelName:vn,backendName:"webgl",kernelFunc:oN};class uN{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:i}=t;this.outputShape=[s,i];const a=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=e){const t=1/e;l=`sumValue += dot(values * ${M(t)?t.toPrecision(2):t}, ones);`}let u="";r%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${a}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${a};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class cN{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:i}=t;this.outputShape=[s,i];let a="0.0",o="";"prod"===e?a="1.0":"min"===e?(a="1.0 / 1e-20",o="min"):"max"===e&&(a="-1.0 / 1e-20",o="max");let l=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?l="sumValue":"prod"===e?l="prodValue":"all"===e?l="allValue":"any"===e&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,p="vec4";"all"===e?(a="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===e&&(a="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";r%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${a};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${a});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function hN(t,e,n,s){const r=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],s=hu(n);e.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return e}(t.shape);let i=t;for(let a=0;a<r.length;a++){const{inSize:o,windowSize:l,outSize:u}=r[a];let c,h;c="mean"===n?0===a?new uN({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},o):new uN({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u}):new cN({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},n),h=i,i=s.runWebGLProgram(c,[i],e),h.dataId!==t.dataId&&s.disposeIntermediateTensorInfo(h)}return i}class pN{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[e[s]];this.outputShape=n,this.rank=n.length;const s=DI(this.rank),r=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let e=0;e<t.length;e++)s[t[e]]=n[e];return s.join()}(e);this.userCode=`\n    void main() {\n      ${s} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}}class dN{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[e[s]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=DI(this.rank),r=pC("rc",this.rank),i=new Array(this.rank);for(let t=0;t<e.length;t++)i[e[t]]=r[t];const a=`vec2(${i.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`\n    void main() {\n      ${s} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function fN(t,e,n){const s=ht().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new dN(t.shape,e):new pN(t.shape,e);return n.runWebGLProgram(s,[t],t.dtype)}function mN(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s;return function(t,e,n,s){const r=e,i=t.shape.length,a=B(r,t.shape);let o=a;const l=so(o,i),u=null!=l;let c=t;u&&(c=fN(t,l,s),o=io(o.length,i)),no("sum",o,i);const[h,p]=to(c.shape,o);let d=h;n&&(d=eo(h,a));const f=O(p),m=oN({inputs:{x:c},attrs:{shape:[O(t.shape)/f,f]},backend:s}),g=hN(m,Xs(t.dtype),"sum",s),y=oN({inputs:{x:g},attrs:{shape:d},backend:s});return s.disposeIntermediateTensorInfo(m),s.disposeIntermediateTensorInfo(g),u&&s.disposeIntermediateTensorInfo(c),y}(r,i,a,n)}const gN={kernelName:Pn,backendName:"webgl",kernelFunc:mN};function yN(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{perm:i}=s,a=n,o=r.shape.length,l=new Array(o);for(let t=0;t<l.length;t++)l[t]=r.shape[i[t]];let u;if(a.shouldExecuteOnCPU([r])){const t=a.texData.get(r.dataId).values,e=cC(t,r.shape,r.dtype,i,l);u=a.makeTensorInfo(l,r.dtype),a.texData.get(u.dataId).values=e}else u=fN(r,i,a);return u}const bN={kernelName:Jn,backendName:"webgl",kernelFunc:yN},xN=1e3;function vN({a:t,b:e,transposeA:n,transposeB:s,backend:r,bias:i=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}){const u=t.shape.length,c=e.shape.length,h=n?t.shape[u-2]:t.shape[u-1],p=s?e.shape[c-1]:e.shape[c-2],d=n?t.shape[u-1]:t.shape[u-2],f=s?e.shape[c-2]:e.shape[c-1],m=t.shape.slice(0,-2),g=e.shape.slice(0,-2),y=O(m),b=O(g);E(u>=2&&c>=2&&(y===b||1===y||1===b),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`));const x=(y>b?t.shape.slice(0,-2):e.shape.slice(0,-2)).concat([d,f]);E(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${s} must match.`));const v=n?[y,h,d]:[y,d,h],w=s?[b,f,p]:[b,p,f],_=oN({inputs:{x:t},backend:r,attrs:{shape:v}}),k=oN({inputs:{x:e},backend:r,attrs:{shape:w}}),T=[_,k],S=Math.max(y,b),I=n?_.shape[1]:_.shape[2],C=null!=i,N=null!=a,A="leakyrelu"===l,$=null!=l?tN(l,!0):null;let R;if((1===d||1===f)&&I>xN&&!1===(C||N||A||null!=$)){let t=_,e=k;n&&(t=yN({inputs:{x:_},backend:r,attrs:{perm:[0,2,1]}}),T.push(t)),s&&(e=yN({inputs:{x:k},backend:r,attrs:{perm:[0,2,1]}}),T.push(e));const i=1===f;let a=t;1!==f&&(a=oN({inputs:{x:t},backend:r,attrs:{shape:[S,I,1]}}),T.push(a));const o=1===f?2:1;let l=e;i&&(l=oN({inputs:{x:e},backend:r,attrs:{shape:[S,1,I]}}),T.push(l));const u=iN({inputs:{a,b:l},backend:r});R=mN({inputs:{x:u},backend:r,attrs:{axis:o,keepDims:!0}}),T.push(u)}else{const l=Hs(t.dtype,e.dtype),u=new eN(v,w,[S,d,f],n,s,C,$,N,A),c=[_,k];if(null!=i&&c.push(i),N&&c.push(a),A){const t=r.makeTensorInfo([],"float32",bs(o,"float32"));c.push(t),T.push(t)}R=r.runWebGLProgram(u,c,l)}const D=oN({inputs:{x:R},backend:r,attrs:{shape:x}});T.push(R);for(const t of T)r.disposeIntermediateTensorInfo(t);return D}const wN={kernelName:os,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:i,bias:a,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return vN({a:r,b:i,transposeA:l,transposeB:u,backend:n,bias:a,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},_N="return abs(x);",kN={kernelName:gt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s}=e;if(n.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const t=n.texData.get(s.dataId),e=rC(t.values);return n.makeTensorInfo(s.shape,s.dtype,e)}let r;return r=ht().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new RC(s.shape,_N):new vC(s.shape,_N),n.runWebGLProgram(r,[s],s.dtype)}},TN=QC({opSnippet:wC+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),SN={kernelName:yt,backendName:"webgl",kernelFunc:TN},IN=QC({opSnippet:wC+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),CN={kernelName:bt,backendName:"webgl",kernelFunc:IN},NN="return a + b;",AN=JC({opSnippet:NN,packedOpSnippet:NN,supportsComplex:!0,cpuKernelImpl:LI}),EN={kernelName:xt,backendName:"webgl",kernelFunc:AN};class $N{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`float v${t} = get${t}AtOutCoords();`)}));const s=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${s};\n        setOutput(result);\n      }\n    `}}class RN{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)}));const s=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${s};\n        setOutput(result);\n      }\n    `}}const DN={kernelName:vt,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:s}=e,r=n;if(1===r.length)return BC({inputs:{x:r[0]},backend:s});if(r.length>ht().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(r.length/2),n=t({inputs:r.slice(0,e),backend:s}),i=t({inputs:r.slice(e),backend:s});return t({inputs:[n,i],backend:s})}const i=r.map((t=>t.dtype)).reduce(((t,e)=>Hs(t,e))),a=r.map((t=>t.shape)),o=ht().getBool("WEBGL_PACK")?new RN(r[0].shape,a):new $N(r[0].shape,a);return s.runWebGLProgram(o,r,i)}},ON={kernelName:wt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s,o=r.shape.length,l=B(i,r.shape);let u=l;const c=so(u,o);let h=r;null!=c&&(h=yN({inputs:{x:r},backend:n,attrs:{perm:c}}),u=io(u.length,o)),no("all",u,o);const[p,d]=to(h.shape,u),f=oN({inputs:{x:h},backend:n,attrs:{shape:[-1,O(d)]}}),m=hN(f,f.dtype,"all",n);let g;return g=oN(a?{inputs:{x:m},backend:n,attrs:{shape:eo(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},FN={kernelName:_t,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s,o=r.shape.length,l=B(i,r.shape);let u=l;const c=so(u,o);let h=r;null!=c&&(h=yN({inputs:{x:r},backend:n,attrs:{perm:c}}),u=io(u.length,o)),no("any",u,o);const[p,d]=to(h.shape,u),f=oN({inputs:{x:h},backend:n,attrs:{shape:[-1,O(d)]}}),m=hN(f,f.dtype,"any",n);let g;return g=oN(a?{inputs:{x:m},backend:n,attrs:{shape:eo(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class MN{constructor(t,e,n){this.variableNames=["A"];const{windowSize:s,batchSize:r,outSize:i}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,i];const a="max"===e?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${s}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${a} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class LN{constructor(t,e,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,E(t.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const r=t[t.length-1],i=Math.ceil(r/e);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),s||this.variableNames.push("bestIndicesA");const a=this.outputShape,o=a.length,l=DI(o),u=dC("coords",o);let c,h;if(1===i){h=o+1;const t=DI(h);c=`\n        ${t} sourceLocR = ${t}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${t} sourceLocG = ${t}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${t} sourceLocA = ${t}(${u.join()}, 0);\n        --${u[o-1]};\n        ${t} sourceLocB = ${t}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),d="."+p[h-1],f=p.map((t=>"int "+t)),m=dC("sourceLocR",h-1).concat("inIdx.r"),g=dC("sourceLocG",h-1).concat("inIdx.g"),y=dC("sourceLocB",h-1).concat("inIdx.b"),b=dC("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,_=s?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${_}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${a[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${a[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},\n          sourceLocB${d}, sourceLocA${d}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function zN(t,e,n,s=null){let r=e.shape[0],i=e.shape[1];null!=s&&(r=s.shape[0],i=s.shape[1]);const a=hu(i),o={windowSize:a,inSize:i,batchSize:r,outSize:Math.ceil(i/a)},l=new MN(o,n,null==s),u=[e];null!=s&&u.push(s);const c=t.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=zN(t,e,n,c);return t.disposeIntermediateTensorInfo(c),h}function PN(t,e,n,s=null){const r=null!=s?s.shape:e.shape,i=hu(r[r.length-1]),a=new LN(r,i,n,null==s),o=null==s?[e]:[e,s],l=t.runWebGLProgram(a,o,"int32");if(l.shape.length===e.shape.length){const s=PN(t,e,n,l);return t.disposeIntermediateTensorInfo(l),s}return l}function VN(t,e,n,s){const r=[n];if(no("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,e.shape.length),!ht().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const n=[],[i,a]=to(e.shape,r),o=O(a),l=oN({inputs:{x:e},backend:t,attrs:{shape:[-1,o]}});n.push(l);const u=zN(t,l,s);n.push(u);const c=oN({inputs:{x:u},backend:t,attrs:{shape:i}});return n.forEach((e=>t.disposeIntermediateTensorInfo(e))),c}return PN(t,e,s)}const BN={kernelName:kt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i}=s;let a=B(i,r.shape);const o=so(a,r.shape.length);let l=r;const u=[];null!=o&&(l=yN({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),a=io(a.length,l.shape.length)),no("argMax",[a[0]],l.shape.length);const c=VN(n,l,a[0],"max");return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}},WN={kernelName:Tt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i}=s;let a=B(i,r.shape);const o=so(a,r.shape.length);let l=r;const u=[];null!=o&&(l=yN({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),a=io(a.length,l.shape.length)),no("argMin",[a[0]],l.shape.length);const c=VN(n,l,a[0],"min");return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}},qN=QC({opSnippet:wC+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),UN={kernelName:St,backendName:"webgl",kernelFunc:qN},GN=QC({opSnippet:wC+"return log(x + sqrt(x * x + 1.0));"}),jN={kernelName:It,backendName:"webgl",kernelFunc:GN},HN=QC({opSnippet:wC+"\n  return atan(x);\n"}),XN={kernelName:Ct,backendName:"webgl",kernelFunc:HN},KN=JC({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),YN={kernelName:At,backendName:"webgl",kernelFunc:KN},ZN=QC({opSnippet:wC+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),QN={kernelName:Nt,backendName:"webgl",kernelFunc:ZN};class JN{constructor(t,e,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,a=t.strideHeight,o=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.top,d=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,g=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${a}, ${o});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${s?r?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(b="avgValue / count");const x=4*Math.floor(i/4),v=i%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class tA{constructor(t,e,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,a=t.strideDepth,o=t.strideHeight,l=t.strideWidth,u=t.dilationDepth,c=t.dilationHeight,h=t.dilationWidth,p=t.effectiveFilterDepth,d=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,g=t.padInfo.top,y=t.padInfo.left;this.outputShape=t.outShape;const b="avg"===e;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${a}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${s?r?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(v="avgValue / count");const w=4*Math.floor(i/4),_=i%4,k=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${a}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${k}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${2===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${3===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${k}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}const eA={kernelName:Et,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;rI(r,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s;E(ea(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Gi(r.shape,i,a,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&F(u.inShape,u.outShape))return BC({inputs:{x:r},backend:n});const c=new JN(u,"avg",!1);return n.runWebGLProgram(c,[r],"float32")}},nA={kernelName:Rt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=s,c=ji(r.shape,i,a,[1,1,1],o,l,u),h=new tA(c,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};class sA{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,s=t.strideHeight,r=t.strideWidth,i=t.dilationHeight,a=t.dilationWidth,o=t.effectiveFilterHeight,l=t.effectiveFilterWidth,u=o-1-t.padInfo.top,c=l-1-t.padInfo.left,h=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${i}) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${a}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class rA{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,s=t.filterWidth,r=t.strideDepth,i=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,h=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=c-1-t.padInfo.front,f=h-1-t.padInfo.top,m=p-1-t.padInfo.left,g=1/(e*n*s);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const iA={kernelName:Dt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i}=e,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=ji(a.shape,o,l,[1,1,1],u,c),p=new rA(h);return n.runWebGLProgram(p,[r],a.dtype)}},aA={kernelName:$t,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i}=e,a=i;rI([r,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=Gi(a.shape,o,l,1,u),h=new sA(c);return n.runWebGLProgram(h,[r],a.dtype)}},oA={kernelName:Ot,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:i}=e,{transposeA:a,transposeB:o}=s;return vN({a:r,b:i,transposeA:a,transposeB:o,backend:n})}};class lA{constructor(t,e,n,s,r,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Ca(t,e),Ca(t,n);let a="0.0";null!=s&&(Ca(t,s),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="1.0";null!=r&&(Ca(t,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${a};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class uA{constructor(t,e,n,s,r,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Ca(t,e),Ca(t,n);let a="vec4(0.0)";null!=s&&(Ca(t,s),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=r&&(Ca(t,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${a};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const cA={kernelName:we,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,mean:r,variance:i,offset:a,scale:o}=t;E(r.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),E(null==a||r.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),E(null==o||r.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[s,r,i];let c=null;null!=a&&(c=a.shape,u.push(a));let h=null;null!=o&&(h=o.shape,u.push(o));const p=ht().getBool("WEBGL_PACK_NORMALIZATION")?new uA(s.shape,r.shape,i.shape,c,h,l):new lA(s.shape,r.shape,i.shape,c,h,l);return e.runWebGLProgram(p,u,u[0].dtype)}};class hA{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=DI(this.rank),n=`uniform int start[${this.rank}];`,s=function(t){if(1===t)return"sourceLoc";if(t<=6)return pA.slice(0,t).map((t=>"sourceLoc."+t)).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let r;r=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map(((t,e)=>`sourceLoc.${pA[e]} = start[${e}] + coords.${pA[e]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${r}\n        setOutput(getSource(${s}));\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const pA=["x","y","z","w","u","v"];class dA{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=DI(this.rank),n=dC("coords",this.rank),s=dC("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${s.slice(-2).join()})`,i=`getChannel(getSource(${s.join()}), ${r})`,a=`\n      result.x = ${i};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${s[this.rank-1]};\n        result.y = ${i};\n        --${s[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${s[this.rank-2]};\n        result.z = ${i};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${s[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map(((t,e)=>`start[${e}]`)).join()});`:t.map(((t,e)=>`${s[e]} = ${n[e]} + start[${e}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${a}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}function fA(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:i,size:a}=s,[o,l]=Ti(r,i,a);if(ci(r,o,l),0===O(l))return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const t=n.texData.get(r.dataId),e=iC(t.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,e)}const{isPacked:u}=n.texData.get(r.dataId),c=_i(r.shape,o,l);if(u||!c){const t=ht().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new dA(l):new hA(l),e=t.getCustomSetupFunc(o);return n.runWebGLProgram(t,[r],r.dtype,e)}return n.uploadToGPU(r.dataId),function(t,e,n,s){const r=s.texData.get(t.dataId),i=s.makeTensorInfo(n,t.dtype),a=s.texData.get(i.dataId);Object.assign(a,r),a.refCount=1,a.shape=n,a.dtype=t.dtype;let o=ki(e,J(t.shape));r.slice&&(o+=r.slice.flatOffset),a.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||t.dataId};const l=s.dataRefCount.get(a.slice.origDataId)||1;return s.dataRefCount.set(a.slice.origDataId,l+1),i}(r,o,l,n)}const mA={kernelName:Rn,backendName:"webgl",kernelFunc:fA},gA={kernelName:Ft,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:i,crops:a}=s;E(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((t,e)=>t*e)),l=du(r.shape,i,o),u=fu(l.length,i.length),c=mu(r.shape,i,o),h=gu(a,i.length),p=yu(c,a,i.length),d=[],f=oN({inputs:{x:r},backend:n,attrs:{shape:l}}),m=yN({inputs:{x:f},backend:n,attrs:{perm:u}}),g=oN({inputs:{x:m},backend:n,attrs:{shape:c}}),y=fA({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return d.push(f),d.push(m),d.push(g),d.forEach((t=>n.disposeIntermediateTensorInfo(t))),y}},yA={kernelName:Mt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,weights:i}=e,{size:a}=s,o=n.readSync(r.dataId),l=n.readSync(i.dataId),u=zI(o,l,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,u)}},bA=JC({opSnippet:"return float(a != b);",dtype:"bool"}),xA={kernelName:rn,backendName:"webgl",kernelFunc:bA};function vA(t){const{inputs:e,backend:n}=t,{input:s}=e;return BC({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.real},backend:n})}const wA={kernelName:yn,backendName:"webgl",kernelFunc:vA},_A={kernelName:Lt,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:s,attrs:r}=e,{x:i}=n,{dtype:a}=r;if("complex64"===a){if("complex64"===i.dtype)return BC({inputs:{x:i},backend:s});const e=ho(i.shape),n=t({inputs:{x:i},backend:s,attrs:{dtype:"float32"}}),r=qC({inputs:{real:n,imag:e},backend:s});return e.dispose(),s.disposeIntermediateTensorInfo(n),r}if("complex64"===i.dtype){const e=vA({inputs:{input:i},backend:s}),n=t({inputs:{x:e},backend:s,attrs:{dtype:a}});return s.disposeIntermediateTensorInfo(e),n}if(!G(i.dtype,a)){const t=BC({inputs:{x:i},backend:s});return{dataId:t.dataId,shape:t.shape,dtype:a}}if("int32"===a)return function(t,e){const n=new vC(t.shape,"return float(int(x));"),s=e.runWebGLProgram(n,[t],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}(i,s);if("bool"===a){const t=s.makeTensorInfo([],"bool",q("bool",1)),e=bA({inputs:{a:i,b:t},backend:s});return s.disposeIntermediateTensorInfo(t),e}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${a}`)}},kA="return ceil(x);",TA=QC({opSnippet:kA,packedOpSnippet:kA,cpuKernelImpl:VI}),SA={kernelName:zt,backendName:"webgl",kernelFunc:TA};class IA{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,s)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(s,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(s,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class CA{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,s)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(s,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(s,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}const NA={kernelName:Pt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{clipValueMin:i,clipValueMax:a}=s;let o;o=ht().getBool("WEBGL_PACK_CLIP")?new CA(r.shape):new IA(r.shape);const l=o.getCustomSetupFunc(i,a);return n.runWebGLProgram(o,[r],r.dtype,l)}};class AA{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function EA(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}const $A={kernelName:Bt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s}=e,r=n.texData.get(s.dataId),i=new AA(s.shape),a=[EA(s,r.complexTensorInfos.real),EA(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(i,a,a[0].dtype)}};class RA{constructor(t){this.outputShape=[],this.outputShape=uu(t,1),this.variableNames=t.map(((t,e)=>`T${e}`));const e=new Array(t.length-1);e[0]=t[0][1];for(let n=1;n<e.length;n++)e[n]=e[n-1]+t[n][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let t=1;t<e.length;t++){const s=e[t-1];n.push(`else if (yC < ${e[t]}) setOutput(getT${t}(yR, yC-${s}));`)}const s=e.length,r=e[e.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class DA{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=uu(t,e);const n=this.outputShape,s=n.length,r=DI(s),i=dC("coords",s),a=["x","y","z","w","u","v"].slice(0,s);this.variableNames=t.map(((t,e)=>`T${e}`));const o=new Array(t.length-1);o[0]=t[0][e];for(let n=1;n<o.length;n++)o[n]=o[n-1]+t[n][e];const l=a[e],u=a.slice(-2),c=a.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let t=1;t<o.length;t++){const e=o[t-1];h+=`\n        if (${l} < ${o[t]}  && ${l} >= ${o[t-1]}) {\n          return getChannel(\n            getT${t}(${OA(a,l,e)}),\n            vec2(${OA(u,l,e)}));\n        }`}const p=o.length,d=o[o.length-1];h+=`\n        return getChannel(\n          getT${p}(${OA(a,l,d)}),\n          vec2(${OA(u,l,d)}));`,this.userCode=`\n      float getValue(${a.map((t=>"int "+t))}) {\n        ${h}\n      }\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[s-1]} = ${i[s-1]} + 1;\n        if (${i[s-1]} < ${n[s-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[s-2]} = ${i[s-2]} + 1;\n        if (${i[s-2]} < ${n[s-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[s-1]} = ${i[s-1]} - 1;\n        if (${i[s-2]} < ${n[s-2]} &&\n            ${i[s-1]} < ${n[s-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function OA(t,e,n){const s=t.indexOf(e);return t.map(((t,e)=>e===s?`${t} - ${n}`:t)).join()}function FA(t){const{inputs:e,backend:n}=t,{input:s}=e;return BC({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.imag},backend:n})}const MA={kernelName:Ne,backendName:"webgl",kernelFunc:FA};function LA(t,e,n){const s=t[0].dtype;if("complex64"===s){const s=t.map((t=>vA({inputs:{input:t},backend:n}))),r=t.map((t=>FA({inputs:{input:t},backend:n}))),i=LA(s,e,n),a=LA(r,e,n),o=qC({inputs:{real:i,imag:a},backend:n});return s.forEach((t=>n.disposeIntermediateTensorInfo(t))),r.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),o}if("string"===s){const{tensors2D:r,outShape:i}=zA(t,e,n),a=r.map((t=>({vals:n.readSync(t.dataId),shape:t.shape}))),o=1===r[0].shape[0],l=BI(a,i,s,o),u=uu(t.map((t=>t.shape)),e),c=n.makeTensorInfo(u,s,l);return r.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}if(t.length>ht().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const s=Math.floor(t.length/2),r=LA(t.slice(0,s),e,n),i=LA(t.slice(s),e,n),a=LA([r,i],e,n);return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),a}if(ht().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].shape.length>1){const r=new DA(t.map((t=>t.shape)),e);return n.runWebGLProgram(r,t,s)}const{tensors2D:r,outShape:i}=zA(t,e,n),a=new RA(r.map((t=>t.shape))),o=n.runWebGLProgram(a,r,s);r.forEach((t=>n.disposeIntermediateTensorInfo(t)));const l=oN({inputs:{x:o},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(o),l}function zA(t,e,n){const s=uu(t.map((t=>t.shape)),e);return{tensors2D:t.map((t=>oN({inputs:{x:t},attrs:{shape:[-1,O(t.shape.slice(e))]},backend:n}))),outShape:s}}function PA(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s,i=B(r,e[0].shape)[0],a=uu(e.map((t=>t.shape)),i);if(0===O(a))return n.makeTensorInfo(a,e[0].dtype,[]);const o=e.filter((t=>O(t.shape)>0));if(1===o.length)return BC({inputs:{x:o[0]},backend:n});const l=o.map((t=>t.shape));return lu(l,i),LA(o,i,n)}const VA={kernelName:Wt,backendName:"webgl",kernelFunc:PA};class BA{constructor(t,e=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const i=t.padInfo.top,a=t.padInfo.left,o=t.strideHeight,l=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,h=t.filterHeight,p=t.filterWidth,d=4*Math.floor(t.inChannels/4),f=t.inChannels%4,m="channelsLast"===t.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class WA{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,s=t.padInfo.left,r=t.strideDepth,i=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.filterDepth,h=t.filterHeight,p=t.filterWidth,d=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${i}, ${a});\n      const ivec3 pads = ivec3(${e}, ${n}, ${s});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class qA{constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:s,inChannels:r,strideWidth:i,strideHeight:a,padInfo:o,outWidth:l,dilationWidth:u,dilationHeight:c,dataFormat:h}=n,{left:p,top:d}=o,f=r*s,m=aI(),g="channelsLast"===h,y=g?0:1,b=g?1:2;let x="";for(let n=0;n<=1;n++)for(let s=0;s<=1;s++)x+=`\n          blockIndex = rc.y + ${s};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${t[1]} && pos < ${t[0]}) {\n            offsetY = int(blockIndex / (${l})) * ${a} - ${d};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${e[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${l}.) * ${i}. - ${p}.);\n              d1 = offsetX + ${u} * (int(mod(float(pos), ${f}.) / ${r}.));\n\n              if(d1 < ${e[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${r}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+s}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+s}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}function UA({x:t,filter:e,convInfo:n,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const l=t.shape,u=s.texData.get(t.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],p=n.outChannels,d="channelsLast"===n.dataFormat;let f;const m=[],g=(1===h||1===p)&&c>xN,y=l[2]%2!=0&&!!u.isPacked;if(!g&&ht().getBool("WEBGL_LAZILY_UNPACK")&&ht().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&y){const c=d?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),h={dataId:t.dataId,shape:[1,c,n.inChannels],dtype:t.dtype},p=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,E(QS(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const g=oN({inputs:{x:e},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(g);const y=vN({a:h,b:g,backend:s,transposeA:!1,transposeB:!1,bias:r,activation:o,preluActivationWeights:i,leakyreluAlpha:a}),b=s.texData.get(y.dataId);E(b.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=p,b.shape=n.outShape,f=BC({inputs:{x:y},backend:s}),f.shape=n.outShape,m.push(y)}else{const u=oN({inputs:{x:t},backend:s,attrs:{shape:[1,d?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],n.inChannels]}}),c=oN({inputs:{x:e},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=vN({a:u,b:c,transposeA:!1,transposeB:!1,backend:s,bias:r,activation:o,preluActivationWeights:i,leakyreluAlpha:a});f=oN({inputs:{x:h},backend:s,attrs:{shape:n.outShape}}),m.push(u),m.push(c),m.push(h)}for(const t of m)s.disposeIntermediateTensorInfo(t);return f}function GA({x:t,filter:e,convInfo:n,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:p,dataFormat:d}=n,f="channelsLast"===d,m=l*u*c,g=p*h,y=[m,g],b=[],x=oN({inputs:{x:t},backend:s,attrs:{shape:t.shape.slice(1)}}),v=oN({inputs:{x:e},backend:s,attrs:{shape:[1,m,O(e.shape)/m]}});b.push(x),b.push(v);const w=new qA(y,x.shape,n),_=s.runWebGLProgram(w,[x],"float32"),k=oN({inputs:{x:_},backend:s,attrs:{shape:[1,y[0],y[1]]}});b.push(_),b.push(k);const T=null!=r,S=null!=i,I="leakyrelu"===o,C=o?tN(o,!0):null,N=new eN(k.shape,v.shape,[1,g,n.outChannels],!0,!1,T,C,S,I),A=[k,v];if(r&&A.push(r),S&&A.push(i),I){const t=s.makeTensorInfo([],"float32",bs(a,"float32"));A.push(t),b.push(t)}const E=s.runWebGLProgram(N,A,"float32"),$=oN({inputs:{x:E},backend:s,attrs:{shape:f?[1,p,h,n.outChannels]:[1,n.outChannels,p,h]}});b.push(E);for(const t of b)s.disposeIntermediateTensorInfo(t);return $}const jA={kernelName:qt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i}=e,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=na(l),p=Hi(r.shape,i.shape,a,u,o,c,!1,h);let d;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(ht().getBool("WEBGL_CONV_IM2COL")&&1===r.shape[0])d=GA({x:r,filter:i,convInfo:p,backend:n});else{const t=new BA(p);d=n.runWebGLProgram(t,[r,i],"float32")}else d=UA({x:r,filter:i,convInfo:p,backend:n});const f=oN({inputs:{x:d},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(d),f}};class HA{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,s=t.padInfo.top,r=t.padInfo.left,i="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${s};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${i}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class XA{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,s=t.strideHeight,r=t.strideWidth,i="channelsLast"===t.dataFormat,a=e-1-t.padInfo.top,o=n-1-t.padInfo.left,l=i?1:2,u=i?2:3,c=i?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class KA{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,s=t.strideWidth,r=t.padInfo.front,i=t.padInfo.top,a=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${r};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${i};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${s} - ${a};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class YA{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,s=t.filterWidth,r=t.strideDepth,i=t.strideHeight,a=t.strideWidth,o=e-1-t.padInfo.front,l=n-1-t.padInfo.top,u=s-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${s}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${s} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const ZA={kernelName:Ut,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:i}=e,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=na(l),p=Hi(r.shape,c,a,1,o,u,!1,h),d=new HA(p);return n.runWebGLProgram(d,[r,i],"float32")}},QA={kernelName:Gt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:i}=e,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=na(u),p=Hi(a,i.shape,o,1,l,c,!1,h),d=new XA(p);return n.runWebGLProgram(d,[r,i],"float32")}},JA={kernelName:jt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i}=e,{strides:a,pad:o,dilations:l}=s,u=Xi(r.shape,i.shape,a,l,o),c=new WA(u);return n.runWebGLProgram(c,[r,i],"float32")}},tE={kernelName:Ht,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:i}=e,{strides:a,pad:o,filterShape:l}=s,u=Xi(r.shape,l,a,1,o),c=new KA(u);return n.runWebGLProgram(c,[r,i],"float32")}},eE={kernelName:Xt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:i}=e,{pad:a,strides:o,inputShape:l}=s,u=Xi(l,i.shape,o,1,a),c=new YA(u);return n.runWebGLProgram(c,[r,i],"float32")}},nE=QC({opSnippet:ZC+"\n  return cos(x);\n"}),sE={kernelName:Kt,backendName:"webgl",kernelFunc:nE},rE=QC({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),iE={kernelName:Yt,backendName:"webgl",kernelFunc:rE};class aE{constructor(t,e,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,o,l]=t,[u]=e,[c,h]=n;this.outputShape=[u,c,h,l];const p="bilinear"===s?1:0,[d,f]=[a-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(a-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[b,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const oE={kernelName:Qt,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:s}=t,{image:r,boxes:i,boxInd:a}=e,{cropSize:o,method:l,extrapolationValue:u}=s,c=new aE(r.shape,i.shape,o,l,u);return n.runWebGLProgram(c,[r,i,a],"float32")}};class lE{constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const s=t.length,r=e?"0.0":`getX(${uE(s,"coords")})`,i=t[t.length-1];let a="",o="";e?(a=n?"end != "+(i-1):"end != 0",o=n?"end + 1":"end - 1"):(a=n?`end + pow2 < ${i}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${DI(s)} coords = getOutputCoords();\n        int end = ${cE(s,"coords")};\n        float val = ${r};\n        int pow2 = int(pow(2.0, index));\n        if (${a}) {\n          int idx = ${o};\n          ${cE(s,"coords")} = idx;\n          val += getX(${uE(s,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.index&&(this.index=e.getUniformLocation(n,"index")),e.gl.uniform1f(this.index,t)}}}function uE(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}function cE(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.y`;if(3===t)return`${e}.z`;if(4===t)return`${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}const hE={kernelName:Zt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,exclusive:a,reverse:o}=s,l=r.shape.length,u=so([i],l);let c=r;null!=u&&(c=yN({inputs:{x:r},backend:n,attrs:{perm:u}}));const h=io(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${r.shape.length-1} but got axis=${i}`);const p=c.shape[h];let d=BC({inputs:{x:c},backend:n});for(let t=0;t<=Math.ceil(Math.log2(p))-1;t++){const e=new lE(c.shape,!1,o),s=e.getCustomSetupFunc(t),r=d;d=n.runWebGLProgram(e,[d],d.dtype,s),n.disposeIntermediateTensorInfo(r)}if(a){const t=new lE(c.shape,a,o),e=d;d=n.runWebGLProgram(t,[d],d.dtype),n.disposeIntermediateTensorInfo(e)}if(null!=u){const t=yN({inputs:{x:d},backend:n,attrs:{perm:ro(u)}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),t}return d}},pE={kernelName:Jt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,weights:i}=e,{size:a,binaryOutput:o}=s;if(1===r.shape.length){const t=n.readSync(r.dataId),e=n.readSync(i.dataId),s=zI(t,e,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,s)}if(2===r.shape.length){const t=n.bufferSync(r),e=n.bufferSync(i),s=PI(t,e,a,o);return n.makeTensorInfo(s.shape,i.dtype,s.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};class dE{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const fE={kernelName:te,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockSize:i,dataFormat:a}=s;E(i>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${i}`));const o=r.shape[0],l="NHWC"===a?r.shape[1]:r.shape[2],u="NHWC"===a?r.shape[2]:r.shape[3],c="NHWC"===a?r.shape[3]:r.shape[1],h=l*i,p=u*i,d=c/(i*i),f=new dE("NHWC"===a?[o,h,p,d]:[o,d,h,p],i,a);return n.runWebGLProgram(f,[r],r.dtype)}};class mE{constructor(t,e=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const i=t.inHeight,a=t.inWidth,o=t.padInfo.top,l=t.padInfo.left,u=t.strideHeight,c=t.strideWidth,h=t.dilationHeight,p=t.dilationWidth,d=t.filterHeight,f=t.filterWidth,m=t.outChannels/t.inChannels;let g="",y="";n&&(g=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,y="result = activation(result);");const b=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${h};\n\n          if (xR < 0 || xR >= ${i}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${p};\n\n            if (xC < 0 || xC >= ${a}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${b}\n        ${y}\n        setOutput(result);\n      }\n    `}}class gE{constructor(t,e=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const i=t.inHeight,a=t.inWidth,o=t.padInfo.top,l=t.padInfo.left,u=t.strideHeight,c=t.strideWidth,h=t.dilationHeight,p=t.dilationWidth,d=t.filterHeight,f=t.filterWidth,m=f;let g="int xR; int xC; int xCOffset;";for(let t=0;t<d;t++)for(let e=0;e<f;e++)g+=`\n          vec4 xTexelR${t}C${2*e} = vec4(0.);\n          vec4 wR${t}C${e} = vec4(0.);\n          vec4 xR${t}C${e} = vec4(0.);`;for(let t=0;t<d;t++)for(let e=0;e<m;e++){const n=2*e;if(g+=`\n          xR = xRCorner + ${t*h};\n          xC = xCCorner + ${n*p};\n        `,1===c){if(n<f&&(g+=l%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${i} && xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${a}) {\n                    xTexelR${t}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${i} && xCOffset >= 0 && xCOffset < ${a}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${a}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${t}C${n} = vec4(previous.zw, xTexelR${t}C${n}.xy);\n                } else {\n                  xR${t}C${n} = vec4(0, 0, xTexelR${t}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${i} && xC >= 0 && xC < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xR${t}C${n} = xTexelR${t}C${n};\n              `,n+1<f)){const e=l%2==0?A(p):p;p%2==0&&l%2==1||p%2!=0&&l%2!=1?(g+=`\n                  xCOffset = xC + ${l%2} + ${e};\n\n                  if(xR >= 0 && xR < ${i} &&\n                    xCOffset >= 0 && xCOffset < ${a}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,p>1&&(g+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${i} &&\n                      xCOffset >= 0 && xCOffset < ${a}) {\n                      xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${t}C${n} = vec4(0.);\n                    }\n                  `),g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.xy);\n                `):g+=`\n                  xCOffset = xC + ${e};\n\n                  if(xR >= 0 && xR < ${i} &&\n                    xCOffset >= 0 && xCOffset < ${a}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${t}C${n+1} = xTexelR${t}C${n+2};\n                `}}else n<f&&(g+=`\n              if(xR >= 0 && xR < ${i}) {\n            `,l%2==1?(g+=`\n                xCOffset = xC + 1 - ${c};\n                if(xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${a}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n              `,n+1<f&&(g+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${c};\n                  if(xCOffset >= 0 && xCOffset < ${a}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${t}C${n+1} = vec4(xTexelR${t}C${n+2}.xy, final.xy);\n                `)):(g+=`\n                if(xC >= 0 && xC < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${c};\n                if(xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.xy, xTexelR${t}C${n+2}.xy);\n              `,n+1<f&&(g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n                `)),g+="}");n<f&&(g+=`\n            vec4 wTexelR${t}C${n} = getW(${t}, ${n}, d1, q);\n            wR${t}C${n} = vec4(wTexelR${t}C${n}.xz, wTexelR${t}C${n}.xz);\n          `,n+1<f&&(g+=`\n              vec4 wTexelR${t}C${n+1} = getW(${t}, ${n+1}, d1, q);\n              wR${t}C${n+1} =\n                vec4(wTexelR${t}C${n+1}.xz, wTexelR${t}C${n+1}.xz);`))}for(let t=0;t<d;t++)for(let e=0;e<f;e++)g+=`dotProd += xR${t}C${e} * wR${t}C${e};`;let y="",b="";n&&(y=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,b="result = activation(result);");const x=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${g}\n\n        vec4 result = dotProd;\n        ${x}\n        ${b}\n        setOutput(result);\n      }\n    `}}const yE={kernelName:ee,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i}=e,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=s;let c=l;null==c&&(c=[1,1]),E(ea(a,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`));const h=Hi(r.shape,i.shape,a,c,o,u,!0);let p;return p=ht().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new gE(h):new mE(h),n.runWebGLProgram(p,[r,i],"float32")}};class bE{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,s=t.padInfo.top,r=t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${i} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${s};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class xE{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,s=t.strideHeight,r=t.strideWidth,i=e-1-t.padInfo.top,a=n-1-t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const vE={kernelName:ne,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s,h=Hi(r.shape,c,a,o,l,u,!0),p=new bE(h);return n.runWebGLProgram(p,[r,i],"float32")}},wE={kernelName:se,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s,h=Hi(c,i.shape,a,o,l,u,!0),p=new xE(h);return n.runWebGLProgram(p,[r,i],"float32")}};class _E{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const kE={kernelName:re,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s}=e,r=[...s.shape,...s.shape],i=O(s.shape),a=oN({inputs:{x:s},backend:n,attrs:{shape:[i]}}),o=new _E(i),l=n.runWebGLProgram(o,[a],a.dtype),u=oN({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),u}};class TE{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:n,padInfo:s,strideHeight:r,strideWidth:i,filterHeight:a,filterWidth:o,dilationHeight:l,dilationWidth:u}=t,{top:c,left:h}=s;this.userCode=`\n      const ivec2 strides = ivec2(${r}, ${i});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${a}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${e}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const SE={kernelName:ie,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i}=e,{strides:a,pad:o,dilations:l}=s,u=Ui(r.shape,i.shape,a,o,"NHWC",l);let c;const h=new TE(u);c=n.runWebGLProgram(h,[r,i],"float32");const p=oN({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),p}},IE=QC({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),CE={kernelName:ue,backendName:"webgl",kernelFunc:IE},NE={kernelName:ce,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n}=t,{dy:s,y:r}=e,i=ht().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new VC("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",s.shape,r.shape):new zC("return (b >= 1.0) ? a : a * (b + 1.0);",s.shape,r.shape);return n.runWebGLProgram(i,[s,r],s.dtype)}},AE=JC({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),EE={kernelName:pe,backendName:"webgl",kernelFunc:AE},$E=QC({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Tu};\n  float a1 = ${Su};\n  float a2 = ${Iu};\n  float a3 = ${Cu};\n  float a4 = ${Nu};\n  float a5 = ${Au};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),RE={kernelName:he,backendName:"webgl",kernelFunc:$E},DE="return exp(x);",OE=QC({opSnippet:DE,packedOpSnippet:DE,cpuKernelImpl:WI}),FE={kernelName:de,backendName:"webgl",kernelFunc:OE};function ME(t){const{inputs:e,attrs:n,backend:s}=t,{dim:r}=n,{input:i}=e,a=i.shape.length,o=i.shape.slice();let l=r;return r<0&&(E(-(a+1)<=r,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),l=a+r+1),o.splice(l,0,1),oN({inputs:{x:i},backend:s,attrs:{shape:o}})}const LE={kernelName:fe,backendName:"webgl",kernelFunc:ME},zE="return exp(x) - 1.0;",PE=QC({opSnippet:zE,packedOpSnippet:zE,cpuKernelImpl:qI}),VE={kernelName:me,backendName:"webgl",kernelFunc:PE};class BE{constructor(t,e,n){this.variableNames=["real","imag"];const s=e[1];this.outputShape=e;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${s}.0`:"1.0";let a;if("real"===t)a="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${r};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${s});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${s}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function WE(t,e,n){const s=n.texData.get(t.dataId),r=O(t.shape),i=t.shape[t.shape.length-1],a=oN({inputs:{x:t},backend:n,attrs:{shape:[r/i,i]}}),o=a.shape,l=new BE("real",o,e),u=new BE("imag",o,e),c=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:o},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),p=n.runWebGLProgram(u,c,"float32"),d=qC({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const f=oN({inputs:{x:d},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(d),f}const qE={kernelName:ge,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:s}=e;return WE(s,!1,n)}};class UE{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}function GE(t){const{backend:e,attrs:n}=t,{shape:s,value:r}=n;let{dtype:i}=n;if(i=i||Y(r),"string"===i){const t=U(i,O(s));return t.fill(r),e.makeTensorInfo(s,i,t)}{const t=new UE(s,r),n=t.getCustomSetupFunc(r);return e.runWebGLProgram(t,[],i,n)}}const jE={kernelName:ye,backendName:"webgl",kernelFunc:GE};class HE{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const XE={kernelName:be,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,s=e,r=new HE(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},KE="return floor(x);",YE=QC({opSnippet:KE,packedOpSnippet:KE,cpuKernelImpl:UI}),ZE={kernelName:xe,backendName:"webgl",kernelFunc:YE},QE=JC({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),JE={kernelName:ve,backendName:"webgl",kernelFunc:QE};class t${constructor(t){this.variableNames=["A"];const e=aI(),[n,s]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class e${constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=aI(),[n,s]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${s}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const n$={kernelName:is,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t;let{pixels:r}=e;const{numChannels:i}=s,a="undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,[l,u]=a?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,l],h=[u,l,i];(o||a)&&(null==s$&&(s$=document.createElement("canvas").getContext("2d")),s$.canvas.width=l,s$.canvas.height=u,s$.drawImage(r,0,0,l,u),r=s$.canvas);const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=$S.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),r);const d=ht().getBool("WEBGL_PACK")?new e$(h):new t$(h),f=n.runWebGLProgram(d,[p],"int32");return n.disposeData(p.dataId),f}};let s$;const r$={kernelName:ls,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s,m=na(c),g=Hi(r.shape,i.shape,l,h,u,p,!1,m);let y;const b=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(ht().getBool("WEBGL_CONV_IM2COL")&&1===r.shape[0])y=GA({x:r,filter:i,convInfo:g,backend:n,bias:a,activation:d,preluActivationWeights:o,leakyreluAlpha:f});else{const t=null!=a,e=null!=o,s="leakyrelu"===d,l=d?tN(d,!1):null,u=new BA(g,t,l,e,s),c=[r,i];if(a&&c.push(a),o&&c.push(o),s){const t=n.makeTensorInfo([],"float32",bs(f,"float32"));c.push(t),b.push(t)}y=n.runWebGLProgram(u,c,"float32")}else y=UA({x:r,filter:i,convInfo:g,backend:n,bias:a,activation:d,preluActivationWeights:o,leakyreluAlpha:f});const x=oN({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((t=>n.disposeIntermediateTensorInfo(t))),x}},i$={kernelName:us,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:p,leakyreluAlpha:d}=s,f=[];let m=c;null==m&&(m=[1,1]),E(ea(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const g=Hi(r.shape,i.shape,l,m,u,h,!0),y=ht().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=p?tN(p,y):null,x=[r,i],v=null!=a,w=null!=o,_="leakyrelu"===p;if(v&&x.push(a),w&&x.push(o),_){const t=n.makeTensorInfo([],"float32",bs(d,"float32"));x.push(t),f.push(t)}let k;k=y?new gE(g,v,b,w,_):new mE(g,v,b,w,_);const T=n.runWebGLProgram(k,x,"float32");return f.forEach((t=>n.disposeIntermediateTensorInfo(t))),T}};class a${constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const s=DI(e.length),r=DI(n.length),i=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${s} strides = ${s}(${this.strides});\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${i};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const o$={kernelName:ke,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:s,indices:r}=e,i=r.shape,a=i[i.length-1],[o,l,u,c]=bu(s,r),h=oN({inputs:{x:r},backend:n,attrs:{shape:[l,a]}}),p=oN({inputs:{x:s},backend:n,attrs:{shape:[O(s.shape)/u,u]}}),d=new a$(a,c,[l,u]),f=n.runWebGLProgram(d,[p,h],p.dtype),m=oN({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};class l${constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const n=DI(this.rank),s=function(t,e){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let e=0;e<t.length;e++)2===e?s.push("int(getIndices(resRC.x, resRC.z))"):s.push(`${n[e]}`);return s.join()}(t);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}const u$={kernelName:_e,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,indices:i}=e,{axis:a,batchDims:o}=s,l=qu(r,i,B(a,r.shape)[0],o),u=O(i.shape),c=[],h=oN({inputs:{x:r},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=oN({inputs:{x:i},backend:n,attrs:{shape:[l.batchSize,u/l.batchSize]}});c.push(h),c.push(p);const d=[l.batchSize,l.outerSize,u/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([r,i])||"string"===r.dtype){const t=n.bufferSync(p),e=n.bufferSync(h),s=GI(e,t,d);return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(l.outputShape,s.dtype,s.values)}const f=new l$(h.shape,d),m=n.runWebGLProgram(f,[h,p],h.dtype);c.push(m);const g=oN({inputs:{x:m},backend:n,attrs:{shape:l.outputShape}});return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),g}},c$=JC({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:jI,dtype:"bool"}),h$={kernelName:Te,backendName:"webgl",kernelFunc:c$},p$=JC({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),d$={kernelName:Se,backendName:"webgl",kernelFunc:p$},f$={kernelName:Ce,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:s}=e;return WE(s,!0,n)}},m$=QC({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),g$={kernelName:Ae,backendName:"webgl",kernelFunc:m$},y$=QC({opSnippet:"return float(isinf(x));",dtype:"bool"}),b$={kernelName:Ee,backendName:"webgl",kernelFunc:y$},x$=QC({opSnippet:"return float(isnan(x));",dtype:"bool"}),v$={kernelName:$e,backendName:"webgl",kernelFunc:x$},w$=JC({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:HI,dtype:"bool"}),_$={kernelName:De,backendName:"webgl",kernelFunc:w$},k$=JC({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),T$={kernelName:Oe,backendName:"webgl",kernelFunc:k$},S$={kernelName:Fe,backendName:"webgl",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:s,stop:r,num:i}=n,a=XI(s,r,i);return e.makeTensorInfo([a.length],"float32",a)}},I$=QC({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:KI}),C$={kernelName:Me,backendName:"webgl",kernelFunc:I$},N$=QC({opSnippet:"return log(1.0 + x);"}),A$={kernelName:Le,backendName:"webgl",kernelFunc:N$},E$=JC({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),$$={kernelName:ze,backendName:"webgl",kernelFunc:E$},R$=QC({opSnippet:"return float(!(x >= 1.0));"}),D$={kernelName:Pe,backendName:"webgl",kernelFunc:R$},O$=JC({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),F$={kernelName:Ve,backendName:"webgl",kernelFunc:O$};class M${constructor(t,e,n,s,r){this.variableNames=["x"],this.outputShape=[];const i=e,a=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${a}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class L${constructor(t,e,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=e,a=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const z$={kernelName:Be,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{depthRadius:i,bias:a,alpha:o,beta:l}=s,u=ht().getBool("WEBGL_PACK_NORMALIZATION")?new L$(r.shape,i,a,o,l):new M$(r.shape,i,a,o,l);return n.runWebGLProgram(u,[r],r.dtype)}};class P${constructor(t,e,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${s}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${s})\n                * float(${r})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const V$={kernelName:We,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r,y:i,dy:a}=e,{depthRadius:o,bias:l,alpha:u,beta:c}=s,h=new P$(r.shape,o,l,u,c);return n.runWebGLProgram(h,[r,i,a],r.dtype)}};function B$(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{reductionIndices:i,keepDims:a}=s,o=r.shape.length,l=B(i,r.shape);let u=l;const c=so(u,o),h=null!=c,p=n.shouldExecuteOnCPU([r]);let d=r;if(h){if(p){const t=n.texData.get(d.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=r.shape[c[t]];const s=cC(t,r.shape,r.dtype,c,e);d=n.makeTensorInfo(e,r.dtype),n.texData.get(d.dataId).values=s}else d=fN(r,c,n);u=io(u.length,o)}no("max",u,o);const[f,m]=to(d.shape,u);let g,y=f;if(a&&(y=eo(f,l)),p){const t=n.texData.get(d.dataId).values,e=YI(t,O(m),y,r.dtype);g=n.makeTensorInfo(y,r.dtype),n.texData.get(g.dataId).values=e}else g=function(t,e,n,s){const r=O(e),i=oN({inputs:{x:t},attrs:{shape:[O(t.shape)/r,r]},backend:s}),a=hN(i,t.dtype,"max",s),o=oN({inputs:{x:a},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(a),o}(d,m,y,n);return h&&n.disposeIntermediateTensorInfo(d),g}const W$={kernelName:qe,backendName:"webgl",kernelFunc:B$},q$=JC({opSnippet:LC+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+PC+"\n  return result;\n",cpuKernelImpl:ZI}),U$={kernelName:Ue,backendName:"webgl",kernelFunc:q$},G$={kernelName:Ge,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;rI(r,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s;E(ea(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Gi(r.shape,i,a,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&F(u.inShape,u.outShape))return BC({inputs:{x:r},backend:n});const c=new JN(u,"max",!1);return n.runWebGLProgram(c,[r],r.dtype)}},j$={kernelName:He,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:i,strides:a,pad:o,dataFormat:l,dimRoundingMode:u}=s,c=ji(r.shape,i,a,[1,1,1],o,u,l),h=new tA(c,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};class H${constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,s=t.dilationHeight,r=t.effectiveFilterHeight,i=t.effectiveFilterWidth,a=r-1-t.padInfo.top,o=i-1-t.padInfo.left,l=r*i-1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class X${constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,s=t.strideWidth,r=t.dilationDepth,i=t.dilationHeight,a=t.dilationWidth,o=t.effectiveFilterDepth,l=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=o-1-t.padInfo.front,h=l-1-t.padInfo.top,p=u-1-t.padInfo.left,d=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${i}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${a}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const K$={kernelName:Xe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i}=e,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=ji(a.shape,o,l,[1,1,1],u,c),p=new tA(h,"max",!0),d=n.runWebGLProgram(p,[a],a.dtype),f=new X$(h),m=n.runWebGLProgram(f,[r,d],a.dtype);return n.disposeIntermediateTensorInfo(d),m}},Y$={kernelName:je,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i,output:a}=e,o=i;rI([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,p=Gi(o.shape,l,u,1,c,h),d=new JN(p,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),m=new H$(p),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},Z$={kernelName:Ke,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{filterSize:r,strides:i,pad:a,includeBatchInIndex:o}=e,l=n;E(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const u=[1,1];E(ea(i,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`));const c=Gi(s.shape,r,i,u,a),[h,p]=function(t,e,n,s){let r=new JN(n,"max",!1);const i=s.runWebGLProgram(r,[t],"float32");return r=new JN(n,"max",!0,!0,e),[i,s.runWebGLProgram(r,[t],"float32")]}(s,o,c,l);return[h,p]}},Q$={kernelName:Ye,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{keepDims:r,axis:i}=e,a=n,o=s.shape.length,l=B(i,s.shape);let u=l;const c=so(u,o),h=null!=c,p=a.shouldExecuteOnCPU([s]),d=[];let f=s;if(h){if(p){const t=a.texData.get(f.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=s.shape[c[t]];const n=cC(t,s.shape,s.dtype,c,e);f=a.makeTensorInfo(e,s.dtype),a.texData.get(f.dataId).values=n}else f=fN(s,c,a);d.push(f),u=io(u.length,o)}no("sum",u,o);const[m,g]=to(f.shape,u);let y=m;r&&(y=eo(m,l));const b=function(t,e,n,s){const r=O(e),i=oN({inputs:{x:t},attrs:{shape:[O(t.shape)/r,r]},backend:s}),a=hN(i,"float32","mean",s),o=oN({inputs:{x:a},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(a),o}(f,g,y,a);for(const t of d)a.disposeIntermediateTensorInfo(t);return b}},J$={kernelName:Ze,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s,o=r.shape.length,l=B(i,r.shape);let u=l;const c=so(u,o);let h=r;null!=c&&(h=yN({inputs:{x:r},backend:n,attrs:{perm:c}}),u=io(u.length,r.shape.length)),no("min",u,o);const[p,d]=to(h.shape,u),f=oN({inputs:{x:h},backend:n,attrs:{shape:[-1,O(d)]}}),m=hN(f,f.dtype,"min",n);let g;return g=oN(a?{inputs:{x:m},backend:n,attrs:{shape:eo(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},tR=JC({opSnippet:LC+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+PC+"\n  return result;\n",cpuKernelImpl:QI}),eR={kernelName:Qe,backendName:"webgl",kernelFunc:tR};class nR{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const s=t.length,r=DI(s),i=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l="reflect"===n?0:1;this.userCode=1!==s?`\n      ${r} start = ${r}(${i});\n      ${r} end = ${r}(${a});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        for (int i = 0; i < ${s}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${r} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class sR{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const s=t.length,r=DI(s),i=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=dC("rc",s),l=dC("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===s){const t=`\n        ${r} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${r} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${t}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const t=`\n        ${r} source = rc;\n        ${r} lt = ${r}(lessThan(source, start));\n        ${r} gte = ${r}(greaterThanEqual(source, end));\n        ${r} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${r} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${t}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[s-2]} += 1;\n        if(${o[s-2]} < ${this.outputShape[s-2]}) {\n          ${t}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[s-1]} += 1;\n          if(${u}) {\n            ${t}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${r} start = ${r}(${i});\n      const ${r} end = ${r}(${a});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const rR={kernelName:Je,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s}=t,{paddings:r,mode:i}=n,a=ht().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new sR(s.shape,r,i):new nR(s.shape,r,i);return e.runWebGLProgram(a,[s],s.dtype)}},iR=JC({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  "+PC+"\n  return result;\n"}),aR={kernelName:tn,backendName:"webgl",kernelFunc:iR};class oR{constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}const lR=JC({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),uR={kernelName:le,backendName:"webgl",kernelFunc:lR},cR="return a - b;",hR=JC({opSnippet:cR,packedOpSnippet:cR,supportsComplex:!0,cpuKernelImpl:oC}),pR={kernelName:Gn,backendName:"webgl",kernelFunc:hR};function dR(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{dim:i}=s,a=B([i],r.shape),o=B$({inputs:{x:r},backend:n,attrs:{reductionIndices:a,keepDims:!1}}),l=eo(o.shape,a),u=oN({inputs:{x:o},backend:n,attrs:{shape:l}}),c=hR({inputs:{a:r,b:u},backend:n}),h=OE({inputs:{x:c},backend:n}),p=mN({inputs:{x:h},backend:n,attrs:{axis:a,keepDims:!1}}),d=oN({inputs:{x:p},backend:n,attrs:{shape:l}}),f=lR({inputs:{a:h,b:d},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),f}const fR={kernelName:Wn,backendName:"webgl",kernelFunc:dR},mR={kernelName:en,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{numSamples:i,seed:a,normalized:o}=s,l=o?r:dR({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new oR(u,c,i),p=h.getCustomSetupFunc(a),d=n.runWebGLProgram(h,[l],"int32",p);return o||n.disposeIntermediateTensorInfo(l),d}},gR="return -x;",yR={kernelName:sn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s}=e;if(n.shouldExecuteOnCPU([s])){const t=n.texData.get(s.dataId),[e,r]=tC(t.values,s.shape,s.dtype);return n.makeTensorInfo(r,s.dtype,e)}let r;return r=ht().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new RC(s.shape,gR):new vC(s.shape,gR),n.runWebGLProgram(r,[s],s.dtype)}},bR=kl,xR={kernelName:an,backendName:"webgl",kernelFunc:function(t){Eu("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=s,u=n.readSync(r.dataId),c=n.readSync(i.dataId),{selectedIndices:h}=bR(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},vR=Tl,wR={kernelName:on,backendName:"webgl",kernelFunc:function(t){Eu("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s,c=n.readSync(r.dataId),h=n.readSync(i.dataId),{selectedIndices:p,validOutputs:d}=vR(c,h,a,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},_R=Sl,kR={kernelName:ln,backendName:"webgl",kernelFunc:function(t){Eu("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(r.dataId),h=n.readSync(i.dataId),p=a,d=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=_R(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class TR{constructor(t,e,n,s){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${s}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const SR={kernelName:cn,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:s}=t,{indices:r}=e,{depth:i,onValue:a,offValue:o}=s,l=O(r.shape),u=new TR(l,i,a,o),c=oN({inputs:{x:r},backend:n,attrs:{shape:[l]}}),h=n.runWebGLProgram(u,[c],r.dtype);n.disposeIntermediateTensorInfo(c);const p=oN({inputs:{x:h},backend:n,attrs:{shape:[...r.shape,i]}});return n.disposeIntermediateTensorInfo(h),p}};function IR(t){const{inputs:e,backend:n}=t,{x:s}=e;if("complex64"===s.dtype){const t=vA({inputs:{input:s},backend:n}),e=IR({inputs:{x:t},backend:n}),r=FA({inputs:{input:s},backend:n}),i=IR({inputs:{x:r},backend:n}),a=qC({inputs:{real:e,imag:i},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),a}return GE({attrs:{shape:s.shape,dtype:s.dtype,value:"string"===s.dtype?"":0},backend:n})}const CR={kernelName:ss,backendName:"webgl",kernelFunc:IR},NR={kernelName:un,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:s}=e,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const e=vA({inputs:{input:r},backend:s}),n=t({inputs:{x:e},backend:s}),i=FA({inputs:{input:r},backend:s}),a=IR({inputs:{x:i},backend:s}),o=qC({inputs:{real:n,imag:a},backend:s});return s.disposeIntermediateTensorInfo(e),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(a),o}return GE({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:s})}},AR={kernelName:hn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s;if(1===e.length)return ME({inputs:{input:e[0]},backend:n,attrs:{dim:r}});const i=e[0].shape,a=e[0].dtype;e.forEach((t=>{$(i,t.shape,"All tensors passed to stack must have matching shapes"),E(a===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=e.map((t=>{const e=ME({inputs:{input:t},backend:n,attrs:{dim:r}});return o.push(e),e})),u=PA({inputs:l,backend:n,attrs:{axis:r}});return o.forEach((t=>n.disposeIntermediateTensorInfo(t))),u}};class ER{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const s=t.length,r=DI(s),i=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);this.userCode=1!==s?`\n      ${r} start = ${r}(${i});\n      ${r} end = ${r}(${a});\n      uniform float value;\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n        uniform float value;\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}class $R{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const s=t.length,r=DI(s),i=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=dC("rc",s),l=dC("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h=[`${r} rc = outputLoc;`,`${o[s-1]} += 1;\n       if(${u}) {\n      `,1===s?"":`}\n       rc = outputLoc;\n       ${o[s-2]} += 1;\n       if(${o[s-2]} < ${this.outputShape[s-2]}) {`,1===s?"":`  ${o[s-1]} += 1;\n         if(${u}) {`],p=1===s?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let t=0,e=1===s?2:4;t<e;t++)d+=`\n        ${h[t]}\n        if (${p}) {\n          result[${t}] = float(value);\n        } else {\n          ${r} source = rc - start;\n          result[${t}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;d+=1===s?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${i});\n      const ${r} end = ${r}(${a});\n      uniform float value;\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}const RR=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{paddings:i,constantValue:a}=s,o=ht().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $R(r.shape,i,a):new ER(r.shape,i,a),l=o.getCustomSetupFunc(a);return n.runWebGLProgram(o,[r],r.dtype,l)},DR={kernelName:pn,backendName:"webgl",kernelFunc:RR},OR=JC({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  "+PC+"\n  return result;\n"}),FR={kernelName:dn,backendName:"webgl",kernelFunc:OR},MR={kernelName:mn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s,o=r.shape.length,l=[],u=B(i,r.shape);let c=u;const h=so(c,o);let p,d=r;if(null!=h&&(d=yN({inputs:{x:r},backend:n,attrs:{perm:h}}),c=io(c.length,o),l.push(d)),no("prod",c,o),n.shouldExecuteOnCPU([d])){const t=n.texData.get(d.dataId).values,{outVals:e,outShape:s,outDtype:r}=eC(d.shape,d.dtype,t,c);p=n.makeTensorInfo(s,r,e)}else{const[t,e]=to(d.shape,c),s=O(e),i=oN({inputs:{x:d},backend:n,attrs:{shape:[-1,s]}}),a=hN(i,Xs(r.dtype),"prod",n);p=oN({inputs:{x:a},backend:n,attrs:{shape:t}}),l.push(i),l.push(a)}if(a){l.push(p);const t=eo(p.shape,u);p=oN({inputs:{x:p},backend:n,attrs:{shape:t}})}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),p}},LR=t=>{const{backend:e,attrs:n}=t,{start:s,stop:r,step:i,dtype:a}=n,o=nC(s,r,i,a);return e.makeTensorInfo([o.length],a,o)},zR={kernelName:gn,backendName:"webgl",kernelFunc:LR},PR=QC({opSnippet:"return 1.0 / x;"}),VR={kernelName:bn,backendName:"webgl",kernelFunc:PR},BR=QC({opSnippet:wC+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),WR={kernelName:xn,backendName:"webgl",kernelFunc:BR},qR=QC({opSnippet:wC+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),UR={kernelName:Sn,backendName:"webgl",kernelFunc:qR};class GR{constructor(t,e,n,s,r){this.variableNames=["A"],this.outputShape=[];const[i,a,o,l]=t;this.outputShape=[i,e,n,l];const u=[s&&e>1?a-1:a,s&&n>1?o-1:o],c=[s&&e>1?e-1:e,s&&n>1?n-1:n];let h;h=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class jR{constructor(t,e,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,o,l]=t;this.outputShape=[i,e,n,l];const u=[s&&e>1?a-1:a,s&&n>1?o-1:o],c=[s&&e>1?e-1:e,s&&n>1?n-1:n];let h;h=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const HR={kernelName:kn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:i,halfPixelCenters:a,size:o}=s,[l,u]=o,c=ht().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new jR(r.shape,l,u,i,a):new GR(r.shape,l,u,i,a);return n.runWebGLProgram(c,[r],"float32")}};class XR{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,s,r]=e,[,i,a]=t,o=[n&&i>1?s-1:s,n&&a>1?r-1:r],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const KR={kernelName:Tn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:i}=e,{alignCorners:a}=s,o=new XR(i.shape,r.shape,a);return n.runWebGLProgram(o,[i],i.dtype)}};class YR{constructor(t,e,n,s,r){this.variableNames=["A"],this.outputShape=[];const[i,a,o,l]=t;this.outputShape=[i,e,n,l];const u=[s&&e>1?a-1:a,s&&n>1?o-1:o],c=[s&&e>1?e-1:e,s&&n>1?n-1:n],h=s?"0.5":"0.0";let p;p=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}const ZR={kernelName:wn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:i,halfPixelCenters:a,size:o}=s,[l,u]=o,c=new YR(r.shape,l,u,i,a);return n.runWebGLProgram(c,[r],r.dtype)}};class QR{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,s,r]=e,[,i,a]=t,o=[n&&i>1?s-1:s,n&&a>1?r-1:r],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const JR={kernelName:_n,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:i}=e,{alignCorners:a}=s,o=new QR(i.shape,r.shape,a);return n.runWebGLProgram(o,[i],i.dtype)}};class tD{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const s=t.map(((n,s)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(s))).join(","),r=DI(n);this.userCode=`\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}class eD{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const s=dC("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,a=DI(n);function o(n){const s=t.map(((s,r)=>function(n,s){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${s[n]} - 1`:`${s[n]}`}(r,n)));return`getChannel(getX(${s.join(",")}), vec2(${s.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${a} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return o(t)}(s.slice())};\n          if(${r}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",o(t)}(s.slice())};\n          }\n          if(${i}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",o(t)}(s.slice())};\n            if(${r}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",o(t)}(s.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const nD={kernelName:In,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{dims:i}=s,a=r.shape.length,o=B(i,r.shape);if(0===a)return BC({inputs:{x:r},backend:n});const l=ht().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new eD(r.shape,o):new tD(r.shape,o);return n.runWebGLProgram(l,[r],r.dtype)}};class sD{constructor(t,e){this.variableNames=["Image"],this.outputShape=[];const n=t[1],s=t[2];this.outputShape=t;let r="";r="number"==typeof e?`float outputValue = ${e.toFixed(2)};`:`\n        vec3 fill = vec3(${e.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        uniform vec4 params;\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${r}\n          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}getCustomSetupFunc(t,e,n,s){return(r,i)=>{null==this.paramsLoc&&(this.paramsLoc=r.getUniformLocationNoThrow(i,"params")),r.gl.uniform4f(this.paramsLoc,t,e,n,s)}}}const rD={kernelName:as,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,{radians:r,fillValue:i,center:a}=e,o=n,l=new sD(s.shape,i),[u,c]=pu(a,s.shape[1],s.shape[2]),h=l.getCustomSetupFunc(u,c,Math.sin(r),Math.cos(r));return o.runWebGLProgram(l,[s],s.dtype,h)}},iD=QC({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),aD={kernelName:Cn,backendName:"webgl",kernelFunc:iD},oD=QC({opSnippet:"return inversesqrt(x);",cpuKernelImpl:sC}),lD={kernelName:Nn,backendName:"webgl",kernelFunc:oD};class uD{constructor(t,e,n,s,r,i,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const o=DI(r.length),l=DI(i.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===s?h="i":2===s&&(h="i, coords[1]");const p=`getUpdates(${h})`,d=e>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${r});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const cD={kernelName:An,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{indices:r,updates:i}=e,{shape:a}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=wu(0,r,a),p=[h/u,u];if(0===h)return n.makeTensorInfo(a,r.dtype);const d=oN({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),f=oN({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new uD(l,o,d.shape.length,f.shape.length,c,p),y=n.runWebGLProgram(g,[f,d,m],f.dtype),b=oN({inputs:{x:y},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class hD{constructor(t,e,n){let s,r;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",s="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],a=[];for(let s=0;s<e.length;s++)a.push(`${n[s]}`),s<t&&i.push(`${n[s]}`);s=i.join(),r=a.join()}const i=DI(n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${s});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}}const pD={kernelName:En,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:s,t:r,e:i}=e,a=new hD(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(a,[s,r,i],Hs(r.dtype,i.dtype))}},dD=QC({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${_u};\n  float scale = ${ku};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),fD={kernelName:$n,backendName:"webgl",kernelFunc:dD},mD=QC({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),gD={kernelName:Mn,backendName:"webgl",kernelFunc:mD},yD=QC({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),bD={kernelName:Fn,backendName:"webgl",kernelFunc:yD},xD=QC({opSnippet:ZC+"\n  return sin(x);\n"}),vD={kernelName:Dn,backendName:"webgl",kernelFunc:xD},wD=QC({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),_D={kernelName:On,backendName:"webgl",kernelFunc:wD},kD=QC({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),TD={kernelName:Ln,backendName:"webgl",kernelFunc:kD},SD={kernelName:Vn,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:i,paddings:a}=s;E(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((t,e)=>t*e)),l=[[0,0]];l.push(...a);for(let t=1+i.length;t<r.shape.length;++t)l.push([0,0]);const u=[],c=RR({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),h=du(c.shape,i,o,!1),p=fu(h.length,i.length,!1),d=mu(c.shape,i,o,!1),f=oN({inputs:{x:c},backend:n,attrs:{shape:h}}),m=yN({inputs:{x:f},backend:n,attrs:{perm:p}}),g=oN({inputs:{x:m},backend:n,attrs:{shape:d}});return u.push(c),u.push(f),u.push(m),u.forEach((t=>n.disposeIntermediateTensorInfo(t))),g}},ID={kernelName:jn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{sparseIndices:r,sparseValues:i,defaultValue:a}=e,{outputShape:o}=s,{sliceRank:l,numUpdates:u,strides:c,outputSize:h}=wu(0,r,o),p=new uD(u,l,r.shape.length,i.shape.length,c,[h,1],!1),d=n.runWebGLProgram(p,[i,r,a],i.dtype),f=oN({inputs:{x:d},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(d),f}},CD={kernelName:Bn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{numOrSizeSplits:i,axis:a}=s,o=B(a,r.shape)[0],l=Vu(r,i,o),u=r.shape.length,c=new Array(u).fill(0),h=r.shape.slice();return l.map((t=>{const e=[...h];e[o]=t;const s=fA({inputs:{x:r},backend:n,attrs:{begin:c,size:e}});return c[o]+=t,s}))}},ND=QC({opSnippet:"return sqrt(x);"}),AD={kernelName:zn,backendName:"webgl",kernelFunc:ND},ED={kernelName:Un,backendName:"webgl",kernelFunc:QC({opSnippet:"return x * x;"})},$D="return (a - b) * (a - b);",RD=JC({opSnippet:$D,packedOpSnippet:$D}),DD={kernelName:qn,backendName:"webgl",kernelFunc:RD},OD={kernelName:rs,backendName:"webgl",kernelFunc:function({inputs:t,attrs:e,backend:n}){const{x:s}=t,r=wC+`\n    return x > 0.0 ? 1.0 : float(${e.alpha});\n  `,i=new vC(s.shape,r);return n.runWebGLProgram(i,[s],s.dtype)}};class FD{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const s=n.length,r=DI(n.length),i=DI(n.length);let a="";if(1===s)a="coords * strides + begin";else{let t=0;a=n.map(((e,s)=>(t++,1===n.length?`coords * strides[${s}] + begin[${s}]`:`coords[${t-1}] * strides[${s}] + begin[${s}]`))).join(",")}this.userCode=`\n      ${r} begin = ${r}(${t});\n      ${r} strides = ${r}(${e});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}const MD={kernelName:Hn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=s,{nonStrided:d,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=Si(r.shape,i,a,o,l,u,c,h,p),x=oN({inputs:{x:r},backend:n,attrs:{shape:y}});let v;if(d){const t=fA({inputs:{x},backend:n,attrs:{begin:f,size:g}});v=oN({inputs:{x:t},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(t)}else if(b.some((t=>0===t)))v=n.makeTensorInfo(b,r.dtype,[]);else if(n.shouldExecuteOnCPU([x])){const t=n.texData.get(x.dataId).values,e=Yr(x.shape,x.dtype,t),s=aC(b,e,m,f);v=n.makeTensorInfo(b,x.dtype,s.values)}else{const t=new FD(f,m,b);v=n.runWebGLProgram(t,[x],x.dtype)}const w=oN({inputs:{x:v},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),w}},LD=QC({opSnippet:"return tan(x);"}),zD={kernelName:Xn,backendName:"webgl",kernelFunc:LD},PD=QC({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),VD={kernelName:Kn,backendName:"webgl",kernelFunc:PD};class BD{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[s]*e[s];this.outputShape=n,this.rank=n.length;const s=DI(this.rank),r=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let e=0;e<t.length;e++)s.push(`imod(${n[e]}, ${t[e]})`);return s.join()}(t);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function WD(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{reps:i}=s;if("string"===r.dtype){const t=n.readSync(r.dataId).map((t=>_s(t))),e=Yr(r.shape,r.dtype,t),s=lC(e,i);return n.makeTensorInfo(s.shape,s.dtype,s.values)}const a=new BD(r.shape,i);return n.runWebGLProgram(a,[r],r.dtype)}const qD={kernelName:Yn,backendName:"webgl",kernelFunc:WD},UD={kernelName:Zn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{k:i,sorted:a}=s,o=n.readSync(r.dataId),[l,u]=uC(o,r.shape,r.dtype,i,a);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};class GD{constructor(t,e,n,s,r,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const a="nearest"===n?1:2;let o;switch(s){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${r});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${r});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${e}));\n                float mapY = mapCoord(inY, float(${t}));\n\n                if (${a} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const jD={kernelName:Qn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{image:r,transforms:i}=e,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=s,[c,h,p,d]=r.shape,[f,m]=null!=u?u:[h,p],g=new GD(h,p,a,o,l,[c,f,m,d]);return n.runWebGLProgram(g,[r,i],"float32")}},HD={kernelName:ts,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:s}=t,{axis:r}=n,{x:i}=e;rI(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=s.readSync(i.dataId),{outputValues:o,outputShape:l,indices:u}=hC(a,r,i.shape,i.dtype);return[s.makeTensorInfo(l,i.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}},XD={kernelName:es,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{value:r}=e;let{axis:i}=s;i<0&&(i+=r.shape.length);const a=r,o=a.shape.length,l=r.shape[i],u=new Array(o-1);let c=0;for(let t=0;t<o;t++)t!==i&&(u[c++]=a.shape[t]);const h=[],p=new Array(o).fill(0),d=a.shape.slice();d[i]=1;const f=new Array(l);for(let t=0;t<f.length;t++){p[i]=t;const e=fA({inputs:{x:a},backend:n,attrs:{begin:p,size:d}}),s=oN({inputs:{x:e},backend:n,attrs:{shape:u}});f[t]=s,h.push(e)}return h.forEach((t=>n.disposeIntermediateTensorInfo(t))),f}};class KD{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,s=t.batchSize,r=t.inSize,i=t.numSegments,a=i*Math.ceil(r/n);this.outputShape=[s,a];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";r%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let h="";r%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const YD={kernelName:ns,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,segmentIds:i}=e,{numSegments:a}=s,o=r.shape.length,l=[];let u=0;const c=so([u],o);let h=r;null!=c&&(h=yN({inputs:{x:r},backend:n,attrs:{perm:c}}),l.push(h),u=io(1,o)[0]);const p=Wu(h.shape,u,a),d=O([h.shape[u]]),f=oN({inputs:{x:h},backend:n,attrs:{shape:[-1,d]}});l.push(f);const m=Xs(r.dtype),g=(t,e,s,r,i)=>{const a=t.shape[0],o=t.shape[1],u=Bu(o,i),c=new KD({windowSize:u,inSize:o,batchSize:a,numSegments:i},e),h=n.compileAndRun(c,[t,s],r);if(l.push(h),h.shape[1]===i)return h;const p=LR({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),d=WD({inputs:{x:p},backend:n,attrs:{reps:[o/u]}});return l.push(p),l.push(d),g(h,e,d,r,i)},y=oN({inputs:{x:g(f,"unsortedSegmentSum",i,m,a)},backend:n,attrs:{shape:p}});let b=y;if(null!=c){l.push(y);const t=ro(c);b=yN({inputs:{x:b},backend:n,attrs:{perm:t}})}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),b}},ZD=[z$,V$,wN,kN,SN,CN,EN,DN,ON,FN,BN,WN,UN,jN,YN,XN,QN,nA,eA,iA,aA,oA,cA,gA,yA,_A,SA,NA,$A,UC,VA,ZA,QA,jA,tE,eE,JA,sE,iE,oE,hE,pE,fE,vE,wE,yE,kE,SE,CE,NE,EE,RE,FE,LE,VE,qE,jE,XE,ZE,JE,n$,r$,i$,o$,u$,h$,d$,WC,f$,MA,g$,b$,v$,HC,_$,T$,S$,A$,C$,$$,D$,F$,W$,j$,G$,K$,Y$,Z$,U$,Q$,J$,eR,rR,aR,mR,aN,yR,xR,wR,kR,xA,SR,NR,AR,DR,FR,YC,MR,zR,wA,uR,VR,UR,WR,lN,HR,KR,ZR,JR,nD,rD,aD,lD,cD,pD,fD,gD,bD,vD,_D,mA,fR,TD,SD,ID,CD,AD,ED,DD,OD,MD,pR,gN,zD,VD,qD,UD,jD,bN,HD,XD,YD,CR];for(const t of ZD)ms(t);const QD={flipHorizontal:!1,outputStride:16,imageScaleFactor:1,maxNumBoxes:20,iouThreshold:.2,scoreThreshold:.6,modelType:"ssd320fpnlite",modelSize:"small",bboxLineWidth:"2",fontSize:17,basePath:"https://cdn.jsdelivr.net/npm/handtrackjs@latest/models/webmodel/",labelMap:{1:"open",2:"closed",3:"pinch",4:"point",5:"face",6:"pointtip",7:"pinchtip"},renderThresholds:null},JD={large:"base",medium:"fp16",small:"int8"},tO={open:"#374151",closed:"#B91C1C",pinch:"#F59E0B",point:"#10B981",face:"#3B82F6",pointtip:"#6366F1",pinchtip:"#EC4899"},eO={ssd320fpnlite:["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],ssd640fpnlite:["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],centernet512fpn:["Identity_4:0","Identity:0","Identity_2:0"]};class nO{constructor(t){this.modelPath=t.basePath+t.modelType+"/"+(JD[t.modelSize]||"base")+"/model.json ",this.modelParams=t}async load(){this.fps=0,this.model=await async function(t,e={}){if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==e&&(e={}),e.fromTFHub&&null==t.load&&(t.endsWith("/")||(t+="/"),t=`${t}model.json?tfjs-format=file`);const n=new dx(t,e);return await n.load(),n}(this.modelPath);const t=ho([1,300,300,3],"int32"),e=await this.model.executeAsync(t,eO[this.modelParams.modelType]);e.map((async t=>await t.data())),e.map((async t=>t.dispose())),Ri(t)}async detect(t){let e=Date.now();const[n,s]=function(t){return t instanceof zs?[t.shape[0],t.shape[1]]:[t.height,t.width]}(t),r=sO(this.modelParams.imageScaleFactor,n,this.modelParams.outputStride),i=sO(this.modelParams.imageScaleFactor,s,this.modelParams.outputStride),a=$i((()=>{const e=ui(t);return this.modelParams.flipHorizontal?e.reverse(1).resizeBilinear([r,i]).expandDims(0).toInt():e.resizeBilinear([r,i]).expandDims(0).toInt()})),o=this;return this.model.executeAsync(a,eO[this.modelParams.modelType]).then((function(t){a.dispose();let r=[];if("centernet512fpn"===o.modelParams.modelType){const e=t[0].dataSync(),i=t[1].arraySync(),a=t[2].dataSync();Ri(t),r=o.buildDetectObjectsCenternet(s,n,i[0],e,a),console.log(r)}else{const e=t[0].dataSync(),i=t[1].dataSync();Ri(t);const[a,l]=function(t,e,n){const s=[],r=[];for(let i=0;i<e;i++){let e=Number.MIN_VALUE,a=-1;for(let s=0;s<n;s++)t[i*n+s]>e&&(e=t[i*n+s],a=s);s[i]=e,r[i]=a}return[s,r]}(e,t[0].shape[1],t[0].shape[2]),u=sr.backendName;Oi("cpu");const c=$i((()=>{const e=Vo(i,[t[1].shape[1],t[1].shape[3]]);return Kl.nonMaxSuppression(e,a,o.modelParams.maxNumBoxes,o.modelParams.iouThreshold,o.modelParams.scoreThreshold)})),h=c.dataSync();c.dispose(),Oi(u),r=o.buildDetectedObjects(s,n,i,a,h,l)}let i=Date.now();return o.fps=Math.round(1e3/(i-e)),r}))}buildDetectedObjects(t,e,n,s,r,i){const a=r.length,o=[];for(let l=0;l<a;l++){const a=[];for(let t=0;t<4;t++)a[t]=n[4*r[l]+t];const u=a[0]*e,c=a[1]*t,h=a[2]*e,p=a[3]*t;a[0]=c,a[1]=u,a[2]=p-c,a[3]=h-u;const d=Math.round(i[r[l]])+1;o.push({bbox:a,class:d,label:this.modelParams.labelMap[d],score:s[r[l]].toFixed(2)})}return o}buildDetectObjectsCenternet(t,e,n,s,r){const i=[];for(let a=0;a<s.length;a++){const o=n[a],l=o[0]*e,u=o[1]*t,c=o[2]*e,h=o[3]*t;o[0]=u,o[1]=l,o[2]=h-u,o[3]=c-l;const p=Math.round(r[a])+1;i.push({bbox:o,class:p,label:this.modelParams.labelMap[p],score:s[a].toFixed(2)})}return i.slice(0,10)}getFPS(){return this.fps}setModelParameters(t){this.modelParams=Object.assign({},this.modelParams,t)}getModelParameters(){return this.modelParams}roundRect(t,e,n,s,r,i,a,o){if(void 0===o&&(o=!0),void 0===i&&(i=5),"number"==typeof i)i={tl:i,tr:i,br:i,bl:i};else{var l={tl:0,tr:0,br:0,bl:0};for(var u in l)i[u]=i[u]||l[u]}t.beginPath(),t.moveTo(e+i.tl,n),t.lineTo(e+s-i.tr,n),t.quadraticCurveTo(e+s,n,e+s,n+i.tr),t.lineTo(e+s,n+r-i.br),t.quadraticCurveTo(e+s,n+r,e+s-i.br,n+r),t.lineTo(e+i.bl,n+r),t.quadraticCurveTo(e,n+r,e,n+r-i.bl),t.lineTo(e,n+i.tl),t.quadraticCurveTo(e,n,e+i.tl,n),t.closePath(),a&&t.fill(),o&&t.stroke()}renderPredictions(t,e,n,s){n.clearRect(0,0,e.width,e.height),e.width=s.width,e.height=s.height,e.style.height=parseInt(e.style.width)*(s.height/s.width).toFixed(2)+"px",n.save(),this.modelParams.flipHorizontal&&(n.scale(-1,1),n.translate(-s.width,0)),n.drawImage(s,0,0,s.width,s.height),n.restore(),n.font="bold "+this.modelParams.fontSize+"px Arial";const r=this.modelParams.renderThresholds;for(let e=0;e<t.length;e++){const s=t[e];(!r||s.score>r[s.label])&&(n.beginPath(),n.fillStyle="rgba(255, 255, 255, 0.6)",n.fillRect(s.bbox[0]+1,s.bbox[1]+1,s.bbox[2]-1,1.5*this.modelParams.fontSize),n.lineWidth=this.modelParams.bboxLineWidth,this.roundRect(n,s.bbox[0],s.bbox[1],s.bbox[2],s.bbox[3],5,!1,!0),n.strokeStyle=tO[s.label],n.fillStyle=tO[s.label],n.stroke(),n.beginPath(),n.arc(s.bbox[0]+s.bbox[2]/2,s.bbox[1]+s.bbox[3]/2,2,0,2*Math.PI),n.fill(),n.stroke(),n.fillText(s.score+" | "+s.label,s.bbox[0]+5,s.bbox[1]+1.1*this.modelParams.fontSize))}n.fillStyle="rgba(255, 255, 255, 0.6)",this.roundRect(n,10,10,4.6*this.modelParams.fontSize,this.modelParams.fontSize+8,5,!0,!1),n.strokeStyle="#374151",n.fillStyle="#374151",n.font="bold "+this.modelParams.fontSize+"px Arial",n.fillText("FPS: "+this.fps,18,this.modelParams.fontSize+12)}dispose(){this.model&&this.model.dispose()}}function sO(t,e,n){const s=e*t-1;return s-s%n+1}const rO=document.getElementById("myvideo"),iO=document.getElementById("canvas"),aO=iO.getContext("2d");let oO=document.getElementById("trackbutton"),lO=document.getElementById("updatenote"),uO=!1,cO=null;function hO(){uO?(lO.innerText="Stopping video",async function(){if(!window.localStream)return!1;window.localStream.getTracks().forEach((t=>(t.stop(),!0)))}(),uO=!1,lO.innerText="Video stopped"):(lO.innerText="Starting video",function(t){return new Promise((function(e,n){t||e({status:!1,msg:"please provide a valid video element"}),t.width=t.width||640,t.height=t.width*(t.videoHeight/t.videoWidth),t.style.height="20px",navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"user"}}).then((n=>{window.localStream=n,t.srcObject=n,t.onloadedmetadata=()=>{t.height=t.width*(t.videoHeight/t.videoWidth),t.style.height=parseInt(t.style.width)*(t.videoHeight/t.videoWidth).toFixed(2)+"px",t.play(),e({status:!0,msg:"webcam successfully initiated."})}})).catch((function(t){e({status:!1,msg:t})}))}))}(rO).then((function(t){console.log("video started",t),t?(lO.innerText="Video started. Now tracking",uO=!0,pO()):lO.innerText="Please enable video"})))}function pO(){cO.detect(rO).then((t=>{console.log("Predictions: ",t),console.log("params",cO.getModelParameters());let e=0;t[0]&&(e=function(t){const e=t.bbox[2],n=t.bbox[3];return Math.sqrt(e*e+n*n)}(t[0])),e&&(document.getElementById("current-note").innerHTML="Current Hand Distance: "+e.toFixed(2)),cO.renderPredictions(t,iO,aO,rO),uO&&requestAnimationFrame(pO)}))}(async function(t){let e=Object.assign({},QD,{flipHorizontal:!0,maxNumBoxes:20,iouThreshold:.5,scoreThreshold:.6});const n=new nO(e);return await n.load(),n})().then((t=>{cO=t,lO.innerText="Loaded Model!",oO.disabled=!1})),window.addEventListener("load",(()=>{console.log("load");const t=document.getElementById("trackbutton");console.log("btn",t),t.addEventListener("click",(()=>{hO()}))}))})()})();