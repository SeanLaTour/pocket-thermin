/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var t={2948:(t,e,n)=>{var s=n(2140),r=n(9980),a=n(1730),i=n(7405),o=n(4026),l=n(865),u=n(8721);u.alea=s,u.xor128=r,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,t.exports=u},2140:function(t,e,n){var s;!function(t,r,a){function i(t){var e,n=this,s=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var s=.02519603282416938*(e+=t.charCodeAt(n));s-=e=s>>>0,e=(s*=e)>>>0,e+=4294967296*(s-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(t),n.s0<0&&(n.s0+=1),n.s1-=s(t),n.s1<0&&(n.s1+=1),n.s2-=s(t),n.s2<0&&(n.s2+=1),s=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function l(t,e){var n=new i(t),s=e&&e.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.alea=l}(0,t=n.nmd(t),n.amdD)},865:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,s=e.d,r=e.a;return t=t<<25^t>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-s|0,e.d=s<<16^n>>>16^r,e.a=r-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var s=0;s<n.length+20;s++)e.b^=0|n.charCodeAt(s),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function l(t,e){var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.tychei=l}(0,t=n.nmd(t),n.amdD)},9980:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var s=0;s<n.length+64;s++)e.x^=0|n.charCodeAt(s),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function l(t,e){var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xor128=l}(0,t=n.nmd(t),n.amdD)},4026:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this;e.next=function(){var t,n,s=e.w,r=e.X,a=e.i;return e.w=s=s+1640531527|0,n=r[a+34&127],t=r[a=a+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=r[a]=n^t,e.i=a,n+(s^s>>>16)|0},function(t,e){var n,s,r,a,i,o=[],l=128;for(e===(0|e)?(s=e,e=null):(e+="\0",s=0,l=Math.max(l,e.length)),r=0,a=-32;a<l;++a)e&&(s^=e.charCodeAt((a+32)%e.length)),0===a&&(i=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,a>=0&&(i=i+1640531527|0,r=0==(n=o[127&a]^=s+i)?r+1:0);for(r>=128&&(o[127&(e&&e.length||0)]=-1),r=127,a=512;a>0;--a)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;t.w=i,t.X=o,t.i=r}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function l(t,e){null==t&&(t=+new Date);var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&(s.X&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xor4096=l}(0,t=n.nmd(t),n.amdD)},7405:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this;e.next=function(){var t,n,s=e.x,r=e.i;return t=s[r],n=(t^=t>>>7)^t<<24,n^=(t=s[r+1&7])^t>>>10,n^=(t=s[r+3&7])^t>>>3,n^=(t=s[r+4&7])^t<<7,t=s[r+7&7],n^=(t^=t<<13)^t<<9,s[r]=n,e.i=r+1&7,n},function(t,e){var n,s=[];if(e===(0|e))s[0]=e;else for(e=""+e,n=0;n<e.length;++n)s[7&n]=s[7&n]<<15^e.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],t.x=s,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function l(t,e){null==t&&(t=+new Date);var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&(s.x&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xorshift7=l}(0,t=n.nmd(t),n.amdD)},1730:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var s=0;s<n.length+64;s++)e.x^=0|n.charCodeAt(s),s==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function l(t,e){var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xorwow=l}(0,t=n.nmd(t),n.amdD)},8721:(t,e,n)=>{var s;!function(r,a){var i,o=this,l=256,u="random",c=a.pow(l,6),h=a.pow(2,52),p=2*h,d=l-1;function f(t,e,n){var s=[],d=b(y((e=1==e?{entropy:!0}:e||{}).entropy?[t,x(r)]:null==t?function(){try{var t;return i&&(t=i.randomBytes)?t=t(l):(t=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(t)),x(t)}catch(t){var e=o.navigator,n=e&&e.plugins;return[+new Date,o,n,o.screen,x(r)]}}():t,3),s),f=new m(s),v=function(){for(var t=f.g(6),e=c,n=0;t<h;)t=(t+n)*l,e*=l,n=f.g(1);for(;t>=p;)t/=2,e/=2,n>>>=1;return(t+n)/e};return v.int32=function(){return 0|f.g(4)},v.quick=function(){return f.g(4)/4294967296},v.double=v,b(x(f.S),r),(e.pass||n||function(t,e,n,s){return s&&(s.S&&g(s,f),t.state=function(){return g(f,{})}),n?(a[u]=t,e):t})(v,d,"global"in e?e.global:this==a,e.state)}function m(t){var e,n=t.length,s=this,r=0,a=s.i=s.j=0,i=s.S=[];for(n||(t=[n++]);r<l;)i[r]=r++;for(r=0;r<l;r++)i[r]=i[a=d&a+t[r%n]+(e=i[r])],i[a]=e;(s.g=function(t){for(var e,n=0,r=s.i,a=s.j,i=s.S;t--;)e=i[r=d&r+1],n=n*l+i[d&(i[r]=i[a=d&a+e])+(i[a]=e)];return s.i=r,s.j=a,n})(l)}function g(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function y(t,e){var n,s=[],r=typeof t;if(e&&"object"==r)for(n in t)try{s.push(y(t[n],e-1))}catch(t){}return s.length?s:"string"==r?t:t+"\0"}function b(t,e){for(var n,s=t+"",r=0;r<s.length;)e[d&r]=d&(n^=19*e[d&r])+s.charCodeAt(r++);return x(e)}function x(t){return String.fromCharCode.apply(0,t)}if(a["seed"+u]=f,b(a.random(),r),t.exports){t.exports=f;try{i=n(914)}catch(t){}}else void 0===(s=function(){return f}.call(e,n,e,t))||(t.exports=s)}([],Math)},3129:(t,e,n)=>{var s=n(626),r=n(477),a=n(2868),i=n(8197),o=n(1954),l=n(2408),u=n(1662);u.alea=s,u.xor128=r,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,t.exports=u},626:function(t,e,n){var s;!function(t,r,a){function i(t){var e,n=this,s=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var s=.02519603282416938*(e+=t.charCodeAt(n));s-=e=s>>>0,e=(s*=e)>>>0,e+=4294967296*(s-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(t),n.s0<0&&(n.s0+=1),n.s1-=s(t),n.s1<0&&(n.s1+=1),n.s2-=s(t),n.s2<0&&(n.s2+=1),s=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function l(t,e){var n=new i(t),s=e&&e.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.alea=l}(0,t=n.nmd(t),n.amdD)},2408:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,s=e.d,r=e.a;return t=t<<25^t>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-s|0,e.d=s<<16^n>>>16^r,e.a=r-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var s=0;s<n.length+20;s++)e.b^=0|n.charCodeAt(s),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function l(t,e){var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.tychei=l}(0,t=n.nmd(t),n.amdD)},477:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var s=0;s<n.length+64;s++)e.x^=0|n.charCodeAt(s),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function l(t,e){var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xor128=l}(0,t=n.nmd(t),n.amdD)},1954:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this;e.next=function(){var t,n,s=e.w,r=e.X,a=e.i;return e.w=s=s+1640531527|0,n=r[a+34&127],t=r[a=a+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=r[a]=n^t,e.i=a,n+(s^s>>>16)|0},function(t,e){var n,s,r,a,i,o=[],l=128;for(e===(0|e)?(s=e,e=null):(e+="\0",s=0,l=Math.max(l,e.length)),r=0,a=-32;a<l;++a)e&&(s^=e.charCodeAt((a+32)%e.length)),0===a&&(i=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,a>=0&&(i=i+1640531527|0,r=0==(n=o[127&a]^=s+i)?r+1:0);for(r>=128&&(o[127&(e&&e.length||0)]=-1),r=127,a=512;a>0;--a)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;t.w=i,t.X=o,t.i=r}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function l(t,e){null==t&&(t=+new Date);var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&(s.X&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xor4096=l}(0,t=n.nmd(t),n.amdD)},8197:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this;e.next=function(){var t,n,s=e.x,r=e.i;return t=s[r],n=(t^=t>>>7)^t<<24,n^=(t=s[r+1&7])^t>>>10,n^=(t=s[r+3&7])^t>>>3,n^=(t=s[r+4&7])^t<<7,t=s[r+7&7],n^=(t^=t<<13)^t<<9,s[r]=n,e.i=r+1&7,n},function(t,e){var n,s=[];if(e===(0|e))s[0]=e;else for(e=""+e,n=0;n<e.length;++n)s[7&n]=s[7&n]<<15^e.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],t.x=s,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function l(t,e){null==t&&(t=+new Date);var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&(s.x&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xorshift7=l}(0,t=n.nmd(t),n.amdD)},2868:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var s=0;s<n.length+64;s++)e.x^=0|n.charCodeAt(s),s==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function l(t,e){var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xorwow=l}(0,t=n.nmd(t),n.amdD)},1662:(t,e,n)=>{var s;!function(r,a){var i,o=this,l=256,u="random",c=a.pow(l,6),h=a.pow(2,52),p=2*h,d=l-1;function f(t,e,n){var s=[],d=b(y((e=1==e?{entropy:!0}:e||{}).entropy?[t,x(r)]:null==t?function(){try{var t;return i&&(t=i.randomBytes)?t=t(l):(t=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(t)),x(t)}catch(t){var e=o.navigator,n=e&&e.plugins;return[+new Date,o,n,o.screen,x(r)]}}():t,3),s),f=new m(s),v=function(){for(var t=f.g(6),e=c,n=0;t<h;)t=(t+n)*l,e*=l,n=f.g(1);for(;t>=p;)t/=2,e/=2,n>>>=1;return(t+n)/e};return v.int32=function(){return 0|f.g(4)},v.quick=function(){return f.g(4)/4294967296},v.double=v,b(x(f.S),r),(e.pass||n||function(t,e,n,s){return s&&(s.S&&g(s,f),t.state=function(){return g(f,{})}),n?(a[u]=t,e):t})(v,d,"global"in e?e.global:this==a,e.state)}function m(t){var e,n=t.length,s=this,r=0,a=s.i=s.j=0,i=s.S=[];for(n||(t=[n++]);r<l;)i[r]=r++;for(r=0;r<l;r++)i[r]=i[a=d&a+t[r%n]+(e=i[r])],i[a]=e;(s.g=function(t){for(var e,n=0,r=s.i,a=s.j,i=s.S;t--;)e=i[r=d&r+1],n=n*l+i[d&(i[r]=i[a=d&a+e])+(i[a]=e)];return s.i=r,s.j=a,n})(l)}function g(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function y(t,e){var n,s=[],r=typeof t;if(e&&"object"==r)for(n in t)try{s.push(y(t[n],e-1))}catch(t){}return s.length?s:"string"==r?t:t+"\0"}function b(t,e){for(var n,s=t+"",r=0;r<s.length;)e[d&r]=d&(n^=19*e[d&r])+s.charCodeAt(r++);return x(e)}function x(t){return String.fromCharCode.apply(0,t)}if(a["seed"+u]=f,b(a.random(),r),t.exports){t.exports=f;try{i=n(5778)}catch(t){}}else void 0===(s=function(){return f}.call(e,n,e,t))||(t.exports=s)}([],Math)},5382:function(t,e,n){!function(t,e,n,s){"use strict";var r=function(t,e,n){return{endTime:e,insertTime:n,type:"exponentialRampToValue",value:t}},a=function(t,e,n){return{endTime:e,insertTime:n,type:"linearRampToValue",value:t}},i=function(t,e){return{startTime:e,type:"setValue",value:t}},o=function(t,e,n){return{duration:n,startTime:e,type:"setValueCurve",values:t}},l=function(t,e,n){var s=n.startTime,r=n.target,a=n.timeConstant;return r+(e-r)*Math.exp((s-t)/a)},u=function(t){return"exponentialRampToValue"===t.type},c=function(t){return"linearRampToValue"===t.type},h=function(t){return u(t)||c(t)},p=function(t){return"setValue"===t.type},d=function(t){return"setValueCurve"===t.type},f=function t(e,n,s,r){var a=e[n];return void 0===a?r:h(a)||p(a)?a.value:d(a)?a.values[a.values.length-1]:l(s,t(e,n-1,a.startTime,r),a)},m=function(t,e,n,s,r){return void 0===n?[s.insertTime,r]:h(n)?[n.endTime,n.value]:p(n)?[n.startTime,n.value]:d(n)?[n.startTime+n.duration,n.values[n.values.length-1]]:[n.startTime,f(t,e-1,n.startTime,r)]},g=function(t){return"cancelAndHold"===t.type},y=function(t){return"cancelScheduledValues"===t.type},b=function(t){return g(t)||y(t)?t.cancelTime:u(t)||c(t)?t.endTime:t.startTime},x=function(t,e,n,s){var r=s.endTime,a=s.value;return n===a?a:0<n&&0<a||n<0&&a<0?n*Math.pow(a/n,(t-e)/(r-e)):0},v=function(t,e,n,s){return n+(t-e)/(s.endTime-e)*(s.value-n)},w=function(t,e){var n=e.duration,s=e.startTime,r=e.values;return function(t,e){var n=Math.floor(e),s=Math.ceil(e);return n===s?t[n]:(1-(e-n))*t[n]+(1-(s-e))*t[s]}(r,(t-s)/n*(r.length-1))},k=function(t){return"setTarget"===t.type},_=function(t){function _(t){n(this,_),this._automationEvents=[],this._currenTime=0,this._defaultValue=t}return s(_,[{key:t,value:function(){return this._automationEvents[Symbol.iterator]()}},{key:"add",value:function(t){var e=b(t);if(g(t)||y(t)){var n=this._automationEvents.findIndex((function(n){return y(t)&&d(n)?n.startTime+n.duration>=e:b(n)>=e})),s=this._automationEvents[n];if(-1!==n&&(this._automationEvents=this._automationEvents.slice(0,n)),g(t)){var l=this._automationEvents[this._automationEvents.length-1];if(void 0!==s&&h(s)){if(void 0!==l&&k(l))throw new Error("The internal list is malformed.");var p=void 0===l?s.insertTime:d(l)?l.startTime+l.duration:b(l),f=void 0===l?this._defaultValue:d(l)?l.values[l.values.length-1]:l.value,m=u(s)?x(e,p,f,s):v(e,p,f,s),w=u(s)?r(m,e,this._currenTime):a(m,e,this._currenTime);this._automationEvents.push(w)}if(void 0!==l&&k(l)&&this._automationEvents.push(i(this.getValue(e),e)),void 0!==l&&d(l)&&l.startTime+l.duration>e){var _=e-l.startTime,I=(l.values.length-1)/l.duration,T=Math.max(2,1+Math.ceil(_*I)),N=_/(T-1)*I,C=l.values.slice(0,T);if(N<1)for(var S=1;S<T;S+=1){var A=N*S%1;C[S]=l.values[S-1]*(1-A)+l.values[S]*A}this._automationEvents[this._automationEvents.length-1]=o(C,l.startTime,_)}}}else{var $=this._automationEvents.findIndex((function(t){return b(t)>e})),E=-1===$?this._automationEvents[this._automationEvents.length-1]:this._automationEvents[$-1];if(void 0!==E&&d(E)&&b(E)+E.duration>e)return!1;var R=u(t)?r(t.value,t.endTime,this._currenTime):c(t)?a(t.value,e,this._currenTime):t;if(-1===$)this._automationEvents.push(R);else{if(d(t)&&e+t.duration>b(this._automationEvents[$]))return!1;this._automationEvents.splice($,0,R)}}return!0}},{key:"flush",value:function(t){var e=this._automationEvents.findIndex((function(e){return b(e)>t}));if(e>1){var n=this._automationEvents.slice(e-1),s=n[0];k(s)&&n.unshift(i(f(this._automationEvents,e-2,s.startTime,this._defaultValue),s.startTime)),this._automationEvents=n}}},{key:"getValue",value:function(t){if(0===this._automationEvents.length)return this._defaultValue;var n=this._automationEvents.findIndex((function(e){return b(e)>t})),s=this._automationEvents[n],r=(-1===n?this._automationEvents.length:n)-1,a=this._automationEvents[r];if(void 0!==a&&k(a)&&(void 0===s||!h(s)||s.insertTime>t))return l(t,f(this._automationEvents,r-1,a.startTime,this._defaultValue),a);if(void 0!==a&&p(a)&&(void 0===s||!h(s)))return a.value;if(void 0!==a&&d(a)&&(void 0===s||!h(s)||a.startTime+a.duration>t))return t<a.startTime+a.duration?w(t,a):a.values[a.values.length-1];if(void 0!==a&&h(a)&&(void 0===s||!h(s)))return a.value;if(void 0!==s&&u(s)){var i=m(this._automationEvents,r,a,s,this._defaultValue),o=e(i,2),g=o[0],y=o[1];return x(t,g,y,s)}if(void 0!==s&&c(s)){var _=m(this._automationEvents,r,a,s,this._defaultValue),I=e(_,2),T=I[0],N=I[1];return v(t,T,N,s)}return this._defaultValue}}]),_}(Symbol.iterator);t.AutomationEventList=_,t.createCancelAndHoldAutomationEvent=function(t){return{cancelTime:t,type:"cancelAndHold"}},t.createCancelScheduledValuesAutomationEvent=function(t){return{cancelTime:t,type:"cancelScheduledValues"}},t.createExponentialRampToValueAutomationEvent=function(t,e){return{endTime:e,type:"exponentialRampToValue",value:t}},t.createLinearRampToValueAutomationEvent=function(t,e){return{endTime:e,type:"linearRampToValue",value:t}},t.createSetTargetAutomationEvent=function(t,e,n){return{startTime:e,target:t,timeConstant:n,type:"setTarget"}},t.createSetValueAutomationEvent=i,t.createSetValueCurveAutomationEvent=o}(e,n(7424),n(6690),n(9728))},3121:(t,e,n)=>{"use strict";n.d(e,{Z:()=>o});var s=n(8081),r=n.n(s),a=n(3645),i=n.n(a)()(r());i.push([t.id,".lds-grid {\n    display: inline-block;\n    position: relative;\n    width: 80px;\n    height: 80px;\n  }\n  .lds-grid div {\n    position: absolute;\n    width: 16px;\n    height: 16px;\n    border-radius: 50%;\n    background: #fff;\n    animation: lds-grid 1.2s linear infinite;\n  }\n  .lds-grid div:nth-child(1) {\n    top: 8px;\n    left: 8px;\n    animation-delay: 0s;\n  }\n  .lds-grid div:nth-child(2) {\n    top: 8px;\n    left: 32px;\n    animation-delay: -0.4s;\n  }\n  .lds-grid div:nth-child(3) {\n    top: 8px;\n    left: 56px;\n    animation-delay: -0.8s;\n  }\n  .lds-grid div:nth-child(4) {\n    top: 32px;\n    left: 8px;\n    animation-delay: -0.4s;\n  }\n  .lds-grid div:nth-child(5) {\n    top: 32px;\n    left: 32px;\n    animation-delay: -0.8s;\n  }\n  .lds-grid div:nth-child(6) {\n    top: 32px;\n    left: 56px;\n    animation-delay: -1.2s;\n  }\n  .lds-grid div:nth-child(7) {\n    top: 56px;\n    left: 8px;\n    animation-delay: -0.8s;\n  }\n  .lds-grid div:nth-child(8) {\n    top: 56px;\n    left: 32px;\n    animation-delay: -1.2s;\n  }\n  .lds-grid div:nth-child(9) {\n    top: 56px;\n    left: 56px;\n    animation-delay: -1.6s;\n  }\n  @keyframes lds-grid {\n    0%, 100% {\n      opacity: 1;\n    }\n    50% {\n      opacity: 0.5;\n    }\n  }\n  ",""]);const o=i},8772:(t,e,n)=>{"use strict";n.d(e,{Z:()=>o});var s=n(8081),r=n.n(s),a=n(3645),i=n.n(a)()(r());i.push([t.id,"body {\n    padding: 20px;\n    background-color: black;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 100vw;\n    height: 100vh;\n}\n\n.p20 {\n    padding: 20px;\n}\n\n.canvasbox {\n    border-radius: 3px;\n    margin-right: 10px;\n    width: 450px;\n    height: 338px;\n    border-bottom: 3px solid #0063FF;\n    box-shadow: 0 2px 3px 0 rgba(0, 0, 0, 0.2), 0 4px 10px 0 #00000030;\n    background: #333;\n}\n\n.mb10 {\n    margin-bottom: 10px\n}\n\n.mt10 {\n    margin-top: 10px\n}\n\n.updatenote {\n    margin-bottom: 10vh;\n    font-size: large;\n}\n\n#current-note {\n    font-size: 10rem;\n    font-family: monospace;\n    color: violet;\n    transition-property: opacity;\n    transition-duration: 1s;\n    width: 100vw;\n    text-align: center;\n}\n\n#trackbutton {\n    margin: 1rem;\n    padding: .5rem;\n    background-color: #333;\n    color: white;\n    border-radius: 5px;\n    width: 50vw;\n    margin-top: 10vh;\n}\n",""]);const o=i},3645:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",s=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),s&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),s&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,s,r,a){"string"==typeof t&&(t=[[null,t,void 0]]);var i={};if(s)for(var o=0;o<this.length;o++){var l=this[o][0];null!=l&&(i[l]=!0)}for(var u=0;u<t.length;u++){var c=[].concat(t[u]);s&&i[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),e.push(c))}},e}},8081:t=>{"use strict";t.exports=function(t){return t[1]}},6377:(t,e,n)=>{var s=n(4832),r=n(8652),a=n(801),i=n(2030),o=n(3618),l=n(9049),u=n(1971);u.alea=s,u.xor128=r,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,t.exports=u},4832:function(t,e,n){var s;!function(t,r,a){function i(t){var e,n=this,s=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var s=.02519603282416938*(e+=t.charCodeAt(n));s-=e=s>>>0,e=(s*=e)>>>0,e+=4294967296*(s-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(t),n.s0<0&&(n.s0+=1),n.s1-=s(t),n.s1<0&&(n.s1+=1),n.s2-=s(t),n.s2<0&&(n.s2+=1),s=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function l(t,e){var n=new i(t),s=e&&e.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.alea=l}(0,t=n.nmd(t),n.amdD)},9049:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,s=e.d,r=e.a;return t=t<<25^t>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-s|0,e.d=s<<16^n>>>16^r,e.a=r-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var s=0;s<n.length+20;s++)e.b^=0|n.charCodeAt(s),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function l(t,e){var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.tychei=l}(0,t=n.nmd(t),n.amdD)},8652:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var s=0;s<n.length+64;s++)e.x^=0|n.charCodeAt(s),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function l(t,e){var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xor128=l}(0,t=n.nmd(t),n.amdD)},3618:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this;e.next=function(){var t,n,s=e.w,r=e.X,a=e.i;return e.w=s=s+1640531527|0,n=r[a+34&127],t=r[a=a+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=r[a]=n^t,e.i=a,n+(s^s>>>16)|0},function(t,e){var n,s,r,a,i,o=[],l=128;for(e===(0|e)?(s=e,e=null):(e+="\0",s=0,l=Math.max(l,e.length)),r=0,a=-32;a<l;++a)e&&(s^=e.charCodeAt((a+32)%e.length)),0===a&&(i=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,a>=0&&(i=i+1640531527|0,r=0==(n=o[127&a]^=s+i)?r+1:0);for(r>=128&&(o[127&(e&&e.length||0)]=-1),r=127,a=512;a>0;--a)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;t.w=i,t.X=o,t.i=r}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function l(t,e){null==t&&(t=+new Date);var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&(s.X&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xor4096=l}(0,t=n.nmd(t),n.amdD)},2030:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this;e.next=function(){var t,n,s=e.x,r=e.i;return t=s[r],n=(t^=t>>>7)^t<<24,n^=(t=s[r+1&7])^t>>>10,n^=(t=s[r+3&7])^t>>>3,n^=(t=s[r+4&7])^t<<7,t=s[r+7&7],n^=(t^=t<<13)^t<<9,s[r]=n,e.i=r+1&7,n},function(t,e){var n,s=[];if(e===(0|e))s[0]=e;else for(e=""+e,n=0;n<e.length;++n)s[7&n]=s[7&n]<<15^e.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],t.x=s,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function l(t,e){null==t&&(t=+new Date);var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&(s.x&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xorshift7=l}(0,t=n.nmd(t),n.amdD)},801:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var s=0;s<n.length+64;s++)e.x^=0|n.charCodeAt(s),s==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function l(t,e){var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xorwow=l}(0,t=n.nmd(t),n.amdD)},1971:(t,e,n)=>{var s;!function(r,a){var i,o=(0,eval)("this"),l=256,u="random",c=a.pow(l,6),h=a.pow(2,52),p=2*h,d=l-1;function f(t,e,n){var s=[],d=b(y((e=1==e?{entropy:!0}:e||{}).entropy?[t,x(r)]:null==t?function(){try{var t;return i&&(t=i.randomBytes)?t=t(l):(t=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(t)),x(t)}catch(t){var e=o.navigator,n=e&&e.plugins;return[+new Date,o,n,o.screen,x(r)]}}():t,3),s),f=new m(s),v=function(){for(var t=f.g(6),e=c,n=0;t<h;)t=(t+n)*l,e*=l,n=f.g(1);for(;t>=p;)t/=2,e/=2,n>>>=1;return(t+n)/e};return v.int32=function(){return 0|f.g(4)},v.quick=function(){return f.g(4)/4294967296},v.double=v,b(x(f.S),r),(e.pass||n||function(t,e,n,s){return s&&(s.S&&g(s,f),t.state=function(){return g(f,{})}),n?(a[u]=t,e):t})(v,d,"global"in e?e.global:this==a,e.state)}function m(t){var e,n=t.length,s=this,r=0,a=s.i=s.j=0,i=s.S=[];for(n||(t=[n++]);r<l;)i[r]=r++;for(r=0;r<l;r++)i[r]=i[a=d&a+t[r%n]+(e=i[r])],i[a]=e;(s.g=function(t){for(var e,n=0,r=s.i,a=s.j,i=s.S;t--;)e=i[r=d&r+1],n=n*l+i[d&(i[r]=i[a=d&a+e])+(i[a]=e)];return s.i=r,s.j=a,n})(l)}function g(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function y(t,e){var n,s=[],r=typeof t;if(e&&"object"==r)for(n in t)try{s.push(y(t[n],e-1))}catch(t){}return s.length?s:"string"==r?t:t+"\0"}function b(t,e){for(var n,s=t+"",r=0;r<s.length;)e[d&r]=d&(n^=19*e[d&r])+s.charCodeAt(r++);return x(e)}function x(t){return String.fromCharCode.apply(0,t)}if(a["seed"+u]=f,b(a.random(),r),t.exports){t.exports=f;try{i=n(5042)}catch(t){}}else void 0===(s=function(){return f}.call(e,n,e,t))||(t.exports=s)}([],Math)},3379:t=>{"use strict";var e=[];function n(t){for(var n=-1,s=0;s<e.length;s++)if(e[s].identifier===t){n=s;break}return n}function s(t,s){for(var a={},i=[],o=0;o<t.length;o++){var l=t[o],u=s.base?l[0]+s.base:l[0],c=a[u]||0,h="".concat(u," ").concat(c);a[u]=c+1;var p=n(h),d={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)e[p].references++,e[p].updater(d);else{var f=r(d,s);s.byIndex=o,e.splice(o,0,{identifier:h,updater:f,references:1})}i.push(h)}return i}function r(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,r){var a=s(t=t||[],r=r||{});return function(t){t=t||[];for(var i=0;i<a.length;i++){var o=n(a[i]);e[o].references--}for(var l=s(t,r),u=0;u<a.length;u++){var c=n(a[u]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}a=l}}},569:t=>{"use strict";var e={};t.exports=function(t,n){var s=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!s)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");s.appendChild(n)}},9216:t=>{"use strict";t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},3565:(t,e,n)=>{"use strict";t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},7795:t=>{"use strict";t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var s="";n.supports&&(s+="@supports (".concat(n.supports,") {")),n.media&&(s+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(s+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),s+=n.css,r&&(s+="}"),n.media&&(s+="}"),n.supports&&(s+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(s+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(s,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},4589:t=>{"use strict";t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},914:()=>{},5410:()=>{},8628:()=>{},5778:()=>{},1601:()=>{},7792:()=>{},5042:()=>{},3897:t=>{t.exports=function(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,s=new Array(e);n<e;n++)s[n]=t[n];return s},t.exports.__esModule=!0,t.exports.default=t.exports},5372:t=>{t.exports=function(t){if(Array.isArray(t))return t},t.exports.__esModule=!0,t.exports.default=t.exports},6690:t=>{t.exports=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")},t.exports.__esModule=!0,t.exports.default=t.exports},9728:(t,e,n)=>{var s=n(4062);function r(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,s(r.key),r)}}t.exports=function(t,e,n){return e&&r(t.prototype,e),n&&r(t,n),Object.defineProperty(t,"prototype",{writable:!1}),t},t.exports.__esModule=!0,t.exports.default=t.exports},8872:t=>{t.exports=function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var s,r,a,i,o=[],l=!0,u=!1;try{if(a=(n=n.call(t)).next,0===e){if(Object(n)!==n)return;l=!1}else for(;!(l=(s=a.call(n)).done)&&(o.push(s.value),o.length!==e);l=!0);}catch(t){u=!0,r=t}finally{try{if(!l&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(u)throw r}}return o}},t.exports.__esModule=!0,t.exports.default=t.exports},2218:t=>{t.exports=function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")},t.exports.__esModule=!0,t.exports.default=t.exports},7424:(t,e,n)=>{var s=n(5372),r=n(8872),a=n(6116),i=n(2218);t.exports=function(t,e){return s(t)||r(t,e)||a(t,e)||i()},t.exports.__esModule=!0,t.exports.default=t.exports},5036:(t,e,n)=>{var s=n(8698).default;t.exports=function(t,e){if("object"!=s(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,e||"default");if("object"!=s(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)},t.exports.__esModule=!0,t.exports.default=t.exports},4062:(t,e,n)=>{var s=n(8698).default,r=n(5036);t.exports=function(t){var e=r(t,"string");return"symbol"==s(e)?e:String(e)},t.exports.__esModule=!0,t.exports.default=t.exports},8698:t=>{function e(n){return t.exports=e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t.exports.__esModule=!0,t.exports.default=t.exports,e(n)}t.exports=e,t.exports.__esModule=!0,t.exports.default=t.exports},6116:(t,e,n)=>{var s=n(3897);t.exports=function(t,e){if(t){if("string"==typeof t)return s(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?s(t,e):void 0}},t.exports.__esModule=!0,t.exports.default=t.exports}},e={};function n(s){var r=e[s];if(void 0!==r)return r.exports;var a=e[s]={id:s,loaded:!1,exports:{}};return t[s].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var s in e)n.o(e,s)&&!n.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.nmd=t=>(t.paths=[],t.children||(t.children=[]),t),n.nc=void 0,(()=>{"use strict";var t={};n.r(t),n.d(t,{assertParamsValid:()=>qh,computeFlatOffset:()=>ip,computeOutShape:()=>Kh,getNormalizedAxes:()=>Qh,isSliceContinous:()=>ap,maskToAxes:()=>Xh,parseSliceParams:()=>op,sliceInfo:()=>lp,startForAxis:()=>sp,startIndicesWithElidedDims:()=>tp,stopForAxis:()=>rp,stopIndicesWithElidedDims:()=>ep,stridesForAxis:()=>np,stridesWithElidedDims:()=>Yh});var e={};n.r(e),n.d(e,{collectGatherOpShapeInfo:()=>Ng,computeOutShape:()=>Tg,segOpComputeOptimalWindowSize:()=>Ig});var s={};n.r(s),n.d(s,{ERF_A1:()=>lg,ERF_A2:()=>ug,ERF_A3:()=>cg,ERF_A4:()=>hg,ERF_A5:()=>pg,ERF_P:()=>og,PARALLELIZE_THRESHOLD:()=>qm,SELU_SCALE:()=>ig,SELU_SCALEALPHA:()=>ag,applyActivation:()=>Wf,assertAndGetBroadcastShape:()=>cd,assertAxesAreInnerMostDims:()=>Pd,assertParamsConsistent:()=>jm,assignToTypedArray:()=>vg,axesAreInnerMostDims:()=>Fd,calculateShapes:()=>rg,combineLocations:()=>Md,complexWithEvenIndex:()=>yg,complexWithOddIndex:()=>bg,computeConv2DInfo:()=>$p,computeConv3DInfo:()=>Ep,computeDefaultPad:()=>Rp,computeDilation2DInfo:()=>Cp,computeOptimalWindowSize:()=>Xm,computeOutAndReduceShapes:()=>Ld,computeOutShape:()=>Hm,computePool2DInfo:()=>Sp,computePool3DInfo:()=>Ap,convertConv2DDataFormat:()=>Pp,eitherStridesOrDilationsAreOne:()=>zp,expandShapeToKeepDim:()=>zd,exponent:()=>kg,exponents:()=>wg,fromStringArrayToUint8:()=>Sg,fromUint8ToStringArray:()=>Cg,getAxesPermutation:()=>Vd,getBroadcastDims:()=>ld,getComplexWithIndex:()=>xg,getFusedBiasGradient:()=>Bf,getFusedDyActivation:()=>Vf,getImageCenter:()=>Km,getInnerMostAxes:()=>Wd,getPermuted:()=>Zm,getReductionAxes:()=>ud,getReshaped:()=>Ym,getReshapedPermuted:()=>Jm,getSliceBeginCoords:()=>Qm,getSliceSize:()=>tg,getUndoAxesPermutation:()=>Bd,log:()=>fg,mergeRealAndImagArrays:()=>mg,prepareAndValidate:()=>eg,prepareSplitSize:()=>_g,segment_util:()=>e,shouldFuse:()=>Uf,slice_util:()=>t,splitRealAndImagArrays:()=>gg,tupleValuesAreOne:()=>Lp,upcastType:()=>$c,validateInput:()=>sg,validateUpdateShape:()=>ng,warn:()=>dg});var r={};n.r(r),n.d(r,{json:()=>VI});var a={};n.r(a),n.d(a,{json:()=>BI});var i={};n.r(i),n.d(i,{json:()=>WI});var o={};n.r(o),n.d(o,{json:()=>UI});var l={};n.r(l),n.d(l,{json:()=>GI});var u={};n.r(u),n.d(u,{json:()=>jI});var c={};n.r(c),n.d(c,{json:()=>HI});var h={};n.r(h),n.d(h,{json:()=>qI});var p={};n.r(p),n.d(p,{json:()=>XI});var d={};n.r(d),n.d(d,{json:()=>KI});var f={};n.r(f),n.d(f,{json:()=>YI});var m={};n.r(m),n.d(m,{json:()=>ZI});var g={};n.r(g),n.d(g,{json:()=>JI});var y={};n.r(y),n.d(y,{json:()=>QI});var b={};n.r(b),n.d(b,{json:()=>tT});var x={};n.r(x),n.d(x,{json:()=>eT});var v={};n.r(v),n.d(v,{json:()=>nT});var w={};n.r(w),n.d(w,{addImpl:()=>nC,bincountImpl:()=>XC,bincountReduceImpl:()=>KC,ceilImpl:()=>JC,concatImpl:()=>rS,expImpl:()=>GS,expm1Impl:()=>KS,floorImpl:()=>gA,gatherV2Impl:()=>TA,greaterImpl:()=>CA,lessImpl:()=>VA,linSpaceImpl:()=>HA,logImpl:()=>XA,maxImpl:()=>u$,maximumImpl:()=>p$,minimumImpl:()=>I$,multiplyImpl:()=>JS,negImpl:()=>F$,prodImpl:()=>nE,rangeImpl:()=>rE,rsqrtImpl:()=>gE,simpleAbsImpl:()=>hC,sliceImpl:()=>GC,stridedSliceImpl:()=>XE,subImpl:()=>aA,tileImpl:()=>QE,topKImpl:()=>tR,transposeImpl:()=>bC,uniqueImpl:()=>iR});const k="14.7.77";var _=n(5382);const I=new WeakSet,T=new WeakMap,N=new WeakMap,C=new WeakMap,S=new WeakMap,A=new WeakMap,$=new WeakMap,E=new WeakMap,R=new WeakMap,O=new WeakMap,D={construct:()=>D},F=/^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/,M=(t,e)=>{const n=[];let s=t.replace(/^[\s]+/,""),r=s.match(F);for(;null!==r;){const t=r[1].slice(1,-1),a=r[0].replace(/([\s]+)?;?$/,"").replace(t,new URL(t,e).toString());n.push(a),s=s.slice(r[0].length).replace(/^[\s]+/,""),r=s.match(F)}return[n.join(";"),s]},L=t=>{if(void 0!==t&&!Array.isArray(t))throw new TypeError("The parameterDescriptors property of given value for processorCtor is not an array.")},z=t=>{if(!(t=>{try{new new Proxy(t,D)}catch{return!1}return!0})(t))throw new TypeError("The given value for processorCtor should be a constructor.");if(null===t.prototype||"object"!=typeof t.prototype)throw new TypeError("The given value for processorCtor should have a prototype.")},P=(t,e)=>{const n=t.get(e);if(void 0===n)throw new Error("A value with the given key could not be found.");return n},V=(t,e)=>{const n=Array.from(t).filter(e);if(n.length>1)throw Error("More than one element was found.");if(0===n.length)throw Error("No element was found.");const[s]=n;return t.delete(s),s},B=(t,e,n,s)=>{const r=P(t,e),a=V(r,(t=>t[0]===n&&t[1]===s));return 0===r.size&&t.delete(e),a},W=t=>P($,t),U=t=>{if(I.has(t))throw new Error("The AudioNode is already stored.");I.add(t),W(t).forEach((t=>t(!0)))},G=t=>"port"in t,j=t=>{if(!I.has(t))throw new Error("The AudioNode is not stored.");I.delete(t),W(t).forEach((t=>t(!1)))},H=(t,e)=>{!G(t)&&e.every((t=>0===t.size))&&j(t)},q={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",fftSize:2048,maxDecibels:-30,minDecibels:-100,smoothingTimeConstant:.8},X=(t,e)=>t.context===e,K=t=>{try{t.copyToChannel(new Float32Array(1),0,-1)}catch{return!1}return!0},Y=()=>new DOMException("","IndexSizeError"),Z=t=>{var e;t.getChannelData=(e=t.getChannelData,n=>{try{return e.call(t,n)}catch(t){if(12===t.code)throw Y();throw t}})},J={numberOfChannels:1},Q=-34028234663852886e22,tt=-Q,et=t=>I.has(t),nt={buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1},st=t=>P(T,t),rt=t=>P(C,t),at=(t,e)=>{const{activeInputs:n}=st(t);n.forEach((n=>n.forEach((([n])=>{e.includes(t)||at(n,[...e,t])}))));const s=(t=>"playbackRate"in t)(t)?[t.playbackRate]:G(t)?Array.from(t.parameters.values()):(t=>"frequency"in t&&"gain"in t)(t)?[t.Q,t.detune,t.frequency,t.gain]:(t=>"offset"in t)(t)?[t.offset]:(t=>!("frequency"in t)&&"gain"in t)(t)?[t.gain]:(t=>"detune"in t&&"frequency"in t)(t)?[t.detune,t.frequency]:(t=>"pan"in t)(t)?[t.pan]:[];for(const t of s){const n=rt(t);void 0!==n&&n.activeInputs.forEach((([t])=>at(t,e)))}et(t)&&j(t)},it=t=>{at(t.destination,[])},ot=t=>"context"in t,lt=t=>ot(t[0]),ut=(t,e,n,s)=>{for(const e of t)if(n(e)){if(s)return!1;throw Error("The set contains at least one similar element.")}return t.add(e),!0},ct=(t,e,[n,s],r)=>{ut(t,[e,n,s],(t=>t[0]===e&&t[1]===n),r)},ht=(t,[e,n,s],r)=>{const a=t.get(e);void 0===a?t.set(e,new Set([[n,s]])):ut(a,[n,s],(t=>t[0]===n),r)},pt=t=>"inputs"in t,dt=(t,e,n,s)=>{if(pt(e)){const r=e.inputs[s];return t.connect(r,n,0),[r,n,0]}return t.connect(e,n,s),[e,n,s]},ft=(t,e,n)=>{for(const s of t)if(s[0]===e&&s[1]===n)return t.delete(s),s;return null},mt=(t,e)=>{if(!W(t).delete(e))throw new Error("Missing the expected event listener.")},gt=(t,e,n)=>{const s=P(t,e),r=V(s,(t=>t[0]===n));return 0===s.size&&t.delete(e),r},yt=(t,e,n,s)=>{pt(e)?t.disconnect(e.inputs[s],n,0):t.disconnect(e,n,s)},bt=t=>P(N,t),xt=t=>P(S,t),vt=t=>E.has(t),wt=t=>!I.has(t),kt=(t,e)=>new Promise((n=>{if(null!==e)n(!0);else{const e=t.createScriptProcessor(256,1,1),s=t.createGain(),r=t.createBuffer(1,2,44100),a=r.getChannelData(0);a[0]=1,a[1]=1;const i=t.createBufferSource();i.buffer=r,i.loop=!0,i.connect(e).connect(t.destination),i.connect(s),i.disconnect(s),e.onaudioprocess=s=>{const r=s.inputBuffer.getChannelData(0);Array.prototype.some.call(r,(t=>1===t))?n(!0):n(!1),i.stop(),e.onaudioprocess=null,i.disconnect(e),e.disconnect(t.destination)},i.start()}})),_t=(t,e)=>{const n=new Map;for(const e of t)for(const t of e){const e=n.get(t);n.set(t,void 0===e?1:e+1)}n.forEach(((t,n)=>e(n,t)))},It=t=>"context"in t,Tt=t=>{const e=new Map;var n,s;t.connect=(s=t.connect.bind(t),(t,n=0,r=0)=>{const a=It(t)?s(t,n,r):s(t,n),i=e.get(t);return void 0===i?e.set(t,[{input:r,output:n}]):i.every((t=>t.input!==r||t.output!==n))&&i.push({input:r,output:n}),a}),t.disconnect=(n=t.disconnect,(s,r,a)=>{if(n.apply(t),void 0===s)e.clear();else if("number"==typeof s)for(const[t,n]of e){const r=n.filter((t=>t.output!==s));0===r.length?e.delete(t):e.set(t,r)}else if(e.has(s))if(void 0===r)e.delete(s);else{const t=e.get(s);if(void 0!==t){const n=t.filter((t=>t.output!==r&&(t.input!==a||void 0===a)));0===n.length?e.delete(s):e.set(s,n)}}for(const[n,s]of e)s.forEach((e=>{It(n)?t.connect(n,e.output,e.input):t.connect(n,e.output)}))})},Nt=(t,e,n,s,r)=>{const[a,i]=((t,e,n,s)=>{const{activeInputs:r,passiveInputs:a}=st(e),i=ft(r[s],t,n);return null===i?[B(a,t,n,s)[2],!1]:[i[2],!0]})(t,n,s,r);if(null!==a&&(mt(t,a),!i||e||vt(t)||yt(bt(t),bt(n),s,r)),et(n)){const{activeInputs:t}=st(n);H(n,t)}},Ct=(t,e,n,s)=>{const[r,a]=((t,e,n)=>{const{activeInputs:s,passiveInputs:r}=rt(e),a=ft(s,t,n);return null===a?[gt(r,t,n)[1],!1]:[a[2],!0]})(t,n,s);null!==r&&(mt(t,r),!a||e||vt(t)||bt(t).disconnect(xt(n),s))};class St{constructor(t){this._map=new Map(t)}get size(){return this._map.size}entries(){return this._map.entries()}forEach(t,e=null){return this._map.forEach(((n,s)=>t.call(e,n,s,this)))}get(t){return this._map.get(t)}has(t){return this._map.has(t)}keys(){return this._map.keys()}values(){return this._map.values()}}const At={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:1,numberOfOutputs:1,parameterData:{},processorOptions:{}};function $t(t,e,n,s,r){if("function"==typeof t.copyFromChannel)0===e[n].byteLength&&(e[n]=new Float32Array(128)),t.copyFromChannel(e[n],s,r);else{const a=t.getChannelData(s);if(0===e[n].byteLength)e[n]=a.slice(r,r+128);else{const t=new Float32Array(a.buffer,r*Float32Array.BYTES_PER_ELEMENT,128);e[n].set(t)}}}const Et=(t,e,n,s,r)=>{"function"==typeof t.copyToChannel?0!==e[n].byteLength&&t.copyToChannel(e[n],s,r):0!==e[n].byteLength&&t.getChannelData(s).set(e[n],r)},Rt=(t,e)=>{const n=[];for(let s=0;s<t;s+=1){const t=[],r="number"==typeof e?e:e[s];for(let e=0;e<r;e+=1)t.push(new Float32Array(128));n.push(t)}return n},Ot=async(t,e,n,s,r,a,i)=>{const o=null===e?128*Math.ceil(t.context.length/128):e.length,l=s.channelCount*s.numberOfInputs,u=r.reduce(((t,e)=>t+e),0),c=0===u?null:n.createBuffer(u,o,n.sampleRate);if(void 0===a)throw new Error("Missing the processor constructor.");const h=st(t),p=await((t,e)=>{const n=P(O,t),s=bt(e);return P(n,s)})(n,t),d=Rt(s.numberOfInputs,s.channelCount),f=Rt(s.numberOfOutputs,r),m=Array.from(t.parameters.keys()).reduce(((t,e)=>({...t,[e]:new Float32Array(128)})),{});for(let u=0;u<o;u+=128){if(s.numberOfInputs>0&&null!==e)for(let t=0;t<s.numberOfInputs;t+=1)for(let n=0;n<s.channelCount;n+=1)$t(e,d[t],n,n,u);void 0!==a.parameterDescriptors&&null!==e&&a.parameterDescriptors.forEach((({name:t},n)=>{$t(e,m,t,l+n,u)}));for(let t=0;t<s.numberOfInputs;t+=1)for(let e=0;e<r[t];e+=1)0===f[t][e].byteLength&&(f[t][e]=new Float32Array(128));try{const t=d.map(((t,e)=>0===h.activeInputs[e].size?[]:t)),e=i(u/n.sampleRate,n.sampleRate,(()=>p.process(t,f,m)));if(null!==c)for(let t=0,e=0;t<s.numberOfOutputs;t+=1){for(let n=0;n<r[t];n+=1)Et(c,f[t],n,e+n,u);e+=r[t]}if(!e)break}catch(e){t.dispatchEvent(new ErrorEvent("processorerror",{colno:e.colno,filename:e.filename,lineno:e.lineno,message:e.message}));break}}return c},Dt={Q:1,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:350,gain:0,type:"lowpass"},Ft={channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6},Mt={channelCount:6,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:6},Lt={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",offset:1},zt={buffer:null,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",disableNormalization:!1},Pt=t=>{const{port1:e,port2:n}=new MessageChannel;return new Promise((s=>{const r=()=>{n.onmessage=null,e.close(),n.close(),s()};n.onmessage=()=>r();try{e.postMessage(t,[t])}catch{}finally{r()}}))},Vt={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",delayTime:0,maxDelayTime:1},Bt=(t,e,n)=>{const s=e[n];if(void 0===s)throw t();return s},Wt={attack:.003,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",knee:30,ratio:12,release:.25,threshold:-24},Ut={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",gain:1},Gt=()=>new DOMException("","InvalidStateError"),jt=()=>new DOMException("","InvalidAccessError"),Ht={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers"},qt=(t,e,n,s,r,a,i,o,l,u,c)=>{const h=u.length;let p=o;for(let o=0;o<h;o+=1){let h=n[0]*u[o];for(let e=1;e<r;e+=1){const s=p-e&l-1;h+=n[e]*a[s],h-=t[e]*i[s]}for(let t=r;t<s;t+=1)h+=n[t]*a[p-t&l-1];for(let n=r;n<e;n+=1)h-=t[n]*i[p-n&l-1];a[p]=u[o],i[p]=h,p=p+1&l-1,c[o]=h}return p},Xt={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers"},Kt=t=>{const e=new Uint32Array([1179011410,40,1163280727,544501094,16,131073,44100,176400,1048580,1635017060,4,0]);try{const n=t.decodeAudioData(e.buffer,(()=>{}));return void 0!==n&&(n.catch((()=>{})),!0)}catch{}return!1},Yt=(t,e,n)=>{const s=e[n];void 0!==s&&s!==t[n]&&(t[n]=s)},Zt=(t,e)=>{Yt(t,e,"channelCount"),Yt(t,e,"channelCountMode"),Yt(t,e,"channelInterpretation")},Jt=t=>"function"==typeof t.getFloatTimeDomainData,Qt=(t,e,n)=>{const s=e[n];void 0!==s&&s!==t[n].value&&(t[n].value=s)},te=t=>{var e;t.start=(e=t.start,(n=0,s=0,r)=>{if("number"==typeof r&&r<0||s<0||n<0)throw new RangeError("The parameters can't be negative.");e.call(t,n,s,r)})},ee=t=>{var e;t.stop=(e=t.stop,(n=0)=>{if(n<0)throw new RangeError("The parameter can't be negative.");e.call(t,n)})},ne=(t,e)=>null===t?512:Math.max(512,Math.min(16384,Math.pow(2,Math.round(Math.log2(t*e))))),se=(t,e)=>{const n=t.createBiquadFilter();return Zt(n,e),Qt(n,e,"Q"),Qt(n,e,"detune"),Qt(n,e,"frequency"),Qt(n,e,"gain"),Yt(n,e,"type"),n},re=(t,e)=>{const n=t.createChannelSplitter(e.numberOfOutputs);return Zt(n,e),(t=>{const e=t.numberOfOutputs;Object.defineProperty(t,"channelCount",{get:()=>e,set:t=>{if(t!==e)throw Gt()}}),Object.defineProperty(t,"channelCountMode",{get:()=>"explicit",set:t=>{if("explicit"!==t)throw Gt()}}),Object.defineProperty(t,"channelInterpretation",{get:()=>"discrete",set:t=>{if("discrete"!==t)throw Gt()}})})(n),n},ae=(t,e)=>(t.connect=e.connect.bind(e),t.disconnect=e.disconnect.bind(e),t),ie=(t,e)=>{const n=t.createDelay(e.maxDelayTime);return Zt(n,e),Qt(n,e,"delayTime"),n},oe=(t,e)=>{const n=t.createGain();return Zt(n,e),Qt(n,e,"gain"),n};function le(t,e){const n=e[0]*e[0]+e[1]*e[1];return[(t[0]*e[0]+t[1]*e[1])/n,(t[1]*e[0]-t[0]*e[1])/n]}function ue(t,e){let n=[0,0];for(let a=t.length-1;a>=0;a-=1)r=e,n=[(s=n)[0]*r[0]-s[1]*r[1],s[0]*r[1]+s[1]*r[0]],n[0]+=t[a];var s,r;return n}const ce=(t,e,n,s)=>t.createScriptProcessor(e,n,s),he=()=>new DOMException("","NotSupportedError"),pe={numberOfChannels:1},de={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:440,periodicWave:void 0,type:"sine"},fe={channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:1,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1},me={disableNormalization:!1},ge={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",pan:0},ye=()=>new DOMException("","UnknownError"),be={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",curve:null,oversample:"none"},xe=(t,e,n)=>void 0===t.copyFromChannel?t.getChannelData(n)[0]:(t.copyFromChannel(e,n),e[0]),ve=t=>{if(null===t)return!1;const e=t.length;return e%2!=0?0!==t[Math.floor(e/2)]:t[e/2-1]+t[e/2]!==0},we=(t,e,n,s)=>{let r=t;for(;!r.hasOwnProperty(e);)r=Object.getPrototypeOf(r);const{get:a,set:i}=Object.getOwnPropertyDescriptor(r,e);Object.defineProperty(t,e,{get:n(a),set:s(i)})},ke=(t,e,n)=>{try{t.setValueAtTime(e,n)}catch(s){if(9!==s.code)throw s;ke(t,e,n+1e-7)}},_e=t=>{const e=t.createOscillator();try{e.start(-1)}catch(t){return t instanceof RangeError}return!1},Ie=t=>{const e=t.createBuffer(1,1,44100),n=t.createBufferSource();n.buffer=e,n.start(),n.stop();try{return n.stop(),!0}catch{return!1}},Te=t=>{const e=t.createOscillator();try{e.stop(-1)}catch(t){return t instanceof RangeError}return!1},Ne=(t,e)=>{const n=e.createGain();t.connect(n);const s=(r=t.disconnect,()=>{r.call(t,n),t.removeEventListener("ended",s)});var r;t.addEventListener("ended",s),ae(t,n),t.stop=(e=>{let s=!1;return(r=0)=>{if(s)try{e.call(t,r)}catch{n.gain.setValueAtTime(0,r)}else e.call(t,r),s=!0}})(t.stop)},Ce=(t,e)=>n=>{const s={value:t};return Object.defineProperties(n,{currentTarget:s,target:s}),"function"==typeof e?e.call(t,n):e.handleEvent.call(t,n)},Se=(t=>(e,n,[s,r,a],i)=>{t(e[r],[n,s,a],(t=>t[0]===n&&t[1]===s),i)})(ut),Ae=(t=>(e,n,[s,r,a],i)=>{const o=e.get(s);void 0===o?e.set(s,new Set([[r,n,a]])):t(o,[r,n,a],(t=>t[0]===r&&t[1]===n),i)})(ut),$e=(t=>(e,n,s,r)=>t(e[r],(t=>t[0]===n&&t[1]===s)))(V),Ee=new WeakMap,Re=(t=>e=>{var n;return null!==(n=t.get(e))&&void 0!==n?n:0})(Ee),Oe=(De=new Map,Fe=new WeakMap,(t,e)=>{const n=Fe.get(t);if(void 0!==n)return n;const s=De.get(t);if(void 0!==s)return s;try{const n=e();return n instanceof Promise?(De.set(t,n),n.catch((()=>!1)).then((e=>(De.delete(t),Fe.set(t,e),e)))):(Fe.set(t,n),n)}catch{return Fe.set(t,!1),!1}});var De,Fe;const Me="undefined"==typeof window?null:window,Le=((t,e)=>(n,s)=>{const r=n.createAnalyser();if(Zt(r,s),!(s.maxDecibels>s.minDecibels))throw e();return Yt(r,s,"fftSize"),Yt(r,s,"maxDecibels"),Yt(r,s,"minDecibels"),Yt(r,s,"smoothingTimeConstant"),t(Jt,(()=>Jt(r)))||(t=>{t.getFloatTimeDomainData=e=>{const n=new Uint8Array(e.length);t.getByteTimeDomainData(n);const s=Math.max(n.length,t.fftSize);for(let t=0;t<s;t+=1)e[t]=.0078125*(n[t]-128);return e}})(r),r})(Oe,Y),ze=(t=>e=>{const n=t(e);if(null===n.renderer)throw new Error("Missing the renderer of the given AudioNode in the audio graph.");return n.renderer})(st),Pe=((t,e,n)=>async(s,r,a)=>{const i=t(s);await Promise.all(i.activeInputs.map(((t,i)=>Array.from(t).map((async([t,o])=>{const l=e(t),u=await l.render(t,r),c=s.context.destination;n(t)||s===c&&n(s)||u.connect(a,o,i)})))).reduce(((t,e)=>[...t,...e]),[]))})(st,ze,vt),Ve=((t,e,n)=>()=>{const s=new WeakMap;return{render(r,a){const i=s.get(a);return void 0!==i?Promise.resolve(i):(async(r,a)=>{let i=e(r);if(!X(i,a)){const e={channelCount:i.channelCount,channelCountMode:i.channelCountMode,channelInterpretation:i.channelInterpretation,fftSize:i.fftSize,maxDecibels:i.maxDecibels,minDecibels:i.minDecibels,smoothingTimeConstant:i.smoothingTimeConstant};i=t(a,e)}return s.set(a,i),await n(r,a,i),i})(r,a)}}})(Le,bt,Pe),Be=(We=A,t=>{const e=We.get(t);if(void 0===e)throw Gt();return e});var We;const Ue=(t=>null===t?null:t.hasOwnProperty("OfflineAudioContext")?t.OfflineAudioContext:t.hasOwnProperty("webkitOfflineAudioContext")?t.webkitOfflineAudioContext:null)(Me),Ge=(t=>e=>null!==t&&e instanceof t)(Ue),je=new WeakMap,He=(t=>class{constructor(t){this._nativeEventTarget=t,this._listeners=new WeakMap}addEventListener(e,n,s){if(null!==n){let r=this._listeners.get(n);void 0===r&&(r=t(this,n),"function"==typeof n&&this._listeners.set(n,r)),this._nativeEventTarget.addEventListener(e,r,s)}}dispatchEvent(t){return this._nativeEventTarget.dispatchEvent(t)}removeEventListener(t,e,n){const s=null===e?void 0:this._listeners.get(e);this._nativeEventTarget.removeEventListener(t,void 0===s?null:s,n)}})(Ce),qe=(t=>null===t?null:t.hasOwnProperty("AudioContext")?t.AudioContext:t.hasOwnProperty("webkitAudioContext")?t.webkitAudioContext:null)(Me),Xe=(t=>e=>null!==t&&e instanceof t)(qe),Ke=(t=>e=>null!==t&&"function"==typeof t.AudioNode&&e instanceof t.AudioNode)(Me),Ye=(t=>e=>null!==t&&"function"==typeof t.AudioParam&&e instanceof t.AudioParam)(Me),Ze=(t=>null===t?null:t.hasOwnProperty("AudioWorkletNode")?t.AudioWorkletNode:null)(Me),Je=((t,e,n,s,r,a,i,o,l,u,c,h,p,d,f,m)=>class extends u{constructor(e,s,r,a){super(r),this._context=e,this._nativeAudioNode=r;const i=c(e);h(i)&&!0!==n(kt,(()=>kt(i,m)))&&Tt(r),N.set(this,r),$.set(this,new Set),"closed"!==e.state&&s&&U(this),t(this,a,r)}get channelCount(){return this._nativeAudioNode.channelCount}set channelCount(t){this._nativeAudioNode.channelCount=t}get channelCountMode(){return this._nativeAudioNode.channelCountMode}set channelCountMode(t){this._nativeAudioNode.channelCountMode=t}get channelInterpretation(){return this._nativeAudioNode.channelInterpretation}set channelInterpretation(t){this._nativeAudioNode.channelInterpretation=t}get context(){return this._context}get numberOfInputs(){return this._nativeAudioNode.numberOfInputs}get numberOfOutputs(){return this._nativeAudioNode.numberOfOutputs}connect(t,n=0,o=0){if(n<0||n>=this._nativeAudioNode.numberOfOutputs)throw r();const u=c(this._context),h=f(u);if(p(t)||d(t))throw a();if(ot(t)){const r=bt(t);try{const e=dt(this._nativeAudioNode,r,n,o),s=wt(this);(h||s)&&this._nativeAudioNode.disconnect(...e),"closed"!==this.context.state&&!s&&wt(t)&&U(t)}catch(t){if(12===t.code)throw a();throw t}if(e(this,t,n,o,h)){const e=l([this],t);_t(e,s(h))}return t}const m=xt(t);if("playbackRate"===m.name&&1024===m.maxValue)throw i();try{this._nativeAudioNode.connect(m,n),(h||wt(this))&&this._nativeAudioNode.disconnect(m,n)}catch(t){if(12===t.code)throw a();throw t}if(((t,e,n,s)=>{const{activeInputs:r,passiveInputs:a}=rt(e),{outputs:i}=st(t),o=W(t),l=i=>{const o=bt(t),l=xt(e);if(i){const e=gt(a,t,n);ct(r,t,e,!1),s||vt(t)||o.connect(l,n)}else{const e=((t,e,n)=>V(t,(t=>t[0]===e&&t[1]===n)))(r,t,n);ht(a,e,!1),s||vt(t)||o.disconnect(l,n)}};return!!ut(i,[e,n],(t=>t[0]===e&&t[1]===n),!0)&&(o.add(l),et(t)?ct(r,t,[n,l],!0):ht(a,[t,n,l],!0),!0)})(this,t,n,h)){const e=l([this],t);_t(e,s(h))}}disconnect(t,e,n){let s;const i=c(this._context),u=f(i);if(void 0===t)s=((t,e)=>{const n=st(t),s=[];for(const r of n.outputs)lt(r)?Nt(t,e,...r):Ct(t,e,...r),s.push(r[0]);return n.outputs.clear(),s})(this,u);else if("number"==typeof t){if(t<0||t>=this.numberOfOutputs)throw r();s=((t,e,n)=>{const s=st(t),r=[];for(const a of s.outputs)a[1]===n&&(lt(a)?Nt(t,e,...a):Ct(t,e,...a),r.push(a[0]),s.outputs.delete(a));return r})(this,u,t)}else{if(void 0!==e&&(e<0||e>=this.numberOfOutputs))throw r();if(ot(t)&&void 0!==n&&(n<0||n>=t.numberOfInputs))throw r();if(s=((t,e,n,s,r)=>{const a=st(t);return Array.from(a.outputs).filter((t=>!(t[0]!==n||void 0!==s&&t[1]!==s||void 0!==r&&t[2]!==r))).map((n=>(lt(n)?Nt(t,e,...n):Ct(t,e,...n),a.outputs.delete(n),n[0])))})(this,u,t,e,n),0===s.length)throw a()}for(const t of s){const e=l([this],t);_t(e,o)}}})((Qe=T,(t,e,n)=>{const s=[];for(let t=0;t<n.numberOfInputs;t+=1)s.push(new Set);Qe.set(t,{activeInputs:s,outputs:new Set,passiveInputs:new WeakMap,renderer:e})}),((t,e,n,s,r,a,i,o,l,u,c,h,p)=>{const d=new WeakMap;return(f,m,g,y,b)=>{const{activeInputs:x,passiveInputs:v}=a(m),{outputs:w}=a(f),k=o(f),_=a=>{const o=l(m),u=l(f);if(a){const e=B(v,f,g,y);t(x,f,e,!1),b||h(f)||n(u,o,g,y),p(m)&&U(m)}else{const t=s(x,f,g,y);e(v,y,t,!1),b||h(f)||r(u,o,g,y);const n=i(m);if(0===n)c(m)&&H(m,x);else{const t=d.get(m);void 0!==t&&clearTimeout(t),d.set(m,setTimeout((()=>{c(m)&&H(m,x)}),1e3*n))}}};return!!u(w,[m,g,y],(t=>t[0]===m&&t[1]===g&&t[2]===y),!0)&&(k.add(_),c(f)?t(x,f,[g,y,_],!0):e(v,y,[f,g,_],!0),!0)}})(Se,Ae,dt,$e,yt,st,Re,W,bt,ut,et,vt,wt),Oe,((t,e,n,s,r,a)=>i=>(o,l)=>{const u=t.get(o);if(void 0===u){if(!i&&a(o)){const t=s(o),{outputs:a}=n(o);for(const n of a)if(lt(n)){const r=s(n[0]);e(t,r,n[1],n[2])}else{const e=r(n[0]);t.disconnect(e,n[1])}}t.set(o,l)}else t.set(o,u+l)})(E,yt,st,bt,xt,et),Y,jt,he,((t,e,n,s,r,a,i,o)=>(l,u)=>{const c=e.get(l);if(void 0===c)throw new Error("Missing the expected cycle count.");const h=a(l.context),p=o(h);if(c===u){if(e.delete(l),!p&&i(l)){const e=s(l),{outputs:a}=n(l);for(const n of a)if(lt(n)){const r=s(n[0]);t(e,r,n[1],n[2])}else{const t=r(n[0]);e.connect(t,n[1])}}}else e.set(l,c-u)})(dt,E,st,bt,xt,Be,et,Ge),((t,e,n)=>function s(r,a){const i=ot(a)?a:n(t,a);if((t=>"delayTime"in t)(i))return[];if(r[0]===i)return[r];if(r.includes(i))return[];const{outputs:o}=e(i);return Array.from(o).map((t=>s([...r,i],t[0]))).reduce(((t,e)=>t.concat(e)),[])})(je,st,P),He,Be,Xe,Ke,Ye,Ge,Ze);var Qe;const tn=((t,e,n,s,r,a)=>class extends t{constructor(t,n){const i=r(t),o={...q,...n},l=s(i,o);super(t,!1,l,a(i)?e():null),this._nativeAnalyserNode=l}get fftSize(){return this._nativeAnalyserNode.fftSize}set fftSize(t){this._nativeAnalyserNode.fftSize=t}get frequencyBinCount(){return this._nativeAnalyserNode.frequencyBinCount}get maxDecibels(){return this._nativeAnalyserNode.maxDecibels}set maxDecibels(t){const e=this._nativeAnalyserNode.maxDecibels;if(this._nativeAnalyserNode.maxDecibels=t,!(t>this._nativeAnalyserNode.minDecibels))throw this._nativeAnalyserNode.maxDecibels=e,n()}get minDecibels(){return this._nativeAnalyserNode.minDecibels}set minDecibels(t){const e=this._nativeAnalyserNode.minDecibels;if(this._nativeAnalyserNode.minDecibels=t,!(this._nativeAnalyserNode.maxDecibels>t))throw this._nativeAnalyserNode.minDecibels=e,n()}get smoothingTimeConstant(){return this._nativeAnalyserNode.smoothingTimeConstant}set smoothingTimeConstant(t){this._nativeAnalyserNode.smoothingTimeConstant=t}getByteFrequencyData(t){this._nativeAnalyserNode.getByteFrequencyData(t)}getByteTimeDomainData(t){this._nativeAnalyserNode.getByteTimeDomainData(t)}getFloatFrequencyData(t){this._nativeAnalyserNode.getFloatFrequencyData(t)}getFloatTimeDomainData(t){this._nativeAnalyserNode.getFloatTimeDomainData(t)}})(Je,Ve,Y,Le,Be,Ge),en=new WeakSet,nn=(t=>null===t?null:t.hasOwnProperty("AudioBuffer")?t.AudioBuffer:null)(Me),sn=(rn=new Uint32Array(1),t=>(rn[0]=t,rn[0]));var rn;const an=((t,e)=>n=>{n.copyFromChannel=(s,r,a=0)=>{const i=t(a),o=t(r);if(o>=n.numberOfChannels)throw e();const l=n.length,u=n.getChannelData(o),c=s.length;for(let t=i<0?-i:0;t+i<l&&t<c;t+=1)s[t]=u[t+i]},n.copyToChannel=(s,r,a=0)=>{const i=t(a),o=t(r);if(o>=n.numberOfChannels)throw e();const l=n.length,u=n.getChannelData(o),c=s.length;for(let t=i<0?-i:0;t+i<l&&t<c;t+=1)u[t+i]=s[t]}})(sn,Y),on=(t=>e=>{e.copyFromChannel=(n=>(s,r,a=0)=>{const i=t(a),o=t(r);if(i<e.length)return n.call(e,s,o,i)})(e.copyFromChannel),e.copyToChannel=(n=>(s,r,a=0)=>{const i=t(a),o=t(r);if(i<e.length)return n.call(e,s,o,i)})(e.copyToChannel)})(sn),ln=((t,e,n,s,r,a,i,o)=>{let l=null;return class u{constructor(u){if(null===r)throw new Error("Missing the native OfflineAudioContext constructor.");const{length:c,numberOfChannels:h,sampleRate:p}={...J,...u};null===l&&(l=new r(1,1,44100));const d=null!==s&&e(a,a)?new s({length:c,numberOfChannels:h,sampleRate:p}):l.createBuffer(h,c,p);if(0===d.numberOfChannels)throw n();return"function"!=typeof d.copyFromChannel?(i(d),Z(d)):e(K,(()=>K(d)))||o(d),t.add(d),d}static[Symbol.hasInstance](e){return null!==e&&"object"==typeof e&&Object.getPrototypeOf(e)===u.prototype||t.has(e)}}})(en,Oe,he,nn,Ue,(t=>()=>{if(null===t)return!1;try{new t({length:1,sampleRate:44100})}catch{return!1}return!0})(nn),an,on),un=(t=>(e,n)=>{const s=t(e,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});n.connect(s).connect(e.destination);const r=()=>{n.removeEventListener("ended",r),n.disconnect(s),s.disconnect()};n.addEventListener("ended",r)})(oe),cn=((t,e,n)=>async(s,r,a)=>{const i=e(s);await Promise.all(Array.from(i.activeInputs).map((async([e,s])=>{const i=t(e),o=await i.render(e,r);n(e)||o.connect(a,s)})))})(ze,rt,vt),hn=(t=>(e,n,s)=>t(n,e,s))(cn),pn=((t,e,n,s,r,a,i,o,l,u,c)=>(l,h)=>{const p=l.createBufferSource();return Zt(p,h),Qt(p,h,"playbackRate"),Yt(p,h,"buffer"),Yt(p,h,"loop"),Yt(p,h,"loopEnd"),Yt(p,h,"loopStart"),e(n,(()=>n(l)))||(t=>{t.start=(e=>{let n=!1;return(s=0,r=0,a)=>{if(n)throw Gt();e.call(t,s,r,a),n=!0}})(t.start)})(p),e(s,(()=>s(l)))||(t=>{t.start=(e=t.start,(n=0,s=0,r)=>{const a=t.buffer,i=null===a?s:Math.min(a.duration,s);null!==a&&i>a.duration-.5/t.context.sampleRate?e.call(t,n,0,0):e.call(t,n,i,r)});var e})(p),e(r,(()=>r(l)))||u(p,l),e(a,(()=>a(l)))||te(p),e(i,(()=>i(l)))||c(p,l),e(o,(()=>o(l)))||ee(p),t(l,p),p})(un,Oe,(t=>{const e=t.createBufferSource();e.start();try{e.start()}catch{return!0}return!1}),(t=>{const e=t.createBufferSource(),n=t.createBuffer(1,1,44100);e.buffer=n;try{e.start(0,1)}catch{return!1}return!0}),(t=>{const e=t.createBufferSource();e.start();try{e.stop()}catch{return!1}return!0}),_e,Ie,Te,0,(t=>(e,n)=>{const s=n.createBuffer(1,1,44100);null===e.buffer&&(e.buffer=s),t(e,"buffer",(t=>()=>{const n=t.call(e);return n===s?null:n}),(t=>n=>t.call(e,null===n?s:n)))})(we),Ne),dn=((t,e)=>(n,s,r)=>(t(s).replay(r),e(s,n,r)))((t=>e=>{const n=t(e);if(null===n.renderer)throw new Error("Missing the renderer of the given AudioParam in the audio graph.");return n.renderer})(rt),cn),fn=((t,e,n,s,r)=>()=>{const a=new WeakMap;let i=null,o=null;return{set start(t){i=t},set stop(t){o=t},render(l,u){const c=a.get(u);return void 0!==c?Promise.resolve(c):(async(l,u)=>{let c=n(l);const h=X(c,u);if(!h){const t={buffer:c.buffer,channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,loop:c.loop,loopEnd:c.loopEnd,loopStart:c.loopStart,playbackRate:c.playbackRate.value};c=e(u,t),null!==i&&c.start(...i),null!==o&&c.stop(o)}return a.set(u,c),h?await t(u,l.playbackRate,c.playbackRate):await s(u,l.playbackRate,c.playbackRate),await r(l,u,c),c})(l,u)}}})(hn,pn,bt,dn,Pe),mn=((t,e,n,s,r,a,i,o,l,u,c,h,p)=>(s,d,f,m=null,g=null)=>{const y=f.value,b=new _.AutomationEventList(y),x=d?(t=>({replay(e){for(const n of t)if("exponentialRampToValue"===n.type){const{endTime:t,value:s}=n;e.exponentialRampToValueAtTime(s,t)}else if("linearRampToValue"===n.type){const{endTime:t,value:s}=n;e.linearRampToValueAtTime(s,t)}else if("setTarget"===n.type){const{startTime:t,target:s,timeConstant:r}=n;e.setTargetAtTime(s,t,r)}else if("setValue"===n.type){const{startTime:t,value:s}=n;e.setValueAtTime(s,t)}else{if("setValueCurve"!==n.type)throw new Error("Can't apply an unknown automation.");{const{duration:t,startTime:s,values:r}=n;e.setValueCurveAtTime(r,s,t)}}}}))(b):null,v={get defaultValue(){return y},get maxValue(){return null===m?f.maxValue:m},get minValue(){return null===g?f.minValue:g},get value(){return f.value},set value(t){f.value=t,v.setValueAtTime(t,s.context.currentTime)},cancelAndHoldAtTime(t){if("function"==typeof f.cancelAndHoldAtTime)null===x&&b.flush(s.context.currentTime),b.add(r(t)),f.cancelAndHoldAtTime(t);else{const e=Array.from(b).pop();null===x&&b.flush(s.context.currentTime),b.add(r(t));const n=Array.from(b).pop();f.cancelScheduledValues(t),e!==n&&void 0!==n&&("exponentialRampToValue"===n.type?f.exponentialRampToValueAtTime(n.value,n.endTime):"linearRampToValue"===n.type?f.linearRampToValueAtTime(n.value,n.endTime):"setValue"===n.type?f.setValueAtTime(n.value,n.startTime):"setValueCurve"===n.type&&f.setValueCurveAtTime(n.values,n.startTime,n.duration))}return v},cancelScheduledValues:t=>(null===x&&b.flush(s.context.currentTime),b.add(a(t)),f.cancelScheduledValues(t),v),exponentialRampToValueAtTime(t,e){if(0===t)throw new RangeError;if(!Number.isFinite(e)||e<0)throw new RangeError;const n=s.context.currentTime;return null===x&&b.flush(n),0===Array.from(b).length&&(b.add(u(y,n)),f.setValueAtTime(y,n)),b.add(i(t,e)),f.exponentialRampToValueAtTime(t,e),v},linearRampToValueAtTime(t,e){const n=s.context.currentTime;return null===x&&b.flush(n),0===Array.from(b).length&&(b.add(u(y,n)),f.setValueAtTime(y,n)),b.add(o(t,e)),f.linearRampToValueAtTime(t,e),v},setTargetAtTime:(t,e,n)=>(null===x&&b.flush(s.context.currentTime),b.add(l(t,e,n)),f.setTargetAtTime(t,e,n),v),setValueAtTime:(t,e)=>(null===x&&b.flush(s.context.currentTime),b.add(u(t,e)),f.setValueAtTime(t,e),v),setValueCurveAtTime(t,e,n){const r=t instanceof Float32Array?t:new Float32Array(t);if(null!==h&&"webkitAudioContext"===h.name){const t=e+n,a=s.context.sampleRate,i=Math.ceil(e*a),o=Math.floor(t*a),l=o-i,u=new Float32Array(l);for(let t=0;t<l;t+=1){const s=(r.length-1)/n*((i+t)/a-e),o=Math.floor(s),l=Math.ceil(s);u[t]=o===l?r[o]:(1-(s-o))*r[o]+(1-(l-s))*r[l]}null===x&&b.flush(s.context.currentTime),b.add(c(u,e,n)),f.setValueCurveAtTime(u,e,n);const h=o/a;h<t&&p(v,u[u.length-1],h),p(v,r[r.length-1],t)}else null===x&&b.flush(s.context.currentTime),b.add(c(r,e,n)),f.setValueCurveAtTime(r,e,n);return v}};return n.set(v,f),e.set(v,s),t(v,x),v})((gn=C,(t,e)=>{gn.set(t,{activeInputs:new Set,passiveInputs:new WeakMap,renderer:e})}),je,S,0,_.createCancelAndHoldAutomationEvent,_.createCancelScheduledValuesAutomationEvent,_.createExponentialRampToValueAutomationEvent,_.createLinearRampToValueAutomationEvent,_.createSetTargetAutomationEvent,_.createSetValueAutomationEvent,_.createSetValueCurveAutomationEvent,qe,ke);var gn;const yn=((t,e,n,s,r,a,i,o)=>class extends t{constructor(t,s){const o=a(t),l={...nt,...s},u=r(o,l),c=i(o),h=c?e():null;super(t,!1,u,h),this._audioBufferSourceNodeRenderer=h,this._isBufferNullified=!1,this._isBufferSet=null!==l.buffer,this._nativeAudioBufferSourceNode=u,this._onended=null,this._playbackRate=n(this,c,u.playbackRate,tt,Q)}get buffer(){return this._isBufferNullified?null:this._nativeAudioBufferSourceNode.buffer}set buffer(t){if(this._nativeAudioBufferSourceNode.buffer=t,null!==t){if(this._isBufferSet)throw s();this._isBufferSet=!0}}get loop(){return this._nativeAudioBufferSourceNode.loop}set loop(t){this._nativeAudioBufferSourceNode.loop=t}get loopEnd(){return this._nativeAudioBufferSourceNode.loopEnd}set loopEnd(t){this._nativeAudioBufferSourceNode.loopEnd=t}get loopStart(){return this._nativeAudioBufferSourceNode.loopStart}set loopStart(t){this._nativeAudioBufferSourceNode.loopStart=t}get onended(){return this._onended}set onended(t){const e="function"==typeof t?o(this,t):null;this._nativeAudioBufferSourceNode.onended=e;const n=this._nativeAudioBufferSourceNode.onended;this._onended=null!==n&&n===e?t:n}get playbackRate(){return this._playbackRate}start(t=0,e=0,n){if(this._nativeAudioBufferSourceNode.start(t,e,n),null!==this._audioBufferSourceNodeRenderer&&(this._audioBufferSourceNodeRenderer.start=void 0===n?[t,e]:[t,e,n]),"closed"!==this.context.state){U(this);const t=()=>{this._nativeAudioBufferSourceNode.removeEventListener("ended",t),et(this)&&j(this)};this._nativeAudioBufferSourceNode.addEventListener("ended",t)}}stop(t=0){this._nativeAudioBufferSourceNode.stop(t),null!==this._audioBufferSourceNodeRenderer&&(this._audioBufferSourceNodeRenderer.stop=t)}})(Je,fn,mn,Gt,pn,Be,Ge,Ce),bn=((t,e,n,s,r,a,i,o)=>class extends t{constructor(t,e){const n=a(t),s=i(n),l=r(n,e,s);super(t,!1,l,s?(t=>{const e=new WeakMap;return{render(n,s){const r=e.get(s);return void 0!==r?Promise.resolve(r):(async(n,s)=>{const r=s.destination;return e.set(s,r),await t(n,s,r),r})(n,s)}}})(o):null),this._isNodeOfNativeOfflineAudioContext=s,this._nativeAudioDestinationNode=l}get channelCount(){return this._nativeAudioDestinationNode.channelCount}set channelCount(t){if(this._isNodeOfNativeOfflineAudioContext)throw s();if(t>this._nativeAudioDestinationNode.maxChannelCount)throw n();this._nativeAudioDestinationNode.channelCount=t}get channelCountMode(){return this._nativeAudioDestinationNode.channelCountMode}set channelCountMode(t){if(this._isNodeOfNativeOfflineAudioContext)throw s();this._nativeAudioDestinationNode.channelCountMode=t}get maxChannelCount(){return this._nativeAudioDestinationNode.maxChannelCount}})(Je,0,Y,Gt,((t,e)=>(n,s,r)=>{const a=n.destination;if(a.channelCount!==s)try{a.channelCount=s}catch{}r&&"explicit"!==a.channelCountMode&&(a.channelCountMode="explicit"),0===a.maxChannelCount&&Object.defineProperty(a,"maxChannelCount",{value:s});const i=t(n,{channelCount:s,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,gain:1});return e(i,"channelCount",(t=>()=>t.call(i)),(t=>e=>{t.call(i,e);try{a.channelCount=e}catch(t){if(e>a.maxChannelCount)throw t}})),e(i,"channelCountMode",(t=>()=>t.call(i)),(t=>e=>{t.call(i,e),a.channelCountMode=e})),e(i,"channelInterpretation",(t=>()=>t.call(i)),(t=>e=>{t.call(i,e),a.channelInterpretation=e})),Object.defineProperty(i,"maxChannelCount",{get:()=>a.maxChannelCount}),i.connect(a),i})(oe,we),Be,Ge,Pe),xn=((t,e,n,s,r)=>()=>{const a=new WeakMap;return{render(i,o){const l=a.get(o);return void 0!==l?Promise.resolve(l):(async(i,o)=>{let l=n(i);const u=X(l,o);if(!u){const t={Q:l.Q.value,channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,detune:l.detune.value,frequency:l.frequency.value,gain:l.gain.value,type:l.type};l=e(o,t)}return a.set(o,l),u?(await t(o,i.Q,l.Q),await t(o,i.detune,l.detune),await t(o,i.frequency,l.frequency),await t(o,i.gain,l.gain)):(await s(o,i.Q,l.Q),await s(o,i.detune,l.detune),await s(o,i.frequency,l.frequency),await s(o,i.gain,l.gain)),await r(i,o,l),l})(i,o)}}})(hn,se,bt,dn,Pe),vn=(t=>(e,n)=>t.set(e,n))(Ee),wn=((t,e,n,s,r,a,i,o)=>class extends t{constructor(t,s){const l=a(t),u={...Dt,...s},c=r(l,u),h=i(l);super(t,!1,c,h?n():null),this._Q=e(this,h,c.Q,tt,Q),this._detune=e(this,h,c.detune,1200*Math.log2(tt),-1200*Math.log2(tt)),this._frequency=e(this,h,c.frequency,t.sampleRate/2,0),this._gain=e(this,h,c.gain,40*Math.log10(tt),Q),this._nativeBiquadFilterNode=c,o(this,1)}get detune(){return this._detune}get frequency(){return this._frequency}get gain(){return this._gain}get Q(){return this._Q}get type(){return this._nativeBiquadFilterNode.type}set type(t){this._nativeBiquadFilterNode.type=t}getFrequencyResponse(t,e,n){try{this._nativeBiquadFilterNode.getFrequencyResponse(t,e,n)}catch(t){if(11===t.code)throw s();throw t}if(t.length!==e.length||e.length!==n.length)throw s()}})(Je,mn,xn,jt,se,Be,Ge,vn),kn=((t,e)=>(n,s,r)=>{const a=new Set;return n.connect=(o=n.connect,(r,i=0,l=0)=>{const u=0===a.size;if(e(r))return o.call(n,r,i,l),t(a,[r,i,l],(t=>t[0]===r&&t[1]===i&&t[2]===l),!0),u&&s(),r;o.call(n,r,i),t(a,[r,i],(t=>t[0]===r&&t[1]===i),!0),u&&s()}),n.disconnect=(i=n.disconnect,(t,s,o)=>{const l=a.size>0;if(void 0===t)i.apply(n),a.clear();else if("number"==typeof t){i.call(n,t);for(const e of a)e[1]===t&&a.delete(e)}else{e(t)?i.call(n,t,s,o):i.call(n,t,s);for(const e of a)e[0]!==t||void 0!==s&&e[1]!==s||void 0!==o&&e[2]!==o||a.delete(e)}const u=0===a.size;l&&u&&r()}),n;var i,o})(ut,Ke),_n=((t,e)=>(n,s)=>{s.channelCount=1,s.channelCountMode="explicit",Object.defineProperty(s,"channelCount",{get:()=>1,set:()=>{throw t()}}),Object.defineProperty(s,"channelCountMode",{get:()=>"explicit",set:()=>{throw t()}});const r=n.createBufferSource();e(s,(()=>{const t=s.numberOfInputs;for(let e=0;e<t;e+=1)r.connect(s,0,e)}),(()=>r.disconnect(s)))})(Gt,kn),In=((t,e)=>(n,s)=>{const r=n.createChannelMerger(s.numberOfInputs);return null!==t&&"webkitAudioContext"===t.name&&e(n,r),Zt(r,s),r})(qe,_n),Tn=((t,e,n)=>()=>{const s=new WeakMap;return{render(r,a){const i=s.get(a);return void 0!==i?Promise.resolve(i):(async(r,a)=>{let i=e(r);if(!X(i,a)){const e={channelCount:i.channelCount,channelCountMode:i.channelCountMode,channelInterpretation:i.channelInterpretation,numberOfInputs:i.numberOfInputs};i=t(a,e)}return s.set(a,i),await n(r,a,i),i})(r,a)}}})(In,bt,Pe),Nn=((t,e,n,s,r)=>class extends t{constructor(t,a){const i=s(t),o={...Ft,...a};super(t,!1,n(i,o),r(i)?e():null)}})(Je,Tn,In,Be,Ge),Cn=((t,e,n)=>()=>{const s=new WeakMap;return{render(r,a){const i=s.get(a);return void 0!==i?Promise.resolve(i):(async(r,a)=>{let i=e(r);if(!X(i,a)){const e={channelCount:i.channelCount,channelCountMode:i.channelCountMode,channelInterpretation:i.channelInterpretation,numberOfOutputs:i.numberOfOutputs};i=t(a,e)}return s.set(a,i),await n(r,a,i),i})(r,a)}}})(re,bt,Pe),Sn=((t,e,n,s,r,a)=>class extends t{constructor(t,a){const i=s(t),o=(t=>({...t,channelCount:t.numberOfOutputs}))({...Mt,...a});super(t,!1,n(i,o),r(i)?e():null)}})(Je,Cn,re,Be,Ge),An=((t,e,n,s)=>(r,{offset:a,...i})=>{const o=r.createBuffer(1,2,44100),l=e(r,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),u=n(r,{...i,gain:a}),c=o.getChannelData(0);c[0]=1,c[1]=1,l.buffer=o,l.loop=!0;const h={get bufferSize(){},get channelCount(){return u.channelCount},set channelCount(t){u.channelCount=t},get channelCountMode(){return u.channelCountMode},set channelCountMode(t){u.channelCountMode=t},get channelInterpretation(){return u.channelInterpretation},set channelInterpretation(t){u.channelInterpretation=t},get context(){return u.context},get inputs(){return[]},get numberOfInputs(){return l.numberOfInputs},get numberOfOutputs(){return u.numberOfOutputs},get offset(){return u.gain},get onended(){return l.onended},set onended(t){l.onended=t},addEventListener:(...t)=>l.addEventListener(t[0],t[1],t[2]),dispatchEvent:(...t)=>l.dispatchEvent(t[0]),removeEventListener:(...t)=>l.removeEventListener(t[0],t[1],t[2]),start(t=0){l.start.call(l,t)},stop(t=0){l.stop.call(l,t)}};return t(r,l),s(ae(h,u),(()=>l.connect(u)),(()=>l.disconnect(u)))})(un,pn,oe,kn),$n=((t,e,n,s,r)=>(a,i)=>{if(void 0===a.createConstantSource)return n(a,i);const o=a.createConstantSource();return Zt(o,i),Qt(o,i,"offset"),e(s,(()=>s(a)))||te(o),e(r,(()=>r(a)))||ee(o),t(a,o),o})(un,Oe,An,_e,Te),En=((t,e,n,s,r)=>()=>{const a=new WeakMap;let i=null,o=null;return{set start(t){i=t},set stop(t){o=t},render(l,u){const c=a.get(u);return void 0!==c?Promise.resolve(c):(async(l,u)=>{let c=n(l);const h=X(c,u);if(!h){const t={channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,offset:c.offset.value};c=e(u,t),null!==i&&c.start(i),null!==o&&c.stop(o)}return a.set(u,c),h?await t(u,l.offset,c.offset):await s(u,l.offset,c.offset),await r(l,u,c),c})(l,u)}}})(hn,$n,bt,dn,Pe),Rn=((t,e,n,s,r,a,i)=>class extends t{constructor(t,i){const o=r(t),l={...Lt,...i},u=s(o,l),c=a(o),h=c?n():null;super(t,!1,u,h),this._constantSourceNodeRenderer=h,this._nativeConstantSourceNode=u,this._offset=e(this,c,u.offset,tt,Q),this._onended=null}get offset(){return this._offset}get onended(){return this._onended}set onended(t){const e="function"==typeof t?i(this,t):null;this._nativeConstantSourceNode.onended=e;const n=this._nativeConstantSourceNode.onended;this._onended=null!==n&&n===e?t:n}start(t=0){if(this._nativeConstantSourceNode.start(t),null!==this._constantSourceNodeRenderer&&(this._constantSourceNodeRenderer.start=t),"closed"!==this.context.state){U(this);const t=()=>{this._nativeConstantSourceNode.removeEventListener("ended",t),et(this)&&j(this)};this._nativeConstantSourceNode.addEventListener("ended",t)}}stop(t=0){this._nativeConstantSourceNode.stop(t),null!==this._constantSourceNodeRenderer&&(this._constantSourceNodeRenderer.stop=t)}})(Je,mn,En,$n,Be,Ge,Ce),On=((t,e)=>(n,s)=>{const r=n.createConvolver();if(Zt(r,s),s.disableNormalization===r.normalize&&(r.normalize=!s.disableNormalization),Yt(r,s,"buffer"),s.channelCount>2)throw t();if(e(r,"channelCount",(t=>()=>t.call(r)),(e=>n=>{if(n>2)throw t();return e.call(r,n)})),"max"===s.channelCountMode)throw t();return e(r,"channelCountMode",(t=>()=>t.call(r)),(e=>n=>{if("max"===n)throw t();return e.call(r,n)})),r})(he,we),Dn=((t,e,n)=>()=>{const s=new WeakMap;return{render(r,a){const i=s.get(a);return void 0!==i?Promise.resolve(i):(async(r,a)=>{let i=e(r);if(!X(i,a)){const e={buffer:i.buffer,channelCount:i.channelCount,channelCountMode:i.channelCountMode,channelInterpretation:i.channelInterpretation,disableNormalization:!i.normalize};i=t(a,e)}return s.set(a,i),pt(i)?await n(r,a,i.inputs[0]):await n(r,a,i),i})(r,a)}}})(On,bt,Pe),Fn=((t,e,n,s,r,a)=>class extends t{constructor(t,i){const o=s(t),l={...zt,...i},u=n(o,l);super(t,!1,u,r(o)?e():null),this._isBufferNullified=!1,this._nativeConvolverNode=u,null!==l.buffer&&a(this,l.buffer.duration)}get buffer(){return this._isBufferNullified?null:this._nativeConvolverNode.buffer}set buffer(t){if(this._nativeConvolverNode.buffer=t,null===t&&null!==this._nativeConvolverNode.buffer){const t=this._nativeConvolverNode.context;this._nativeConvolverNode.buffer=t.createBuffer(1,1,t.sampleRate),this._isBufferNullified=!0,a(this,0)}else this._isBufferNullified=!1,a(this,null===this._nativeConvolverNode.buffer?0:this._nativeConvolverNode.buffer.duration)}get normalize(){return this._nativeConvolverNode.normalize}set normalize(t){this._nativeConvolverNode.normalize=t}})(Je,Dn,On,Be,Ge,vn),Mn=((t,e,n,s,r)=>a=>{const i=new WeakMap;return{render(o,l){const u=i.get(l);return void 0!==u?Promise.resolve(u):(async(o,l)=>{let u=n(o);const c=X(u,l);if(!c){const t={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,delayTime:u.delayTime.value,maxDelayTime:a};u=e(l,t)}return i.set(l,u),c?await t(l,o.delayTime,u.delayTime):await s(l,o.delayTime,u.delayTime),await r(o,l,u),u})(o,l)}}})(hn,ie,bt,dn,Pe),Ln=((t,e,n,s,r,a,i)=>class extends t{constructor(t,o){const l=r(t),u={...Vt,...o},c=s(l,u),h=a(l);super(t,!1,c,h?n(u.maxDelayTime):null),this._delayTime=e(this,h,c.delayTime),i(this,u.maxDelayTime)}get delayTime(){return this._delayTime}})(Je,mn,Mn,ie,Be,Ge,vn),zn=(t=>(e,n)=>{const s=e.createDynamicsCompressor();if(Zt(s,n),n.channelCount>2)throw t();if("max"===n.channelCountMode)throw t();return Qt(s,n,"attack"),Qt(s,n,"knee"),Qt(s,n,"ratio"),Qt(s,n,"release"),Qt(s,n,"threshold"),s})(he),Pn=((t,e,n,s,r)=>()=>{const a=new WeakMap;return{render(i,o){const l=a.get(o);return void 0!==l?Promise.resolve(l):(async(i,o)=>{let l=n(i);const u=X(l,o);if(!u){const t={attack:l.attack.value,channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,knee:l.knee.value,ratio:l.ratio.value,release:l.release.value,threshold:l.threshold.value};l=e(o,t)}return a.set(o,l),u?(await t(o,i.attack,l.attack),await t(o,i.knee,l.knee),await t(o,i.ratio,l.ratio),await t(o,i.release,l.release),await t(o,i.threshold,l.threshold)):(await s(o,i.attack,l.attack),await s(o,i.knee,l.knee),await s(o,i.ratio,l.ratio),await s(o,i.release,l.release),await s(o,i.threshold,l.threshold)),await r(i,o,l),l})(i,o)}}})(hn,zn,bt,dn,Pe),Vn=((t,e,n,s,r,a,i,o)=>class extends t{constructor(t,r){const l=a(t),u={...Wt,...r},c=s(l,u),h=i(l);super(t,!1,c,h?n():null),this._attack=e(this,h,c.attack),this._knee=e(this,h,c.knee),this._nativeDynamicsCompressorNode=c,this._ratio=e(this,h,c.ratio),this._release=e(this,h,c.release),this._threshold=e(this,h,c.threshold),o(this,.006)}get attack(){return this._attack}get channelCount(){return this._nativeDynamicsCompressorNode.channelCount}set channelCount(t){const e=this._nativeDynamicsCompressorNode.channelCount;if(this._nativeDynamicsCompressorNode.channelCount=t,t>2)throw this._nativeDynamicsCompressorNode.channelCount=e,r()}get channelCountMode(){return this._nativeDynamicsCompressorNode.channelCountMode}set channelCountMode(t){const e=this._nativeDynamicsCompressorNode.channelCountMode;if(this._nativeDynamicsCompressorNode.channelCountMode=t,"max"===t)throw this._nativeDynamicsCompressorNode.channelCountMode=e,r()}get knee(){return this._knee}get ratio(){return this._ratio}get reduction(){return"number"==typeof this._nativeDynamicsCompressorNode.reduction.value?this._nativeDynamicsCompressorNode.reduction.value:this._nativeDynamicsCompressorNode.reduction}get release(){return this._release}get threshold(){return this._threshold}})(Je,mn,Pn,zn,he,Be,Ge,vn),Bn=((t,e,n,s,r)=>()=>{const a=new WeakMap;return{render(i,o){const l=a.get(o);return void 0!==l?Promise.resolve(l):(async(i,o)=>{let l=n(i);const u=X(l,o);if(!u){const t={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,gain:l.gain.value};l=e(o,t)}return a.set(o,l),u?await t(o,i.gain,l.gain):await s(o,i.gain,l.gain),await r(i,o,l),l})(i,o)}}})(hn,oe,bt,dn,Pe),Wn=((t,e,n,s,r,a)=>class extends t{constructor(t,i){const o=r(t),l={...Ut,...i},u=s(o,l),c=a(o);super(t,!1,u,c?n():null),this._gain=e(this,c,u.gain,tt,Q)}get gain(){return this._gain}})(Je,mn,Bn,oe,Be,Ge),Un=((t,e,n,s)=>(r,a,{channelCount:i,channelCountMode:o,channelInterpretation:l,feedback:u,feedforward:c})=>{const h=ne(a,r.sampleRate),p=u instanceof Float64Array?u:new Float64Array(u),d=c instanceof Float64Array?c:new Float64Array(c),f=p.length,m=d.length,g=Math.min(f,m);if(0===f||f>20)throw s();if(0===p[0])throw e();if(0===m||m>20)throw s();if(0===d[0])throw e();if(1!==p[0]){for(let t=0;t<m;t+=1)d[t]/=p[0];for(let t=1;t<f;t+=1)p[t]/=p[0]}const y=n(r,h,i,i);y.channelCount=i,y.channelCountMode=o,y.channelInterpretation=l;const b=[],x=[],v=[];for(let t=0;t<i;t+=1){b.push(0);const t=new Float32Array(32),e=new Float32Array(32);t.fill(0),e.fill(0),x.push(t),v.push(e)}y.onaudioprocess=t=>{const e=t.inputBuffer,n=t.outputBuffer,s=e.numberOfChannels;for(let t=0;t<s;t+=1){const s=e.getChannelData(t),r=n.getChannelData(t);b[t]=qt(p,f,d,m,g,x[t],v[t],b[t],32,s,r)}};const w=r.sampleRate/2;return ae({get bufferSize(){return h},get channelCount(){return y.channelCount},set channelCount(t){y.channelCount=t},get channelCountMode(){return y.channelCountMode},set channelCountMode(t){y.channelCountMode=t},get channelInterpretation(){return y.channelInterpretation},set channelInterpretation(t){y.channelInterpretation=t},get context(){return y.context},get inputs(){return[y]},get numberOfInputs(){return y.numberOfInputs},get numberOfOutputs(){return y.numberOfOutputs},addEventListener:(...t)=>y.addEventListener(t[0],t[1],t[2]),dispatchEvent:(...t)=>y.dispatchEvent(t[0]),getFrequencyResponse(e,n,s){if(e.length!==n.length||n.length!==s.length)throw t();const r=e.length;for(let t=0;t<r;t+=1){const r=-Math.PI*(e[t]/w),a=[Math.cos(r),Math.sin(r)],i=le(ue(d,a),ue(p,a));n[t]=Math.sqrt(i[0]*i[0]+i[1]*i[1]),s[t]=Math.atan2(i[1],i[0])}},removeEventListener:(...t)=>y.removeEventListener(t[0],t[1],t[2])},y)})(jt,Gt,ce,he),Gn=((t,e,n,s)=>r=>t(Kt,(()=>Kt(r)))?Promise.resolve(t(s,s)).then((t=>{if(!t){const t=n(r,512,0,1);r.oncomplete=()=>{t.onaudioprocess=null,t.disconnect()},t.onaudioprocess=()=>r.currentTime,t.connect(r.destination)}return r.startRendering()})):new Promise((t=>{const n=e(r,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});r.oncomplete=e=>{n.disconnect(),t(e.renderedBuffer)},n.connect(r.destination),r.startRendering()})))(Oe,oe,ce,((t,e)=>()=>{if(null===e)return Promise.resolve(!1);const n=new e(1,1,44100),s=t(n,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return new Promise((t=>{n.oncomplete=()=>{s.disconnect(),t(0!==n.currentTime)},n.startRendering()}))})(oe,Ue)),jn=((t,e,n,s,r)=>(a,i)=>{const o=new WeakMap;let l=null;return{render(u,c){const h=o.get(c);return void 0!==h?Promise.resolve(h):(async(u,c)=>{let h=null,p=e(u);const d=X(p,c);if(void 0===c.createIIRFilter?h=t(c,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}):d||(p=c.createIIRFilter(i,a)),o.set(c,null===h?p:h),null!==h){if(null===l){if(null===n)throw new Error("Missing the native OfflineAudioContext constructor.");const t=new n(u.context.destination.channelCount,u.context.length,c.sampleRate);l=(async()=>(await s(u,t,t.destination),((t,e,n,s)=>{const r=n instanceof Float64Array?n:new Float64Array(n),a=s instanceof Float64Array?s:new Float64Array(s),i=r.length,o=a.length,l=Math.min(i,o);if(1!==r[0]){for(let t=0;t<i;t+=1)a[t]/=r[0];for(let t=1;t<o;t+=1)r[t]/=r[0]}const u=new Float32Array(32),c=new Float32Array(32),h=e.createBuffer(t.numberOfChannels,t.length,t.sampleRate),p=t.numberOfChannels;for(let e=0;e<p;e+=1){const n=t.getChannelData(e),s=h.getChannelData(e);u.fill(0),c.fill(0),qt(r,i,a,o,l,u,c,0,32,n,s)}return h})(await r(t),c,a,i)))()}const t=await l;return h.buffer=t,h.start(0),h}return await s(u,c,p),p})(u,c)}}})(pn,bt,Ue,Pe,Gn),Hn=(t=>(e,n,s)=>{if(void 0===e.createIIRFilter)return t(e,n,s);const r=e.createIIRFilter(s.feedforward,s.feedback);return Zt(r,s),r})(Un),qn=((t,e,n,s,r,a)=>class extends t{constructor(t,i){const o=s(t),l=r(o),u={...Ht,...i},c=e(o,l?null:t.baseLatency,u);super(t,!1,c,l?n(u.feedback,u.feedforward):null),(t=>{var e;t.getFrequencyResponse=(e=t.getFrequencyResponse,(n,s,r)=>{if(n.length!==s.length||s.length!==r.length)throw jt();return e.call(t,n,s,r)})})(c),this._nativeIIRFilterNode=c,a(this,1)}getFrequencyResponse(t,e,n){return this._nativeIIRFilterNode.getFrequencyResponse(t,e,n)}})(Je,Hn,jn,Be,Ge,vn),Xn=((t,e,n,s,r,a,i,o)=>(l,u)=>{const c=u.listener,{forwardX:h,forwardY:p,forwardZ:d,positionX:f,positionY:m,positionZ:g,upX:y,upY:b,upZ:x}=void 0===c.forwardX?(()=>{const h=new Float32Array(1),p=e(u,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:9}),d=i(u);let f=!1,m=[0,0,-1,0,1,0],g=[0,0,0];const y=()=>{if(f)return;f=!0;const t=s(u,256,9,0);t.onaudioprocess=({inputBuffer:t})=>{const e=[a(t,h,0),a(t,h,1),a(t,h,2),a(t,h,3),a(t,h,4),a(t,h,5)];e.some(((t,e)=>t!==m[e]))&&(c.setOrientation(...e),m=e);const n=[a(t,h,6),a(t,h,7),a(t,h,8)];n.some(((t,e)=>t!==g[e]))&&(c.setPosition(...n),g=n)},p.connect(t)},b=t=>e=>{e!==m[t]&&(m[t]=e,c.setOrientation(...m))},x=t=>e=>{e!==g[t]&&(g[t]=e,c.setPosition(...g))},v=(e,s,a)=>{const i=n(u,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:s});i.connect(p,0,e),i.start(),Object.defineProperty(i.offset,"defaultValue",{get:()=>s});const c=t({context:l},d,i.offset,tt,Q);var h,f,m,g,b,x,v;return o(c,"value",(t=>()=>t.call(c)),(t=>e=>{try{t.call(c,e)}catch(t){if(9!==t.code)throw t}y(),d&&a(e)})),c.cancelAndHoldAtTime=(h=c.cancelAndHoldAtTime,d?()=>{throw r()}:(...t)=>{const e=h.apply(c,t);return y(),e}),c.cancelScheduledValues=(f=c.cancelScheduledValues,d?()=>{throw r()}:(...t)=>{const e=f.apply(c,t);return y(),e}),c.exponentialRampToValueAtTime=(m=c.exponentialRampToValueAtTime,d?()=>{throw r()}:(...t)=>{const e=m.apply(c,t);return y(),e}),c.linearRampToValueAtTime=(g=c.linearRampToValueAtTime,d?()=>{throw r()}:(...t)=>{const e=g.apply(c,t);return y(),e}),c.setTargetAtTime=(b=c.setTargetAtTime,d?()=>{throw r()}:(...t)=>{const e=b.apply(c,t);return y(),e}),c.setValueAtTime=(x=c.setValueAtTime,d?()=>{throw r()}:(...t)=>{const e=x.apply(c,t);return y(),e}),c.setValueCurveAtTime=(v=c.setValueCurveAtTime,d?()=>{throw r()}:(...t)=>{const e=v.apply(c,t);return y(),e}),c};return{forwardX:v(0,0,b(0)),forwardY:v(1,0,b(1)),forwardZ:v(2,-1,b(2)),positionX:v(6,0,x(0)),positionY:v(7,0,x(1)),positionZ:v(8,0,x(2)),upX:v(3,0,b(3)),upY:v(4,1,b(4)),upZ:v(5,0,b(5))}})():c;return{get forwardX(){return h},get forwardY(){return p},get forwardZ(){return d},get positionX(){return f},get positionY(){return m},get positionZ(){return g},get upX(){return y},get upY(){return b},get upZ(){return x}}})(mn,In,$n,ce,he,xe,Ge,we),Kn=new WeakMap,Yn=((t,e,n,s,r,a)=>class extends n{constructor(n,a){super(n),this._nativeContext=n,A.set(this,n),s(n)&&r.set(n,new Set),this._destination=new t(this,a),this._listener=e(this,n),this._onstatechange=null}get currentTime(){return this._nativeContext.currentTime}get destination(){return this._destination}get listener(){return this._listener}get onstatechange(){return this._onstatechange}set onstatechange(t){const e="function"==typeof t?a(this,t):null;this._nativeContext.onstatechange=e;const n=this._nativeContext.onstatechange;this._onstatechange=null!==n&&n===e?t:n}get sampleRate(){return this._nativeContext.sampleRate}get state(){return this._nativeContext.state}})(bn,Xn,He,Ge,Kn,Ce),Zn=((t,e,n,s,r,a)=>(i,o)=>{const l=i.createOscillator();return Zt(l,o),Qt(l,o,"detune"),Qt(l,o,"frequency"),void 0!==o.periodicWave?l.setPeriodicWave(o.periodicWave):Yt(l,o,"type"),e(n,(()=>n(i)))||te(l),e(s,(()=>s(i)))||a(l,i),e(r,(()=>r(i)))||ee(l),t(i,l),l})(un,Oe,_e,Ie,Te,Ne),Jn=((t,e,n,s,r)=>()=>{const a=new WeakMap;let i=null,o=null,l=null;return{set periodicWave(t){i=t},set start(t){o=t},set stop(t){l=t},render(u,c){const h=a.get(c);return void 0!==h?Promise.resolve(h):(async(u,c)=>{let h=n(u);const p=X(h,c);if(!p){const t={channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,detune:h.detune.value,frequency:h.frequency.value,periodicWave:null===i?void 0:i,type:h.type};h=e(c,t),null!==o&&h.start(o),null!==l&&h.stop(l)}return a.set(c,h),p?(await t(c,u.detune,h.detune),await t(c,u.frequency,h.frequency)):(await s(c,u.detune,h.detune),await s(c,u.frequency,h.frequency)),await r(u,c,h),h})(u,c)}}})(hn,Zn,bt,dn,Pe),Qn=((t,e,n,s,r,a,i)=>class extends t{constructor(t,i){const o=r(t),l={...de,...i},u=n(o,l),c=a(o),h=c?s():null,p=t.sampleRate/2;super(t,!1,u,h),this._detune=e(this,c,u.detune,153600,-153600),this._frequency=e(this,c,u.frequency,p,-p),this._nativeOscillatorNode=u,this._onended=null,this._oscillatorNodeRenderer=h,null!==this._oscillatorNodeRenderer&&void 0!==l.periodicWave&&(this._oscillatorNodeRenderer.periodicWave=l.periodicWave)}get detune(){return this._detune}get frequency(){return this._frequency}get onended(){return this._onended}set onended(t){const e="function"==typeof t?i(this,t):null;this._nativeOscillatorNode.onended=e;const n=this._nativeOscillatorNode.onended;this._onended=null!==n&&n===e?t:n}get type(){return this._nativeOscillatorNode.type}set type(t){this._nativeOscillatorNode.type=t,null!==this._oscillatorNodeRenderer&&(this._oscillatorNodeRenderer.periodicWave=null)}setPeriodicWave(t){this._nativeOscillatorNode.setPeriodicWave(t),null!==this._oscillatorNodeRenderer&&(this._oscillatorNodeRenderer.periodicWave=t)}start(t=0){if(this._nativeOscillatorNode.start(t),null!==this._oscillatorNodeRenderer&&(this._oscillatorNodeRenderer.start=t),"closed"!==this.context.state){U(this);const t=()=>{this._nativeOscillatorNode.removeEventListener("ended",t),et(this)&&j(this)};this._nativeOscillatorNode.addEventListener("ended",t)}}stop(t=0){this._nativeOscillatorNode.stop(t),null!==this._oscillatorNodeRenderer&&(this._oscillatorNodeRenderer.stop=t)}})(Je,mn,Zn,Jn,Be,Ge,Ce),ts=(t=>(e,n)=>{const s=t(e,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),r=e.createBuffer(1,2,44100);return s.buffer=r,s.loop=!0,s.connect(n),s.start(),()=>{s.stop(),s.disconnect(n)}})(pn),es=((t,e,n,s,r)=>(a,{curve:i,oversample:o,...l})=>{const u=a.createWaveShaper(),c=a.createWaveShaper();Zt(u,l),Zt(c,l);const h=n(a,{...l,gain:1}),p=n(a,{...l,gain:-1}),d=n(a,{...l,gain:1}),f=n(a,{...l,gain:-1});let m=null,g=!1,y=null;const b={get bufferSize(){},get channelCount(){return u.channelCount},set channelCount(t){h.channelCount=t,p.channelCount=t,u.channelCount=t,d.channelCount=t,c.channelCount=t,f.channelCount=t},get channelCountMode(){return u.channelCountMode},set channelCountMode(t){h.channelCountMode=t,p.channelCountMode=t,u.channelCountMode=t,d.channelCountMode=t,c.channelCountMode=t,f.channelCountMode=t},get channelInterpretation(){return u.channelInterpretation},set channelInterpretation(t){h.channelInterpretation=t,p.channelInterpretation=t,u.channelInterpretation=t,d.channelInterpretation=t,c.channelInterpretation=t,f.channelInterpretation=t},get context(){return u.context},get curve(){return y},set curve(n){if(null!==n&&n.length<2)throw e();if(null===n)u.curve=n,c.curve=n;else{const t=n.length,e=new Float32Array(t+2-t%2),s=new Float32Array(t+2-t%2);e[0]=n[0],s[0]=-n[t-1];const r=Math.ceil((t+1)/2),a=(t+1)/2-1;for(let i=1;i<r;i+=1){const o=i/r*a,l=Math.floor(o),u=Math.ceil(o);e[i]=l===u?n[l]:(1-(o-l))*n[l]+(1-(u-o))*n[u],s[i]=l===u?-n[t-1-l]:-(1-(o-l))*n[t-1-l]-(1-(u-o))*n[t-1-u]}e[r]=t%2==1?n[r-1]:(n[r-2]+n[r-1])/2,u.curve=e,c.curve=s}y=n,g&&(s(y)&&null===m?m=t(a,h):null!==m&&(m(),m=null))},get inputs(){return[h]},get numberOfInputs(){return u.numberOfInputs},get numberOfOutputs(){return u.numberOfOutputs},get oversample(){return u.oversample},set oversample(t){u.oversample=t,c.oversample=t},addEventListener:(...t)=>h.addEventListener(t[0],t[1],t[2]),dispatchEvent:(...t)=>h.dispatchEvent(t[0]),removeEventListener:(...t)=>h.removeEventListener(t[0],t[1],t[2])};return null!==i&&(b.curve=i instanceof Float32Array?i:new Float32Array(i)),o!==b.oversample&&(b.oversample=o),r(ae(b,d),(()=>{h.connect(u).connect(d),h.connect(p).connect(c).connect(f).connect(d),g=!0,s(y)&&(m=t(a,h))}),(()=>{h.disconnect(u),u.disconnect(d),h.disconnect(p),p.disconnect(c),c.disconnect(f),f.disconnect(d),g=!1,null!==m&&(m(),m=null)}))})(ts,Gt,oe,ve,kn),ns=((t,e,n,s,r,a,i)=>(o,l)=>{const u=o.createWaveShaper();if(null!==a&&"webkitAudioContext"===a.name&&void 0===o.createGain().gain.automationRate)return n(o,l);Zt(u,l);const c=null===l.curve||l.curve instanceof Float32Array?l.curve:new Float32Array(l.curve);if(null!==c&&c.length<2)throw e();Yt(u,{curve:c},"curve"),Yt(u,l,"oversample");let h=null,p=!1;return i(u,"curve",(t=>()=>t.call(u)),(e=>n=>(e.call(u,n),p&&(s(n)&&null===h?h=t(o,u):s(n)||null===h||(h(),h=null)),n))),r(u,(()=>{p=!0,s(u.curve)&&(h=t(o,u))}),(()=>{p=!1,null!==h&&(h(),h=null)}))})(ts,Gt,es,ve,kn,qe,we),ss=((t,e,n,s,r,a,i,o,l,u)=>(c,{coneInnerAngle:h,coneOuterAngle:p,coneOuterGain:d,distanceModel:f,maxDistance:m,orientationX:g,orientationY:y,orientationZ:b,panningModel:x,positionX:v,positionY:w,positionZ:k,refDistance:_,rolloffFactor:I,...T})=>{const N=c.createPanner();if(T.channelCount>2)throw i();if("max"===T.channelCountMode)throw i();Zt(N,T);const C={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},S=n(c,{...C,channelInterpretation:"speakers",numberOfInputs:6}),A=s(c,{...T,gain:1}),$=s(c,{...C,gain:1}),E=s(c,{...C,gain:0}),R=s(c,{...C,gain:0}),O=s(c,{...C,gain:0}),D=s(c,{...C,gain:0}),F=s(c,{...C,gain:0}),M=r(c,256,6,1),L=a(c,{...C,curve:new Float32Array([1,1]),oversample:"none"});let z=[g,y,b],P=[v,w,k];const V=new Float32Array(1);M.onaudioprocess=({inputBuffer:t})=>{const e=[l(t,V,0),l(t,V,1),l(t,V,2)];e.some(((t,e)=>t!==z[e]))&&(N.setOrientation(...e),z=e);const n=[l(t,V,3),l(t,V,4),l(t,V,5)];n.some(((t,e)=>t!==P[e]))&&(N.setPosition(...n),P=n)},Object.defineProperty(E.gain,"defaultValue",{get:()=>0}),Object.defineProperty(R.gain,"defaultValue",{get:()=>0}),Object.defineProperty(O.gain,"defaultValue",{get:()=>0}),Object.defineProperty(D.gain,"defaultValue",{get:()=>0}),Object.defineProperty(F.gain,"defaultValue",{get:()=>0});const B={get bufferSize(){},get channelCount(){return N.channelCount},set channelCount(t){if(t>2)throw i();A.channelCount=t,N.channelCount=t},get channelCountMode(){return N.channelCountMode},set channelCountMode(t){if("max"===t)throw i();A.channelCountMode=t,N.channelCountMode=t},get channelInterpretation(){return N.channelInterpretation},set channelInterpretation(t){A.channelInterpretation=t,N.channelInterpretation=t},get coneInnerAngle(){return N.coneInnerAngle},set coneInnerAngle(t){N.coneInnerAngle=t},get coneOuterAngle(){return N.coneOuterAngle},set coneOuterAngle(t){N.coneOuterAngle=t},get coneOuterGain(){return N.coneOuterGain},set coneOuterGain(t){if(t<0||t>1)throw e();N.coneOuterGain=t},get context(){return N.context},get distanceModel(){return N.distanceModel},set distanceModel(t){N.distanceModel=t},get inputs(){return[A]},get maxDistance(){return N.maxDistance},set maxDistance(t){if(t<0)throw new RangeError;N.maxDistance=t},get numberOfInputs(){return N.numberOfInputs},get numberOfOutputs(){return N.numberOfOutputs},get orientationX(){return $.gain},get orientationY(){return E.gain},get orientationZ(){return R.gain},get panningModel(){return N.panningModel},set panningModel(t){N.panningModel=t},get positionX(){return O.gain},get positionY(){return D.gain},get positionZ(){return F.gain},get refDistance(){return N.refDistance},set refDistance(t){if(t<0)throw new RangeError;N.refDistance=t},get rolloffFactor(){return N.rolloffFactor},set rolloffFactor(t){if(t<0)throw new RangeError;N.rolloffFactor=t},addEventListener:(...t)=>A.addEventListener(t[0],t[1],t[2]),dispatchEvent:(...t)=>A.dispatchEvent(t[0]),removeEventListener:(...t)=>A.removeEventListener(t[0],t[1],t[2])};return h!==B.coneInnerAngle&&(B.coneInnerAngle=h),p!==B.coneOuterAngle&&(B.coneOuterAngle=p),d!==B.coneOuterGain&&(B.coneOuterGain=d),f!==B.distanceModel&&(B.distanceModel=f),m!==B.maxDistance&&(B.maxDistance=m),g!==B.orientationX.value&&(B.orientationX.value=g),y!==B.orientationY.value&&(B.orientationY.value=y),b!==B.orientationZ.value&&(B.orientationZ.value=b),x!==B.panningModel&&(B.panningModel=x),v!==B.positionX.value&&(B.positionX.value=v),w!==B.positionY.value&&(B.positionY.value=w),k!==B.positionZ.value&&(B.positionZ.value=k),_!==B.refDistance&&(B.refDistance=_),I!==B.rolloffFactor&&(B.rolloffFactor=I),1===z[0]&&0===z[1]&&0===z[2]||N.setOrientation(...z),0===P[0]&&0===P[1]&&0===P[2]||N.setPosition(...P),u(ae(B,N),(()=>{A.connect(N),t(A,L,0,0),L.connect($).connect(S,0,0),L.connect(E).connect(S,0,1),L.connect(R).connect(S,0,2),L.connect(O).connect(S,0,3),L.connect(D).connect(S,0,4),L.connect(F).connect(S,0,5),S.connect(M).connect(c.destination)}),(()=>{A.disconnect(N),o(A,L,0,0),L.disconnect($),$.disconnect(S),L.disconnect(E),E.disconnect(S),L.disconnect(R),R.disconnect(S),L.disconnect(O),O.disconnect(S),L.disconnect(D),D.disconnect(S),L.disconnect(F),F.disconnect(S),S.disconnect(M),M.disconnect(c.destination)}))})(dt,Gt,In,oe,ce,ns,he,yt,xe,kn),rs=(t=>(e,n)=>{const s=e.createPanner();return void 0===s.orientationX?t(e,n):(Zt(s,n),Qt(s,n,"orientationX"),Qt(s,n,"orientationY"),Qt(s,n,"orientationZ"),Qt(s,n,"positionX"),Qt(s,n,"positionY"),Qt(s,n,"positionZ"),Yt(s,n,"coneInnerAngle"),Yt(s,n,"coneOuterAngle"),Yt(s,n,"coneOuterGain"),Yt(s,n,"distanceModel"),Yt(s,n,"maxDistance"),Yt(s,n,"panningModel"),Yt(s,n,"refDistance"),Yt(s,n,"rolloffFactor"),s)})(ss),as=((t,e,n,s,r,a,i,o,l,u)=>()=>{const c=new WeakMap;let h=null;return{render(p,d){const f=c.get(d);return void 0!==f?Promise.resolve(f):(async(p,d)=>{let f=null,m=a(p);const g={channelCount:m.channelCount,channelCountMode:m.channelCountMode,channelInterpretation:m.channelInterpretation},y={...g,coneInnerAngle:m.coneInnerAngle,coneOuterAngle:m.coneOuterAngle,coneOuterGain:m.coneOuterGain,distanceModel:m.distanceModel,maxDistance:m.maxDistance,panningModel:m.panningModel,refDistance:m.refDistance,rolloffFactor:m.rolloffFactor},b=X(m,d);if("bufferSize"in m)f=s(d,{...g,gain:1});else if(!b){const t={...y,orientationX:m.orientationX.value,orientationY:m.orientationY.value,orientationZ:m.orientationZ.value,positionX:m.positionX.value,positionY:m.positionY.value,positionZ:m.positionZ.value};m=r(d,t)}if(c.set(d,null===f?m:f),null!==f){if(null===h){if(null===i)throw new Error("Missing the native OfflineAudioContext constructor.");const t=new i(6,p.context.length,d.sampleRate),s=e(t,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6});s.connect(t.destination),h=(async()=>{const e=await Promise.all([p.orientationX,p.orientationY,p.orientationZ,p.positionX,p.positionY,p.positionZ].map((async(e,s)=>{const r=n(t,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:0===s?1:0});return await o(t,e,r.offset),r})));for(let t=0;t<6;t+=1)e[t].connect(s,0,t),e[t].start(0);return u(t)})()}const t=await h,a=s(d,{...g,gain:1});await l(p,d,a);const c=[];for(let e=0;e<t.numberOfChannels;e+=1)c.push(t.getChannelData(e));let m=[c[0][0],c[1][0],c[2][0]],b=[c[3][0],c[4][0],c[5][0]],x=s(d,{...g,gain:1}),v=r(d,{...y,orientationX:m[0],orientationY:m[1],orientationZ:m[2],positionX:b[0],positionY:b[1],positionZ:b[2]});a.connect(x).connect(v.inputs[0]),v.connect(f);for(let e=128;e<t.length;e+=128){const t=[c[0][e],c[1][e],c[2][e]],n=[c[3][e],c[4][e],c[5][e]];if(t.some(((t,e)=>t!==m[e]))||n.some(((t,e)=>t!==b[e]))){m=t,b=n;const i=e/d.sampleRate;x.gain.setValueAtTime(0,i),x=s(d,{...g,gain:0}),v=r(d,{...y,orientationX:m[0],orientationY:m[1],orientationZ:m[2],positionX:b[0],positionY:b[1],positionZ:b[2]}),x.gain.setValueAtTime(1,i),a.connect(x).connect(v.inputs[0]),v.connect(f)}}return f}return b?(await t(d,p.orientationX,m.orientationX),await t(d,p.orientationY,m.orientationY),await t(d,p.orientationZ,m.orientationZ),await t(d,p.positionX,m.positionX),await t(d,p.positionY,m.positionY),await t(d,p.positionZ,m.positionZ)):(await o(d,p.orientationX,m.orientationX),await o(d,p.orientationY,m.orientationY),await o(d,p.orientationZ,m.orientationZ),await o(d,p.positionX,m.positionX),await o(d,p.positionY,m.positionY),await o(d,p.positionZ,m.positionZ)),pt(m)?await l(p,d,m.inputs[0]):await l(p,d,m),m})(p,d)}}})(hn,In,$n,oe,rs,bt,Ue,dn,Pe,Gn),is=((t,e,n,s,r,a,i)=>class extends t{constructor(t,o){const l=r(t),u={...fe,...o},c=n(l,u),h=a(l);super(t,!1,c,h?s():null),this._nativePannerNode=c,this._orientationX=e(this,h,c.orientationX,tt,Q),this._orientationY=e(this,h,c.orientationY,tt,Q),this._orientationZ=e(this,h,c.orientationZ,tt,Q),this._positionX=e(this,h,c.positionX,tt,Q),this._positionY=e(this,h,c.positionY,tt,Q),this._positionZ=e(this,h,c.positionZ,tt,Q),i(this,1)}get coneInnerAngle(){return this._nativePannerNode.coneInnerAngle}set coneInnerAngle(t){this._nativePannerNode.coneInnerAngle=t}get coneOuterAngle(){return this._nativePannerNode.coneOuterAngle}set coneOuterAngle(t){this._nativePannerNode.coneOuterAngle=t}get coneOuterGain(){return this._nativePannerNode.coneOuterGain}set coneOuterGain(t){this._nativePannerNode.coneOuterGain=t}get distanceModel(){return this._nativePannerNode.distanceModel}set distanceModel(t){this._nativePannerNode.distanceModel=t}get maxDistance(){return this._nativePannerNode.maxDistance}set maxDistance(t){this._nativePannerNode.maxDistance=t}get orientationX(){return this._orientationX}get orientationY(){return this._orientationY}get orientationZ(){return this._orientationZ}get panningModel(){return this._nativePannerNode.panningModel}set panningModel(t){this._nativePannerNode.panningModel=t}get positionX(){return this._positionX}get positionY(){return this._positionY}get positionZ(){return this._positionZ}get refDistance(){return this._nativePannerNode.refDistance}set refDistance(t){this._nativePannerNode.refDistance=t}get rolloffFactor(){return this._nativePannerNode.rolloffFactor}set rolloffFactor(t){this._nativePannerNode.rolloffFactor=t}})(Je,mn,rs,as,Be,Ge,vn),os=(t=>(e,{disableNormalization:n,imag:s,real:r})=>{const a=s instanceof Float32Array?s:new Float32Array(s),i=r instanceof Float32Array?r:new Float32Array(r),o=e.createPeriodicWave(i,a,{disableNormalization:n});if(Array.from(s).length<2)throw t();return o})(Y),ls=((t,e,n,s)=>class s{constructor(s,r){const a=e(s),i=(t=>{const{imag:e,real:n}=t;return void 0===e?void 0===n?{...t,imag:[0,0],real:[0,0]}:{...t,imag:Array.from(n,(()=>0)),real:n}:void 0===n?{...t,imag:e,real:Array.from(e,(()=>0))}:{...t,imag:e,real:n}})({...me,...r}),o=t(a,i);return n.add(o),o}static[Symbol.hasInstance](t){return null!==t&&"object"==typeof t&&Object.getPrototypeOf(t)===s.prototype||n.has(t)}})(os,Be,new WeakSet),us=((t,e,n,s,r,a)=>{const i=16385,o=new Float32Array([1,1]),l=Math.PI/2,u={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},c={...u,oversample:"none"},h=(t,a,h,p,d)=>{if(1===a)return((t,e,r,a)=>{const h=new Float32Array(i),p=new Float32Array(i);for(let t=0;t<i;t+=1){const e=t/16384*l;h[t]=Math.cos(e),p[t]=Math.sin(e)}const d=n(t,{...u,gain:0}),f=s(t,{...c,curve:h}),m=s(t,{...c,curve:o}),g=n(t,{...u,gain:0}),y=s(t,{...c,curve:p});return{connectGraph(){e.connect(d),e.connect(void 0===m.inputs?m:m.inputs[0]),e.connect(g),m.connect(r),r.connect(void 0===f.inputs?f:f.inputs[0]),r.connect(void 0===y.inputs?y:y.inputs[0]),f.connect(d.gain),y.connect(g.gain),d.connect(a,0,0),g.connect(a,0,1)},disconnectGraph(){e.disconnect(d),e.disconnect(void 0===m.inputs?m:m.inputs[0]),e.disconnect(g),m.disconnect(r),r.disconnect(void 0===f.inputs?f:f.inputs[0]),r.disconnect(void 0===y.inputs?y:y.inputs[0]),f.disconnect(d.gain),y.disconnect(g.gain),d.disconnect(a,0,0),g.disconnect(a,0,1)}}})(t,h,p,d);if(2===a)return((t,r,a,h)=>{const p=new Float32Array(i),d=new Float32Array(i),f=new Float32Array(i),m=new Float32Array(i),g=Math.floor(8192.5);for(let t=0;t<i;t+=1)if(t>g){const e=(t-g)/(16384-g)*l;p[t]=Math.cos(e),d[t]=Math.sin(e),f[t]=0,m[t]=1}else{const e=t/(16384-g)*l;p[t]=1,d[t]=0,f[t]=Math.cos(e),m[t]=Math.sin(e)}const y=e(t,{channelCount:2,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:2}),b=n(t,{...u,gain:0}),x=s(t,{...c,curve:p}),v=n(t,{...u,gain:0}),w=s(t,{...c,curve:d}),k=s(t,{...c,curve:o}),_=n(t,{...u,gain:0}),I=s(t,{...c,curve:f}),T=n(t,{...u,gain:0}),N=s(t,{...c,curve:m});return{connectGraph(){r.connect(y),r.connect(void 0===k.inputs?k:k.inputs[0]),y.connect(b,0),y.connect(v,0),y.connect(_,1),y.connect(T,1),k.connect(a),a.connect(void 0===x.inputs?x:x.inputs[0]),a.connect(void 0===w.inputs?w:w.inputs[0]),a.connect(void 0===I.inputs?I:I.inputs[0]),a.connect(void 0===N.inputs?N:N.inputs[0]),x.connect(b.gain),w.connect(v.gain),I.connect(_.gain),N.connect(T.gain),b.connect(h,0,0),_.connect(h,0,0),v.connect(h,0,1),T.connect(h,0,1)},disconnectGraph(){r.disconnect(y),r.disconnect(void 0===k.inputs?k:k.inputs[0]),y.disconnect(b,0),y.disconnect(v,0),y.disconnect(_,1),y.disconnect(T,1),k.disconnect(a),a.disconnect(void 0===x.inputs?x:x.inputs[0]),a.disconnect(void 0===w.inputs?w:w.inputs[0]),a.disconnect(void 0===I.inputs?I:I.inputs[0]),a.disconnect(void 0===N.inputs?N:N.inputs[0]),x.disconnect(b.gain),w.disconnect(v.gain),I.disconnect(_.gain),N.disconnect(T.gain),b.disconnect(h,0,0),_.disconnect(h,0,0),v.disconnect(h,0,1),T.disconnect(h,0,1)}}})(t,h,p,d);throw r()};return(e,{channelCount:s,channelCountMode:i,pan:o,...l})=>{if("max"===i)throw r();const u=t(e,{...l,channelCount:1,channelCountMode:i,numberOfInputs:2}),c=n(e,{...l,channelCount:s,channelCountMode:i,gain:1}),p=n(e,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:o});let{connectGraph:d,disconnectGraph:f}=h(e,s,c,p,u);Object.defineProperty(p.gain,"defaultValue",{get:()=>0}),Object.defineProperty(p.gain,"maxValue",{get:()=>1}),Object.defineProperty(p.gain,"minValue",{get:()=>-1});const m={get bufferSize(){},get channelCount(){return c.channelCount},set channelCount(t){c.channelCount!==t&&(g&&f(),({connectGraph:d,disconnectGraph:f}=h(e,t,c,p,u)),g&&d()),c.channelCount=t},get channelCountMode(){return c.channelCountMode},set channelCountMode(t){if("clamped-max"===t||"max"===t)throw r();c.channelCountMode=t},get channelInterpretation(){return c.channelInterpretation},set channelInterpretation(t){c.channelInterpretation=t},get context(){return c.context},get inputs(){return[c]},get numberOfInputs(){return c.numberOfInputs},get numberOfOutputs(){return c.numberOfOutputs},get pan(){return p.gain},addEventListener:(...t)=>c.addEventListener(t[0],t[1],t[2]),dispatchEvent:(...t)=>c.dispatchEvent(t[0]),removeEventListener:(...t)=>c.removeEventListener(t[0],t[1],t[2])};let g=!1;return a(ae(m,u),(()=>{d(),g=!0}),(()=>{f(),g=!1}))}})(In,re,oe,ns,he,kn),cs=((t,e)=>(n,s)=>{const r=s.channelCountMode;if("clamped-max"===r)throw e();if(void 0===n.createStereoPanner)return t(n,s);const a=n.createStereoPanner();return Zt(a,s),Qt(a,s,"pan"),Object.defineProperty(a,"channelCountMode",{get:()=>r,set:t=>{if(t!==r)throw e()}}),a})(us,he),hs=((t,e,n,s,r)=>()=>{const a=new WeakMap;return{render(i,o){const l=a.get(o);return void 0!==l?Promise.resolve(l):(async(i,o)=>{let l=n(i);const u=X(l,o);if(!u){const t={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,pan:l.pan.value};l=e(o,t)}return a.set(o,l),u?await t(o,i.pan,l.pan):await s(o,i.pan,l.pan),pt(l)?await r(i,o,l.inputs[0]):await r(i,o,l),l})(i,o)}}})(hn,cs,bt,dn,Pe),ps=((t,e,n,s,r,a)=>class extends t{constructor(t,i){const o=r(t),l={...ge,...i},u=n(o,l),c=a(o);super(t,!1,u,c?s():null),this._pan=e(this,c,u.pan)}get pan(){return this._pan}})(Je,mn,cs,hs,Be,Ge),ds=((t,e,n)=>()=>{const s=new WeakMap;return{render(r,a){const i=s.get(a);return void 0!==i?Promise.resolve(i):(async(r,a)=>{let i=e(r);if(!X(i,a)){const e={channelCount:i.channelCount,channelCountMode:i.channelCountMode,channelInterpretation:i.channelInterpretation,curve:i.curve,oversample:i.oversample};i=t(a,e)}return s.set(a,i),pt(i)?await n(r,a,i.inputs[0]):await n(r,a,i),i})(r,a)}}})(ns,bt,Pe),fs=((t,e,n,s,r,a,i)=>class extends t{constructor(t,e){const o=r(t),l={...be,...e},u=n(o,l);super(t,!0,u,a(o)?s():null),this._isCurveNullified=!1,this._nativeWaveShaperNode=u,i(this,1)}get curve(){return this._isCurveNullified?null:this._nativeWaveShaperNode.curve}set curve(t){if(null===t)this._isCurveNullified=!0,this._nativeWaveShaperNode.curve=new Float32Array([0,0]);else{if(t.length<2)throw e();this._isCurveNullified=!1,this._nativeWaveShaperNode.curve=t}}get oversample(){return this._nativeWaveShaperNode.oversample}set oversample(t){this._nativeWaveShaperNode.oversample=t}})(Je,Gt,ns,ds,Be,Ge,vn),ms=(t=>null!==t&&t.isSecureContext)(Me),gs=(t=>(e,n,s)=>{Object.defineProperties(t,{currentFrame:{configurable:!0,get:()=>Math.round(e*n)},currentTime:{configurable:!0,get:()=>e}});try{return s()}finally{null!==t&&(delete t.currentFrame,delete t.currentTime)}})(Me),ys=new WeakMap,bs=((t,e)=>n=>{let s=t.get(n);if(void 0!==s)return s;if(null===e)throw new Error("Missing the native OfflineAudioContext constructor.");return s=new e(1,1,44100),t.set(n,s),s})(ys,Ue),xs=ms?((t,e,n,s,r,a,i,o,l,u,c,h,p)=>{let d=0;return(f,m,g={credentials:"omit"})=>{const y=c.get(f);if(void 0!==y&&y.has(m))return Promise.resolve();const b=u.get(f);if(void 0!==b){const t=b.get(m);if(void 0!==t)return t}const x=a(f),v=void 0===x.audioWorklet?r(m).then((([t,e])=>{const[s,r]=M(t,e);return n(`${s};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${r}\n})})(window,'_AWGS')`)})).then((()=>{const t=p._AWGS.pop();if(void 0===t)throw new SyntaxError;s(x.currentTime,x.sampleRate,(()=>t(class{},void 0,((t,n)=>{if(""===t.trim())throw e();const s=R.get(x);if(void 0!==s){if(s.has(t))throw e();z(n),L(n.parameterDescriptors),s.set(t,n)}else z(n),L(n.parameterDescriptors),R.set(x,new Map([[t,n]]))}),x.sampleRate,void 0,void 0)))})):Promise.all([r(m),Promise.resolve(t(h,h))]).then((([[t,e],n])=>{const s=d+1;d=s;const[r,a]=M(t,e),u=new Blob([`${r};((AudioWorkletProcessor,registerProcessor)=>{${a}\n})(${n?"AudioWorkletProcessor":"class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}"},(n,p)=>registerProcessor(n,class extends p{${n?"":"__c = (a) => a.forEach(e=>this.__b.add(e.buffer));"}process(i,o,p){${n?"":"i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));"}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${s}',class extends AudioWorkletProcessor{process(){return !1}})`],{type:"application/javascript; charset=utf-8"}),c=URL.createObjectURL(u);return x.audioWorklet.addModule(c,g).then((()=>{if(o(x))return x;const t=i(x);return t.audioWorklet.addModule(c,g).then((()=>t))})).then((t=>{if(null===l)throw new SyntaxError;try{new l(t,`__sac${s}`)}catch{throw new SyntaxError}})).finally((()=>URL.revokeObjectURL(c)))}));return void 0===b?u.set(f,new Map([[m,v]])):b.set(m,v),v.then((()=>{const t=c.get(f);void 0===t?c.set(f,new Set([m])):t.add(m)})).finally((()=>{const t=u.get(f);void 0!==t&&t.delete(m)})),v}})(Oe,he,(t=>e=>new Promise(((n,s)=>{if(null===t)return void s(new SyntaxError);const r=t.document.head;if(null===r)s(new SyntaxError);else{const a=t.document.createElement("script"),i=new Blob([e],{type:"application/javascript"}),o=URL.createObjectURL(i),l=t.onerror,u=()=>{t.onerror=l,URL.revokeObjectURL(o)};t.onerror=(e,n,r,a,i)=>n===o||n===t.location.href&&1===r&&1===a?(u(),s(i),!1):null!==l?l(e,n,r,a,i):void 0,a.onerror=()=>{u(),s(new SyntaxError)},a.onload=()=>{u(),n()},a.src=o,a.type="module",r.appendChild(a)}})))(Me),gs,(async t=>{try{const e=await fetch(t);if(e.ok)return[await e.text(),e.url]}catch{}throw new DOMException("","AbortError")}),Be,bs,Ge,Ze,new WeakMap,new WeakMap,((t,e)=>async()=>{if(null===t)return!0;if(null===e)return!1;const n=new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),s=new e(1,128,44100),r=URL.createObjectURL(n);let a=!1,i=!1;try{await s.audioWorklet.addModule(r);const e=new t(s,"a",{numberOfOutputs:0}),n=s.createOscillator();e.port.onmessage=()=>a=!0,e.onprocessorerror=()=>i=!0,n.connect(e),n.start(0),await s.startRendering(),await new Promise((t=>setTimeout(t)))}catch{}finally{URL.revokeObjectURL(r)}return a&&!i})(Ze,Ue),Me):void 0,vs=((t,e)=>n=>t(n)||e(n))(Xe,Ge),ws=((t,e,n,s,r,a,i,o,l,u,c)=>(n,s)=>{const h=i(n)?n:a(n);if(r.has(s)){const t=new DOMException("","DataCloneError");return Promise.reject(t)}try{r.add(s)}catch{}return e(l,(()=>l(h)))?h.decodeAudioData(s).then((n=>(Pt(s).catch((()=>{})),e(o,(()=>o(n)))||c(n),t.add(n),n))):new Promise(((e,n)=>{const r=async()=>{try{await Pt(s)}catch{}},a=t=>{n(t),r()};try{h.decodeAudioData(s,(n=>{"function"!=typeof n.copyFromChannel&&(u(n),Z(n)),t.add(n),r().then((()=>e(n)))}),(t=>{a(null===t?new DOMException("","EncodingError"):t)}))}catch(t){a(t)}}))})(en,Oe,0,0,new WeakSet,Be,vs,K,Kt,an,on),ks=((t,e,n,s,r,a,i,o,l,u,c,h,p,d,f,m,g,y,b,x)=>class extends f{constructor(e,n){super(e,n),this._nativeContext=e,this._audioWorklet=void 0===t?void 0:{addModule:(e,n)=>t(this,e,n)}}get audioWorklet(){return this._audioWorklet}createAnalyser(){return new e(this)}createBiquadFilter(){return new r(this)}createBuffer(t,e,s){return new n({length:e,numberOfChannels:t,sampleRate:s})}createBufferSource(){return new s(this)}createChannelMerger(t=6){return new a(this,{numberOfInputs:t})}createChannelSplitter(t=6){return new i(this,{numberOfOutputs:t})}createConstantSource(){return new o(this)}createConvolver(){return new l(this)}createDelay(t=1){return new c(this,{maxDelayTime:t})}createDynamicsCompressor(){return new h(this)}createGain(){return new p(this)}createIIRFilter(t,e){return new d(this,{feedback:e,feedforward:t})}createOscillator(){return new m(this)}createPanner(){return new g(this)}createPeriodicWave(t,e,n={disableNormalization:!1}){return new y(this,{...n,imag:e,real:t})}createStereoPanner(){return new b(this)}createWaveShaper(){return new x(this)}decodeAudioData(t,e,n){return u(this._nativeContext,t).then((t=>("function"==typeof e&&e(t),t)),(t=>{throw"function"==typeof n&&n(t),t}))}})(xs,tn,ln,yn,wn,Nn,Sn,Rn,Fn,ws,Ln,Vn,Wn,qn,Yn,Qn,is,ls,ps,fs),_s=((t,e,n,s)=>class extends t{constructor(t,e){const r=n(t),a=((t,e)=>t.createMediaElementSource(e.mediaElement))(r,e);if(s(r))throw TypeError();super(t,!0,a,null),this._nativeMediaElementAudioSourceNode=a}get mediaElement(){return this._nativeMediaElementAudioSourceNode.mediaElement}})(Je,0,Be,Ge),Is=((t,e,n,s)=>class extends t{constructor(t,e){const r=n(t);if(s(r))throw new TypeError;const a=((t,e)=>{const n=t.createMediaStreamDestination();return Zt(n,e),1===n.numberOfOutputs&&Object.defineProperty(n,"numberOfOutputs",{get:()=>0}),n})(r,{...Xt,...e});super(t,!1,a,null),this._nativeMediaStreamAudioDestinationNode=a}get stream(){return this._nativeMediaStreamAudioDestinationNode.stream}})(Je,0,Be,Ge),Ts=((t,e,n,s)=>class extends t{constructor(t,e){const r=n(t),a=((t,{mediaStream:e})=>{const n=e.getAudioTracks();n.sort(((t,e)=>t.id<e.id?-1:t.id>e.id?1:0));const s=n.slice(0,1),r=t.createMediaStreamSource(new MediaStream(s));return Object.defineProperty(r,"mediaStream",{value:e}),r})(r,e);if(s(r))throw new TypeError;super(t,!0,a,null),this._nativeMediaStreamAudioSourceNode=a}get mediaStream(){return this._nativeMediaStreamAudioSourceNode.mediaStream}})(Je,0,Be,Ge),Ns=((t,e)=>(n,{mediaStreamTrack:s})=>{if("function"==typeof n.createMediaStreamTrackSource)return n.createMediaStreamTrackSource(s);const r=new MediaStream([s]),a=n.createMediaStreamSource(r);if("audio"!==s.kind)throw t();if(e(n))throw new TypeError;return a})(Gt,Ge),Cs=((t,e,n)=>class extends t{constructor(t,s){const r=n(t);super(t,!0,e(r,s),null)}})(Je,Ns,Be),Ss=((t,e,n,s,r,a,i,o,l)=>class extends t{constructor(t={}){if(null===l)throw new Error("Missing the native AudioContext constructor.");let e;try{e=new l(t)}catch(t){if(12===t.code&&"sampleRate is not in range"===t.message)throw n();throw t}if(null===e)throw s();if(!(t=>void 0===t||"number"==typeof t||"string"==typeof t&&("balanced"===t||"interactive"===t||"playback"===t))(t.latencyHint))throw new TypeError(`The provided value '${t.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);if(void 0!==t.sampleRate&&e.sampleRate!==t.sampleRate)throw n();super(e,2);const{latencyHint:r}=t,{sampleRate:a}=e;if(this._baseLatency="number"==typeof e.baseLatency?e.baseLatency:"balanced"===r?512/a:"interactive"===r||void 0===r?256/a:"playback"===r?1024/a:128*Math.max(2,Math.min(128,Math.round(r*a/128)))/a,this._nativeAudioContext=e,"webkitAudioContext"===l.name?(this._nativeGainNode=e.createGain(),this._nativeOscillatorNode=e.createOscillator(),this._nativeGainNode.gain.value=1e-37,this._nativeOscillatorNode.connect(this._nativeGainNode).connect(e.destination),this._nativeOscillatorNode.start()):(this._nativeGainNode=null,this._nativeOscillatorNode=null),this._state=null,"running"===e.state){this._state="suspended";const t=()=>{"suspended"===this._state&&(this._state=null),e.removeEventListener("statechange",t)};e.addEventListener("statechange",t)}}get baseLatency(){return this._baseLatency}get state(){return null!==this._state?this._state:this._nativeAudioContext.state}close(){return"closed"===this.state?this._nativeAudioContext.close().then((()=>{throw e()})):("suspended"===this._state&&(this._state=null),this._nativeAudioContext.close().then((()=>{null!==this._nativeGainNode&&null!==this._nativeOscillatorNode&&(this._nativeOscillatorNode.stop(),this._nativeGainNode.disconnect(),this._nativeOscillatorNode.disconnect()),it(this)})))}createMediaElementSource(t){return new r(this,{mediaElement:t})}createMediaStreamDestination(){return new a(this)}createMediaStreamSource(t){return new i(this,{mediaStream:t})}createMediaStreamTrackSource(t){return new o(this,{mediaStreamTrack:t})}resume(){return"suspended"===this._state?new Promise(((t,e)=>{const n=()=>{this._nativeAudioContext.removeEventListener("statechange",n),"running"===this._nativeAudioContext.state?t():this.resume().then(t,e)};this._nativeAudioContext.addEventListener("statechange",n)})):this._nativeAudioContext.resume().catch((t=>{if(void 0===t||15===t.code)throw e();throw t}))}suspend(){return this._nativeAudioContext.suspend().catch((t=>{if(void 0===t)throw e();throw t}))}})(ks,Gt,he,ye,_s,Is,Ts,Cs,qe),As=(t=>e=>{const n=t.get(e);if(void 0===n)throw new Error("The context has no set of AudioWorkletNodes.");return n})(Kn),$s=(t=>(e,n)=>{t(e).add(n)})(As),Es=(t=>(e,n,s=0,r=0)=>{const a=e[s];if(void 0===a)throw t();return It(n)?a.connect(n,0,r):a.connect(n,0)})(Y),Rs=(t=>(e,n)=>{t(e).delete(n)})(As),Os=(t=>(e,n=void 0,s=void 0,r=0)=>void 0===n?e.forEach((t=>t.disconnect())):"number"==typeof n?Bt(t,e,n).disconnect():It(n)?void 0===s?e.forEach((t=>t.disconnect(n))):void 0===r?Bt(t,e,s).disconnect(n,0):Bt(t,e,s).disconnect(n,0,r):void 0===s?e.forEach((t=>t.disconnect(n))):Bt(t,e,s).disconnect(n,0))(Y),Ds=new WeakMap,Fs=((t,e)=>n=>e(t,n))(Ds,P),Ms=((t,e,n,s,r,a,i,o,l,u,c,h,p)=>(d,f,m,g)=>{if(0===g.numberOfInputs&&0===g.numberOfOutputs)throw l();const y=Array.isArray(g.outputChannelCount)?g.outputChannelCount:Array.from(g.outputChannelCount);if(y.some((t=>t<1)))throw l();if(y.length!==g.numberOfOutputs)throw e();if("explicit"!==g.channelCountMode)throw l();const b=g.channelCount*g.numberOfInputs,x=y.reduce(((t,e)=>t+e),0),v=void 0===m.parameterDescriptors?0:m.parameterDescriptors.length;if(b+v>6||x>6)throw l();const w=new MessageChannel,k=[],_=[];for(let t=0;t<g.numberOfInputs;t+=1)k.push(i(d,{channelCount:g.channelCount,channelCountMode:g.channelCountMode,channelInterpretation:g.channelInterpretation,gain:1})),_.push(r(d,{channelCount:g.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:g.channelCount}));const I=[];if(void 0!==m.parameterDescriptors)for(const{defaultValue:t,maxValue:e,minValue:n,name:s}of m.parameterDescriptors){const r=a(d,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:void 0!==g.parameterData[s]?g.parameterData[s]:void 0===t?0:t});Object.defineProperties(r.offset,{defaultValue:{get:()=>void 0===t?0:t},maxValue:{get:()=>void 0===e?tt:e},minValue:{get:()=>void 0===n?Q:n}}),I.push(r)}const T=s(d,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,b+v)}),N=ne(f,d.sampleRate),C=o(d,N,b+v,Math.max(1,x)),S=r(d,{channelCount:Math.max(1,x),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,x)}),A=[];for(let t=0;t<g.numberOfOutputs;t+=1)A.push(s(d,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:y[t]}));for(let t=0;t<g.numberOfInputs;t+=1){k[t].connect(_[t]);for(let e=0;e<g.channelCount;e+=1)_[t].connect(T,e,t*g.channelCount+e)}const $=new St(void 0===m.parameterDescriptors?[]:m.parameterDescriptors.map((({name:t},e)=>{const n=I[e];return n.connect(T,0,b+e),n.start(0),[t,n.offset]})));T.connect(C);let E=g.channelInterpretation,R=null;const D=0===g.numberOfOutputs?[C]:A,F={get bufferSize(){return N},get channelCount(){return g.channelCount},set channelCount(t){throw n()},get channelCountMode(){return g.channelCountMode},set channelCountMode(t){throw n()},get channelInterpretation(){return E},set channelInterpretation(t){for(const e of k)e.channelInterpretation=t;E=t},get context(){return C.context},get inputs(){return k},get numberOfInputs(){return g.numberOfInputs},get numberOfOutputs(){return g.numberOfOutputs},get onprocessorerror(){return R},set onprocessorerror(t){"function"==typeof R&&F.removeEventListener("processorerror",R),R="function"==typeof t?t:null,"function"==typeof R&&F.addEventListener("processorerror",R)},get parameters(){return $},get port(){return w.port2},addEventListener:(...t)=>C.addEventListener(t[0],t[1],t[2]),connect:t.bind(null,D),disconnect:u.bind(null,D),dispatchEvent:(...t)=>C.dispatchEvent(t[0]),removeEventListener:(...t)=>C.removeEventListener(t[0],t[1],t[2])},M=new Map;var L,z;w.port1.addEventListener=(L=w.port1.addEventListener,(...t)=>{if("message"===t[0]){const e="function"==typeof t[1]?t[1]:"object"==typeof t[1]&&null!==t[1]&&"function"==typeof t[1].handleEvent?t[1].handleEvent:null;if(null!==e){const n=M.get(t[1]);void 0!==n?t[1]=n:(t[1]=t=>{c(d.currentTime,d.sampleRate,(()=>e(t)))},M.set(e,t[1]))}}return L.call(w.port1,t[0],t[1],t[2])}),w.port1.removeEventListener=(z=w.port1.removeEventListener,(...t)=>{if("message"===t[0]){const e=M.get(t[1]);void 0!==e&&(M.delete(t[1]),t[1]=e)}return z.call(w.port1,t[0],t[1],t[2])});let P=null;Object.defineProperty(w.port1,"onmessage",{get:()=>P,set:t=>{"function"==typeof P&&w.port1.removeEventListener("message",P),P="function"==typeof t?t:null,"function"==typeof P&&(w.port1.addEventListener("message",P),w.port1.start())}}),m.prototype.port=w.port1;let V=null;const B=((t,e,n,s)=>{let r=O.get(t);void 0===r&&(r=new WeakMap,O.set(t,r));const a=(async(t,e)=>{const n=await(t=>new Promise(((e,n)=>{const{port1:s,port2:r}=new MessageChannel;s.onmessage=({data:t})=>{s.close(),r.close(),e(t)},s.onmessageerror=({data:t})=>{s.close(),r.close(),n(t)},r.postMessage(t)})))(e);return new t(n)})(n,s);return r.set(e,a),a})(d,F,m,g);B.then((t=>V=t));const W=Rt(g.numberOfInputs,g.channelCount),U=Rt(g.numberOfOutputs,y),G=void 0===m.parameterDescriptors?[]:m.parameterDescriptors.reduce(((t,{name:e})=>({...t,[e]:new Float32Array(128)})),{});let j=!0;const H=()=>{g.numberOfOutputs>0&&C.disconnect(S);for(let t=0,e=0;t<g.numberOfOutputs;t+=1){const n=A[t];for(let s=0;s<y[t];s+=1)S.disconnect(n,e+s,s);e+=y[t]}},q=new Map;C.onaudioprocess=({inputBuffer:t,outputBuffer:e})=>{if(null!==V){const n=h(F);for(let s=0;s<N;s+=128){for(let e=0;e<g.numberOfInputs;e+=1)for(let n=0;n<g.channelCount;n+=1)$t(t,W[e],n,n,s);void 0!==m.parameterDescriptors&&m.parameterDescriptors.forEach((({name:e},n)=>{$t(t,G,e,b+n,s)}));for(let t=0;t<g.numberOfInputs;t+=1)for(let e=0;e<y[t];e+=1)0===U[t][e].byteLength&&(U[t][e]=new Float32Array(128));try{const t=W.map(((t,e)=>{if(n[e].size>0)return q.set(e,N/128),t;const s=q.get(e);return void 0===s?[]:(t.every((t=>t.every((t=>0===t))))&&(1===s?q.delete(e):q.set(e,s-1)),t)})),r=c(d.currentTime+s/d.sampleRate,d.sampleRate,(()=>V.process(t,U,G)));j=r;for(let t=0,n=0;t<g.numberOfOutputs;t+=1){for(let r=0;r<y[t];r+=1)Et(e,U[t],r,n+r,s);n+=y[t]}}catch(t){j=!1,F.dispatchEvent(new ErrorEvent("processorerror",{colno:t.colno,filename:t.filename,lineno:t.lineno,message:t.message}))}if(!j){for(let t=0;t<g.numberOfInputs;t+=1){k[t].disconnect(_[t]);for(let e=0;e<g.channelCount;e+=1)_[s].disconnect(T,e,t*g.channelCount+e)}if(void 0!==m.parameterDescriptors){const t=m.parameterDescriptors.length;for(let e=0;e<t;e+=1){const t=I[e];t.disconnect(T,0,b+e),t.stop()}}T.disconnect(C),C.onaudioprocess=null,X?H():Z();break}}}};let X=!1;const K=i(d,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0}),Y=()=>C.connect(K).connect(d.destination),Z=()=>{C.disconnect(K),K.disconnect()};return Y(),p(F,(()=>{if(j){Z(),g.numberOfOutputs>0&&C.connect(S);for(let t=0,e=0;t<g.numberOfOutputs;t+=1){const n=A[t];for(let s=0;s<y[t];s+=1)S.connect(n,e+s,s);e+=y[t]}}X=!0}),(()=>{j&&(Y(),H()),X=!1}))})(Es,Y,Gt,In,re,$n,oe,ce,he,Os,gs,Fs,kn),Ls=((t,e,n,s,r)=>(a,i,o,l,u,c)=>{if(null!==o)try{const e=new o(a,l,c),s=new Map;let i=null;if(Object.defineProperties(e,{channelCount:{get:()=>c.channelCount,set:()=>{throw t()}},channelCountMode:{get:()=>"explicit",set:()=>{throw t()}},onprocessorerror:{get:()=>i,set:t=>{"function"==typeof i&&e.removeEventListener("processorerror",i),i="function"==typeof t?t:null,"function"==typeof i&&e.addEventListener("processorerror",i)}}}),e.addEventListener=(p=e.addEventListener,(...t)=>{if("processorerror"===t[0]){const e="function"==typeof t[1]?t[1]:"object"==typeof t[1]&&null!==t[1]&&"function"==typeof t[1].handleEvent?t[1].handleEvent:null;if(null!==e){const n=s.get(t[1]);void 0!==n?t[1]=n:(t[1]=n=>{"error"===n.type?(Object.defineProperties(n,{type:{value:"processorerror"}}),e(n)):e(new ErrorEvent(t[0],{...n}))},s.set(e,t[1]))}}return p.call(e,"error",t[1],t[2]),p.call(e,...t)}),e.removeEventListener=(h=e.removeEventListener,(...t)=>{if("processorerror"===t[0]){const e=s.get(t[1]);void 0!==e&&(s.delete(t[1]),t[1]=e)}return h.call(e,"error",t[1],t[2]),h.call(e,t[0],t[1],t[2])}),0!==c.numberOfOutputs){const t=n(a,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return e.connect(t).connect(a.destination),r(e,(()=>t.disconnect()),(()=>t.connect(a.destination)))}return e}catch(t){if(11===t.code)throw s();throw t}var h,p;if(void 0===u)throw s();return(t=>{const{port1:e}=new MessageChannel;try{e.postMessage(t)}finally{e.close()}})(c),e(a,i,u,c)})(Gt,Ms,oe,he,kn),zs=((t,e,n,s,r,a,i,o,l,u,c,h,p,d,f,m)=>(g,y,b)=>{const x=new WeakMap;let v=null;return{render(w,k){o(k,w);const _=x.get(k);return void 0!==_?Promise.resolve(_):(async(o,w)=>{let k=c(o),_=null;const I=X(k,w),T=Array.isArray(y.outputChannelCount)?y.outputChannelCount:Array.from(y.outputChannelCount);if(null===h){const t=T.reduce(((t,e)=>t+e),0),n=r(w,{channelCount:Math.max(1,t),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,t)}),a=[];for(let t=0;t<o.numberOfOutputs;t+=1)a.push(s(w,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:T[t]}));const u=i(w,{channelCount:y.channelCount,channelCountMode:y.channelCountMode,channelInterpretation:y.channelInterpretation,gain:1});u.connect=e.bind(null,a),u.disconnect=l.bind(null,a),_=[n,a,u]}else I||(k=new h(w,g));if(x.set(w,null===_?k:_[2]),null!==_){if(null===v){if(void 0===b)throw new Error("Missing the processor constructor.");if(null===p)throw new Error("Missing the native OfflineAudioContext constructor.");const t=o.channelCount*o.numberOfInputs,e=void 0===b.parameterDescriptors?0:b.parameterDescriptors.length,n=t+e,l=async()=>{const l=new p(n,128*Math.ceil(o.context.length/128),w.sampleRate),u=[],c=[];for(let t=0;t<y.numberOfInputs;t+=1)u.push(i(l,{channelCount:y.channelCount,channelCountMode:y.channelCountMode,channelInterpretation:y.channelInterpretation,gain:1})),c.push(r(l,{channelCount:y.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:y.channelCount}));const h=await Promise.all(Array.from(o.parameters.values()).map((async t=>{const e=a(l,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:t.value});return await d(l,t,e.offset),e}))),g=s(l,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,t+e)});for(let t=0;t<y.numberOfInputs;t+=1){u[t].connect(c[t]);for(let e=0;e<y.channelCount;e+=1)c[t].connect(g,e,t*y.channelCount+e)}for(const[e,n]of h.entries())n.connect(g,0,t+e),n.start(0);return g.connect(l.destination),await Promise.all(u.map((t=>f(o,l,t)))),m(l)};v=Ot(o,0===n?null:await l(),w,y,T,b,u)}const t=await v,e=n(w,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),[l,c,h]=_;null!==t&&(e.buffer=t,e.start(0)),e.connect(l);for(let t=0,e=0;t<o.numberOfOutputs;t+=1){const n=c[t];for(let s=0;s<T[t];s+=1)l.connect(n,e+s,s);e+=T[t]}return h}if(I)for(const[e,n]of o.parameters.entries())await t(w,n,k.parameters.get(e));else for(const[t,e]of o.parameters.entries())await d(w,e,k.parameters.get(t));return await f(o,w,k),k})(w,k)}}})(hn,Es,pn,In,re,$n,oe,Rs,Os,gs,bt,Ze,Ue,dn,Pe,Gn),Ps=(t=>e=>t.get(e))(ys),Vs=(t=>(e,n)=>{t.set(e,n)})(Ds),Bs=ms?((t,e,n,s,r,a,i,o,l,u,c,h,p,d)=>class extends e{constructor(e,c,p){var d;const f=o(e),m=l(f),g=(t=>({...t,outputChannelCount:void 0!==t.outputChannelCount?t.outputChannelCount:1===t.numberOfInputs&&1===t.numberOfOutputs?[t.channelCount]:Array.from({length:t.numberOfOutputs},(()=>1))}))({...At,...p});(t=>{const{port1:e,port2:n}=new MessageChannel;try{e.postMessage(t)}finally{e.close(),n.close()}})(g);const y=R.get(f),b=null==y?void 0:y.get(c),x=m||"closed"!==f.state?f:null!==(d=i(f))&&void 0!==d?d:f,v=r(x,m?null:e.baseLatency,u,c,b,g);super(e,!0,v,m?s(c,g,b):null);const w=[];v.parameters.forEach(((t,e)=>{const s=n(this,m,t);w.push([e,s])})),this._nativeAudioWorkletNode=v,this._onprocessorerror=null,this._parameters=new St(w),m&&t(f,this);const{activeInputs:k}=a(this);h(v,k)}get onprocessorerror(){return this._onprocessorerror}set onprocessorerror(t){const e="function"==typeof t?d(this,t):null;this._nativeAudioWorkletNode.onprocessorerror=e;const n=this._nativeAudioWorkletNode.onprocessorerror;this._onprocessorerror=null!==n&&n===e?t:n}get parameters(){return null===this._parameters?this._nativeAudioWorkletNode.parameters:this._parameters}get port(){return this._nativeAudioWorkletNode.port}})($s,Je,mn,zs,Ls,st,Ps,Be,Ge,Ze,0,Vs,0,Ce):void 0,Ws=((t,e)=>(n,s,r)=>{if(null===e)throw new Error("Missing the native OfflineAudioContext constructor.");try{return new e(n,s,r)}catch(e){if("SyntaxError"===e.name)throw t();throw e}})(he,Ue),Us=((t,e,n,s,r,a,i,o)=>(l,u)=>n(l).render(l,u).then((()=>Promise.all(Array.from(s(u)).map((t=>n(t).render(t,u)))))).then((()=>r(u))).then((n=>("function"!=typeof n.copyFromChannel?(i(n),Z(n)):e(a,(()=>a(n)))||o(n),t.add(n),n))))(en,Oe,ze,As,Gn,K,an,on),Gs=((t,e,n,s,r)=>class extends t{constructor(t,n,r){let a;if("number"==typeof t&&void 0!==n&&void 0!==r)a={length:n,numberOfChannels:t,sampleRate:r};else{if("object"!=typeof t)throw new Error("The given parameters are not valid.");a=t}const{length:i,numberOfChannels:o,sampleRate:l}={...pe,...a},u=s(o,i,l);e(Kt,(()=>Kt(u)))||u.addEventListener("statechange",(()=>{let t=0;const e=n=>{"running"===this._state&&(t>0?(u.removeEventListener("statechange",e),n.stopImmediatePropagation(),this._waitForThePromiseToSettle(n)):t+=1)};return e})()),super(u,o),this._length=i,this._nativeOfflineAudioContext=u,this._state=null}get length(){return void 0===this._nativeOfflineAudioContext.length?this._length:this._nativeOfflineAudioContext.length}get state(){return null===this._state?this._nativeOfflineAudioContext.state:this._state}startRendering(){return"running"===this._state?Promise.reject(n()):(this._state="running",r(this.destination,this._nativeOfflineAudioContext).finally((()=>{this._state=null,it(this)})))}_waitForThePromiseToSettle(t){null===this._state?this._nativeOfflineAudioContext.dispatchEvent(t):setTimeout((()=>this._waitForThePromiseToSettle(t)))}})(ks,Oe,Gt,Ws,Us),js=((t,e)=>n=>{const s=t.get(n);return e(s)||e(n)})(A,Xe),Hs=((t,e)=>n=>t.has(n)||e(n))(N,Ke),qs=((t,e)=>n=>t.has(n)||e(n))(S,Ye),Xs=((t,e)=>n=>{const s=t.get(n);return e(s)||e(n)})(A,Ge);function Ks(t,e){if(!t)throw new Error(e)}function Ys(t,e,n=1/0){if(!(e<=t&&t<=n))throw new RangeError(`Value must be within [${e}, ${n}], got: ${t}`)}function Zs(t){t.isOffline||"running"===t.state||Qs('The AudioContext is "suspended". Invoke Tone.start() from a user action to start the audio.')}let Js=console;function Qs(...t){Js.warn(...t)}function tr(t){return void 0===t}function er(t){return!tr(t)}function nr(t){return"number"==typeof t}function sr(t){return"[object Object]"===Object.prototype.toString.call(t)&&t.constructor===Object}function rr(t){return Array.isArray(t)}function ar(t){return"string"==typeof t}function ir(t){return ar(t)&&/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(t)}const or="object"==typeof self?self:null,lr=or&&(or.hasOwnProperty("AudioContext")||or.hasOwnProperty("webkitAudioContext"));function ur(t,e,n,s){var r,a=arguments.length,i=a<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,s);else for(var o=t.length-1;o>=0;o--)(r=t[o])&&(i=(a<3?r(i):a>3?r(e,n,i):r(e,n))||i);return a>3&&i&&Object.defineProperty(e,n,i),i}function cr(t,e,n,s){return new(n||(n=Promise))((function(r,a){function i(t){try{l(s.next(t))}catch(t){a(t)}}function o(t){try{l(s.throw(t))}catch(t){a(t)}}function l(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(i,o)}l((s=s.apply(t,e||[])).next())}))}Object.create,Object.create,"function"==typeof SuppressedError&&SuppressedError;class hr{constructor(t,e,n){this._callback=t,this._type=e,this._updateInterval=n,this._createClock()}_createWorker(){const t=new Blob([`\n\t\t\t// the initial timeout time\n\t\t\tlet timeoutTime =  ${(1e3*this._updateInterval).toFixed(1)};\n\t\t\t// onmessage callback\n\t\t\tself.onmessage = function(msg){\n\t\t\t\ttimeoutTime = parseInt(msg.data);\n\t\t\t};\n\t\t\t// the tick function which posts a message\n\t\t\t// and schedules a new tick\n\t\t\tfunction tick(){\n\t\t\t\tsetTimeout(tick, timeoutTime);\n\t\t\t\tself.postMessage('tick');\n\t\t\t}\n\t\t\t// call tick initially\n\t\t\ttick();\n\t\t\t`],{type:"text/javascript"}),e=URL.createObjectURL(t),n=new Worker(e);n.onmessage=this._callback.bind(this),this._worker=n}_createTimeout(){this._timeout=setTimeout((()=>{this._createTimeout(),this._callback()}),1e3*this._updateInterval)}_createClock(){if("worker"===this._type)try{this._createWorker()}catch(t){this._type="timeout",this._createClock()}else"timeout"===this._type&&this._createTimeout()}_disposeClock(){this._timeout&&(clearTimeout(this._timeout),this._timeout=0),this._worker&&(this._worker.terminate(),this._worker.onmessage=null)}get updateInterval(){return this._updateInterval}set updateInterval(t){this._updateInterval=Math.max(t,128/44100),"worker"===this._type&&this._worker.postMessage(Math.max(1e3*t,1))}get type(){return this._type}set type(t){this._disposeClock(),this._type=t,this._createClock()}dispose(){this._disposeClock()}}function pr(t){return qs(t)}function dr(t){return Hs(t)}function fr(t){return Xs(t)}function mr(t){return js(t)}function gr(t){return t instanceof AudioBuffer}function yr(t,e){return"value"===t||pr(e)||dr(e)||gr(e)}function br(t,...e){if(!e.length)return t;const n=e.shift();if(sr(t)&&sr(n))for(const e in n)yr(e,n[e])?t[e]=n[e]:sr(n[e])?(t[e]||Object.assign(t,{[e]:{}}),br(t[e],n[e])):Object.assign(t,{[e]:n[e]});return br(t,...e)}function xr(t,e,n=[],s){const r={},a=Array.from(e);if(sr(a[0])&&s&&!Reflect.has(a[0],s)&&(Object.keys(a[0]).some((e=>Reflect.has(t,e)))||(br(r,{[s]:a[0]}),n.splice(n.indexOf(s),1),a.shift())),1===a.length&&sr(a[0]))br(r,a[0]);else for(let t=0;t<n.length;t++)er(a[t])&&(r[n[t]]=a[t]);return br(t,r)}function vr(t,e){return tr(t)?e:t}function wr(t,e){return e.forEach((e=>{Reflect.has(t,e)&&delete t[e]})),t}class kr{constructor(){this.debug=!1,this._wasDisposed=!1}static getDefaults(){return{}}log(...t){(this.debug||or&&this.toString()===or.TONE_DEBUG_CLASS)&&function(...t){Js.log(...t)}(this,...t)}dispose(){return this._wasDisposed=!0,this}get disposed(){return this._wasDisposed}toString(){return this.name}}kr.version=k;const _r=1e-6;function Ir(t,e){return t>e+_r}function Tr(t,e){return Ir(t,e)||Cr(t,e)}function Nr(t,e){return t+_r<e}function Cr(t,e){return Math.abs(t-e)<_r}class Sr extends kr{constructor(){super(),this.name="Timeline",this._timeline=[];const t=xr(Sr.getDefaults(),arguments,["memory"]);this.memory=t.memory,this.increasing=t.increasing}static getDefaults(){return{memory:1/0,increasing:!1}}get length(){return this._timeline.length}add(t){if(Ks(Reflect.has(t,"time"),"Timeline: events must have a time attribute"),t.time=t.time.valueOf(),this.increasing&&this.length){const e=this._timeline[this.length-1];Ks(Tr(t.time,e.time),"The time must be greater than or equal to the last scheduled time"),this._timeline.push(t)}else{const e=this._search(t.time);this._timeline.splice(e+1,0,t)}if(this.length>this.memory){const t=this.length-this.memory;this._timeline.splice(0,t)}return this}remove(t){const e=this._timeline.indexOf(t);return-1!==e&&this._timeline.splice(e,1),this}get(t,e="time"){const n=this._search(t,e);return-1!==n?this._timeline[n]:null}peek(){return this._timeline[0]}shift(){return this._timeline.shift()}getAfter(t,e="time"){const n=this._search(t,e);return n+1<this._timeline.length?this._timeline[n+1]:null}getBefore(t){const e=this._timeline.length;if(e>0&&this._timeline[e-1].time<t)return this._timeline[e-1];const n=this._search(t);return n-1>=0?this._timeline[n-1]:null}cancel(t){if(this._timeline.length>1){let e=this._search(t);if(e>=0)if(Cr(this._timeline[e].time,t)){for(let n=e;n>=0&&Cr(this._timeline[n].time,t);n--)e=n;this._timeline=this._timeline.slice(0,e)}else this._timeline=this._timeline.slice(0,e+1);else this._timeline=[]}else 1===this._timeline.length&&Tr(this._timeline[0].time,t)&&(this._timeline=[]);return this}cancelBefore(t){const e=this._search(t);return e>=0&&(this._timeline=this._timeline.slice(e+1)),this}previousEvent(t){const e=this._timeline.indexOf(t);return e>0?this._timeline[e-1]:null}_search(t,e="time"){if(0===this._timeline.length)return-1;let n=0;const s=this._timeline.length;let r=s;if(s>0&&this._timeline[s-1][e]<=t)return s-1;for(;n<r;){let s=Math.floor(n+(r-n)/2);const a=this._timeline[s],i=this._timeline[s+1];if(Cr(a[e],t)){for(let n=s;n<this._timeline.length&&Cr(this._timeline[n][e],t);n++)s=n;return s}if(Nr(a[e],t)&&Ir(i[e],t))return s;Ir(a[e],t)?r=s:n=s+1}return-1}_iterate(t,e=0,n=this._timeline.length-1){this._timeline.slice(e,n+1).forEach(t)}forEach(t){return this._iterate(t),this}forEachBefore(t,e){const n=this._search(t);return-1!==n&&this._iterate(e,0,n),this}forEachAfter(t,e){const n=this._search(t);return this._iterate(e,n+1),this}forEachBetween(t,e,n){let s=this._search(t),r=this._search(e);return-1!==s&&-1!==r?(this._timeline[s].time!==t&&(s+=1),this._timeline[r].time===e&&(r-=1),this._iterate(n,s,r)):-1===s&&this._iterate(n,0,r),this}forEachFrom(t,e){let n=this._search(t);for(;n>=0&&this._timeline[n].time>=t;)n--;return this._iterate(e,n+1),this}forEachAtTime(t,e){const n=this._search(t);if(-1!==n&&Cr(this._timeline[n].time,t)){let s=n;for(let e=n;e>=0&&Cr(this._timeline[e].time,t);e--)s=e;this._iterate((t=>{e(t)}),s,n)}return this}dispose(){return super.dispose(),this._timeline=[],this}}const Ar=[];function $r(t){Ar.push(t)}const Er=[];function Rr(t){Er.push(t)}class Or extends kr{constructor(){super(...arguments),this.name="Emitter"}on(t,e){return t.split(/\W+/).forEach((t=>{tr(this._events)&&(this._events={}),this._events.hasOwnProperty(t)||(this._events[t]=[]),this._events[t].push(e)})),this}once(t,e){const n=(...s)=>{e(...s),this.off(t,n)};return this.on(t,n),this}off(t,e){return t.split(/\W+/).forEach((n=>{if(tr(this._events)&&(this._events={}),this._events.hasOwnProperty(t))if(tr(e))this._events[t]=[];else{const n=this._events[t];for(let t=n.length-1;t>=0;t--)n[t]===e&&n.splice(t,1)}})),this}emit(t,...e){if(this._events&&this._events.hasOwnProperty(t)){const n=this._events[t].slice(0);for(let t=0,s=n.length;t<s;t++)n[t].apply(this,e)}return this}static mixin(t){["on","once","off","emit"].forEach((e=>{const n=Object.getOwnPropertyDescriptor(Or.prototype,e);Object.defineProperty(t.prototype,e,n)}))}dispose(){return super.dispose(),this._events=void 0,this}}class Dr extends Or{constructor(){super(...arguments),this.isOffline=!1}toJSON(){return{}}}class Fr extends Dr{constructor(){super(),this.name="Context",this._constants=new Map,this._timeouts=new Sr,this._timeoutIds=0,this._initialized=!1,this.isOffline=!1,this._workletModules=new Map;const t=xr(Fr.getDefaults(),arguments,["context"]);t.context?this._context=t.context:this._context=function(t){return new Ss(t)}({latencyHint:t.latencyHint}),this._ticker=new hr(this.emit.bind(this,"tick"),t.clockSource,t.updateInterval),this.on("tick",this._timeoutLoop.bind(this)),this._context.onstatechange=()=>{this.emit("statechange",this.state)},this._setLatencyHint(t.latencyHint),this.lookAhead=t.lookAhead}static getDefaults(){return{clockSource:"worker",latencyHint:"interactive",lookAhead:.1,updateInterval:.05}}initialize(){var t;return this._initialized||(t=this,Ar.forEach((e=>e(t))),this._initialized=!0),this}createAnalyser(){return this._context.createAnalyser()}createOscillator(){return this._context.createOscillator()}createBufferSource(){return this._context.createBufferSource()}createBiquadFilter(){return this._context.createBiquadFilter()}createBuffer(t,e,n){return this._context.createBuffer(t,e,n)}createChannelMerger(t){return this._context.createChannelMerger(t)}createChannelSplitter(t){return this._context.createChannelSplitter(t)}createConstantSource(){return this._context.createConstantSource()}createConvolver(){return this._context.createConvolver()}createDelay(t){return this._context.createDelay(t)}createDynamicsCompressor(){return this._context.createDynamicsCompressor()}createGain(){return this._context.createGain()}createIIRFilter(t,e){return this._context.createIIRFilter(t,e)}createPanner(){return this._context.createPanner()}createPeriodicWave(t,e,n){return this._context.createPeriodicWave(t,e,n)}createStereoPanner(){return this._context.createStereoPanner()}createWaveShaper(){return this._context.createWaveShaper()}createMediaStreamSource(t){return Ks(mr(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamSource(t)}createMediaElementSource(t){return Ks(mr(this._context),"Not available if OfflineAudioContext"),this._context.createMediaElementSource(t)}createMediaStreamDestination(){return Ks(mr(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamDestination()}decodeAudioData(t){return this._context.decodeAudioData(t)}get currentTime(){return this._context.currentTime}get state(){return this._context.state}get sampleRate(){return this._context.sampleRate}get listener(){return this.initialize(),this._listener}set listener(t){Ks(!this._initialized,"The listener cannot be set after initialization."),this._listener=t}get transport(){return this.initialize(),this._transport}set transport(t){Ks(!this._initialized,"The transport cannot be set after initialization."),this._transport=t}get draw(){return this.initialize(),this._draw}set draw(t){Ks(!this._initialized,"Draw cannot be set after initialization."),this._draw=t}get destination(){return this.initialize(),this._destination}set destination(t){Ks(!this._initialized,"The destination cannot be set after initialization."),this._destination=t}createAudioWorkletNode(t,e){return function(t,e,n){return Ks(er(Bs),"This node only works in a secure context (https or localhost)"),new Bs(t,e,n)}(this.rawContext,t,e)}addAudioWorkletModule(t,e){return cr(this,void 0,void 0,(function*(){Ks(er(this.rawContext.audioWorklet),"AudioWorkletNode is only available in a secure context (https or localhost)"),this._workletModules.has(e)||this._workletModules.set(e,this.rawContext.audioWorklet.addModule(t)),yield this._workletModules.get(e)}))}workletsAreReady(){return cr(this,void 0,void 0,(function*(){const t=[];this._workletModules.forEach((e=>t.push(e))),yield Promise.all(t)}))}get updateInterval(){return this._ticker.updateInterval}set updateInterval(t){this._ticker.updateInterval=t}get clockSource(){return this._ticker.type}set clockSource(t){this._ticker.type=t}get latencyHint(){return this._latencyHint}_setLatencyHint(t){let e=0;if(this._latencyHint=t,ar(t))switch(t){case"interactive":e=.1;break;case"playback":e=.5;break;case"balanced":e=.25}this.lookAhead=e,this.updateInterval=e/2}get rawContext(){return this._context}now(){return this._context.currentTime+this.lookAhead}immediate(){return this._context.currentTime}resume(){return mr(this._context)?this._context.resume():Promise.resolve()}close(){return cr(this,void 0,void 0,(function*(){var t;mr(this._context)&&(yield this._context.close()),this._initialized&&(t=this,Er.forEach((e=>e(t))))}))}getConstant(t){if(this._constants.has(t))return this._constants.get(t);{const e=this._context.createBuffer(1,128,this._context.sampleRate),n=e.getChannelData(0);for(let e=0;e<n.length;e++)n[e]=t;const s=this._context.createBufferSource();return s.channelCount=1,s.channelCountMode="explicit",s.buffer=e,s.loop=!0,s.start(0),this._constants.set(t,s),s}}dispose(){return super.dispose(),this._ticker.dispose(),this._timeouts.dispose(),Object.keys(this._constants).map((t=>this._constants[t].disconnect())),this}_timeoutLoop(){const t=this.now();let e=this._timeouts.peek();for(;this._timeouts.length&&e&&e.time<=t;)e.callback(),this._timeouts.shift(),e=this._timeouts.peek()}setTimeout(t,e){this._timeoutIds++;const n=this.now();return this._timeouts.add({callback:t,id:this._timeoutIds,time:n+e}),this._timeoutIds}clearTimeout(t){return this._timeouts.forEach((e=>{e.id===t&&this._timeouts.remove(e)})),this}clearInterval(t){return this.clearTimeout(t)}setInterval(t,e){const n=++this._timeoutIds,s=()=>{const r=this.now();this._timeouts.add({callback:()=>{t(),s()},id:n,time:r+e})};return s(),n}}function Mr(t,e){rr(e)?e.forEach((e=>Mr(t,e))):Object.defineProperty(t,e,{enumerable:!0,writable:!1})}function Lr(t,e){rr(e)?e.forEach((e=>Lr(t,e))):Object.defineProperty(t,e,{writable:!0})}const zr=()=>{};class Pr extends kr{constructor(){super(),this.name="ToneAudioBuffer",this.onload=zr;const t=xr(Pr.getDefaults(),arguments,["url","onload","onerror"]);this.reverse=t.reverse,this.onload=t.onload,t.url&&gr(t.url)||t.url instanceof Pr?this.set(t.url):ar(t.url)&&this.load(t.url).catch(t.onerror)}static getDefaults(){return{onerror:zr,onload:zr,reverse:!1}}get sampleRate(){return this._buffer?this._buffer.sampleRate:Ur().sampleRate}set(t){return t instanceof Pr?t.loaded?this._buffer=t.get():t.onload=()=>{this.set(t),this.onload(this)}:this._buffer=t,this._reversed&&this._reverse(),this}get(){return this._buffer}load(t){return cr(this,void 0,void 0,(function*(){const e=Pr.load(t).then((t=>{this.set(t),this.onload(this)}));Pr.downloads.push(e);try{yield e}finally{const t=Pr.downloads.indexOf(e);Pr.downloads.splice(t,1)}return this}))}dispose(){return super.dispose(),this._buffer=void 0,this}fromArray(t){const e=rr(t)&&t[0].length>0,n=e?t.length:1,s=e?t[0].length:t.length,r=Ur(),a=r.createBuffer(n,s,r.sampleRate),i=e||1!==n?t:[t];for(let t=0;t<n;t++)a.copyToChannel(i[t],t);return this._buffer=a,this}toMono(t){if(nr(t))this.fromArray(this.toArray(t));else{let t=new Float32Array(this.length);const e=this.numberOfChannels;for(let n=0;n<e;n++){const e=this.toArray(n);for(let n=0;n<e.length;n++)t[n]+=e[n]}t=t.map((t=>t/e)),this.fromArray(t)}return this}toArray(t){if(nr(t))return this.getChannelData(t);if(1===this.numberOfChannels)return this.toArray(0);{const t=[];for(let e=0;e<this.numberOfChannels;e++)t[e]=this.getChannelData(e);return t}}getChannelData(t){return this._buffer?this._buffer.getChannelData(t):new Float32Array(0)}slice(t,e=this.duration){const n=Math.floor(t*this.sampleRate),s=Math.floor(e*this.sampleRate);Ks(n<s,"The start time must be less than the end time");const r=s-n,a=Ur().createBuffer(this.numberOfChannels,r,this.sampleRate);for(let t=0;t<this.numberOfChannels;t++)a.copyToChannel(this.getChannelData(t).subarray(n,s),t);return new Pr(a)}_reverse(){if(this.loaded)for(let t=0;t<this.numberOfChannels;t++)this.getChannelData(t).reverse();return this}get loaded(){return this.length>0}get duration(){return this._buffer?this._buffer.duration:0}get length(){return this._buffer?this._buffer.length:0}get numberOfChannels(){return this._buffer?this._buffer.numberOfChannels:0}get reverse(){return this._reversed}set reverse(t){this._reversed!==t&&(this._reversed=t,this._reverse())}static fromArray(t){return(new Pr).fromArray(t)}static fromUrl(t){return cr(this,void 0,void 0,(function*(){const e=new Pr;return yield e.load(t)}))}static load(t){return cr(this,void 0,void 0,(function*(){const e=t.match(/\[([^\]\[]+\|.+)\]$/);if(e){const n=e[1].split("|");let s=n[0];for(const t of n)if(Pr.supportsType(t)){s=t;break}t=t.replace(e[0],s)}const n=""===Pr.baseUrl||Pr.baseUrl.endsWith("/")?Pr.baseUrl:Pr.baseUrl+"/",s=yield fetch(n+t);if(!s.ok)throw new Error(`could not load url: ${t}`);const r=yield s.arrayBuffer();return yield Ur().decodeAudioData(r)}))}static supportsType(t){const e=t.split("."),n=e[e.length-1];return""!==document.createElement("audio").canPlayType("audio/"+n)}static loaded(){return cr(this,void 0,void 0,(function*(){for(yield Promise.resolve();Pr.downloads.length;)yield Pr.downloads[0]}))}}Pr.baseUrl="",Pr.downloads=[];class Vr extends Fr{constructor(){var t,e,n;super({clockSource:"offline",context:fr(arguments[0])?arguments[0]:(t=arguments[0],e=arguments[1]*arguments[2],n=arguments[2],new Gs(t,e,n)),lookAhead:0,updateInterval:fr(arguments[0])?128/arguments[0].sampleRate:128/arguments[2]}),this.name="OfflineContext",this._currentTime=0,this.isOffline=!0,this._duration=fr(arguments[0])?arguments[0].length/arguments[0].sampleRate:arguments[1]}now(){return this._currentTime}get currentTime(){return this._currentTime}_renderClock(t){return cr(this,void 0,void 0,(function*(){let e=0;for(;this._duration-this._currentTime>=0;){this.emit("tick"),this._currentTime+=128/this.sampleRate,e++;const n=Math.floor(this.sampleRate/128);t&&e%n==0&&(yield new Promise((t=>setTimeout(t,1))))}}))}render(t=!0){return cr(this,void 0,void 0,(function*(){yield this.workletsAreReady(),yield this._renderClock(t);const e=yield this._context.startRendering();return new Pr(e)}))}close(){return Promise.resolve()}}const Br=new class extends Dr{constructor(){super(...arguments),this.lookAhead=0,this.latencyHint=0,this.isOffline=!1}createAnalyser(){return{}}createOscillator(){return{}}createBufferSource(){return{}}createBiquadFilter(){return{}}createBuffer(t,e,n){return{}}createChannelMerger(t){return{}}createChannelSplitter(t){return{}}createConstantSource(){return{}}createConvolver(){return{}}createDelay(t){return{}}createDynamicsCompressor(){return{}}createGain(){return{}}createIIRFilter(t,e){return{}}createPanner(){return{}}createPeriodicWave(t,e,n){return{}}createStereoPanner(){return{}}createWaveShaper(){return{}}createMediaStreamSource(t){return{}}createMediaElementSource(t){return{}}createMediaStreamDestination(){return{}}decodeAudioData(t){return Promise.resolve({})}createAudioWorkletNode(t,e){return{}}get rawContext(){return{}}addAudioWorkletModule(t,e){return cr(this,void 0,void 0,(function*(){return Promise.resolve()}))}resume(){return Promise.resolve()}setTimeout(t,e){return 0}clearTimeout(t){return this}setInterval(t,e){return 0}clearInterval(t){return this}getConstant(t){return{}}get currentTime(){return 0}get state(){return{}}get sampleRate(){return 0}get listener(){return{}}get transport(){return{}}get draw(){return{}}set draw(t){}get destination(){return{}}set destination(t){}now(){return 0}immediate(){return 0}};let Wr=Br;function Ur(){return Wr===Br&&lr&&(t=new Fr,Wr=mr(t)?new Fr(t):fr(t)?new Vr(t):t),Wr;var t}if(or&&!or.TONE_SILENCE_LOGGING){const t=` * Tone.js ${"v"}${k} * `;console.log(`%c${t}`,"background: #000; color: #fff")}function Gr(t){return Math.pow(2,t/12)}let jr=440;function Hr(t){return Math.round(qr(t))}function qr(t){return 69+12*Math.log2(t/jr)}class Xr extends kr{constructor(t,e,n){super(),this.defaultUnits="s",this._val=e,this._units=n,this.context=t,this._expressions=this._getExpressions()}_getExpressions(){return{hz:{method:t=>this._frequencyToUnits(parseFloat(t)),regexp:/^(\d+(?:\.\d+)?)hz$/i},i:{method:t=>this._ticksToUnits(parseInt(t,10)),regexp:/^(\d+)i$/i},m:{method:t=>this._beatsToUnits(parseInt(t,10)*this._getTimeSignature()),regexp:/^(\d+)m$/i},n:{method:(t,e)=>{const n=parseInt(t,10),s="."===e?1.5:1;return 1===n?this._beatsToUnits(this._getTimeSignature())*s:this._beatsToUnits(4/n)*s},regexp:/^(\d+)n(\.?)$/i},number:{method:t=>this._expressions[this.defaultUnits].method.call(this,t),regexp:/^(\d+(?:\.\d+)?)$/},s:{method:t=>this._secondsToUnits(parseFloat(t)),regexp:/^(\d+(?:\.\d+)?)s$/},samples:{method:t=>parseInt(t,10)/this.context.sampleRate,regexp:/^(\d+)samples$/},t:{method:t=>{const e=parseInt(t,10);return this._beatsToUnits(8/(3*Math.floor(e)))},regexp:/^(\d+)t$/i},tr:{method:(t,e,n)=>{let s=0;return t&&"0"!==t&&(s+=this._beatsToUnits(this._getTimeSignature()*parseFloat(t))),e&&"0"!==e&&(s+=this._beatsToUnits(parseFloat(e))),n&&"0"!==n&&(s+=this._beatsToUnits(parseFloat(n)/4)),s},regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/}}}valueOf(){if(this._val instanceof Xr&&this.fromType(this._val),tr(this._val))return this._noArg();if(ar(this._val)&&tr(this._units)){for(const t in this._expressions)if(this._expressions[t].regexp.test(this._val.trim())){this._units=t;break}}else if(sr(this._val)){let t=0;for(const e in this._val)if(er(this._val[e])){const n=this._val[e];t+=new this.constructor(this.context,e).valueOf()*n}return t}if(er(this._units)){const t=this._expressions[this._units],e=this._val.toString().trim().match(t.regexp);return e?t.method.apply(this,e.slice(1)):t.method.call(this,this._val)}return ar(this._val)?parseFloat(this._val):this._val}_frequencyToUnits(t){return 1/t}_beatsToUnits(t){return 60/this._getBpm()*t}_secondsToUnits(t){return t}_ticksToUnits(t){return t*this._beatsToUnits(1)/this._getPPQ()}_noArg(){return this._now()}_getBpm(){return this.context.transport.bpm.value}_getTimeSignature(){return this.context.transport.timeSignature}_getPPQ(){return this.context.transport.PPQ}fromType(t){switch(this._units=void 0,this.defaultUnits){case"s":this._val=t.toSeconds();break;case"i":this._val=t.toTicks();break;case"hz":this._val=t.toFrequency();break;case"midi":this._val=t.toMidi()}return this}toFrequency(){return 1/this.toSeconds()}toSamples(){return this.toSeconds()*this.context.sampleRate}toMilliseconds(){return 1e3*this.toSeconds()}}class Kr extends Xr{constructor(){super(...arguments),this.name="TimeClass"}_getExpressions(){return Object.assign(super._getExpressions(),{now:{method:t=>this._now()+new this.constructor(this.context,t).valueOf(),regexp:/^\+(.+)/},quantize:{method:t=>{const e=new Kr(this.context,t).valueOf();return this._secondsToUnits(this.context.transport.nextSubdivision(e))},regexp:/^@(.+)/}})}quantize(t,e=1){const n=new this.constructor(this.context,t).valueOf(),s=this.valueOf();return s+(Math.round(s/n)*n-s)*e}toNotation(){const t=this.toSeconds(),e=["1m"];for(let t=1;t<9;t++){const n=Math.pow(2,t);e.push(n+"n."),e.push(n+"n"),e.push(n+"t")}e.push("0");let n=e[0],s=new Kr(this.context,e[0]).toSeconds();return e.forEach((e=>{const r=new Kr(this.context,e).toSeconds();Math.abs(r-t)<Math.abs(s-t)&&(n=e,s=r)})),n}toBarsBeatsSixteenths(){const t=this._beatsToUnits(1);let e=this.valueOf()/t;e=parseFloat(e.toFixed(4));const n=Math.floor(e/this._getTimeSignature());let s=e%1*4;e=Math.floor(e)%this._getTimeSignature();const r=s.toString();return r.length>3&&(s=parseFloat(parseFloat(r).toFixed(3))),[n,e,s].join(":")}toTicks(){const t=this._beatsToUnits(1),e=this.valueOf()/t;return Math.round(e*this._getPPQ())}toSeconds(){return this.valueOf()}toMidi(){return Hr(this.toFrequency())}_now(){return this.context.now()}}class Yr extends Kr{constructor(){super(...arguments),this.name="Frequency",this.defaultUnits="hz"}static get A4(){return jr}static set A4(t){!function(t){jr=t}(t)}_getExpressions(){return Object.assign({},super._getExpressions(),{midi:{regexp:/^(\d+(?:\.\d+)?midi)/,method(t){return"midi"===this.defaultUnits?t:Yr.mtof(t)}},note:{regexp:/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,method(t,e){const n=Zr[t.toLowerCase()]+12*(parseInt(e,10)+1);return"midi"===this.defaultUnits?n:Yr.mtof(n)}},tr:{regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,method(t,e,n){let s=1;return t&&"0"!==t&&(s*=this._beatsToUnits(this._getTimeSignature()*parseFloat(t))),e&&"0"!==e&&(s*=this._beatsToUnits(parseFloat(e))),n&&"0"!==n&&(s*=this._beatsToUnits(parseFloat(n)/4)),s}}})}transpose(t){return new Yr(this.context,this.valueOf()*Gr(t))}harmonize(t){return t.map((t=>this.transpose(t)))}toMidi(){return Hr(this.valueOf())}toNote(){const t=this.toFrequency(),e=Math.log2(t/Yr.A4);let n=Math.round(12*e)+57;const s=Math.floor(n/12);return s<0&&(n+=-12*s),Jr[n%12]+s.toString()}toSeconds(){return 1/super.toSeconds()}toTicks(){const t=this._beatsToUnits(1),e=this.valueOf()/t;return Math.floor(e*this._getPPQ())}_noArg(){return 0}_frequencyToUnits(t){return t}_ticksToUnits(t){return 1/(60*t/(this._getBpm()*this._getPPQ()))}_beatsToUnits(t){return 1/super._beatsToUnits(t)}_secondsToUnits(t){return 1/t}static mtof(t){return function(t){return jr*Math.pow(2,(t-69)/12)}(t)}static ftom(t){return Hr(t)}}const Zr={cbb:-2,cb:-1,c:0,"c#":1,cx:2,dbb:0,db:1,d:2,"d#":3,dx:4,ebb:2,eb:3,e:4,"e#":5,ex:6,fbb:3,fb:4,f:5,"f#":6,fx:7,gbb:5,gb:6,g:7,"g#":8,gx:9,abb:7,ab:8,a:9,"a#":10,ax:11,bbb:9,bb:10,b:11,"b#":12,bx:13},Jr=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];class Qr extends Kr{constructor(){super(...arguments),this.name="TransportTime"}_now(){return this.context.transport.seconds}}class ta extends kr{constructor(){super();const t=xr(ta.getDefaults(),arguments,["context"]);this.defaultContext?this.context=this.defaultContext:this.context=t.context}static getDefaults(){return{context:Ur()}}now(){return this.context.currentTime+this.context.lookAhead}immediate(){return this.context.currentTime}get sampleTime(){return 1/this.context.sampleRate}get blockTime(){return 128/this.context.sampleRate}toSeconds(t){return new Kr(this.context,t).toSeconds()}toFrequency(t){return new Yr(this.context,t).toFrequency()}toTicks(t){return new Qr(this.context,t).toTicks()}_getPartialProperties(t){const e=this.get();return Object.keys(e).forEach((n=>{tr(t[n])&&delete e[n]})),e}get(){const t=this.constructor.getDefaults();return Object.keys(t).forEach((e=>{if(Reflect.has(this,e)){const n=this[e];er(n)&&er(n.value)&&er(n.setValueAtTime)?t[e]=n.value:n instanceof ta?t[e]=n._getPartialProperties(t[e]):rr(n)||nr(n)||ar(n)||"boolean"==typeof n?t[e]=n:delete t[e]}})),t}set(t){return Object.keys(t).forEach((e=>{Reflect.has(this,e)&&er(this[e])&&(this[e]&&er(this[e].value)&&er(this[e].setValueAtTime)?this[e].value!==t[e]&&(this[e].value=t[e]):this[e]instanceof ta?this[e].set(t[e]):this[e]=t[e])})),this}}class ea extends Sr{constructor(t="stopped"){super(),this.name="StateTimeline",this._initial=t,this.setStateAtTime(this._initial,0)}getValueAtTime(t){const e=this.get(t);return null!==e?e.state:this._initial}setStateAtTime(t,e,n){return Ys(e,0),this.add(Object.assign({},n,{state:t,time:e})),this}getLastState(t,e){for(let n=this._search(e);n>=0;n--){const e=this._timeline[n];if(e.state===t)return e}}getNextState(t,e){const n=this._search(e);if(-1!==n)for(let e=n;e<this._timeline.length;e++){const n=this._timeline[e];if(n.state===t)return n}}}class na extends ta{constructor(){super(xr(na.getDefaults(),arguments,["param","units","convert"])),this.name="Param",this.overridden=!1,this._minOutput=1e-7;const t=xr(na.getDefaults(),arguments,["param","units","convert"]);for(Ks(er(t.param)&&(pr(t.param)||t.param instanceof na),"param must be an AudioParam");!pr(t.param);)t.param=t.param._param;this._swappable=!!er(t.swappable)&&t.swappable,this._swappable?(this.input=this.context.createGain(),this._param=t.param,this.input.connect(this._param)):this._param=this.input=t.param,this._events=new Sr(1e3),this._initialValue=this._param.defaultValue,this.units=t.units,this.convert=t.convert,this._minValue=t.minValue,this._maxValue=t.maxValue,er(t.value)&&t.value!==this._toType(this._initialValue)&&this.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(ta.getDefaults(),{convert:!0,units:"number"})}get value(){const t=this.now();return this.getValueAtTime(t)}set value(t){this.cancelScheduledValues(this.now()),this.setValueAtTime(t,this.now())}get minValue(){return er(this._minValue)?this._minValue:"time"===this.units||"frequency"===this.units||"normalRange"===this.units||"positive"===this.units||"transportTime"===this.units||"ticks"===this.units||"bpm"===this.units||"hertz"===this.units||"samples"===this.units?0:"audioRange"===this.units?-1:"decibels"===this.units?-1/0:this._param.minValue}get maxValue(){return er(this._maxValue)?this._maxValue:"normalRange"===this.units||"audioRange"===this.units?1:this._param.maxValue}_is(t,e){return this.units===e}_assertRange(t){return er(this.maxValue)&&er(this.minValue)&&Ys(t,this._fromType(this.minValue),this._fromType(this.maxValue)),t}_fromType(t){return this.convert&&!this.overridden?this._is(t,"time")?this.toSeconds(t):this._is(t,"decibels")?(e=t,Math.pow(10,e/20)):this._is(t,"frequency")?this.toFrequency(t):t:this.overridden?0:t;var e}_toType(t){return this.convert&&"decibels"===this.units?(e=t,Math.log(e)/Math.LN10*20):t;var e}setValueAtTime(t,e){const n=this.toSeconds(e),s=this._fromType(t);return Ks(isFinite(s)&&isFinite(n),`Invalid argument(s) to setValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._assertRange(s),this.log(this.units,"setValueAtTime",t,n),this._events.add({time:n,type:"setValueAtTime",value:s}),this._param.setValueAtTime(s,n),this}getValueAtTime(t){const e=Math.max(this.toSeconds(t),0),n=this._events.getAfter(e),s=this._events.get(e);let r=this._initialValue;if(null===s)r=this._initialValue;else if("setTargetAtTime"!==s.type||null!==n&&"setValueAtTime"!==n.type)if(null===n)r=s.value;else if("linearRampToValueAtTime"===n.type||"exponentialRampToValueAtTime"===n.type){let t=s.value;if("setTargetAtTime"===s.type){const e=this._events.getBefore(s.time);t=null===e?this._initialValue:e.value}r="linearRampToValueAtTime"===n.type?this._linearInterpolate(s.time,t,n.time,n.value,e):this._exponentialInterpolate(s.time,t,n.time,n.value,e)}else r=s.value;else{const t=this._events.getBefore(s.time);let n;n=null===t?this._initialValue:t.value,"setTargetAtTime"===s.type&&(r=this._exponentialApproach(s.time,n,s.value,s.constant,e))}return this._toType(r)}setRampPoint(t){t=this.toSeconds(t);let e=this.getValueAtTime(t);return this.cancelAndHoldAtTime(t),0===this._fromType(e)&&(e=this._toType(this._minOutput)),this.setValueAtTime(e,t),this}linearRampToValueAtTime(t,e){const n=this._fromType(t),s=this.toSeconds(e);return Ks(isFinite(n)&&isFinite(s),`Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._assertRange(n),this._events.add({time:s,type:"linearRampToValueAtTime",value:n}),this.log(this.units,"linearRampToValueAtTime",t,s),this._param.linearRampToValueAtTime(n,s),this}exponentialRampToValueAtTime(t,e){let n=this._fromType(t);n=Cr(n,0)?this._minOutput:n,this._assertRange(n);const s=this.toSeconds(e);return Ks(isFinite(n)&&isFinite(s),`Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._events.add({time:s,type:"exponentialRampToValueAtTime",value:n}),this.log(this.units,"exponentialRampToValueAtTime",t,s),this._param.exponentialRampToValueAtTime(n,s),this}exponentialRampTo(t,e,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialRampToValueAtTime(t,n+this.toSeconds(e)),this}linearRampTo(t,e,n){return n=this.toSeconds(n),this.setRampPoint(n),this.linearRampToValueAtTime(t,n+this.toSeconds(e)),this}targetRampTo(t,e,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialApproachValueAtTime(t,n,e),this}exponentialApproachValueAtTime(t,e,n){e=this.toSeconds(e),n=this.toSeconds(n);const s=Math.log(n+1)/Math.log(200);return this.setTargetAtTime(t,e,s),this.cancelAndHoldAtTime(e+.9*n),this.linearRampToValueAtTime(t,e+n),this}setTargetAtTime(t,e,n){const s=this._fromType(t);Ks(isFinite(n)&&n>0,"timeConstant must be a number greater than 0");const r=this.toSeconds(e);return this._assertRange(s),Ks(isFinite(s)&&isFinite(r),`Invalid argument(s) to setTargetAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._events.add({constant:n,time:r,type:"setTargetAtTime",value:s}),this.log(this.units,"setTargetAtTime",t,r,n),this._param.setTargetAtTime(s,r,n),this}setValueCurveAtTime(t,e,n,s=1){n=this.toSeconds(n),e=this.toSeconds(e);const r=this._fromType(t[0])*s;this.setValueAtTime(this._toType(r),e);const a=n/(t.length-1);for(let n=1;n<t.length;n++){const r=this._fromType(t[n])*s;this.linearRampToValueAtTime(this._toType(r),e+n*a)}return this}cancelScheduledValues(t){const e=this.toSeconds(t);return Ks(isFinite(e),`Invalid argument to cancelScheduledValues: ${JSON.stringify(t)}`),this._events.cancel(e),this._param.cancelScheduledValues(e),this.log(this.units,"cancelScheduledValues",e),this}cancelAndHoldAtTime(t){const e=this.toSeconds(t),n=this._fromType(this.getValueAtTime(e));Ks(isFinite(e),`Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(t)}`),this.log(this.units,"cancelAndHoldAtTime",e,"value="+n);const s=this._events.get(e),r=this._events.getAfter(e);return s&&Cr(s.time,e)?r?(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time)):(this._param.cancelAndHoldAtTime(e),this._events.cancel(e+this.sampleTime)):r&&(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time),"linearRampToValueAtTime"===r.type?this.linearRampToValueAtTime(this._toType(n),e):"exponentialRampToValueAtTime"===r.type&&this.exponentialRampToValueAtTime(this._toType(n),e)),this._events.add({time:e,type:"setValueAtTime",value:n}),this._param.setValueAtTime(n,e),this}rampTo(t,e=.1,n){return"frequency"===this.units||"bpm"===this.units||"decibels"===this.units?this.exponentialRampTo(t,e,n):this.linearRampTo(t,e,n),this}apply(t){const e=this.context.currentTime;t.setValueAtTime(this.getValueAtTime(e),e);const n=this._events.get(e);if(n&&"setTargetAtTime"===n.type){const s=this._events.getAfter(n.time),r=s?s.time:e+2,a=(r-e)/10;for(let n=e;n<r;n+=a)t.linearRampToValueAtTime(this.getValueAtTime(n),n)}return this._events.forEachAfter(this.context.currentTime,(e=>{"cancelScheduledValues"===e.type?t.cancelScheduledValues(e.time):"setTargetAtTime"===e.type?t.setTargetAtTime(e.value,e.time,e.constant):t[e.type](e.value,e.time)})),this}setParam(t){Ks(this._swappable,"The Param must be assigned as 'swappable' in the constructor");const e=this.input;return e.disconnect(this._param),this.apply(t),this._param=t,e.connect(this._param),this}dispose(){return super.dispose(),this._events.dispose(),this}get defaultValue(){return this._toType(this._param.defaultValue)}_exponentialApproach(t,e,n,s,r){return n+(e-n)*Math.exp(-(r-t)/s)}_linearInterpolate(t,e,n,s,r){return e+(r-t)/(n-t)*(s-e)}_exponentialInterpolate(t,e,n,s,r){return e*Math.pow(s/e,(r-t)/(n-t))}}class sa extends ta{constructor(){super(...arguments),this.name="ToneAudioNode",this._internalChannels=[]}get numberOfInputs(){return er(this.input)?pr(this.input)||this.input instanceof na?1:this.input.numberOfInputs:0}get numberOfOutputs(){return er(this.output)?this.output.numberOfOutputs:0}_isAudioNode(t){return er(t)&&(t instanceof sa||dr(t))}_getInternalNodes(){const t=this._internalChannels.slice(0);return this._isAudioNode(this.input)&&t.push(this.input),this._isAudioNode(this.output)&&this.input!==this.output&&t.push(this.output),t}_setChannelProperties(t){this._getInternalNodes().forEach((e=>{e.channelCount=t.channelCount,e.channelCountMode=t.channelCountMode,e.channelInterpretation=t.channelInterpretation}))}_getChannelProperties(){const t=this._getInternalNodes();Ks(t.length>0,"ToneAudioNode does not have any internal nodes");const e=t[0];return{channelCount:e.channelCount,channelCountMode:e.channelCountMode,channelInterpretation:e.channelInterpretation}}get channelCount(){return this._getChannelProperties().channelCount}set channelCount(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelCount:t}))}get channelCountMode(){return this._getChannelProperties().channelCountMode}set channelCountMode(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelCountMode:t}))}get channelInterpretation(){return this._getChannelProperties().channelInterpretation}set channelInterpretation(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelInterpretation:t}))}connect(t,e=0,n=0){return aa(this,t,e,n),this}toDestination(){return this.connect(this.context.destination),this}toMaster(){return Qs("toMaster() has been renamed toDestination()"),this.toDestination()}disconnect(t,e=0,n=0){return function(t,e,n=0,s=0){if(er(e))for(;e instanceof sa;)e=e.input;for(;!dr(t);)er(t.output)&&(t=t.output);pr(e)?t.disconnect(e,n):dr(e)?t.disconnect(e,n,s):t.disconnect()}(this,t,e,n),this}chain(...t){return ra(this,...t),this}fan(...t){return t.forEach((t=>this.connect(t))),this}dispose(){return super.dispose(),er(this.input)&&(this.input instanceof sa?this.input.dispose():dr(this.input)&&this.input.disconnect()),er(this.output)&&(this.output instanceof sa?this.output.dispose():dr(this.output)&&this.output.disconnect()),this._internalChannels=[],this}}function ra(...t){const e=t.shift();t.reduce(((t,e)=>(t instanceof sa?t.connect(e):dr(t)&&aa(t,e),e)),e)}function aa(t,e,n=0,s=0){for(Ks(er(t),"Cannot connect from undefined node"),Ks(er(e),"Cannot connect to undefined node"),(e instanceof sa||dr(e))&&Ks(e.numberOfInputs>0,"Cannot connect to node with no inputs"),Ks(t.numberOfOutputs>0,"Cannot connect from node with no outputs");e instanceof sa||e instanceof na;)er(e.input)&&(e=e.input);for(;t instanceof sa;)er(t.output)&&(t=t.output);pr(e)?t.connect(e,n):t.connect(e,n,s)}class ia extends sa{constructor(){super(xr(ia.getDefaults(),arguments,["gain","units"])),this.name="Gain",this._gainNode=this.context.createGain(),this.input=this._gainNode,this.output=this._gainNode;const t=xr(ia.getDefaults(),arguments,["gain","units"]);this.gain=new na({context:this.context,convert:t.convert,param:this._gainNode.gain,units:t.units,value:t.gain,minValue:t.minValue,maxValue:t.maxValue}),Mr(this,"gain")}static getDefaults(){return Object.assign(sa.getDefaults(),{convert:!0,gain:1,units:"gain"})}dispose(){return super.dispose(),this._gainNode.disconnect(),this.gain.dispose(),this}}class oa extends sa{constructor(t){super(t),this.onended=zr,this._startTime=-1,this._stopTime=-1,this._timeout=-1,this.output=new ia({context:this.context,gain:0}),this._gainNode=this.output,this.getStateAtTime=function(t){const e=this.toSeconds(t);return-1!==this._startTime&&e>=this._startTime&&(-1===this._stopTime||e<=this._stopTime)?"started":"stopped"},this._fadeIn=t.fadeIn,this._fadeOut=t.fadeOut,this._curve=t.curve,this.onended=t.onended}static getDefaults(){return Object.assign(sa.getDefaults(),{curve:"linear",fadeIn:0,fadeOut:0,onended:zr})}_startGain(t,e=1){Ks(-1===this._startTime,"Source cannot be started more than once");const n=this.toSeconds(this._fadeIn);return this._startTime=t+n,this._startTime=Math.max(this._startTime,this.context.currentTime),n>0?(this._gainNode.gain.setValueAtTime(0,t),"linear"===this._curve?this._gainNode.gain.linearRampToValueAtTime(e,t+n):this._gainNode.gain.exponentialApproachValueAtTime(e,t,n)):this._gainNode.gain.setValueAtTime(e,t),this}stop(t){return this.log("stop",t),this._stopGain(this.toSeconds(t)),this}_stopGain(t){Ks(-1!==this._startTime,"'start' must be called before 'stop'"),this.cancelStop();const e=this.toSeconds(this._fadeOut);return this._stopTime=this.toSeconds(t)+e,this._stopTime=Math.max(this._stopTime,this.context.currentTime),e>0?"linear"===this._curve?this._gainNode.gain.linearRampTo(0,e,t):this._gainNode.gain.targetRampTo(0,e,t):(this._gainNode.gain.cancelAndHoldAtTime(t),this._gainNode.gain.setValueAtTime(0,t)),this.context.clearTimeout(this._timeout),this._timeout=this.context.setTimeout((()=>{const t="exponential"===this._curve?2*e:0;this._stopSource(this.now()+t),this._onended()}),this._stopTime-this.context.currentTime),this}_onended(){if(this.onended!==zr&&(this.onended(this),this.onended=zr,!this.context.isOffline)){const t=()=>this.dispose();void 0!==window.requestIdleCallback?window.requestIdleCallback(t):setTimeout(t,1e3)}}get state(){return this.getStateAtTime(this.now())}cancelStop(){return this.log("cancelStop"),Ks(-1!==this._startTime,"Source is not started"),this._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime),this.context.clearTimeout(this._timeout),this._stopTime=-1,this}dispose(){return super.dispose(),this._gainNode.disconnect(),this}}class la extends oa{constructor(){super(xr(la.getDefaults(),arguments,["offset"])),this.name="ToneConstantSource",this._source=this.context.createConstantSource();const t=xr(la.getDefaults(),arguments,["offset"]);aa(this._source,this._gainNode),this.offset=new na({context:this.context,convert:t.convert,param:this._source.offset,units:t.units,value:t.offset,minValue:t.minValue,maxValue:t.maxValue})}static getDefaults(){return Object.assign(oa.getDefaults(),{convert:!0,offset:1,units:"number"})}start(t){const e=this.toSeconds(t);return this.log("start",e),this._startGain(e),this._source.start(e),this}_stopSource(t){this._source.stop(t)}dispose(){return super.dispose(),"started"===this.state&&this.stop(),this._source.disconnect(),this.offset.dispose(),this}}class ua extends sa{constructor(){super(xr(ua.getDefaults(),arguments,["value","units"])),this.name="Signal",this.override=!0;const t=xr(ua.getDefaults(),arguments,["value","units"]);this.output=this._constantSource=new la({context:this.context,convert:t.convert,offset:t.value,units:t.units,minValue:t.minValue,maxValue:t.maxValue}),this._constantSource.start(0),this.input=this._param=this._constantSource.offset}static getDefaults(){return Object.assign(sa.getDefaults(),{convert:!0,units:"number",value:0})}connect(t,e=0,n=0){return ca(this,t,e,n),this}dispose(){return super.dispose(),this._param.dispose(),this._constantSource.dispose(),this}setValueAtTime(t,e){return this._param.setValueAtTime(t,e),this}getValueAtTime(t){return this._param.getValueAtTime(t)}setRampPoint(t){return this._param.setRampPoint(t),this}linearRampToValueAtTime(t,e){return this._param.linearRampToValueAtTime(t,e),this}exponentialRampToValueAtTime(t,e){return this._param.exponentialRampToValueAtTime(t,e),this}exponentialRampTo(t,e,n){return this._param.exponentialRampTo(t,e,n),this}linearRampTo(t,e,n){return this._param.linearRampTo(t,e,n),this}targetRampTo(t,e,n){return this._param.targetRampTo(t,e,n),this}exponentialApproachValueAtTime(t,e,n){return this._param.exponentialApproachValueAtTime(t,e,n),this}setTargetAtTime(t,e,n){return this._param.setTargetAtTime(t,e,n),this}setValueCurveAtTime(t,e,n,s){return this._param.setValueCurveAtTime(t,e,n,s),this}cancelScheduledValues(t){return this._param.cancelScheduledValues(t),this}cancelAndHoldAtTime(t){return this._param.cancelAndHoldAtTime(t),this}rampTo(t,e,n){return this._param.rampTo(t,e,n),this}get value(){return this._param.value}set value(t){this._param.value=t}get convert(){return this._param.convert}set convert(t){this._param.convert=t}get units(){return this._param.units}get overridden(){return this._param.overridden}set overridden(t){this._param.overridden=t}get maxValue(){return this._param.maxValue}get minValue(){return this._param.minValue}apply(t){return this._param.apply(t),this}}function ca(t,e,n,s){(e instanceof na||pr(e)||e instanceof ua&&e.override)&&(e.cancelScheduledValues(0),e.setValueAtTime(0,0),e instanceof ua&&(e.overridden=!0)),aa(t,e,n,s)}class ha extends na{constructor(){super(xr(ha.getDefaults(),arguments,["value"])),this.name="TickParam",this._events=new Sr(1/0),this._multiplier=1;const t=xr(ha.getDefaults(),arguments,["value"]);this._multiplier=t.multiplier,this._events.cancel(0),this._events.add({ticks:0,time:0,type:"setValueAtTime",value:this._fromType(t.value)}),this.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(na.getDefaults(),{multiplier:1,units:"hertz",value:1})}setTargetAtTime(t,e,n){e=this.toSeconds(e),this.setRampPoint(e);const s=this._fromType(t),r=this._events.get(e),a=Math.round(Math.max(1/n,1));for(let t=0;t<=a;t++){const a=n*t+e,i=this._exponentialApproach(r.time,r.value,s,n,a);this.linearRampToValueAtTime(this._toType(i),a)}return this}setValueAtTime(t,e){const n=this.toSeconds(e);super.setValueAtTime(t,e);const s=this._events.get(n),r=this._events.previousEvent(s),a=this._getTicksUntilEvent(r,n);return s.ticks=Math.max(a,0),this}linearRampToValueAtTime(t,e){const n=this.toSeconds(e);super.linearRampToValueAtTime(t,e);const s=this._events.get(n),r=this._events.previousEvent(s),a=this._getTicksUntilEvent(r,n);return s.ticks=Math.max(a,0),this}exponentialRampToValueAtTime(t,e){e=this.toSeconds(e);const n=this._fromType(t),s=this._events.get(e),r=Math.round(Math.max(10*(e-s.time),1)),a=(e-s.time)/r;for(let t=0;t<=r;t++){const r=a*t+s.time,i=this._exponentialInterpolate(s.time,s.value,e,n,r);this.linearRampToValueAtTime(this._toType(i),r)}return this}_getTicksUntilEvent(t,e){if(null===t)t={ticks:0,time:0,type:"setValueAtTime",value:0};else if(tr(t.ticks)){const e=this._events.previousEvent(t);t.ticks=this._getTicksUntilEvent(e,t.time)}const n=this._fromType(this.getValueAtTime(t.time));let s=this._fromType(this.getValueAtTime(e));const r=this._events.get(e);return r&&r.time===e&&"setValueAtTime"===r.type&&(s=this._fromType(this.getValueAtTime(e-this.sampleTime))),.5*(e-t.time)*(n+s)+t.ticks}getTicksAtTime(t){const e=this.toSeconds(t),n=this._events.get(e);return Math.max(this._getTicksUntilEvent(n,e),0)}getDurationOfTicks(t,e){const n=this.toSeconds(e),s=this.getTicksAtTime(e);return this.getTimeOfTick(s+t)-n}getTimeOfTick(t){const e=this._events.get(t,"ticks"),n=this._events.getAfter(t,"ticks");if(e&&e.ticks===t)return e.time;if(e&&n&&"linearRampToValueAtTime"===n.type&&e.value!==n.value){const s=this._fromType(this.getValueAtTime(e.time)),r=(this._fromType(this.getValueAtTime(n.time))-s)/(n.time-e.time),a=Math.sqrt(Math.pow(s,2)-2*r*(e.ticks-t)),i=(-s+a)/r;return(i>0?i:(-s-a)/r)+e.time}return e?0===e.value?1/0:e.time+(t-e.ticks)/e.value:t/this._initialValue}ticksToTime(t,e){return this.getDurationOfTicks(t,e)}timeToTicks(t,e){const n=this.toSeconds(e),s=this.toSeconds(t),r=this.getTicksAtTime(n);return this.getTicksAtTime(n+s)-r}_fromType(t){return"bpm"===this.units&&this.multiplier?1/(60/t/this.multiplier):super._fromType(t)}_toType(t){return"bpm"===this.units&&this.multiplier?t/this.multiplier*60:super._toType(t)}get multiplier(){return this._multiplier}set multiplier(t){const e=this.value;this._multiplier=t,this.cancelScheduledValues(0),this.setValueAtTime(e,0)}}class pa extends ua{constructor(){super(xr(pa.getDefaults(),arguments,["value"])),this.name="TickSignal";const t=xr(pa.getDefaults(),arguments,["value"]);this.input=this._param=new ha({context:this.context,convert:t.convert,multiplier:t.multiplier,param:this._constantSource.offset,units:t.units,value:t.value})}static getDefaults(){return Object.assign(ua.getDefaults(),{multiplier:1,units:"hertz",value:1})}ticksToTime(t,e){return this._param.ticksToTime(t,e)}timeToTicks(t,e){return this._param.timeToTicks(t,e)}getTimeOfTick(t){return this._param.getTimeOfTick(t)}getDurationOfTicks(t,e){return this._param.getDurationOfTicks(t,e)}getTicksAtTime(t){return this._param.getTicksAtTime(t)}get multiplier(){return this._param.multiplier}set multiplier(t){this._param.multiplier=t}dispose(){return super.dispose(),this._param.dispose(),this}}class da extends ta{constructor(){super(xr(da.getDefaults(),arguments,["frequency"])),this.name="TickSource",this._state=new ea,this._tickOffset=new Sr;const t=xr(da.getDefaults(),arguments,["frequency"]);this.frequency=new pa({context:this.context,units:t.units,value:t.frequency}),Mr(this,"frequency"),this._state.setStateAtTime("stopped",0),this.setTicksAtTime(0,0)}static getDefaults(){return Object.assign({frequency:1,units:"hertz"},ta.getDefaults())}get state(){return this.getStateAtTime(this.now())}start(t,e){const n=this.toSeconds(t);return"started"!==this._state.getValueAtTime(n)&&(this._state.setStateAtTime("started",n),er(e)&&this.setTicksAtTime(e,n)),this}stop(t){const e=this.toSeconds(t);if("stopped"===this._state.getValueAtTime(e)){const t=this._state.get(e);t&&t.time>0&&(this._tickOffset.cancel(t.time),this._state.cancel(t.time))}return this._state.cancel(e),this._state.setStateAtTime("stopped",e),this.setTicksAtTime(0,e),this}pause(t){const e=this.toSeconds(t);return"started"===this._state.getValueAtTime(e)&&this._state.setStateAtTime("paused",e),this}cancel(t){return t=this.toSeconds(t),this._state.cancel(t),this._tickOffset.cancel(t),this}getTicksAtTime(t){const e=this.toSeconds(t),n=this._state.getLastState("stopped",e),s={state:"paused",time:e};this._state.add(s);let r=n,a=0;return this._state.forEachBetween(n.time,e+this.sampleTime,(t=>{let e=r.time;const n=this._tickOffset.get(t.time);n&&n.time>=r.time&&(a=n.ticks,e=n.time),"started"===r.state&&"started"!==t.state&&(a+=this.frequency.getTicksAtTime(t.time)-this.frequency.getTicksAtTime(e)),r=t})),this._state.remove(s),a}get ticks(){return this.getTicksAtTime(this.now())}set ticks(t){this.setTicksAtTime(t,this.now())}get seconds(){return this.getSecondsAtTime(this.now())}set seconds(t){const e=this.now(),n=this.frequency.timeToTicks(t,e);this.setTicksAtTime(n,e)}getSecondsAtTime(t){t=this.toSeconds(t);const e=this._state.getLastState("stopped",t),n={state:"paused",time:t};this._state.add(n);let s=e,r=0;return this._state.forEachBetween(e.time,t+this.sampleTime,(t=>{let e=s.time;const n=this._tickOffset.get(t.time);n&&n.time>=s.time&&(r=n.seconds,e=n.time),"started"===s.state&&"started"!==t.state&&(r+=t.time-e),s=t})),this._state.remove(n),r}setTicksAtTime(t,e){return e=this.toSeconds(e),this._tickOffset.cancel(e),this._tickOffset.add({seconds:this.frequency.getDurationOfTicks(t,e),ticks:t,time:e}),this}getStateAtTime(t){return t=this.toSeconds(t),this._state.getValueAtTime(t)}getTimeOfTick(t,e=this.now()){const n=this._tickOffset.get(e),s=this._state.get(e),r=Math.max(n.time,s.time),a=this.frequency.getTicksAtTime(r)+t-n.ticks;return this.frequency.getTimeOfTick(a)}forEachTickBetween(t,e,n){let s=this._state.get(t);this._state.forEachBetween(t,e,(e=>{s&&"started"===s.state&&"started"!==e.state&&this.forEachTickBetween(Math.max(s.time,t),e.time-this.sampleTime,n),s=e}));let r=null;if(s&&"started"===s.state){const a=Math.max(s.time,t),i=this.frequency.getTicksAtTime(a),o=i-this.frequency.getTicksAtTime(s.time);let l=Math.ceil(o)-o;l=Cr(l,1)?0:l;let u=this.frequency.getTimeOfTick(i+l);for(;u<e;){try{n(u,Math.round(this.getTicksAtTime(u)))}catch(t){r=t;break}u+=this.frequency.getDurationOfTicks(1,u)}}if(r)throw r;return this}dispose(){return super.dispose(),this._state.dispose(),this._tickOffset.dispose(),this.frequency.dispose(),this}}class fa extends ta{constructor(){super(xr(fa.getDefaults(),arguments,["callback","frequency"])),this.name="Clock",this.callback=zr,this._lastUpdate=0,this._state=new ea("stopped"),this._boundLoop=this._loop.bind(this);const t=xr(fa.getDefaults(),arguments,["callback","frequency"]);this.callback=t.callback,this._tickSource=new da({context:this.context,frequency:t.frequency,units:t.units}),this._lastUpdate=0,this.frequency=this._tickSource.frequency,Mr(this,"frequency"),this._state.setStateAtTime("stopped",0),this.context.on("tick",this._boundLoop)}static getDefaults(){return Object.assign(ta.getDefaults(),{callback:zr,frequency:1,units:"hertz"})}get state(){return this._state.getValueAtTime(this.now())}start(t,e){Zs(this.context);const n=this.toSeconds(t);return this.log("start",n),"started"!==this._state.getValueAtTime(n)&&(this._state.setStateAtTime("started",n),this._tickSource.start(n,e),n<this._lastUpdate&&this.emit("start",n,e)),this}stop(t){const e=this.toSeconds(t);return this.log("stop",e),this._state.cancel(e),this._state.setStateAtTime("stopped",e),this._tickSource.stop(e),e<this._lastUpdate&&this.emit("stop",e),this}pause(t){const e=this.toSeconds(t);return"started"===this._state.getValueAtTime(e)&&(this._state.setStateAtTime("paused",e),this._tickSource.pause(e),e<this._lastUpdate&&this.emit("pause",e)),this}get ticks(){return Math.ceil(this.getTicksAtTime(this.now()))}set ticks(t){this._tickSource.ticks=t}get seconds(){return this._tickSource.seconds}set seconds(t){this._tickSource.seconds=t}getSecondsAtTime(t){return this._tickSource.getSecondsAtTime(t)}setTicksAtTime(t,e){return this._tickSource.setTicksAtTime(t,e),this}getTimeOfTick(t,e=this.now()){return this._tickSource.getTimeOfTick(t,e)}getTicksAtTime(t){return this._tickSource.getTicksAtTime(t)}nextTickTime(t,e){const n=this.toSeconds(e),s=this.getTicksAtTime(n);return this._tickSource.getTimeOfTick(s+t,n)}_loop(){const t=this._lastUpdate,e=this.now();this._lastUpdate=e,this.log("loop",t,e),t!==e&&(this._state.forEachBetween(t,e,(t=>{switch(t.state){case"started":const e=this._tickSource.getTicksAtTime(t.time);this.emit("start",t.time,e);break;case"stopped":0!==t.time&&this.emit("stop",t.time);break;case"paused":this.emit("pause",t.time)}})),this._tickSource.forEachTickBetween(t,e,((t,e)=>{this.callback(t,e)})))}getStateAtTime(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)}dispose(){return super.dispose(),this.context.off("tick",this._boundLoop),this._tickSource.dispose(),this._state.dispose(),this}}Or.mixin(fa);class ma extends kr{constructor(){super(),this.name="ToneAudioBuffers",this._buffers=new Map,this._loadingCount=0;const t=xr(ma.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");this.baseUrl=t.baseUrl,Object.keys(t.urls).forEach((e=>{this._loadingCount++;const n=t.urls[e];this.add(e,n,this._bufferLoaded.bind(this,t.onload),t.onerror)}))}static getDefaults(){return{baseUrl:"",onerror:zr,onload:zr,urls:{}}}has(t){return this._buffers.has(t.toString())}get(t){return Ks(this.has(t),`ToneAudioBuffers has no buffer named: ${t}`),this._buffers.get(t.toString())}_bufferLoaded(t){this._loadingCount--,0===this._loadingCount&&t&&t()}get loaded(){return Array.from(this._buffers).every((([t,e])=>e.loaded))}add(t,e,n=zr,s=zr){return ar(e)?this._buffers.set(t.toString(),new Pr(this.baseUrl+e,n,s)):this._buffers.set(t.toString(),new Pr(e,n,s)),this}dispose(){return super.dispose(),this._buffers.forEach((t=>t.dispose())),this._buffers.clear(),this}}class ga extends Qr{constructor(){super(...arguments),this.name="Ticks",this.defaultUnits="i"}_now(){return this.context.transport.ticks}_beatsToUnits(t){return this._getPPQ()*t}_secondsToUnits(t){return Math.floor(t/(60/this._getBpm())*this._getPPQ())}_ticksToUnits(t){return t}toTicks(){return this.valueOf()}toSeconds(){return this.valueOf()/this._getPPQ()*(60/this._getBpm())}}class ya extends ta{constructor(){super(...arguments),this.name="Draw",this.expiration=.25,this.anticipation=.008,this._events=new Sr,this._boundDrawLoop=this._drawLoop.bind(this),this._animationFrame=-1}schedule(t,e){return this._events.add({callback:t,time:this.toSeconds(e)}),1===this._events.length&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop)),this}cancel(t){return this._events.cancel(this.toSeconds(t)),this}_drawLoop(){const t=this.context.currentTime;for(;this._events.length&&this._events.peek().time-this.anticipation<=t;){const e=this._events.shift();e&&t-e.time<=this.expiration&&e.callback()}this._events.length>0&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop))}dispose(){return super.dispose(),this._events.dispose(),cancelAnimationFrame(this._animationFrame),this}}$r((t=>{t.draw=new ya({context:t})})),Rr((t=>{t.draw.dispose()}));class ba extends kr{constructor(){super(...arguments),this.name="IntervalTimeline",this._root=null,this._length=0}add(t){Ks(er(t.time),"Events must have a time property"),Ks(er(t.duration),"Events must have a duration parameter"),t.time=t.time.valueOf();let e=new xa(t.time,t.time+t.duration,t);for(null===this._root?this._root=e:this._root.insert(e),this._length++;null!==e;)e.updateHeight(),e.updateMax(),this._rebalance(e),e=e.parent;return this}remove(t){if(null!==this._root){const e=[];this._root.search(t.time,e);for(const n of e)if(n.event===t){this._removeNode(n),this._length--;break}}return this}get length(){return this._length}cancel(t){return this.forEachFrom(t,(t=>this.remove(t))),this}_setRoot(t){this._root=t,null!==this._root&&(this._root.parent=null)}_replaceNodeInParent(t,e){null!==t.parent?(t.isLeftChild()?t.parent.left=e:t.parent.right=e,this._rebalance(t.parent)):this._setRoot(e)}_removeNode(t){if(null===t.left&&null===t.right)this._replaceNodeInParent(t,null);else if(null===t.right)this._replaceNodeInParent(t,t.left);else if(null===t.left)this._replaceNodeInParent(t,t.right);else{let e,n=null;if(t.getBalance()>0)if(null===t.left.right)e=t.left,e.right=t.right,n=e;else{for(e=t.left.right;null!==e.right;)e=e.right;e.parent&&(e.parent.right=e.left,n=e.parent,e.left=t.left,e.right=t.right)}else if(null===t.right.left)e=t.right,e.left=t.left,n=e;else{for(e=t.right.left;null!==e.left;)e=e.left;e.parent&&(e.parent.left=e.right,n=e.parent,e.left=t.left,e.right=t.right)}null!==t.parent?t.isLeftChild()?t.parent.left=e:t.parent.right=e:this._setRoot(e),n&&this._rebalance(n)}t.dispose()}_rotateLeft(t){const e=t.parent,n=t.isLeftChild(),s=t.right;s&&(t.right=s.left,s.left=t),null!==e?n?e.left=s:e.right=s:this._setRoot(s)}_rotateRight(t){const e=t.parent,n=t.isLeftChild(),s=t.left;s&&(t.left=s.right,s.right=t),null!==e?n?e.left=s:e.right=s:this._setRoot(s)}_rebalance(t){const e=t.getBalance();e>1&&t.left?t.left.getBalance()<0?this._rotateLeft(t.left):this._rotateRight(t):e<-1&&t.right&&(t.right.getBalance()>0?this._rotateRight(t.right):this._rotateLeft(t))}get(t){if(null!==this._root){const e=[];if(this._root.search(t,e),e.length>0){let t=e[0];for(let n=1;n<e.length;n++)e[n].low>t.low&&(t=e[n]);return t.event}}return null}forEach(t){if(null!==this._root){const e=[];this._root.traverse((t=>e.push(t))),e.forEach((e=>{e.event&&t(e.event)}))}return this}forEachAtTime(t,e){if(null!==this._root){const n=[];this._root.search(t,n),n.forEach((t=>{t.event&&e(t.event)}))}return this}forEachFrom(t,e){if(null!==this._root){const n=[];this._root.searchAfter(t,n),n.forEach((t=>{t.event&&e(t.event)}))}return this}dispose(){return super.dispose(),null!==this._root&&this._root.traverse((t=>t.dispose())),this._root=null,this}}class xa{constructor(t,e,n){this._left=null,this._right=null,this.parent=null,this.height=0,this.event=n,this.low=t,this.high=e,this.max=this.high}insert(t){t.low<=this.low?null===this.left?this.left=t:this.left.insert(t):null===this.right?this.right=t:this.right.insert(t)}search(t,e){t>this.max||(null!==this.left&&this.left.search(t,e),this.low<=t&&this.high>t&&e.push(this),this.low>t||null!==this.right&&this.right.search(t,e))}searchAfter(t,e){this.low>=t&&(e.push(this),null!==this.left&&this.left.searchAfter(t,e)),null!==this.right&&this.right.searchAfter(t,e)}traverse(t){t(this),null!==this.left&&this.left.traverse(t),null!==this.right&&this.right.traverse(t)}updateHeight(){null!==this.left&&null!==this.right?this.height=Math.max(this.left.height,this.right.height)+1:null!==this.right?this.height=this.right.height+1:null!==this.left?this.height=this.left.height+1:this.height=0}updateMax(){this.max=this.high,null!==this.left&&(this.max=Math.max(this.max,this.left.max)),null!==this.right&&(this.max=Math.max(this.max,this.right.max))}getBalance(){let t=0;return null!==this.left&&null!==this.right?t=this.left.height-this.right.height:null!==this.left?t=this.left.height+1:null!==this.right&&(t=-(this.right.height+1)),t}isLeftChild(){return null!==this.parent&&this.parent.left===this}get left(){return this._left}set left(t){this._left=t,null!==t&&(t.parent=this),this.updateHeight(),this.updateMax()}get right(){return this._right}set right(t){this._right=t,null!==t&&(t.parent=this),this.updateHeight(),this.updateMax()}dispose(){this.parent=null,this._left=null,this._right=null,this.event=null}}class va extends sa{constructor(){super(xr(va.getDefaults(),arguments,["volume"])),this.name="Volume";const t=xr(va.getDefaults(),arguments,["volume"]);this.input=this.output=new ia({context:this.context,gain:t.volume,units:"decibels"}),this.volume=this.output.gain,Mr(this,"volume"),this._unmutedVolume=t.volume,this.mute=t.mute}static getDefaults(){return Object.assign(sa.getDefaults(),{mute:!1,volume:0})}get mute(){return this.volume.value===-1/0}set mute(t){!this.mute&&t?(this._unmutedVolume=this.volume.value,this.volume.value=-1/0):this.mute&&!t&&(this.volume.value=this._unmutedVolume)}dispose(){return super.dispose(),this.input.dispose(),this.volume.dispose(),this}}class wa extends sa{constructor(){super(xr(wa.getDefaults(),arguments)),this.name="Destination",this.input=new va({context:this.context}),this.output=new ia({context:this.context}),this.volume=this.input.volume;const t=xr(wa.getDefaults(),arguments);ra(this.input,this.output,this.context.rawContext.destination),this.mute=t.mute,this._internalChannels=[this.input,this.context.rawContext.destination,this.output]}static getDefaults(){return Object.assign(sa.getDefaults(),{mute:!1,volume:0})}get mute(){return this.input.mute}set mute(t){this.input.mute=t}chain(...t){return this.input.disconnect(),t.unshift(this.input),t.push(this.output),ra(...t),this}get maxChannelCount(){return this.context.rawContext.destination.maxChannelCount}dispose(){return super.dispose(),this.volume.dispose(),this}}$r((t=>{t.destination=new wa({context:t})})),Rr((t=>{t.destination.dispose()}));class ka extends kr{constructor(t){super(),this.name="TimelineValue",this._timeline=new Sr({memory:10}),this._initialValue=t}set(t,e){return this._timeline.add({value:t,time:e}),this}get(t){const e=this._timeline.get(t);return e?e.value:this._initialValue}}class _a{constructor(t,e){this.id=_a._eventId++;const n=Object.assign(_a.getDefaults(),e);this.transport=t,this.callback=n.callback,this._once=n.once,this.time=n.time}static getDefaults(){return{callback:zr,once:!1,time:0}}invoke(t){this.callback&&(this.callback(t),this._once&&this.transport.clear(this.id))}dispose(){return this.callback=void 0,this}}_a._eventId=0;class Ia extends _a{constructor(t,e){super(t,e),this._currentId=-1,this._nextId=-1,this._nextTick=this.time,this._boundRestart=this._restart.bind(this);const n=Object.assign(Ia.getDefaults(),e);this.duration=new ga(t.context,n.duration).valueOf(),this._interval=new ga(t.context,n.interval).valueOf(),this._nextTick=n.time,this.transport.on("start",this._boundRestart),this.transport.on("loopStart",this._boundRestart),this.context=this.transport.context,this._restart()}static getDefaults(){return Object.assign({},_a.getDefaults(),{duration:1/0,interval:1,once:!1})}invoke(t){this._createEvents(t),super.invoke(t)}_createEvents(t){const e=this.transport.getTicksAtTime(t);e>=this.time&&e>=this._nextTick&&this._nextTick+this._interval<this.time+this.duration&&(this._nextTick+=this._interval,this._currentId=this._nextId,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new ga(this.context,this._nextTick).toSeconds()))}_restart(t){this.transport.clear(this._currentId),this.transport.clear(this._nextId),this._nextTick=this.time;const e=this.transport.getTicksAtTime(t);e>this.time&&(this._nextTick=this.time+Math.ceil((e-this.time)/this._interval)*this._interval),this._currentId=this.transport.scheduleOnce(this.invoke.bind(this),new ga(this.context,this._nextTick).toSeconds()),this._nextTick+=this._interval,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new ga(this.context,this._nextTick).toSeconds())}dispose(){return super.dispose(),this.transport.clear(this._currentId),this.transport.clear(this._nextId),this.transport.off("start",this._boundRestart),this.transport.off("loopStart",this._boundRestart),this}}class Ta extends ta{constructor(){super(xr(Ta.getDefaults(),arguments)),this.name="Transport",this._loop=new ka(!1),this._loopStart=0,this._loopEnd=0,this._scheduledEvents={},this._timeline=new Sr,this._repeatedEvents=new ba,this._syncedSignals=[],this._swingAmount=0;const t=xr(Ta.getDefaults(),arguments);this._ppq=t.ppq,this._clock=new fa({callback:this._processTick.bind(this),context:this.context,frequency:0,units:"bpm"}),this._bindClockEvents(),this.bpm=this._clock.frequency,this._clock.frequency.multiplier=t.ppq,this.bpm.setValueAtTime(t.bpm,0),Mr(this,"bpm"),this._timeSignature=t.timeSignature,this._swingTicks=t.ppq/2}static getDefaults(){return Object.assign(ta.getDefaults(),{bpm:120,loopEnd:"4m",loopStart:0,ppq:192,swing:0,swingSubdivision:"8n",timeSignature:4})}_processTick(t,e){if(this._loop.get(t)&&e>=this._loopEnd&&(this.emit("loopEnd",t),this._clock.setTicksAtTime(this._loopStart,t),e=this._loopStart,this.emit("loopStart",t,this._clock.getSecondsAtTime(t)),this.emit("loop",t)),this._swingAmount>0&&e%this._ppq!=0&&e%(2*this._swingTicks)!=0){const n=e%(2*this._swingTicks)/(2*this._swingTicks),s=Math.sin(n*Math.PI)*this._swingAmount;t+=new ga(this.context,2*this._swingTicks/3).toSeconds()*s}this._timeline.forEachAtTime(e,(e=>e.invoke(t)))}schedule(t,e){const n=new _a(this,{callback:t,time:new Qr(this.context,e).toTicks()});return this._addEvent(n,this._timeline)}scheduleRepeat(t,e,n,s=1/0){const r=new Ia(this,{callback:t,duration:new Kr(this.context,s).toTicks(),interval:new Kr(this.context,e).toTicks(),time:new Qr(this.context,n).toTicks()});return this._addEvent(r,this._repeatedEvents)}scheduleOnce(t,e){const n=new _a(this,{callback:t,once:!0,time:new Qr(this.context,e).toTicks()});return this._addEvent(n,this._timeline)}clear(t){if(this._scheduledEvents.hasOwnProperty(t)){const e=this._scheduledEvents[t.toString()];e.timeline.remove(e.event),e.event.dispose(),delete this._scheduledEvents[t.toString()]}return this}_addEvent(t,e){return this._scheduledEvents[t.id.toString()]={event:t,timeline:e},e.add(t),t.id}cancel(t=0){const e=this.toTicks(t);return this._timeline.forEachFrom(e,(t=>this.clear(t.id))),this._repeatedEvents.forEachFrom(e,(t=>this.clear(t.id))),this}_bindClockEvents(){this._clock.on("start",((t,e)=>{e=new ga(this.context,e).toSeconds(),this.emit("start",t,e)})),this._clock.on("stop",(t=>{this.emit("stop",t)})),this._clock.on("pause",(t=>{this.emit("pause",t)}))}get state(){return this._clock.getStateAtTime(this.now())}start(t,e){let n;return er(e)&&(n=this.toTicks(e)),this._clock.start(t,n),this}stop(t){return this._clock.stop(t),this}pause(t){return this._clock.pause(t),this}toggle(t){return t=this.toSeconds(t),"started"!==this._clock.getStateAtTime(t)?this.start(t):this.stop(t),this}get timeSignature(){return this._timeSignature}set timeSignature(t){rr(t)&&(t=t[0]/t[1]*4),this._timeSignature=t}get loopStart(){return new Kr(this.context,this._loopStart,"i").toSeconds()}set loopStart(t){this._loopStart=this.toTicks(t)}get loopEnd(){return new Kr(this.context,this._loopEnd,"i").toSeconds()}set loopEnd(t){this._loopEnd=this.toTicks(t)}get loop(){return this._loop.get(this.now())}set loop(t){this._loop.set(t,this.now())}setLoopPoints(t,e){return this.loopStart=t,this.loopEnd=e,this}get swing(){return this._swingAmount}set swing(t){this._swingAmount=t}get swingSubdivision(){return new ga(this.context,this._swingTicks).toNotation()}set swingSubdivision(t){this._swingTicks=this.toTicks(t)}get position(){const t=this.now(),e=this._clock.getTicksAtTime(t);return new ga(this.context,e).toBarsBeatsSixteenths()}set position(t){const e=this.toTicks(t);this.ticks=e}get seconds(){return this._clock.seconds}set seconds(t){const e=this.now(),n=this._clock.frequency.timeToTicks(t,e);this.ticks=n}get progress(){if(this.loop){const t=this.now();return(this._clock.getTicksAtTime(t)-this._loopStart)/(this._loopEnd-this._loopStart)}return 0}get ticks(){return this._clock.ticks}set ticks(t){if(this._clock.ticks!==t){const e=this.now();if("started"===this.state){const n=this._clock.getTicksAtTime(e),s=e+this._clock.frequency.getDurationOfTicks(Math.ceil(n)-n,e);this.emit("stop",s),this._clock.setTicksAtTime(t,s),this.emit("start",s,this._clock.getSecondsAtTime(s))}else this._clock.setTicksAtTime(t,e)}}getTicksAtTime(t){return Math.round(this._clock.getTicksAtTime(t))}getSecondsAtTime(t){return this._clock.getSecondsAtTime(t)}get PPQ(){return this._clock.frequency.multiplier}set PPQ(t){this._clock.frequency.multiplier=t}nextSubdivision(t){if(t=this.toTicks(t),"started"!==this.state)return 0;{const e=this.now(),n=t-this.getTicksAtTime(e)%t;return this._clock.nextTickTime(n,e)}}syncSignal(t,e){if(!e){const n=this.now();if(0!==t.getValueAtTime(n)){const s=1/(60/this.bpm.getValueAtTime(n)/this.PPQ);e=t.getValueAtTime(n)/s}else e=0}const n=new ia(e);return this.bpm.connect(n),n.connect(t._param),this._syncedSignals.push({initial:t.value,ratio:n,signal:t}),t.value=0,this}unsyncSignal(t){for(let e=this._syncedSignals.length-1;e>=0;e--){const n=this._syncedSignals[e];n.signal===t&&(n.ratio.dispose(),n.signal.value=n.initial,this._syncedSignals.splice(e,1))}return this}dispose(){return super.dispose(),this._clock.dispose(),Lr(this,"bpm"),this._timeline.dispose(),this._repeatedEvents.dispose(),this}}Or.mixin(Ta),$r((t=>{t.transport=new Ta({context:t})})),Rr((t=>{t.transport.dispose()}));class Na extends sa{constructor(t){super(t),this.input=void 0,this._state=new ea("stopped"),this._synced=!1,this._scheduled=[],this._syncedStart=zr,this._syncedStop=zr,this._state.memory=100,this._state.increasing=!0,this._volume=this.output=new va({context:this.context,mute:t.mute,volume:t.volume}),this.volume=this._volume.volume,Mr(this,"volume"),this.onstop=t.onstop}static getDefaults(){return Object.assign(sa.getDefaults(),{mute:!1,onstop:zr,volume:0})}get state(){return this._synced?"started"===this.context.transport.state?this._state.getValueAtTime(this.context.transport.seconds):"stopped":this._state.getValueAtTime(this.now())}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}_clampToCurrentTime(t){return this._synced?t:Math.max(t,this.context.currentTime)}start(t,e,n){let s=tr(t)&&this._synced?this.context.transport.seconds:this.toSeconds(t);if(s=this._clampToCurrentTime(s),this._synced||"started"!==this._state.getValueAtTime(s))if(this.log("start",s),this._state.setStateAtTime("started",s),this._synced){const t=this._state.get(s);t&&(t.offset=this.toSeconds(vr(e,0)),t.duration=n?this.toSeconds(n):void 0);const r=this.context.transport.schedule((t=>{this._start(t,e,n)}),s);this._scheduled.push(r),"started"===this.context.transport.state&&this.context.transport.getSecondsAtTime(this.immediate())>s&&this._syncedStart(this.now(),this.context.transport.seconds)}else Zs(this.context),this._start(s,e,n);else Ks(Ir(s,this._state.get(s).time),"Start time must be strictly greater than previous start time"),this._state.cancel(s),this._state.setStateAtTime("started",s),this.log("restart",s),this.restart(s,e,n);return this}stop(t){let e=tr(t)&&this._synced?this.context.transport.seconds:this.toSeconds(t);if(e=this._clampToCurrentTime(e),"started"===this._state.getValueAtTime(e)||er(this._state.getNextState("started",e))){if(this.log("stop",e),this._synced){const t=this.context.transport.schedule(this._stop.bind(this),e);this._scheduled.push(t)}else this._stop(e);this._state.cancel(e),this._state.setStateAtTime("stopped",e)}return this}restart(t,e,n){return t=this.toSeconds(t),"started"===this._state.getValueAtTime(t)&&(this._state.cancel(t),this._restart(t,e,n)),this}sync(){return this._synced||(this._synced=!0,this._syncedStart=(t,e)=>{if(e>0){const n=this._state.get(e);if(n&&"started"===n.state&&n.time!==e){const s=e-this.toSeconds(n.time);let r;n.duration&&(r=this.toSeconds(n.duration)-s),this._start(t,this.toSeconds(n.offset)+s,r)}}},this._syncedStop=t=>{const e=this.context.transport.getSecondsAtTime(Math.max(t-this.sampleTime,0));"started"===this._state.getValueAtTime(e)&&this._stop(t)},this.context.transport.on("start",this._syncedStart),this.context.transport.on("loopStart",this._syncedStart),this.context.transport.on("stop",this._syncedStop),this.context.transport.on("pause",this._syncedStop),this.context.transport.on("loopEnd",this._syncedStop)),this}unsync(){return this._synced&&(this.context.transport.off("stop",this._syncedStop),this.context.transport.off("pause",this._syncedStop),this.context.transport.off("loopEnd",this._syncedStop),this.context.transport.off("start",this._syncedStart),this.context.transport.off("loopStart",this._syncedStart)),this._synced=!1,this._scheduled.forEach((t=>this.context.transport.clear(t))),this._scheduled=[],this._state.cancel(0),this._stop(0),this}dispose(){return super.dispose(),this.onstop=zr,this.unsync(),this._volume.dispose(),this._state.dispose(),this}}class Ca extends oa{constructor(){super(xr(Ca.getDefaults(),arguments,["url","onload"])),this.name="ToneBufferSource",this._source=this.context.createBufferSource(),this._internalChannels=[this._source],this._sourceStarted=!1,this._sourceStopped=!1;const t=xr(Ca.getDefaults(),arguments,["url","onload"]);aa(this._source,this._gainNode),this._source.onended=()=>this._stopSource(),this.playbackRate=new na({context:this.context,param:this._source.playbackRate,units:"positive",value:t.playbackRate}),this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this._buffer=new Pr(t.url,t.onload,t.onerror),this._internalChannels.push(this._source)}static getDefaults(){return Object.assign(oa.getDefaults(),{url:new Pr,loop:!1,loopEnd:0,loopStart:0,onload:zr,onerror:zr,playbackRate:1})}get fadeIn(){return this._fadeIn}set fadeIn(t){this._fadeIn=t}get fadeOut(){return this._fadeOut}set fadeOut(t){this._fadeOut=t}get curve(){return this._curve}set curve(t){this._curve=t}start(t,e,n,s=1){Ks(this.buffer.loaded,"buffer is either not set or not loaded");const r=this.toSeconds(t);this._startGain(r,s),e=this.loop?vr(e,this.loopStart):vr(e,0);let a=Math.max(this.toSeconds(e),0);if(this.loop){const t=this.toSeconds(this.loopEnd)||this.buffer.duration,e=this.toSeconds(this.loopStart),n=t-e;Tr(a,t)&&(a=(a-e)%n+e),Cr(a,this.buffer.duration)&&(a=0)}if(this._source.buffer=this.buffer.get(),this._source.loopEnd=this.toSeconds(this.loopEnd)||this.buffer.duration,Nr(a,this.buffer.duration)&&(this._sourceStarted=!0,this._source.start(r,a)),er(n)){let t=this.toSeconds(n);t=Math.max(t,0),this.stop(r+t)}return this}_stopSource(t){!this._sourceStopped&&this._sourceStarted&&(this._sourceStopped=!0,this._source.stop(this.toSeconds(t)),this._onended())}get loopStart(){return this._source.loopStart}set loopStart(t){this._source.loopStart=this.toSeconds(t)}get loopEnd(){return this._source.loopEnd}set loopEnd(t){this._source.loopEnd=this.toSeconds(t)}get buffer(){return this._buffer}set buffer(t){this._buffer.set(t)}get loop(){return this._source.loop}set loop(t){this._source.loop=t,this._sourceStarted&&this.cancelStop()}dispose(){return super.dispose(),this._source.onended=null,this._source.disconnect(),this._buffer.dispose(),this.playbackRate.dispose(),this}}function Sa(t,e){return cr(this,void 0,void 0,(function*(){const n=e/t.context.sampleRate,s=new Vr(1,n,t.context.sampleRate);return new t.constructor(Object.assign(t.get(),{frequency:2/n,detune:0,context:s})).toDestination().start(0),(yield s.render()).getChannelData(0)}))}class Aa extends oa{constructor(){super(xr(Aa.getDefaults(),arguments,["frequency","type"])),this.name="ToneOscillatorNode",this._oscillator=this.context.createOscillator(),this._internalChannels=[this._oscillator];const t=xr(Aa.getDefaults(),arguments,["frequency","type"]);aa(this._oscillator,this._gainNode),this.type=t.type,this.frequency=new na({context:this.context,param:this._oscillator.frequency,units:"frequency",value:t.frequency}),this.detune=new na({context:this.context,param:this._oscillator.detune,units:"cents",value:t.detune}),Mr(this,["frequency","detune"])}static getDefaults(){return Object.assign(oa.getDefaults(),{detune:0,frequency:440,type:"sine"})}start(t){const e=this.toSeconds(t);return this.log("start",e),this._startGain(e),this._oscillator.start(e),this}_stopSource(t){this._oscillator.stop(t)}setPeriodicWave(t){return this._oscillator.setPeriodicWave(t),this}get type(){return this._oscillator.type}set type(t){this._oscillator.type=t}dispose(){return super.dispose(),"started"===this.state&&this.stop(),this._oscillator.disconnect(),this.frequency.dispose(),this.detune.dispose(),this}}class $a extends Na{constructor(){super(xr($a.getDefaults(),arguments,["frequency","type"])),this.name="Oscillator",this._oscillator=null;const t=xr($a.getDefaults(),arguments,["frequency","type"]);this.frequency=new ua({context:this.context,units:"frequency",value:t.frequency}),Mr(this,"frequency"),this.detune=new ua({context:this.context,units:"cents",value:t.detune}),Mr(this,"detune"),this._partials=t.partials,this._partialCount=t.partialCount,this._type=t.type,t.partialCount&&"custom"!==t.type&&(this._type=this.baseType+t.partialCount.toString()),this.phase=t.phase}static getDefaults(){return Object.assign(Na.getDefaults(),{detune:0,frequency:440,partialCount:0,partials:[],phase:0,type:"sine"})}_start(t){const e=this.toSeconds(t),n=new Aa({context:this.context,onended:()=>this.onstop(this)});this._oscillator=n,this._wave?this._oscillator.setPeriodicWave(this._wave):this._oscillator.type=this._type,this._oscillator.connect(this.output),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.start(e)}_stop(t){const e=this.toSeconds(t);this._oscillator&&this._oscillator.stop(e)}_restart(t){const e=this.toSeconds(t);return this.log("restart",e),this._oscillator&&this._oscillator.cancelStop(),this._state.cancel(e),this}syncFrequency(){return this.context.transport.syncSignal(this.frequency),this}unsyncFrequency(){return this.context.transport.unsyncSignal(this.frequency),this}_getCachedPeriodicWave(){if("custom"===this._type)return $a._periodicWaveCache.find((t=>{return t.phase===this._phase&&(e=t.partials,n=this._partials,e.length===n.length&&e.every(((t,e)=>n[e]===t)));var e,n}));{const t=$a._periodicWaveCache.find((t=>t.type===this._type&&t.phase===this._phase));return this._partialCount=t?t.partialCount:this._partialCount,t}}get type(){return this._type}set type(t){this._type=t;const e=-1!==["sine","square","sawtooth","triangle"].indexOf(t);if(0===this._phase&&e)this._wave=void 0,this._partialCount=0,null!==this._oscillator&&(this._oscillator.type=t);else{const e=this._getCachedPeriodicWave();if(er(e)){const{partials:t,wave:n}=e;this._wave=n,this._partials=t,null!==this._oscillator&&this._oscillator.setPeriodicWave(this._wave)}else{const[e,n]=this._getRealImaginary(t,this._phase),s=this.context.createPeriodicWave(e,n);this._wave=s,null!==this._oscillator&&this._oscillator.setPeriodicWave(this._wave),$a._periodicWaveCache.push({imag:n,partialCount:this._partialCount,partials:this._partials,phase:this._phase,real:e,type:this._type,wave:this._wave}),$a._periodicWaveCache.length>100&&$a._periodicWaveCache.shift()}}}get baseType(){return this._type.replace(this.partialCount.toString(),"")}set baseType(t){this.partialCount&&"custom"!==this._type&&"custom"!==t?this.type=t+this.partialCount:this.type=t}get partialCount(){return this._partialCount}set partialCount(t){Ys(t,0);let e=this._type;const n=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);if(n&&(e=n[1]),"custom"!==this._type)this.type=0===t?e:e+t.toString();else{const e=new Float32Array(t);this._partials.forEach(((t,n)=>e[n]=t)),this._partials=Array.from(e),this.type=this._type}}_getRealImaginary(t,e){let n=2048;const s=new Float32Array(n),r=new Float32Array(n);let a=1;if("custom"===t){if(a=this._partials.length+1,this._partialCount=this._partials.length,n=a,0===this._partials.length)return[s,r]}else{const e=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(t);e?(a=parseInt(e[2],10)+1,this._partialCount=parseInt(e[2],10),t=e[1],a=Math.max(a,2),n=a):this._partialCount=0,this._partials=[]}for(let i=1;i<n;++i){const n=2/(i*Math.PI);let o;switch(t){case"sine":o=i<=a?1:0,this._partials[i-1]=o;break;case"square":o=1&i?2*n:0,this._partials[i-1]=o;break;case"sawtooth":o=n*(1&i?1:-1),this._partials[i-1]=o;break;case"triangle":o=1&i?n*n*2*(i-1>>1&1?-1:1):0,this._partials[i-1]=o;break;case"custom":o=this._partials[i-1];break;default:throw new TypeError("Oscillator: invalid type: "+t)}0!==o?(s[i]=-o*Math.sin(e*i),r[i]=o*Math.cos(e*i)):(s[i]=0,r[i]=0)}return[s,r]}_inverseFFT(t,e,n){let s=0;const r=t.length;for(let a=0;a<r;a++)s+=t[a]*Math.cos(a*n)+e[a]*Math.sin(a*n);return s}getInitialValue(){const[t,e]=this._getRealImaginary(this._type,0);let n=0;const s=2*Math.PI;for(let r=0;r<32;r++)n=Math.max(this._inverseFFT(t,e,r/32*s),n);return r=-this._inverseFFT(t,e,this._phase)/n,Math.max(Math.min(r,1),-1);var r}get partials(){return this._partials.slice(0,this.partialCount)}set partials(t){this._partials=t,this._partialCount=this._partials.length,t.length&&(this.type="custom")}get phase(){return this._phase*(180/Math.PI)}set phase(t){this._phase=t*Math.PI/180,this.type=this._type}asArray(t=1024){return cr(this,void 0,void 0,(function*(){return Sa(this,t)}))}dispose(){return super.dispose(),null!==this._oscillator&&this._oscillator.dispose(),this._wave=void 0,this.frequency.dispose(),this.detune.dispose(),this}}$a._periodicWaveCache=[];class Ea extends sa{constructor(){super(Object.assign(xr(Ea.getDefaults(),arguments,["context"])))}connect(t,e=0,n=0){return ca(this,t,e,n),this}}class Ra extends Ea{constructor(){super(Object.assign(xr(Ra.getDefaults(),arguments,["mapping","length"]))),this.name="WaveShaper",this._shaper=this.context.createWaveShaper(),this.input=this._shaper,this.output=this._shaper;const t=xr(Ra.getDefaults(),arguments,["mapping","length"]);rr(t.mapping)||t.mapping instanceof Float32Array?this.curve=Float32Array.from(t.mapping):"function"==typeof t.mapping&&this.setMap(t.mapping,t.length)}static getDefaults(){return Object.assign(ua.getDefaults(),{length:1024})}setMap(t,e=1024){const n=new Float32Array(e);for(let s=0,r=e;s<r;s++){const e=s/(r-1)*2-1;n[s]=t(e,s)}return this.curve=n,this}get curve(){return this._shaper.curve}set curve(t){this._shaper.curve=t}get oversample(){return this._shaper.oversample}set oversample(t){Ks(["none","2x","4x"].some((e=>e.includes(t))),"oversampling must be either 'none', '2x', or '4x'"),this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.disconnect(),this}}class Oa extends Ea{constructor(){super(...arguments),this.name="AudioToGain",this._norm=new Ra({context:this.context,mapping:t=>(t+1)/2}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class Da extends ua{constructor(){super(Object.assign(xr(Da.getDefaults(),arguments,["value"]))),this.name="Multiply",this.override=!1;const t=xr(Da.getDefaults(),arguments,["value"]);this._mult=this.input=this.output=new ia({context:this.context,minValue:t.minValue,maxValue:t.maxValue}),this.factor=this._param=this._mult.gain,this.factor.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(ua.getDefaults(),{value:0})}dispose(){return super.dispose(),this._mult.dispose(),this}}class Fa extends Na{constructor(){super(xr(Fa.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="AMOscillator",this._modulationScale=new Oa({context:this.context}),this._modulationNode=new ia({context:this.context});const t=xr(Fa.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new $a({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase,type:t.type}),this.frequency=this._carrier.frequency,this.detune=this._carrier.detune,this._modulator=new $a({context:this.context,phase:t.phase,type:t.modulationType}),this.harmonicity=new Da({context:this.context,units:"positive",value:t.harmonicity}),this.frequency.chain(this.harmonicity,this._modulator.frequency),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output),Mr(this,["frequency","detune","harmonicity"])}static getDefaults(){return Object.assign($a.getDefaults(),{harmonicity:1,modulationType:"square"})}_start(t){this._modulator.start(t),this._carrier.start(t)}_stop(t){this._modulator.stop(t),this._carrier.stop(t)}_restart(t){this._modulator.restart(t),this._carrier.restart(t)}get type(){return this._carrier.type}set type(t){this._carrier.type=t}get baseType(){return this._carrier.baseType}set baseType(t){this._carrier.baseType=t}get partialCount(){return this._carrier.partialCount}set partialCount(t){this._carrier.partialCount=t}get modulationType(){return this._modulator.type}set modulationType(t){this._modulator.type=t}get phase(){return this._carrier.phase}set phase(t){this._carrier.phase=t,this._modulator.phase=t}get partials(){return this._carrier.partials}set partials(t){this._carrier.partials=t}asArray(t=1024){return cr(this,void 0,void 0,(function*(){return Sa(this,t)}))}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this._modulationScale.dispose(),this}}class Ma extends Na{constructor(){super(xr(Ma.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="FMOscillator",this._modulationNode=new ia({context:this.context,gain:0});const t=xr(Ma.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new $a({context:this.context,detune:t.detune,frequency:0,onstop:()=>this.onstop(this),phase:t.phase,type:t.type}),this.detune=this._carrier.detune,this.frequency=new ua({context:this.context,units:"frequency",value:t.frequency}),this._modulator=new $a({context:this.context,phase:t.phase,type:t.modulationType}),this.harmonicity=new Da({context:this.context,units:"positive",value:t.harmonicity}),this.modulationIndex=new Da({context:this.context,units:"positive",value:t.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output),this.detune.connect(this._modulator.detune),Mr(this,["modulationIndex","frequency","detune","harmonicity"])}static getDefaults(){return Object.assign($a.getDefaults(),{harmonicity:1,modulationIndex:2,modulationType:"square"})}_start(t){this._modulator.start(t),this._carrier.start(t)}_stop(t){this._modulator.stop(t),this._carrier.stop(t)}_restart(t){return this._modulator.restart(t),this._carrier.restart(t),this}get type(){return this._carrier.type}set type(t){this._carrier.type=t}get baseType(){return this._carrier.baseType}set baseType(t){this._carrier.baseType=t}get partialCount(){return this._carrier.partialCount}set partialCount(t){this._carrier.partialCount=t}get modulationType(){return this._modulator.type}set modulationType(t){this._modulator.type=t}get phase(){return this._carrier.phase}set phase(t){this._carrier.phase=t,this._modulator.phase=t}get partials(){return this._carrier.partials}set partials(t){this._carrier.partials=t}asArray(t=1024){return cr(this,void 0,void 0,(function*(){return Sa(this,t)}))}dispose(){return super.dispose(),this.frequency.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this.modulationIndex.dispose(),this}}class La extends Na{constructor(){super(xr(La.getDefaults(),arguments,["frequency","width"])),this.name="PulseOscillator",this._widthGate=new ia({context:this.context,gain:0}),this._thresh=new Ra({context:this.context,mapping:t=>t<=0?-1:1});const t=xr(La.getDefaults(),arguments,["frequency","width"]);this.width=new ua({context:this.context,units:"audioRange",value:t.width}),this._triangle=new $a({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase,type:"triangle"}),this.frequency=this._triangle.frequency,this.detune=this._triangle.detune,this._triangle.chain(this._thresh,this.output),this.width.chain(this._widthGate,this._thresh),Mr(this,["width","frequency","detune"])}static getDefaults(){return Object.assign(Na.getDefaults(),{detune:0,frequency:440,phase:0,type:"pulse",width:.2})}_start(t){t=this.toSeconds(t),this._triangle.start(t),this._widthGate.gain.setValueAtTime(1,t)}_stop(t){t=this.toSeconds(t),this._triangle.stop(t),this._widthGate.gain.cancelScheduledValues(t),this._widthGate.gain.setValueAtTime(0,t)}_restart(t){this._triangle.restart(t),this._widthGate.gain.cancelScheduledValues(t),this._widthGate.gain.setValueAtTime(1,t)}get phase(){return this._triangle.phase}set phase(t){this._triangle.phase=t}get type(){return"pulse"}get baseType(){return"pulse"}get partials(){return[]}get partialCount(){return 0}set carrierType(t){this._triangle.type=t}asArray(t=1024){return cr(this,void 0,void 0,(function*(){return Sa(this,t)}))}dispose(){return super.dispose(),this._triangle.dispose(),this.width.dispose(),this._widthGate.dispose(),this._thresh.dispose(),this}}class za extends Na{constructor(){super(xr(za.getDefaults(),arguments,["frequency","type","spread"])),this.name="FatOscillator",this._oscillators=[];const t=xr(za.getDefaults(),arguments,["frequency","type","spread"]);this.frequency=new ua({context:this.context,units:"frequency",value:t.frequency}),this.detune=new ua({context:this.context,units:"cents",value:t.detune}),this._spread=t.spread,this._type=t.type,this._phase=t.phase,this._partials=t.partials,this._partialCount=t.partialCount,this.count=t.count,Mr(this,["frequency","detune"])}static getDefaults(){return Object.assign($a.getDefaults(),{count:3,spread:20,type:"sawtooth"})}_start(t){t=this.toSeconds(t),this._forEach((e=>e.start(t)))}_stop(t){t=this.toSeconds(t),this._forEach((e=>e.stop(t)))}_restart(t){this._forEach((e=>e.restart(t)))}_forEach(t){for(let e=0;e<this._oscillators.length;e++)t(this._oscillators[e],e)}get type(){return this._type}set type(t){this._type=t,this._forEach((e=>e.type=t))}get spread(){return this._spread}set spread(t){if(this._spread=t,this._oscillators.length>1){const e=-t/2,n=t/(this._oscillators.length-1);this._forEach(((t,s)=>t.detune.value=e+n*s))}}get count(){return this._oscillators.length}set count(t){if(Ys(t,1),this._oscillators.length!==t){this._forEach((t=>t.dispose())),this._oscillators=[];for(let e=0;e<t;e++){const n=new $a({context:this.context,volume:-6-1.1*t,type:this._type,phase:this._phase+e/t*360,partialCount:this._partialCount,onstop:0===e?()=>this.onstop(this):zr});"custom"===this.type&&(n.partials=this._partials),this.frequency.connect(n.frequency),this.detune.connect(n.detune),n.detune.overridden=!1,n.connect(this.output),this._oscillators[e]=n}this.spread=this._spread,"started"===this.state&&this._forEach((t=>t.start()))}}get phase(){return this._phase}set phase(t){this._phase=t,this._forEach(((t,e)=>t.phase=this._phase+e/this.count*360))}get baseType(){return this._oscillators[0].baseType}set baseType(t){this._forEach((e=>e.baseType=t)),this._type=this._oscillators[0].type}get partials(){return this._oscillators[0].partials}set partials(t){this._partials=t,this._partialCount=this._partials.length,t.length&&(this._type="custom",this._forEach((e=>e.partials=t)))}get partialCount(){return this._oscillators[0].partialCount}set partialCount(t){this._partialCount=t,this._forEach((e=>e.partialCount=t)),this._type=this._oscillators[0].type}asArray(t=1024){return cr(this,void 0,void 0,(function*(){return Sa(this,t)}))}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this._forEach((t=>t.dispose())),this}}class Pa extends Na{constructor(){super(xr(Pa.getDefaults(),arguments,["frequency","modulationFrequency"])),this.name="PWMOscillator",this.sourceType="pwm",this._scale=new Da({context:this.context,value:2});const t=xr(Pa.getDefaults(),arguments,["frequency","modulationFrequency"]);this._pulse=new La({context:this.context,frequency:t.modulationFrequency}),this._pulse.carrierType="sine",this.modulationFrequency=this._pulse.frequency,this._modulator=new $a({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase}),this.frequency=this._modulator.frequency,this.detune=this._modulator.detune,this._modulator.chain(this._scale,this._pulse.width),this._pulse.connect(this.output),Mr(this,["modulationFrequency","frequency","detune"])}static getDefaults(){return Object.assign(Na.getDefaults(),{detune:0,frequency:440,modulationFrequency:.4,phase:0,type:"pwm"})}_start(t){t=this.toSeconds(t),this._modulator.start(t),this._pulse.start(t)}_stop(t){t=this.toSeconds(t),this._modulator.stop(t),this._pulse.stop(t)}_restart(t){this._modulator.restart(t),this._pulse.restart(t)}get type(){return"pwm"}get baseType(){return"pwm"}get partials(){return[]}get partialCount(){return 0}get phase(){return this._modulator.phase}set phase(t){this._modulator.phase=t}asArray(t=1024){return cr(this,void 0,void 0,(function*(){return Sa(this,t)}))}dispose(){return super.dispose(),this._pulse.dispose(),this._scale.dispose(),this._modulator.dispose(),this}}const Va={am:Fa,fat:za,fm:Ma,oscillator:$a,pulse:La,pwm:Pa};class Ba extends Na{constructor(){super(xr(Ba.getDefaults(),arguments,["frequency","type"])),this.name="OmniOscillator";const t=xr(Ba.getDefaults(),arguments,["frequency","type"]);this.frequency=new ua({context:this.context,units:"frequency",value:t.frequency}),this.detune=new ua({context:this.context,units:"cents",value:t.detune}),Mr(this,["frequency","detune"]),this.set(t)}static getDefaults(){return Object.assign($a.getDefaults(),Ma.getDefaults(),Fa.getDefaults(),za.getDefaults(),La.getDefaults(),Pa.getDefaults())}_start(t){this._oscillator.start(t)}_stop(t){this._oscillator.stop(t)}_restart(t){return this._oscillator.restart(t),this}get type(){let t="";return["am","fm","fat"].some((t=>this._sourceType===t))&&(t=this._sourceType),t+this._oscillator.type}set type(t){"fm"===t.substr(0,2)?(this._createNewOscillator("fm"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(2)):"am"===t.substr(0,2)?(this._createNewOscillator("am"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(2)):"fat"===t.substr(0,3)?(this._createNewOscillator("fat"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(3)):"pwm"===t?(this._createNewOscillator("pwm"),this._oscillator=this._oscillator):"pulse"===t?this._createNewOscillator("pulse"):(this._createNewOscillator("oscillator"),this._oscillator=this._oscillator,this._oscillator.type=t)}get partials(){return this._oscillator.partials}set partials(t){this._getOscType(this._oscillator,"pulse")||this._getOscType(this._oscillator,"pwm")||(this._oscillator.partials=t)}get partialCount(){return this._oscillator.partialCount}set partialCount(t){this._getOscType(this._oscillator,"pulse")||this._getOscType(this._oscillator,"pwm")||(this._oscillator.partialCount=t)}set(t){return Reflect.has(t,"type")&&t.type&&(this.type=t.type),super.set(t),this}_createNewOscillator(t){if(t!==this._sourceType){this._sourceType=t;const e=Va[t],n=this.now();if(this._oscillator){const t=this._oscillator;t.stop(n),this.context.setTimeout((()=>t.dispose()),this.blockTime)}this._oscillator=new e({context:this.context}),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.connect(this.output),this._oscillator.onstop=()=>this.onstop(this),"started"===this.state&&this._oscillator.start(n)}}get phase(){return this._oscillator.phase}set phase(t){this._oscillator.phase=t}get sourceType(){return this._sourceType}set sourceType(t){let e="sine";"pwm"!==this._oscillator.type&&"pulse"!==this._oscillator.type&&(e=this._oscillator.type),"fm"===t?this.type="fm"+e:"am"===t?this.type="am"+e:"fat"===t?this.type="fat"+e:"oscillator"===t?this.type=e:"pulse"===t?this.type="pulse":"pwm"===t&&(this.type="pwm")}_getOscType(t,e){return t instanceof Va[e]}get baseType(){return this._oscillator.baseType}set baseType(t){this._getOscType(this._oscillator,"pulse")||this._getOscType(this._oscillator,"pwm")||"pulse"===t||"pwm"===t||(this._oscillator.baseType=t)}get width(){return this._getOscType(this._oscillator,"pulse")?this._oscillator.width:void 0}get count(){return this._getOscType(this._oscillator,"fat")?this._oscillator.count:void 0}set count(t){this._getOscType(this._oscillator,"fat")&&nr(t)&&(this._oscillator.count=t)}get spread(){return this._getOscType(this._oscillator,"fat")?this._oscillator.spread:void 0}set spread(t){this._getOscType(this._oscillator,"fat")&&nr(t)&&(this._oscillator.spread=t)}get modulationType(){return this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am")?this._oscillator.modulationType:void 0}set modulationType(t){(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))&&ar(t)&&(this._oscillator.modulationType=t)}get modulationIndex(){return this._getOscType(this._oscillator,"fm")?this._oscillator.modulationIndex:void 0}get harmonicity(){return this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am")?this._oscillator.harmonicity:void 0}get modulationFrequency(){return this._getOscType(this._oscillator,"pwm")?this._oscillator.modulationFrequency:void 0}asArray(t=1024){return cr(this,void 0,void 0,(function*(){return Sa(this,t)}))}dispose(){return super.dispose(),this.detune.dispose(),this.frequency.dispose(),this._oscillator.dispose(),this}}function Wa(t,e=1/0){const n=new WeakMap;return function(s,r){Reflect.defineProperty(s,r,{configurable:!0,enumerable:!0,get:function(){return n.get(this)},set:function(s){Ys(s,t,e),n.set(this,s)}})}}function Ua(t,e=1/0){const n=new WeakMap;return function(s,r){Reflect.defineProperty(s,r,{configurable:!0,enumerable:!0,get:function(){return n.get(this)},set:function(s){Ys(this.toSeconds(s),t,e),n.set(this,s)}})}}class Ga extends Na{constructor(){super(xr(Ga.getDefaults(),arguments,["url","onload"])),this.name="Player",this._activeSources=new Set;const t=xr(Ga.getDefaults(),arguments,["url","onload"]);this._buffer=new Pr({onload:this._onload.bind(this,t.onload),onerror:t.onerror,reverse:t.reverse,url:t.url}),this.autostart=t.autostart,this._loop=t.loop,this._loopStart=t.loopStart,this._loopEnd=t.loopEnd,this._playbackRate=t.playbackRate,this.fadeIn=t.fadeIn,this.fadeOut=t.fadeOut}static getDefaults(){return Object.assign(Na.getDefaults(),{autostart:!1,fadeIn:0,fadeOut:0,loop:!1,loopEnd:0,loopStart:0,onload:zr,onerror:zr,playbackRate:1,reverse:!1})}load(t){return cr(this,void 0,void 0,(function*(){return yield this._buffer.load(t),this._onload(),this}))}_onload(t=zr){t(),this.autostart&&this.start()}_onSourceEnd(t){this.onstop(this),this._activeSources.delete(t),0!==this._activeSources.size||this._synced||"started"!==this._state.getValueAtTime(this.now())||(this._state.cancel(this.now()),this._state.setStateAtTime("stopped",this.now()))}start(t,e,n){return super.start(t,e,n),this}_start(t,e,n){e=this._loop?vr(e,this._loopStart):vr(e,0);const s=this.toSeconds(e),r=n;n=vr(n,Math.max(this._buffer.duration-s,0));let a=this.toSeconds(n);a/=this._playbackRate,t=this.toSeconds(t);const i=new Ca({url:this._buffer,context:this.context,fadeIn:this.fadeIn,fadeOut:this.fadeOut,loop:this._loop,loopEnd:this._loopEnd,loopStart:this._loopStart,onended:this._onSourceEnd.bind(this),playbackRate:this._playbackRate}).connect(this.output);this._loop||this._synced||(this._state.cancel(t+a),this._state.setStateAtTime("stopped",t+a,{implicitEnd:!0})),this._activeSources.add(i),this._loop&&tr(r)?i.start(t,s):i.start(t,s,a-this.toSeconds(this.fadeOut))}_stop(t){const e=this.toSeconds(t);this._activeSources.forEach((t=>t.stop(e)))}restart(t,e,n){return super.restart(t,e,n),this}_restart(t,e,n){this._stop(t),this._start(t,e,n)}seek(t,e){const n=this.toSeconds(e);if("started"===this._state.getValueAtTime(n)){const e=this.toSeconds(t);this._stop(n),this._start(n,e)}return this}setLoopPoints(t,e){return this.loopStart=t,this.loopEnd=e,this}get loopStart(){return this._loopStart}set loopStart(t){this._loopStart=t,this.buffer.loaded&&Ys(this.toSeconds(t),0,this.buffer.duration),this._activeSources.forEach((e=>{e.loopStart=t}))}get loopEnd(){return this._loopEnd}set loopEnd(t){this._loopEnd=t,this.buffer.loaded&&Ys(this.toSeconds(t),0,this.buffer.duration),this._activeSources.forEach((e=>{e.loopEnd=t}))}get buffer(){return this._buffer}set buffer(t){this._buffer.set(t)}get loop(){return this._loop}set loop(t){if(this._loop!==t&&(this._loop=t,this._activeSources.forEach((e=>{e.loop=t})),t)){const t=this._state.getNextState("stopped",this.now());t&&this._state.cancel(t.time)}}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t;const e=this.now(),n=this._state.getNextState("stopped",e);n&&n.implicitEnd&&(this._state.cancel(n.time),this._activeSources.forEach((t=>t.cancelStop()))),this._activeSources.forEach((n=>{n.playbackRate.setValueAtTime(t,e)}))}get reverse(){return this._buffer.reverse}set reverse(t){this._buffer.reverse=t}get loaded(){return this._buffer.loaded}dispose(){return super.dispose(),this._activeSources.forEach((t=>t.dispose())),this._activeSources.clear(),this._buffer.dispose(),this}}ur([Ua(0)],Ga.prototype,"fadeIn",void 0),ur([Ua(0)],Ga.prototype,"fadeOut",void 0);class ja extends sa{constructor(){super(xr(ja.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="Envelope",this._sig=new ua({context:this.context,value:0}),this.output=this._sig,this.input=void 0;const t=xr(ja.getDefaults(),arguments,["attack","decay","sustain","release"]);this.attack=t.attack,this.decay=t.decay,this.sustain=t.sustain,this.release=t.release,this.attackCurve=t.attackCurve,this.releaseCurve=t.releaseCurve,this.decayCurve=t.decayCurve}static getDefaults(){return Object.assign(sa.getDefaults(),{attack:.01,attackCurve:"linear",decay:.1,decayCurve:"exponential",release:1,releaseCurve:"exponential",sustain:.5})}get value(){return this.getValueAtTime(this.now())}_getCurve(t,e){if(ar(t))return t;{let n;for(n in Ha)if(Ha[n][e]===t)return n;return t}}_setCurve(t,e,n){if(ar(n)&&Reflect.has(Ha,n)){const s=Ha[n];sr(s)?"_decayCurve"!==t&&(this[t]=s[e]):this[t]=s}else{if(!rr(n)||"_decayCurve"===t)throw new Error("Envelope: invalid curve: "+n);this[t]=n}}get attackCurve(){return this._getCurve(this._attackCurve,"In")}set attackCurve(t){this._setCurve("_attackCurve","In",t)}get releaseCurve(){return this._getCurve(this._releaseCurve,"Out")}set releaseCurve(t){this._setCurve("_releaseCurve","Out",t)}get decayCurve(){return this._decayCurve}set decayCurve(t){Ks(["linear","exponential"].some((e=>e===t)),`Invalid envelope curve: ${t}`),this._decayCurve=t}triggerAttack(t,e=1){this.log("triggerAttack",t,e),t=this.toSeconds(t);let n=this.toSeconds(this.attack);const s=this.toSeconds(this.decay),r=this.getValueAtTime(t);if(r>0&&(n=(1-r)/(1/n)),n<this.sampleTime)this._sig.cancelScheduledValues(t),this._sig.setValueAtTime(e,t);else if("linear"===this._attackCurve)this._sig.linearRampTo(e,n,t);else if("exponential"===this._attackCurve)this._sig.targetRampTo(e,n,t);else{this._sig.cancelAndHoldAtTime(t);let s=this._attackCurve;for(let t=1;t<s.length;t++)if(s[t-1]<=r&&r<=s[t]){s=this._attackCurve.slice(t),s[0]=r;break}this._sig.setValueCurveAtTime(s,t,n,e)}if(s&&this.sustain<1){const r=e*this.sustain,a=t+n;this.log("decay",a),"linear"===this._decayCurve?this._sig.linearRampToValueAtTime(r,s+a):this._sig.exponentialApproachValueAtTime(r,a,s)}return this}triggerRelease(t){this.log("triggerRelease",t),t=this.toSeconds(t);const e=this.getValueAtTime(t);if(e>0){const n=this.toSeconds(this.release);n<this.sampleTime?this._sig.setValueAtTime(0,t):"linear"===this._releaseCurve?this._sig.linearRampTo(0,n,t):"exponential"===this._releaseCurve?this._sig.targetRampTo(0,n,t):(Ks(rr(this._releaseCurve),"releaseCurve must be either 'linear', 'exponential' or an array"),this._sig.cancelAndHoldAtTime(t),this._sig.setValueCurveAtTime(this._releaseCurve,t,n,e))}return this}getValueAtTime(t){return this._sig.getValueAtTime(t)}triggerAttackRelease(t,e,n=1){return e=this.toSeconds(e),this.triggerAttack(e,n),this.triggerRelease(e+this.toSeconds(t)),this}cancel(t){return this._sig.cancelScheduledValues(this.toSeconds(t)),this}connect(t,e=0,n=0){return ca(this,t,e,n),this}asArray(t=1024){return cr(this,void 0,void 0,(function*(){const e=t/this.context.sampleRate,n=new Vr(1,e,this.context.sampleRate),s=this.toSeconds(this.attack)+this.toSeconds(this.decay),r=s+this.toSeconds(this.release),a=.1*r,i=r+a,o=new this.constructor(Object.assign(this.get(),{attack:e*this.toSeconds(this.attack)/i,decay:e*this.toSeconds(this.decay)/i,release:e*this.toSeconds(this.release)/i,context:n}));return o._sig.toDestination(),o.triggerAttackRelease(e*(s+a)/i,0),(yield n.render()).getChannelData(0)}))}dispose(){return super.dispose(),this._sig.dispose(),this}}ur([Ua(0)],ja.prototype,"attack",void 0),ur([Ua(0)],ja.prototype,"decay",void 0),ur([Wa(0,1)],ja.prototype,"sustain",void 0),ur([Ua(0)],ja.prototype,"release",void 0);const Ha=(()=>{const t=128;let e,n;const s=[];for(e=0;e<t;e++)s[e]=Math.sin(e/127*(Math.PI/2));const r=[];for(e=0;e<127;e++){n=e/127;const t=Math.sin(n*(2*Math.PI)*6.4-Math.PI/2)+1;r[e]=t/10+.83*n}r[127]=1;const a=[];for(e=0;e<t;e++)a[e]=Math.ceil(e/127*5)/5;const i=[];for(e=0;e<t;e++)n=e/127,i[e]=.5*(1-Math.cos(Math.PI*n));const o=[];for(e=0;e<t;e++){n=e/127;const t=4*Math.pow(n,3)+.2,s=Math.cos(t*Math.PI*2*n);o[e]=Math.abs(s*(1-n))}function l(t){const e=new Array(t.length);for(let n=0;n<t.length;n++)e[n]=1-t[n];return e}return{bounce:{In:l(o),Out:o},cosine:{In:s,Out:(u=s,u.slice(0).reverse())},exponential:"exponential",linear:"linear",ripple:{In:r,Out:l(r)},sine:{In:i,Out:l(i)},step:{In:a,Out:l(a)}};var u})();class qa extends sa{constructor(){super(xr(qa.getDefaults(),arguments)),this._scheduledEvents=[],this._synced=!1,this._original_triggerAttack=this.triggerAttack,this._original_triggerRelease=this.triggerRelease;const t=xr(qa.getDefaults(),arguments);this._volume=this.output=new va({context:this.context,volume:t.volume}),this.volume=this._volume.volume,Mr(this,"volume")}static getDefaults(){return Object.assign(sa.getDefaults(),{volume:0})}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",0)),this}_syncState(){let t=!1;return this._synced||(this._synced=!0,t=!0),t}_syncMethod(t,e){const n=this["_original_"+t]=this[t];this[t]=(...t)=>{const s=t[e],r=this.context.transport.schedule((s=>{t[e]=s,n.apply(this,t)}),s);this._scheduledEvents.push(r)}}unsync(){return this._scheduledEvents.forEach((t=>this.context.transport.clear(t))),this._scheduledEvents=[],this._synced&&(this._synced=!1,this.triggerAttack=this._original_triggerAttack,this.triggerRelease=this._original_triggerRelease),this}triggerAttackRelease(t,e,n,s){const r=this.toSeconds(n),a=this.toSeconds(e);return this.triggerAttack(t,r,s),this.triggerRelease(r+a),this}dispose(){return super.dispose(),this._volume.dispose(),this.unsync(),this._scheduledEvents=[],this}}class Xa extends qa{constructor(){super(xr(Xa.getDefaults(),arguments));const t=xr(Xa.getDefaults(),arguments);this.portamento=t.portamento,this.onsilence=t.onsilence}static getDefaults(){return Object.assign(qa.getDefaults(),{detune:0,onsilence:zr,portamento:0})}triggerAttack(t,e,n=1){this.log("triggerAttack",t,e,n);const s=this.toSeconds(e);return this._triggerEnvelopeAttack(s,n),this.setNote(t,s),this}triggerRelease(t){this.log("triggerRelease",t);const e=this.toSeconds(t);return this._triggerEnvelopeRelease(e),this}setNote(t,e){const n=this.toSeconds(e),s=t instanceof Yr?t.toFrequency():t;if(this.portamento>0&&this.getLevelAtTime(n)>.05){const t=this.toSeconds(this.portamento);this.frequency.exponentialRampTo(s,t,n)}else this.frequency.setValueAtTime(s,n);return this}}ur([Ua(0)],Xa.prototype,"portamento",void 0);class Ka extends ja{constructor(){super(xr(Ka.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="AmplitudeEnvelope",this._gainNode=new ia({context:this.context,gain:0}),this.output=this._gainNode,this.input=this._gainNode,this._sig.connect(this._gainNode.gain),this.output=this._gainNode,this.input=this._gainNode}dispose(){return super.dispose(),this._gainNode.dispose(),this}}class Ya extends Xa{constructor(){super(xr(Ya.getDefaults(),arguments)),this.name="Synth";const t=xr(Ya.getDefaults(),arguments);this.oscillator=new Ba(Object.assign({context:this.context,detune:t.detune,onstop:()=>this.onsilence(this)},t.oscillator)),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.envelope=new Ka(Object.assign({context:this.context},t.envelope)),this.oscillator.chain(this.envelope,this.output),Mr(this,["oscillator","frequency","detune","envelope"])}static getDefaults(){return Object.assign(Xa.getDefaults(),{envelope:Object.assign(wr(ja.getDefaults(),Object.keys(sa.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.3}),oscillator:Object.assign(wr(Ba.getDefaults(),[...Object.keys(Na.getDefaults()),"frequency","detune"]),{type:"triangle"})})}_triggerEnvelopeAttack(t,e){if(this.envelope.triggerAttack(t,e),this.oscillator.start(t),0===this.envelope.sustain){const e=this.toSeconds(this.envelope.attack),n=this.toSeconds(this.envelope.decay);this.oscillator.stop(t+e+n)}}_triggerEnvelopeRelease(t){this.envelope.triggerRelease(t),this.oscillator.stop(t+this.toSeconds(this.envelope.release))}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this}}class Za extends Ya{constructor(){super(xr(Za.getDefaults(),arguments)),this.name="MembraneSynth",this.portamento=0;const t=xr(Za.getDefaults(),arguments);this.pitchDecay=t.pitchDecay,this.octaves=t.octaves,Mr(this,["oscillator","envelope"])}static getDefaults(){return br(Xa.getDefaults(),Ya.getDefaults(),{envelope:{attack:.001,attackCurve:"exponential",decay:.4,release:1.4,sustain:.01},octaves:10,oscillator:{type:"sine"},pitchDecay:.05})}setNote(t,e){const n=this.toSeconds(e),s=this.toFrequency(t instanceof Yr?t.toFrequency():t),r=s*this.octaves;return this.oscillator.frequency.setValueAtTime(r,n),this.oscillator.frequency.exponentialRampToValueAtTime(s,n+this.toSeconds(this.pitchDecay)),this}dispose(){return super.dispose(),this}}ur([Wa(0)],Za.prototype,"octaves",void 0),ur([Ua(0)],Za.prototype,"pitchDecay",void 0);const Ja=new Set;function Qa(t){Ja.add(t)}function ti(t,e){const n=`registerProcessor("${t}", ${e})`;Ja.add(n)}Qa('\n\t/**\n\t * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. \n\t */\n\tclass ToneAudioWorkletProcessor extends AudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\t\n\t\t\tsuper(options);\n\t\t\t/**\n\t\t\t * If the processor was disposed or not. Keep alive until it\'s disposed.\n\t\t\t */\n\t\t\tthis.disposed = false;\n\t\t   \t/** \n\t\t\t * The number of samples in the processing block\n\t\t\t */\n\t\t\tthis.blockSize = 128;\n\t\t\t/**\n\t\t\t * the sample rate\n\t\t\t */\n\t\t\tthis.sampleRate = sampleRate;\n\n\t\t\tthis.port.onmessage = (event) => {\n\t\t\t\t// when it receives a dispose \n\t\t\t\tif (event.data === "dispose") {\n\t\t\t\t\tthis.disposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n'),Qa("\n\t/**\n\t * Abstract class for a single input/output processor. \n\t * has a 'generate' function which processes one sample at a time\n\t */\n\tclass SingleIOProcessor extends ToneAudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(Object.assign(options, {\n\t\t\t\tnumberOfInputs: 1,\n\t\t\t\tnumberOfOutputs: 1\n\t\t\t}));\n\t\t\t/**\n\t\t\t * Holds the name of the parameter and a single value of that\n\t\t\t * parameter at the current sample\n\t\t\t * @type { [name: string]: number }\n\t\t\t */\n\t\t\tthis.params = {}\n\t\t}\n\n\t\t/**\n\t\t * Generate an output sample from the input sample and parameters\n\t\t * @abstract\n\t\t * @param input number\n\t\t * @param channel number\n\t\t * @param parameters { [name: string]: number }\n\t\t * @returns number\n\t\t */\n\t\tgenerate(){}\n\n\t\t/**\n\t\t * Update the private params object with the \n\t\t * values of the parameters at the given index\n\t\t * @param parameters { [name: string]: Float32Array },\n\t\t * @param index number\n\t\t */\n\t\tupdateParams(parameters, index) {\n\t\t\tfor (const paramName in parameters) {\n\t\t\t\tconst param = parameters[paramName];\n\t\t\t\tif (param.length > 1) {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][index];\n\t\t\t\t} else {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Process a single frame of the audio\n\t\t * @param inputs Float32Array[][]\n\t\t * @param outputs Float32Array[][]\n\t\t */\n\t\tprocess(inputs, outputs, parameters) {\n\t\t\tconst input = inputs[0];\n\t\t\tconst output = outputs[0];\n\t\t\t// get the parameter values\n\t\t\tconst channelCount = Math.max(input && input.length || 0, output.length);\n\t\t\tfor (let sample = 0; sample < this.blockSize; sample++) {\n\t\t\t\tthis.updateParams(parameters, sample);\n\t\t\t\tfor (let channel = 0; channel < channelCount; channel++) {\n\t\t\t\t\tconst inputSample = input && input.length ? input[channel][sample] : 0;\n\t\t\t\t\toutput[channel][sample] = this.generate(inputSample, channel, this.params);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn !this.disposed;\n\t\t}\n\t};\n"),Qa("\n\t/**\n\t * A multichannel buffer for use within an AudioWorkletProcessor as a delay line\n\t */\n\tclass DelayLine {\n\t\t\n\t\tconstructor(size, channels) {\n\t\t\tthis.buffer = [];\n\t\t\tthis.writeHead = []\n\t\t\tthis.size = size;\n\n\t\t\t// create the empty channels\n\t\t\tfor (let i = 0; i < channels; i++) {\n\t\t\t\tthis.buffer[i] = new Float32Array(this.size);\n\t\t\t\tthis.writeHead[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Push a value onto the end\n\t\t * @param channel number\n\t\t * @param value number\n\t\t */\n\t\tpush(channel, value) {\n\t\t\tthis.writeHead[channel] += 1;\n\t\t\tif (this.writeHead[channel] > this.size) {\n\t\t\t\tthis.writeHead[channel] = 0;\n\t\t\t}\n\t\t\tthis.buffer[channel][this.writeHead[channel]] = value;\n\t\t}\n\n\t\t/**\n\t\t * Get the recorded value of the channel given the delay\n\t\t * @param channel number\n\t\t * @param delay number delay samples\n\t\t */\n\t\tget(channel, delay) {\n\t\t\tlet readHead = this.writeHead[channel] - Math.floor(delay);\n\t\t\tif (readHead < 0) {\n\t\t\t\treadHead += this.size;\n\t\t\t}\n\t\t\treturn this.buffer[channel][readHead];\n\t\t}\n\t}\n"),ti("feedback-comb-filter",'\n\tclass FeedbackCombFilterWorklet extends SingleIOProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(options);\n\t\t\tthis.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);\n\t\t}\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: "delayTime",\n\t\t\t\tdefaultValue: 0.1,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 1,\n\t\t\t\tautomationRate: "k-rate"\n\t\t\t}, {\n\t\t\t\tname: "feedback",\n\t\t\t\tdefaultValue: 0.5,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 0.9999,\n\t\t\t\tautomationRate: "k-rate"\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, channel, parameters) {\n\t\t\tconst delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);\n\t\t\tthis.delayLine.push(channel, input + delayedSample * parameters.feedback);\n\t\t\treturn delayedSample;\n\t\t}\n\t}\n');class ei extends qa{constructor(){super(xr(ei.getDefaults(),arguments,["urls","onload","baseUrl"],"urls")),this.name="Sampler",this._activeSources=new Map;const t=xr(ei.getDefaults(),arguments,["urls","onload","baseUrl"],"urls"),e={};Object.keys(t.urls).forEach((n=>{const s=parseInt(n,10);if(Ks(ir(n)||nr(s)&&isFinite(s),`url key is neither a note or midi pitch: ${n}`),ir(n)){const s=new Yr(this.context,n).toMidi();e[s]=t.urls[n]}else nr(s)&&isFinite(s)&&(e[s]=t.urls[s])})),this._buffers=new ma({urls:e,onload:t.onload,baseUrl:t.baseUrl,onerror:t.onerror}),this.attack=t.attack,this.release=t.release,this.curve=t.curve,this._buffers.loaded&&Promise.resolve().then(t.onload)}static getDefaults(){return Object.assign(qa.getDefaults(),{attack:0,baseUrl:"",curve:"exponential",onload:zr,onerror:zr,release:.1,urls:{}})}_findClosest(t){let e=0;for(;e<96;){if(this._buffers.has(t+e))return-e;if(this._buffers.has(t-e))return e;e++}throw new Error(`No available buffers for note: ${t}`)}triggerAttack(t,e,n=1){return this.log("triggerAttack",t,e,n),Array.isArray(t)||(t=[t]),t.forEach((t=>{const s=qr(new Yr(this.context,t).toFrequency()),r=Math.round(s),a=s-r,i=this._findClosest(r),o=r-i,l=this._buffers.get(o),u=Gr(i+a),c=new Ca({url:l,context:this.context,curve:this.curve,fadeIn:this.attack,fadeOut:this.release,playbackRate:u}).connect(this.output);c.start(e,0,l.duration/u,n),rr(this._activeSources.get(r))||this._activeSources.set(r,[]),this._activeSources.get(r).push(c),c.onended=()=>{if(this._activeSources&&this._activeSources.has(r)){const t=this._activeSources.get(r),e=t.indexOf(c);-1!==e&&t.splice(e,1)}}})),this}triggerRelease(t,e){return this.log("triggerRelease",t,e),Array.isArray(t)||(t=[t]),t.forEach((t=>{const n=new Yr(this.context,t).toMidi();if(this._activeSources.has(n)&&this._activeSources.get(n).length){const t=this._activeSources.get(n);e=this.toSeconds(e),t.forEach((t=>{t.stop(e)})),this._activeSources.set(n,[])}})),this}releaseAll(t){const e=this.toSeconds(t);return this._activeSources.forEach((t=>{for(;t.length;)t.shift().stop(e)})),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}triggerAttackRelease(t,e,n,s=1){const r=this.toSeconds(n);return this.triggerAttack(t,r,s),rr(e)?(Ks(rr(t),"notes must be an array when duration is array"),t.forEach(((t,n)=>{const s=e[Math.min(n,e.length-1)];this.triggerRelease(t,r+this.toSeconds(s))}))):this.triggerRelease(t,r+this.toSeconds(e)),this}add(t,e,n){if(Ks(ir(t)||isFinite(t),`note must be a pitch or midi: ${t}`),ir(t)){const s=new Yr(this.context,t).toMidi();this._buffers.add(s,e,n)}else this._buffers.add(t,e,n);return this}get loaded(){return this._buffers.loaded}dispose(){return super.dispose(),this._buffers.dispose(),this._activeSources.forEach((t=>{t.forEach((t=>t.dispose()))})),this._activeSources.clear(),this}}ur([Ua(0)],ei.prototype,"attack",void 0),ur([Ua(0)],ei.prototype,"release",void 0);class ni extends sa{constructor(){super(Object.assign(xr(ni.getDefaults(),arguments,["pan"]))),this.name="Panner",this._panner=this.context.createStereoPanner(),this.input=this._panner,this.output=this._panner;const t=xr(ni.getDefaults(),arguments,["pan"]);this.pan=new na({context:this.context,param:this._panner.pan,value:t.pan,minValue:-1,maxValue:1}),this._panner.channelCount=t.channelCount,this._panner.channelCountMode="explicit",Mr(this,"pan")}static getDefaults(){return Object.assign(sa.getDefaults(),{pan:0,channelCount:1})}dispose(){return super.dispose(),this._panner.disconnect(),this.pan.dispose(),this}}ti("bit-crusher","\n\tclass BitCrusherWorklet extends SingleIOProcessor {\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"bits\",\n\t\t\t\tdefaultValue: 12,\n\t\t\t\tminValue: 1,\n\t\t\t\tmaxValue: 16,\n\t\t\t\tautomationRate: 'k-rate'\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, _channel, parameters) {\n\t\t\tconst step = Math.pow(0.5, parameters.bits - 1);\n\t\t\tconst val = step * Math.floor(input / step + 0.5);\n\t\t\treturn val;\n\t\t}\n\t}\n");class si extends sa{constructor(){super(xr(si.getDefaults(),arguments,["solo"])),this.name="Solo";const t=xr(si.getDefaults(),arguments,["solo"]);this.input=this.output=new ia({context:this.context}),si._allSolos.has(this.context)||si._allSolos.set(this.context,new Set),si._allSolos.get(this.context).add(this),this.solo=t.solo}static getDefaults(){return Object.assign(sa.getDefaults(),{solo:!1})}get solo(){return this._isSoloed()}set solo(t){t?this._addSolo():this._removeSolo(),si._allSolos.get(this.context).forEach((t=>t._updateSolo()))}get muted(){return 0===this.input.gain.value}_addSolo(){si._soloed.has(this.context)||si._soloed.set(this.context,new Set),si._soloed.get(this.context).add(this)}_removeSolo(){si._soloed.has(this.context)&&si._soloed.get(this.context).delete(this)}_isSoloed(){return si._soloed.has(this.context)&&si._soloed.get(this.context).has(this)}_noSolos(){return!si._soloed.has(this.context)||si._soloed.has(this.context)&&0===si._soloed.get(this.context).size}_updateSolo(){this._isSoloed()||this._noSolos()?this.input.gain.value=1:this.input.gain.value=0}dispose(){return super.dispose(),si._allSolos.get(this.context).delete(this),this._removeSolo(),this}}si._allSolos=new Map,si._soloed=new Map;class ri extends sa{constructor(){super(xr(ri.getDefaults(),arguments,["pan","volume"])),this.name="PanVol";const t=xr(ri.getDefaults(),arguments,["pan","volume"]);this._panner=this.input=new ni({context:this.context,pan:t.pan,channelCount:t.channelCount}),this.pan=this._panner.pan,this._volume=this.output=new va({context:this.context,volume:t.volume}),this.volume=this._volume.volume,this._panner.connect(this._volume),this.mute=t.mute,Mr(this,["pan","volume"])}static getDefaults(){return Object.assign(sa.getDefaults(),{mute:!1,pan:0,volume:0,channelCount:1})}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}dispose(){return super.dispose(),this._panner.dispose(),this.pan.dispose(),this._volume.dispose(),this.volume.dispose(),this}}class ai extends sa{constructor(){super(xr(ai.getDefaults(),arguments,["volume","pan"])),this.name="Channel";const t=xr(ai.getDefaults(),arguments,["volume","pan"]);this._solo=this.input=new si({solo:t.solo,context:this.context}),this._panVol=this.output=new ri({context:this.context,pan:t.pan,volume:t.volume,mute:t.mute,channelCount:t.channelCount}),this.pan=this._panVol.pan,this.volume=this._panVol.volume,this._solo.connect(this._panVol),Mr(this,["pan","volume"])}static getDefaults(){return Object.assign(sa.getDefaults(),{pan:0,volume:0,mute:!1,solo:!1,channelCount:1})}get solo(){return this._solo.solo}set solo(t){this._solo.solo=t}get muted(){return this._solo.muted||this.mute}get mute(){return this._panVol.mute}set mute(t){this._panVol.mute=t}_getBus(t){return ai.buses.has(t)||ai.buses.set(t,new ia({context:this.context})),ai.buses.get(t)}send(t,e=0){const n=this._getBus(t),s=new ia({context:this.context,units:"decibels",gain:e});return this.connect(s),s.connect(n),s}receive(t){return this._getBus(t).connect(this),this}dispose(){return super.dispose(),this._panVol.dispose(),this.pan.dispose(),this.volume.dispose(),this._solo.dispose(),this}}ai.buses=new Map;class ii extends sa{constructor(){super(...arguments),this.name="Listener",this.positionX=new na({context:this.context,param:this.context.rawContext.listener.positionX}),this.positionY=new na({context:this.context,param:this.context.rawContext.listener.positionY}),this.positionZ=new na({context:this.context,param:this.context.rawContext.listener.positionZ}),this.forwardX=new na({context:this.context,param:this.context.rawContext.listener.forwardX}),this.forwardY=new na({context:this.context,param:this.context.rawContext.listener.forwardY}),this.forwardZ=new na({context:this.context,param:this.context.rawContext.listener.forwardZ}),this.upX=new na({context:this.context,param:this.context.rawContext.listener.upX}),this.upY=new na({context:this.context,param:this.context.rawContext.listener.upY}),this.upZ=new na({context:this.context,param:this.context.rawContext.listener.upZ})}static getDefaults(){return Object.assign(sa.getDefaults(),{positionX:0,positionY:0,positionZ:0,forwardX:0,forwardY:0,forwardZ:-1,upX:0,upY:1,upZ:0})}dispose(){return super.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this.forwardX.dispose(),this.forwardY.dispose(),this.forwardZ.dispose(),this.upX.dispose(),this.upY.dispose(),this.upZ.dispose(),this}}$r((t=>{t.listener=new ii({context:t})})),Rr((t=>{t.listener.dispose()})),Ur().transport,Ur().destination,Ur().destination,Ur().listener,Ur().draw,Ur();class oi{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class li{refCount(t){return ui("refCount")}incRef(t){return ui("incRef")}timerAvailable(){return!0}time(t){return ui("time")}read(t){return ui("read")}readSync(t){return ui("readSync")}numDataIds(){return ui("numDataIds")}disposeData(t,e){return ui("disposeData")}write(t,e,n){return ui("write")}move(t,e,n,s,r){return ui("move")}memory(){return ui("memory")}floatPrecision(){return ui("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return ui("dispose")}}function ui(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function ci(t){let e=t.length,n=0,s=0;for(;e>0;)s=Math.random()*e|0,e--,n=t[e],t[e]=t[s],t[s]=n}function hi(t,e,n){return Math.max(t,Math.min(e,n))}function pi(t){return t%2==0?t:t+1}function di(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function fi(t,e,n=""){di(bi(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}function mi(t){di(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function gi(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||Ai(t)&&!n)for(let s=0;s<t.length;++s)gi(t[s],e,n);else e.push(t);return e}function yi(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function bi(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function xi(t){return t%1==0}function vi(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function wi(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function ki(t,e=(t=>0),n){return new Promise(((s,r)=>{let a=0;const i=()=>{if(t())return void s();a++;const o=e(a);null!=n&&a>=n?r():setTimeout(i,o)};i()}))}function _i(t,e){let n=1,s=-1;for(let e=0;e<t.length;++e)if(t[e]>=0)n*=t[e];else if(-1===t[e]){if(-1!==s)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${e}`);s=e}else if(t[e]<0)throw Error(`Shapes can not be < 0. Found ${t[e]} at dim ${e}`);if(-1===s){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const r=t.slice();return r[s]=e/n,r}function Ii(t,e){const n=e.length;return di((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`)),di(t.every((t=>xi(t))),(()=>`All values in axis param must be integers but got axis ${t}`)),t.map((t=>t<0?n+t:t))}function Ti(t,e){const n=[],s=[],r=null!=e&&Array.isArray(e)&&0===e.length,a=null==e||r?null:Ii(e,t).sort();let i=0;for(let e=0;e<t.length;++e){if(null!=a){if(a[i]===e&&1!==t[e])throw new Error(`Can't squeeze axis ${e} since its dim '${t[e]}' is not 1`);(null==a[i]||a[i]>e)&&1===t[e]&&(n.push(t[e]),s.push(e)),a[i]<=e&&i++}1!==t[e]&&(n.push(t[e]),s.push(e))}return{newShape:n,keptDims:s}}function Ni(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error(`Unknown data type ${t}`);n=new Uint8Array(e)}return n}function Ci(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error(`Unknown data type ${t}`);n=new Array(e)}return n}function Si(t,e){return!("complex64"===e||"float32"===e&&"complex64"!==t||"int32"===e&&"float32"!==t&&"complex64"!==t||"bool"===e&&"bool"===t)}function Ai(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function $i(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error(`Unknown dtype ${t}`)}function Ei(t){return"string"==typeof t||t instanceof String}function Ri(t){return"number"==typeof t}function Oi(t){return Array.isArray(t)?Oi(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":Ri(t)?"float32":Ei(t)?"string":"boolean"==typeof t?"bool":"float32"}function Di(t){return!!(t&&t.constructor&&t.call&&t.apply)}function Fi(t,e){for(let n=e;n<t;++n)if(t%n==0)return n;return t}function Mi(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let s=e-3;s>=0;--s)n[s]=n[s+1]*t[s+1];return n}function Li(t,e,n){const s=new Array;if(1===e.length){const r=e[0];for(let e=0;e<r;e++)s[e]=n[t+e]}else{const r=e[0],a=e.slice(1),i=a.reduce(((t,e)=>t*e));for(let e=0;e<r;e++)s[e]=Li(t+e*i,a,n)}return s}function zi(t,e){if(0===t.length)return e[0];const n=t.reduce(((t,e)=>t*e));if(0===n)return[];if(n!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}.`);return Li(0,t,e)}function Pi(t,e){const n=Vi(t,e);for(let t=0;t<n.length;t++)n[t]=1;return n}function Vi(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function Bi(t,e){const n=t.reduce(((t,e)=>t*e),1);if(null==e||"float32"===e)return zi(t,new Float32Array(n));if("int32"===e)return zi(t,new Int32Array(n));if("bool"===e)return zi(t,new Uint8Array(n));throw new Error(`Unknown data type ${e}`)}function Wi(t){t.forEach((e=>{di(Number.isInteger(e)&&e>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`))}))}function Ui(t,e,n){if(0===e)return 0;if(1===e)return t[0];let s=t[t.length-1];for(let e=0;e<t.length-1;++e)s+=n[e]*t[e];return s}function Gi(t,e,n){if(0===e)return[];if(1===e)return[t];const s=new Array(e);for(let e=0;e<s.length-1;++e)s[e]=Math.floor(t/n[e]),t-=s[e]*n[e];return s[s.length-1]=t,s}function ji(t){return t&&t.then&&"function"==typeof t.then}const Hi="tfjsflags";class qi{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(ji(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=function(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("=")))),e}(this.global.location.search);Hi in t&&t[Hi].split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)}))}}function Xi(){return Yi}let Ki,Yi=null;function Zi(){if(null==Ki){let t;if("undefined"!=typeof window)t=window;else if(void 0!==n.g)t=n.g;else if("undefined"!=typeof process)t=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}Ki=t}return Ki}function Ji(t,e){const n=function(){const t=Zi();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const s=e();return n.set(t,s),n.get(t)}}const Qi="Abs",to="Acos",eo="Acosh",no="Add",so="AddN",ro="All",ao="Any",io="ArgMax",oo="ArgMin",lo="Asin",uo="Asinh",co="Atan",ho="Atanh",po="Atan2",fo="AvgPool",mo="AvgPoolGrad",go="AvgPool3D",yo="AvgPool3DGrad",bo="BatchMatMul",xo="BatchToSpaceND",vo="Bincount",wo="Cast",ko="Ceil",_o="ClipByValue",Io="Complex",To="ComplexAbs",No="Concat",Co="Conv2D",So="Conv2DBackpropFilter",Ao="Conv2DBackpropInput",$o="Conv3D",Eo="Conv3DBackpropFilterV2",Ro="Conv3DBackpropInputV2",Oo="Cos",Do="Cosh",Fo="Cumsum",Mo="CropAndResize",Lo="DenseBincount",zo="DepthToSpace",Po="DepthwiseConv2dNative",Vo="DepthwiseConv2dNativeBackpropFilter",Bo="DepthwiseConv2dNativeBackpropInput",Wo="Diag",Uo="Dilation2D",Go="Dilation2DBackpropInput",jo="Dilation2DBackpropFilter",Ho="RealDiv",qo="Elu",Xo="EluGrad",Ko="Erf",Yo="Equal",Zo="Exp",Jo="ExpandDims",Qo="Expm1",tl="FFT",el="Fill",nl="FlipLeftRight",sl="Floor",rl="FloorDiv",al="FusedBatchNorm",il="GatherV2",ol="GatherNd",ll="Greater",ul="GreaterEqual",cl="Identity",hl="IFFT",pl="Imag",dl="IsFinite",fl="IsInf",ml="IsNan",gl="LeakyRelu",yl="Less",bl="LessEqual",xl="LinSpace",vl="Log",wl="Log1p",kl="LogicalAnd",_l="LogicalNot",Il="LogicalOr",Tl="LRN",Nl="LRNGrad",Cl="Max",Sl="Maximum",Al="MaxPool",$l="MaxPoolGrad",El="MaxPool3D",Rl="MaxPool3DGrad",Ol="MaxPoolWithArgmax",Dl="Mean",Fl="Min",Ml="Minimum",Ll="MirrorPad",zl="Mod",Pl="Multinomial",Vl="Multiply",Bl="Neg",Wl="NotEqual",Ul="NonMaxSuppressionV3",Gl="NonMaxSuppressionV4",jl="NonMaxSuppressionV5",Hl="OnesLike",ql="OneHot",Xl="Pack",Kl="PadV2",Yl="Pow",Zl="Prelu",Jl="Prod",Ql="Range",tu="Real",eu="Reciprocal",nu="Relu",su="Reshape",ru="ResizeNearestNeighbor",au="ResizeNearestNeighborGrad",iu="ResizeBilinear",ou="ResizeBilinearGrad",lu="Relu6",uu="Reverse",cu="Round",hu="Rsqrt",pu="ScatterNd",du="Select",fu="Selu",mu="Slice",gu="Sin",yu="Sinh",bu="Sign",xu="Sigmoid",vu="Softplus",wu="Sqrt",ku="Sum",_u="SpaceToBatchND",Iu="SplitV",Tu="Softmax",Nu="SquaredDifference",Cu="Square",Su="Sub",Au="SparseToDense",$u="StridedSlice",Eu="Tan",Ru="Tanh",Ou="Tile",Du="TopK",Fu="Transform",Mu="Transpose",Lu="Unique",zu="Unpack",Pu="UnsortedSegmentSum",Vu="ZerosLike",Bu="Step",Wu="FromPixels",Uu="RotateWithOffset",Gu="_FusedMatMul",ju="FusedConv2D",Hu="FusedDepthwiseConv2D",qu=Ji("kernelRegistry",(()=>new Map)),Xu=Ji("gradRegistry",(()=>new Map));function Ku(t,e){const n=tc(t,e);return qu.get(n)}function Yu(t){return Xu.get(t)}function Zu(t){const e=qu.entries(),n=[];for(;;){const{done:s,value:r}=e.next();if(s)break;const[a,i]=r,[o]=a.split("_");o===t&&n.push(i)}return n}function Ju(t){const{kernelName:e,backendName:n}=t,s=tc(e,n);qu.has(s)&&console.warn(`The kernel '${e}' for backend '${n}' is already registered`),qu.set(s,t)}function Qu(t){const{kernelName:e}=t;Xu.has(e)&&Xi().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),Xu.set(e,t)}function tc(t,e){return`${e}_${t}`}function ec(t,e){return"string"===e?rc(t):nc([t],e)}function nc(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=gi(t)),Xi().getBool("DEBUG")&&function(t,e){for(let n=0;n<t.length;n++){const s=t[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error(`Unknown data type ${e}`)}function sc(){return Xi().platform.now()}function rc(t,e="utf-8"){return e=e||"utf-8",Xi().platform.encode(t,e)}function ac(t,e="utf-8"){return e=e||"utf-8",Xi().platform.decode(t,e)}class ic{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new lc)}profileKernel(t,e,n){let s;const r=()=>{s=n()};let a;const i=sc();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(r);else{r();for(const t of s)t.dataSync();a=Promise.resolve({kernelMs:sc()-i})}if(Xi().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let e=0;e<s.length;e++){const n=s[e];n.data().then((e=>{oc(e,n.dtype,t)}))}return{kernelName:t,outputs:s,inputs:e,timeMs:a.then((t=>t.kernelMs)),extraInfo:a.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:s,inputs:r,extraInfo:a}=t;n.forEach((t=>{Promise.all([t.data(),s,a]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],r,n[2])}))}))}}function oc(t,e,n){if("float32"!==e)return!1;for(let e=0;e<t.length;e++){const s=t[e];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${n}'`),!0}return!1}class lc{logKernelProfile(t,e,n,s,r,a){const i="number"==typeof s?wi(`${s}ms`,9):s.error,o=wi(t,25),l=e.rank,u=e.size,c=wi(e.shape.toString(),14);let h="";for(const t in r){const n=r[t];if(null!=n){const s=n.shape||e.shape,r=s.length;h+=`${t}: ${r}D ${r>0?s:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}const uc=20,cc=3,hc=7;function pc(t,e,n,s){const r=Mi(e),a=function(t,e,n,s){const r=yi(e),a=s[s.length-1],i=new Array(a).fill(0),o=e.length,l="complex64"===n?gc(t):t;if(o>1)for(let t=0;t<r/a;t++){const e=t*a;for(let t=0;t<a;t++)i[t]=Math.max(i[t],dc(l[e+t],0,n).length)}return i}(t,e,n,r),i=e.length,o=mc(t,e,n,r,a),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(o.map((t=>"    "+t)).join("\n")),l.join("\n")}function dc(t,e,n){let s;return s=Array.isArray(t)?`${parseFloat(t[0].toFixed(hc))} + ${parseFloat(t[1].toFixed(hc))}j`:Ei(t)?`'${t}'`:"bool"===n?fc(t):parseFloat(t.toFixed(hc)).toString(),wi(s,e)}function fc(t){return 0===t?"false":"true"}function mc(t,e,n,s,r,a=!0){const i="complex64"===n?2:1,o=e[0],l=e.length;if(0===l)return"complex64"===n?[dc(gc(t)[0],0,n)]:"bool"===n?[fc(t[0])]:[t[0].toString()];if(1===l){if(o>uc){const e=cc*i;let s=Array.from(t.slice(0,e)),a=Array.from(t.slice((o-cc)*i,o*i));return"complex64"===n&&(s=gc(s),a=gc(a)),["["+s.map(((t,e)=>dc(t,r[e],n))).join(", ")+", ..., "+a.map(((t,e)=>dc(t,r[o-cc+e],n))).join(", ")+"]"]}return["["+("complex64"===n?gc(t):Array.from(t)).map(((t,e)=>dc(t,r[e],n))).join(", ")+"]"]}const u=e.slice(1),c=s.slice(1),h=s[0]*i,p=[];if(o>uc){for(let e=0;e<cc;e++){const s=e*h,a=s+h;p.push(...mc(t.slice(s,a),u,n,c,r,!1))}p.push("...");for(let e=o-cc;e<o;e++){const s=e*h,a=s+h;p.push(...mc(t.slice(s,a),u,n,c,r,e===o-1))}}else for(let e=0;e<o;e++){const s=e*h,a=s+h;p.push(...mc(t.slice(s,a),u,n,c,r,e===o-1))}const d=2===l?",":"";p[0]="["+p[0]+d;for(let t=1;t<p.length-1;t++)p[t]=" "+p[t]+d;let f=",\n";for(let t=2;t<l;t++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":f),p}function gc(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}class yc{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=yi(t),null!=n){const t=n.length;di(t===this.size,(()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Ci(e,this.size),this.strides=Mi(t)}set(t,...e){0===e.length&&(e=[0]),di(e.length===this.rank,(()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`));const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const n of t){if(n<0||n>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}e++}let n=t[t.length-1];for(let e=0;e<t.length-1;++e)n+=this.strides[e]*t[e];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return bc().makeTensor(this.values,this.shape,this.dtype)}}let bc=null,xc=null,vc=null;class wc{constructor(t,e,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=yi(t),this.strides=Mi(t),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return xc.buffer(this.shape,this.dtype,t)}bufferSync(){return xc.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return zi(this.shape,t)}arraySync(){return zi(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const t=bc().read(this.dataId);if("string"===this.dtype){const e=await t;try{return e.map((t=>ac(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=bc().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>ac(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await bc().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(bc().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return xc.print(this,t)}clone(){return this.throwIfDisposed(),xc.clone(this)}toString(t=!1){return pc(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),xc.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),bc().makeVariable(this,t,e,n)}}function kc(){return Ji("Tensor",(()=>wc))}Object.defineProperty(wc,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed}),kc();class _c extends wc{constructor(t,e,n,s){super(t.shape,t.dtype,t.dataId,s),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!bi(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);bc().disposeTensor(this),this.dataId=t.dataId,bc().incRef(this,null)}dispose(){bc().disposeVariable(this),this.isDisposedInternal=!0}}var Ic,Tc,Nc,Cc,Sc;Object.defineProperty(_c,Symbol.hasInstance,{value:t=>t instanceof wc&&null!=t.assign&&t.assign instanceof Function}),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(Ic||(Ic={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(Tc||(Tc={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(Nc||(Nc={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(Cc||(Cc={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(Sc||(Sc={}));const Ac={float32:Cc,int32:Tc,bool:Nc,complex64:Sc};function $c(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return Ac[t][e]}function Ec(t){return $c(t,"int32")}function Rc(t,e){if(t.dtype===e.dtype)return[t,e];const n=$c(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function Oc(t,e){return e.some((e=>e.id===t.id))}function Dc(t){const e=[];return Fc(t,e,new Set),e}function Fc(t,e,n){if(null==t)return;if(t instanceof wc)return void e.push(t);if(s=t,!Array.isArray(s)&&"object"!=typeof s)return;var s;const r=t;for(const t in r){const s=r[t];n.has(s)||(n.add(s),Fc(s,e,n))}}function Mc(t){return null!=t.kernelName}class Lc{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((t=>t.name))))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class zc{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Lc}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(console.warn(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new ic(this.backendInstance),!0}setupRegisteredKernels(){Zu(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){Zu(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(!n||n instanceof li||"function"!=typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,s=n.then((n=>!(e<this.pendingBackendInitId||(this.registry[t]=n,this.pendingBackendInit=null,0)))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}}catch(e){return console.warn(`Initialization of backend ${t} failed`),console.warn(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),s=n.backend,r=this.readSync(e),a=s.refCount(e);s.disposeData(e,!0),n.backend=t,t.move(e,r,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,s=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=t}return this.scopedRun((()=>this.startScope(s)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(t){throw e(),t}}nextTensorId(){return zc.nextTensorId++}nextVariableId(){return zc.nextVariableId++}clone(t){const e=Vc.runKernel(cl,{x:t}),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e={x:t};return Vc.runKernel(wo,e,{dtype:"float32"})}})),[],{}),e}runKernel(t,e,n){if(null==Ku(t,this.backendName))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const s=this.backend.numDataIds();let r=0;n.forEach((t=>{r+="complex64"===t.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-e-r-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${t}'`)}runKernelFunc(t){let e,n=[];const s=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=Mc(t)?t.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Mc(t)){const{kernelName:e,inputs:r,attrs:a}=t;null==this.backendName&&this.backend;const l=Ku(e,this.backendName);di(null!=l,(()=>`Cannot find registered kernel '${e}' for backend '${this.backendName}'`)),i=()=>{const t=this.backend.numDataIds();o=l.kernelFunc({inputs:r,attrs:a,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(e,t,i);const u=i.map((t=>{if(null!=t.rank)return t;const{dataId:e,shape:n,dtype:s}=t;return this.makeTensorFromDataId(e,n,s)}));if(s){const t=this.getTensorsForGradient(e,r,u);n=this.saveTensorsForBackwardMode(t)}return u}}else{const{forwardFunc:e}=t,r=t=>{s&&(n=t.map((t=>this.keep(this.clone(t)))))};i=()=>{const t=this.backend.numDataIds();o=this.tidy((()=>e(this.backend,r)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,t,n),n}}const{inputs:u,attrs:c}=t,h=Mc(t)?null:t.backwardsFunc;let p;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(l,u,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),e=p.outputs):e=i()})),s&&this.addTapeNode(l,u,e,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((t=>null!=u[t]?u[t].shape:null)),outputShapes:e.map((t=>t.shape)),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(o)?e:e[0]}saveTensorsForBackwardMode(t){return t.map((t=>this.keep(this.clone(t))))}getTensorsForGradient(t,e,n){const s=Yu(t);if(null!=s){const t=s.inputsToSave||[],r=s.outputsToSave||[];let a;s.saveAllInputs?(di(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(e).map((t=>e[t]))):a=t.map((t=>e[t]));const i=n.filter(((t,e)=>r[e]));return a.concat(i)}return[]}makeTensor(t,e,n,s){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=t;"string"===n&&Ei(t[0])&&(r=t.map((t=>rc(t))));const a=s.write(r,e,n),i=new wc(e,n,a,this.nextTensorId());if(this.trackTensor(i,s),"string"===n){const t=this.state.tensorInfo.get(a),e=function(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}(r);this.state.numBytes+=e-t.bytes,t.bytes=e}return i}makeTensorFromDataId(t,e,n,s){const r=new wc(e,n=n||"float32",t,this.nextTensorId());return this.trackTensor(r,s),r}makeVariable(t,e=!0,n,s){n=n||this.nextVariableId().toString(),null!=s&&s!==t.dtype&&(t=t.cast(s));const r=new _c(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(t,e){this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*$i(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof _c||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,"string"===t.dtype&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),"complex64"!==t.dtype&&"string"!==t.dtype){const e=t.size*$i(t.dtype);this.state.numBytes-=e}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const t of this.state.activeProfile.kernels)t.kernelTimeMs=await t.kernelTimeMs,t.extraInfo=await t.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,s,r,a){const i={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:r},o=Yu(t);null!=o&&(s=o.gradFunc),null!=s&&(i.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],s=Vi(t.size,t.dtype);return this.makeTensor(s,t.shape,t.dtype)}return t})),s(t.length>1?t:t[0],r,a))),this.state.activeTape.push(i)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=Dc(t),n=new Set(e.map((t=>t.id)));for(let t=0;t<this.state.activeScope.track.length;t++){const e=this.state.activeScope.track[t];e.kept||n.has(e.id)||e.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==s.id||this.track(t)}))}gradients(t,e,n,s=!1){if(di(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));di(r instanceof wc,(()=>"The result y returned by f() must be a tensor."));const a=function(t,e,n){const s={},r={};for(let t=0;t<e.length;t++)s[e[t].id]=!0;for(let n=0;n<t.length;n++){const a=t[n],i=a.inputs;for(const t in i){const n=i[t];let o=!1;for(let t=0;t<e.length;t++)if(s[n.id]){a.outputs.forEach((t=>s[t.id]=!0)),o=!0,r[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let e=t.length-1;e>=0;e--){const n=t[e],s=n.inputs;for(let t=0;t<n.outputs.length;t++)if(a[n.outputs[t].id]){for(const t in s)a[s[t].id]=!0,i[n.id]=!0;break}}const o=[];for(let e=0;e<t.length;e++){const n=t[e];if(r[n.id]&&i[n.id]){const t={};for(const e in n.inputs){const r=n.inputs[e];s[r.id]&&(t[e]=r)}const e=Object.assign({},n);e.inputs=t,e.outputs=n.outputs,o.push(e)}}return o}(this.state.activeTape,e,r);if(!s&&0===a.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[r.id]=null==n?function(t){const e=Pi(yi(t),"float32");return Vc.makeTensor(e,t,"float32")}(r.shape):n,function(t,e,n,s){for(let r=e.length-1;r>=0;r--){const a=e[r],i=[];if(a.outputs.forEach((e=>{const n=t[e.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const e in a.inputs){if(!(e in o))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(o)}.`);const r=n((()=>o[e]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${r.dtype}'`);const i=a.inputs[e];if(!bi(r.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${e}' has shape '${r.shape}', which does not match the shape of the input '${i.shape}'`);if(null==t[i.id])t[i.id]=r;else{const e=t[i.id];t[i.id]=s(e,r),e.dispose()}}}}(t,a,(t=>this.tidy(t)),Bc);const s=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:r,grads:s}}))}customGrad(t){return di(Di(t),(()=>"The f passed in customGrad(f) must be a function.")),(...e)=>{let n;di(e.every((t=>t instanceof wc)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const s={};return e.forEach(((t,e)=>{s[e]=t})),this.runKernelFunc({forwardFunc:(s,r)=>(n=t(...e,r),di(n.value instanceof wc,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),di(Di(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(t,s)=>{const r=n.gradFunc(t,s),a=Array.isArray(r)?r:[r];di(a.length===e.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),di(a.every((t=>t instanceof wc)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((t,e)=>{i[e]=()=>t})),i},inputs:s})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=sc(),n=await this.backend.time(t);return n.wallMs=sc()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Lc;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Pc(){const t=Zi();if(null==t._tfengine){const e=new qi(t);t._tfengine=new zc(e)}var e;return e=t._tfengine.ENV,Yi=e,bc=()=>t._tfengine,t._tfengine}zc.nextTensorId=0,zc.nextVariableId=0;const Vc=Pc();function Bc(t,e){const n={a:t,b:e};return Vc.runKernel(no,n)}function Wc(){if("undefined"!=typeof navigator&&null!=navigator){const t=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Uc(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Gc=Xi();function jc(t,e){let n=t;if(Ai(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const s=[];for(;Array.isArray(n)||Ai(n)&&"string"!==e;)s.push(n.length),n=n[0];return Array.isArray(t)&&Xi().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Hc(t,s,[]),s}function Hc(t,e,n){if(n=n||[],!Array.isArray(t)&&!Ai(t))return void di(0===e.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`));di(e.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`)),di(t.length===e[0],(()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`));const s=e.slice(1);for(let e=0;e<t.length;++e)Hc(t[e],s,n.concat(e))}function qc(t,e,n,s){if("string_or_numeric"!==t){if(null==t)throw new Error("Expected dtype cannot be null.");if("numeric"!==t&&t!==e||"numeric"===t&&"string"===e)throw new Error(`Argument '${n}' passed to '${s}' must be ${t} tensor, but got ${e} tensor`)}}function Xc(t,e,n,s="numeric"){if(t instanceof wc)return qc(s,t.dtype,e,n),t;let r=Oi(t);if("string"!==r&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),qc(s,r,e,n),null==t||!Ai(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const s=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${s}'`)}const a=jc(t,r);Ai(t)||Array.isArray(t)||(t=[t]);const i="string"!==r?nc(t,r):gi(t,[],!0);return Vc.makeTensor(i,a,r)}function Kc(t,e,n,s="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map(((t,r)=>Xc(t,`${e}[${r}]`,n,s)))}function Yc(t){const e=Object.keys(t);if(1!==e.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const s=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const r=(...t)=>{Vc.startScope(n);try{const e=s(...t);return ji(e)&&console.error("Cannot return a Promise inside of tidy."),Vc.endScope(e),e}catch(t){throw Vc.endScope(null),t}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}Gc.registerFlag("DEBUG",(()=>!1),(t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Gc.registerFlag("IS_BROWSER",(()=>Uc())),Gc.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Gc.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Gc.registerFlag("PROD",(()=>!1)),Gc.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Gc.getBool("DEBUG"))),Gc.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Gc.registerFlag("IS_TEST",(()=>!1)),Gc.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),Gc.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));const Zc=Yc({complex_:function(t,e){const n=Xc(t,"real","complex"),s=Xc(e,"imag","complex");fi(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:n,imag:s};return Vc.runKernel(Io,r)}});function Jc(t,e,n,s){if(null==s&&(s=Oi(t)),"complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Ai(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){Wi(e);const t=yi(e),s=yi(n);di(t===s,(()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${s}`));for(let t=0;t<n.length;++t){const s=n[t],r=t!==n.length-1||s!==yi(e.slice(t));di(n[t]===e[t]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `))}}return Ai(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==s?nc(t,s):gi(t,[],!0),Vc.makeTensor(t,e,s)}function Qc(t,e,n){return Jc(t,e,jc(t,n),n)}const th={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function eh(t,e){const n=[],s=[],r=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);for(let a=0;a<r.length;++a){const i=r[a],o=Array.isArray(t)?t[a].tensor:t[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const t=new Promise((async t=>{const e=await o.bytes(),n=e.reduce(((t,e)=>t+e.length),0)+4*e.length,s=new Uint8Array(n);let r=0;for(let t=0;t<e.length;t++){const n=e[t],a=new Uint8Array(new Uint32Array([n.length]).buffer);s.set(a,r),r+=4,s.set(n,r),r+=n.length}t(s)}));s.push(t)}else s.push(o.data());null!=e&&(l.group=e),n.push(l)}return{data:nh(await Promise.all(s)),specs:n}}function nh(t){if(null===t)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach((t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${t.constructor.name}`)}));const s=new Uint8Array(e);let r=0;return n.forEach((t=>{s.set(new Uint8Array(t.buffer),r),r+=t.byteLength})),s.buffer}const sh="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function rh(t){return sh?Buffer.byteLength(t):new Blob([t]).size}function ah(t){if(1===t.length)return t[0];let e=0;t.forEach((t=>{e+=t.byteLength}));const n=new Uint8Array(e);let s=0;return t.forEach((t=>{n.set(new Uint8Array(t),s),s+=t.byteLength})),n.buffer}function ih(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:rh(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:rh(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function oh(){const t=function(){const t=t=>{let e=t<<13,n=0;for(;0==(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return s=>{const r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let r=0;r<s.length;r++){const i=s[r],o=t[n[i>>10]+(1023&i)]+e[i>>10];a[r]=o}return new Float32Array(r)}}class lh{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==lh.instance&&(lh.instance=new lh),lh.instance}static registerSaveRouter(t){lh.getInstance().saveRouters.push(t)}static registerLoadRouter(t){lh.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return lh.getHandlers(t,"save")}static getLoadHandlers(t,e){return lh.getHandlers(t,"load",e)}static getHandlers(t,e,n){const s=[];return("load"===e?lh.getInstance().loadRouters:lh.getInstance().saveRouters).forEach((e=>{const r=e(t,n);null!==r&&s.push(r)})),s}}const uh=t=>lh.getSaveHandlers(t),ch="tensorflowjs",hh="models_store",ph="model_info_store";function dh(){if(!Xi().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function fh(t){const e=t.result;e.createObjectStore(hh,{keyPath:"modelPath"}),e.createObjectStore(ph,{keyPath:"modelPath"})}class mh{constructor(t){if(this.indexedDB=dh(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise(((t,n)=>{const s=this.indexedDB.open(ch,1);s.onupgradeneeded=()=>fh(s),s.onsuccess=()=>{const r=s.result;if(null==e){const e=r.transaction(hh,"readonly"),s=e.objectStore(hh).get(this.modelPath);s.onsuccess=()=>{if(null==s.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(s.result.modelArtifacts)},s.onerror=t=>(r.close(),n(s.error)),e.oncomplete=()=>r.close()}else{const s=ih(e),a=r.transaction(ph,"readwrite");let i=a.objectStore(ph);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:s});let l;o.onsuccess=()=>{l=r.transaction(hh,"readwrite");const o=l.objectStore(hh).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:s});o.onsuccess=()=>t({modelArtifactsInfo:s}),o.onerror=t=>{i=a.objectStore(ph);const e=i.delete(this.modelPath);e.onsuccess=()=>(r.close(),n(o.error)),e.onerror=t=>(r.close(),n(o.error))}},o.onerror=t=>(r.close(),n(o.error)),a.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}}},s.onerror=t=>n(s.error)}))}}mh.URL_SCHEME="indexeddb://";const gh=t=>{return Xi().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(mh.URL_SCHEME)?(e=t.slice(mh.URL_SCHEME.length),new mh(e)):null;var e};lh.registerSaveRouter(gh),lh.registerLoadRouter(gh);class yh{constructor(){this.indexedDB=dh()}async listModels(){return new Promise(((t,e)=>{const n=this.indexedDB.open(ch,1);n.onupgradeneeded=()=>fh(n),n.onsuccess=()=>{const s=n.result,r=s.transaction(ph,"readonly"),a=r.objectStore(ph).getAll();a.onsuccess=()=>{const e={};for(const t of a.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},a.onerror=t=>(s.close(),e(a.error)),r.oncomplete=()=>s.close()},n.onerror=t=>e(n.error)}))}async removeModel(t){var e;return t=(e=t).startsWith(mh.URL_SCHEME)?e.slice(mh.URL_SCHEME.length):e,new Promise(((e,n)=>{const s=this.indexedDB.open(ch,1);s.onupgradeneeded=()=>fh(s),s.onsuccess=()=>{const r=s.result,a=r.transaction(ph,"readwrite"),i=a.objectStore(ph),o=i.get(t);let l;o.onsuccess=()=>{if(null==o.result)return r.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const s=i.delete(t),a=()=>{l=r.transaction(hh,"readwrite");const s=l.objectStore(hh).delete(t);s.onsuccess=()=>e(o.result.modelArtifactsInfo),s.onerror=t=>n(o.error)};s.onsuccess=a,s.onerror=t=>(a(),r.close(),n(o.error))}},o.onerror=t=>(r.close(),n(o.error)),a.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}},s.onerror=t=>n(s.error)}))}}const bh="/",xh="tensorflowjs_models",vh="info",wh="model_topology",kh="weight_specs",_h="weight_data",Ih="model_metadata";function Th(t){return{info:[xh,t,vh].join(bh),topology:[xh,t,wh].join(bh),weightSpecs:[xh,t,kh].join(bh),weightData:[xh,t,_h].join(bh),modelMetadata:[xh,t,Ih].join(bh)}}function Nh(t){const e=t.split(bh);if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(bh)}class Ch{constructor(t){if(!Xi().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=Th(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),s=ih(t);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(t){if(sh)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let t=0,s=e.length;t<s;t++)n+=String.fromCharCode(e[t]);return btoa(n)}(t.weightData));const r={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};return null!=t.signature&&(r.signature=t.signature),null!=t.userDefinedMetadata&&(r.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(r.modelInitializer=t.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==s)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=s;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const t=JSON.parse(r);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=function(t){if(sh){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)n.set([e.charCodeAt(t)],t);return n.buffer}(a),e}}Ch.URL_SCHEME="localstorage://";const Sh=t=>{return Xi().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Ch.URL_SCHEME)?(e=t.slice(Ch.URL_SCHEME.length),new Ch(e)):null;var e};lh.registerSaveRouter(Sh),lh.registerLoadRouter(Sh);class Ah{constructor(){di(Xi().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),di("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const t={},e=xh+bh,n=bh+vh;for(let s=0;s<this.LS.length;++s){const r=this.LS.key(s);r.startsWith(e)&&r.endsWith(n)&&(t[Nh(r)]=JSON.parse(this.LS.getItem(r)))}return t}async removeModel(t){var e;const n=Th(t=(e=t).startsWith(Ch.URL_SCHEME)?e.slice(Ch.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const s=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),s}}class $h{constructor(){this.managers={}}static getInstance(){return null==$h.instance&&($h.instance=new $h),$h.instance}static registerManager(t,e){di(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),di(t.length>0,(()=>"scheme must not be an empty string."));const n=$h.getInstance();di(null==n.managers[t],(()=>`A model store manager is already registered for scheme '${t}'.`)),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}class Eh{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(Xi().get("IS_BROWSER")){Xi().setPlatform("browser",new Eh);try{$h.registerManager(Ch.URL_SCHEME,new Ah)}catch(t){}try{$h.registerManager(mh.URL_SCHEME,new yh)}catch(t){}}let Rh;function Oh(t,e="float32",n){return e=e||"float32",Wi(t),new yc(t,e,n)}Xi().get("IS_NODE")&&Xi().setPlatform("node",new class{constructor(){this.util=n(8628),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=Xi().global.fetch?Xi().global.fetch(t,e):(null==Rh&&(Rh=n(5410)),Rh(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}});const Dh=Yc({cast_:function(t,e){const n=Xc(t,"x","cast");if(!function(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const s={x:n},r={dtype:e};return Vc.runKernel(wo,s,r)}}),Fh=Yc({clone_:function(t){const e={x:Xc(t,"x","clone","string_or_numeric")};return Vc.runKernel(cl,e)}});function Mh(t){return new Promise((t=>setTimeout(t))).then(t)}Pc(),function(t){xc=t}({buffer:Oh,cast:Dh,clone:Fh,print:function(t,e=!1){console.log(t.toString(e))}});class Lh{constructor(t){if(!Xi().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Lh.URL_SCHEME)&&(t=t.slice(Lh.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],s={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n};null!=t.signature&&(s.signature=t.signature),null!=t.userDefinedMetadata&&(s.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(s.modelInitializer=t.modelInitializer);const r=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=r,await Mh((()=>a.dispatchEvent(new MouseEvent("click")))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await Mh((()=>t.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:ih(t)}}}}function zh(t,e,n,s){!function(t){di(null!=t&&Array.isArray(t)&&t.length>0,(()=>"promises must be a none empty array"))}(t),function(t,e){di(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${t}`)),di(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${e}`)),di(e>=t,(()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction ${e}`))}(n=null==n?0:n,s=null==s?1:s);let r=0;return Promise.all(t.map((a=>(a.then((a=>{const i=n+ ++r/t.length*(s-n);return e(i),a})),a))))}async function Ph(t,e){null==e&&(e={});const n=null==e.fetchFunc?Xi().platform.fetch:e.fetchFunc,s=t.map((t=>n(t,e.requestInit,{isBinary:!0}))),r=(null==e.onProgress?await Promise.all(s):await zh(s,e.onProgress,0,.5)).map((t=>t.arrayBuffer()));return null==e.onProgress?await Promise.all(r):await zh(r,e.onProgress,.5,1)}Lh.URL_SCHEME="downloads://",lh.registerSaveRouter((t=>Xi().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Lh.URL_SCHEME)?function(t="model"){return new Lh(t)}(t.slice(Lh.URL_SCHEME.length)):null));class Vh{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(di("function"==typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=Xi().platform.fetch,di(null!=t&&t.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(t)&&di(2===t.length,(()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`)),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],s={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n};null!=t.signature&&(s.signature=t.signature),null!=t.userDefinedMetadata&&(s.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(s.modelInitializer=t.modelInitializer),e.body.append("model.json",new Blob([JSON.stringify(s)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,e);if(r.ok)return{modelArtifactsInfo:ih(t),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,s=e.weightsManifest,r=e.generatedBy,a=e.convertedBy,i=e.format,o=e.signature,l=e.userDefinedMetadata;if(null==n&&null==s)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,c;if(null!=s){const t=await this.loadWeights(s);[u,c]=t}const h={modelTopology:n,weightSpecs:u,weightData:c,generatedBy:r,convertedBy:a,format:i};null!=o&&(h.signature=o),null!=l&&(h.userDefinedMetadata=l);const p=e.modelInitializer;return p&&(h.modelInitializer=p),h}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?");return[t.substring(0,e)+"/",n>e?t.substring(n):""]}(e),r=this.weightPathPrefix||n,a=[];for(const e of t)a.push(...e.weights);const i=[],o=[];for(const e of t)for(const t of e.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(t)):i.push(r+t+s);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[a,ah(await Ph(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Bh(t){return null!=t.match(Vh.URL_SCHEME_REGEX)}Vh.URL_SCHEME_REGEX=/^https?:\/\//;const Wh=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every((t=>Bh(t))):Bh(t),n)return Uh(t,e)}return null};function Uh(t,e){return new Vh(t,e)}function Gh(t,e){return Uh(t,e)}let jh;lh.registerSaveRouter(Wh),lh.registerLoadRouter(Wh);const Hh=Yc({fromPixels_:function(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,a=!1,i=!1,o=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&t instanceof ImageData)s=!0;else if("undefined"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement)r=!0;else if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement)a=!0;else if(null!=t.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${t.constructor.name}`);o=!0}if(r){const e=2;if(r&&t.readyState<e)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Ku(Wu,Vc.backendName)){const n={pixels:t},s={numChannels:e};return Vc.runKernel(Wu,n,s)}const[l,u]=r?[t.videoWidth,t.videoHeight]:[t.width,t.height];let c,h;if(i?c=t.getContext("2d").getImageData(0,0,l,u).data:s||n?c=t.data:(a||r||o)&&(null==jh&&(jh=document.createElement("canvas").getContext("2d")),jh.canvas.width=l,jh.canvas.height=u,jh.drawImage(t,0,0,l,u),c=jh.getImageData(0,0,l,u).data),4===e)h=new Int32Array(c);else{const t=l*u;h=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)h[n*e+t]=c[4*n+t]}return function(t,e,n){if(mi(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const s=jc(t,n);if(3!==s.length&&1!==s.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===s.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Jc(t,e,s,n)}(h,[u,l,e],"int32")}});function qh(t,e,n){const s=t.shape.length;di(s===e.length,(()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`)),di(s===n.length,(()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`));for(let r=0;r<s;++r)di(e[r]+n[r]<=t.shape[r],(()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${e[r]+n[r]}) would overflow input.shape[${r}] (${t.shape[r]})`))}function Xh(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function Kh(t,e,n){const s=[];for(let r=0;r<t.length;r++)s[r]=Math.ceil((e[r]-t[r])/n[r]);return s}function Yh(t,e,n,s){const r=[...t];for(let t=r.length;t<s.length;t++)r.push(1);for(let t=0;t<n;t++)0===t?r[e]=1:(r.splice(e,0,1),r.pop());return r}function Zh(t,e,n){return n<=t?n:n-(e-1)}function Jh(t,e){const n=[];for(let s=0;s<t;s++)n.push(e+s);return n}function Qh(t,e,n,s,r,a,i,o,l){const u=t.length;let c=new Array(u),h=new Array(u),p=new Array(u);if(e.length&&n>0){const l=e[0],u=n+1;c=tp(i,l,u,s,t),h=ep(o,l,u,r,t),p=Yh(a,l,u,t)}else for(let e=0;e<u;e++)c[e]=sp(i,s,a,t,e,l),h[e]=rp(o,r,a,t,e,l),p[e]=np(a,e,l);return{begin:c,end:h,strides:p}}function tp(t,e,n,s,r){const a=[...r],i=Jh(n,e);for(let r=0;r<a.length;r++)if(i.indexOf(r)>-1)a[r]=0;else{const i=Zh(e,n,r);let o=s[i];t&1<<i&&(o=0),a[r]=o}return a}function ep(t,e,n,s,r){const a=[...r],i=Jh(n,e);for(let r=0;r<a.length;r++)if(i.indexOf(r)>-1)a[r]=Number.MAX_SAFE_INTEGER;else{const i=Zh(e,n,r);let o=s[i];t&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[r]=o}for(let t=0;t<a.length;t++){const e=r[t];a[t]<0&&(a[t]+=e),a[t]=hi(0,a[t],r[t])}return a}function np(t,e,n){let s=t[e];return(n&1<<e||null==s)&&(s=1),s}function sp(t,e,n,s,r,a){let i=e[r];const o=n[r]||1;(t&1<<r||a&1<<r||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=hi(0,i,l-1),i}function rp(t,e,n,s,r,a){let i=e[r];const o=n[r]||1;(t&1<<r||a&1<<r||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=o>0?hi(0,i,l):hi(-1,i,l-1),i}function ap(t,e,n){let s=n.length;for(let t=0;t<n.length;t++)if(n[t]>1){s=t;break}for(let r=s+1;r<n.length;r++)if(e[r]>0||n[r]!==t[r])return!1;return!0}function ip(t,e){let n=t.length>0?t[t.length-1]:1;for(let s=0;s<t.length-1;s++)n+=t[s]*e[s];return n}function op(t,e,n){let s;const r=t.shape.length;let a;return s="number"==typeof e?[e,...new Array(r-1).fill(0)]:e.length<r?e.concat(new Array(r-e.length).fill(0)):e.slice(),s.forEach((t=>{di(-1!==t,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(r).fill(-1):"number"==typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,a=a.map(((e,n)=>e>=0?e:(di(-1===e,(()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`)),t.shape[n]-s[n]))),[s,a]}function lp(t,e,n,s,r,a,i,o,l){let u=e.slice(),c=n.slice(),h=s;null==s&&(h=new Array(u.length));const p=Xh(i);if(p.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const d=t.length-u.length,f=Xh(o),m=t.slice();f.forEach((t=>{u[t]=0,c[t]=1,m.splice(t,0,1)}));const{begin:g,end:y,strides:b}=Qh(m,p,d,u,c,h,r,a,i);u=g,c=y,h=b;const x=Xh(l);x.forEach((t=>{c[t]=u[t]+1,h[t]=1}));const v=Kh(u,c,h),w=v.filter(((t,e)=>-1===x.indexOf(e)));return{nonStrided:h.every((t=>1===t)),$begin:u,$end:c,$strides:h,size:v,newShape:m,outShape:w}}class up{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class cp{constructor(){this.classNameMap={}}static getMap(){return null==cp.instance&&(cp.instance=new cp),cp.instance}static register(t){cp.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function hp(t){di(null!=t.className,(()=>"Class being registered does not have the static className property defined.")),di("string"==typeof t.className,(()=>"className is required to be a string, but got type "+typeof t.className)),di(t.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),cp.register(t)}function pp(){return Vc}function dp(){return Vc.memory()}function fp(t,e){return Vc.tidy(t,e)}function mp(t){Dc(t).forEach((t=>t.dispose()))}function gp(t){return Vc.keep(t)}function yp(t){return Vc.setBackend(t)}function bp(t,e,n=1){return Vc.registerBackend(t,e,n)}function xp(t){return Vc.customGrad(t)}function vp(t,e){if((Ai(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&Ai(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Jc(t,[],[],e)}vc=function(t){Xi().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};class wp extends up{minimize(t,e=!1,n){const{value:s,grads:r}=this.computeGradients(t,n);if(null!=n){const t=n.map((t=>({name:t.name,tensor:r[t.name]})));this.applyGradients(t)}else this.applyGradients(r);return mp(r),e?s:(s.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return function(t,e){di(Di(t),(()=>"The f passed in variableGrads(f) must be a function")),di(null==e||Array.isArray(e)&&e.every((t=>t instanceof _c)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=e;if(!n){e=[];for(const t in Vc.registeredVariables)e.push(Vc.registeredVariables[t])}const s=n?e.filter((t=>!t.trainable)):null,r=e.length;di((e=e.filter((t=>t.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`));const{value:a,grads:i}=Vc.gradients(t,e,null,!0);di(i.some((t=>null!=t)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),di(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return e.forEach(((t,e)=>{null!=i[e]&&(o[t.name]=i[e])})),null!=s&&s.forEach((t=>o[t.name]=null)),{value:a,grads:o}}(t,e)}dispose(){null!=this.iterations_&&mp(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:vp(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(wp,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});const kp=Yc({abs_:function(t){const e=Xc(t,"x","abs");if("complex64"===e.dtype){const t={x:e};return Vc.runKernel(To,t)}{const t={x:e};return Vc.runKernel(Qi,t)}}}),_p=Yc({add_:function(t,e){let n=Xc(t,"a","add"),s=Xc(e,"b","add");[n,s]=Rc(n,s);const r={a:n,b:s};return Vc.runKernel(no,r)}}),Ip=Yc({all_:function(t,e=null,n=!1){const s={x:Xc(t,"x","all","bool")},r={axis:e,keepDims:n};return Vc.runKernel(ro,s,r)}}),Tp=Yc({any_:function(t,e=null,n=!1){const s={x:Xc(t,"x","any","bool")},r={axis:e,keepDims:n};return Vc.runKernel(ao,s,r)}}),Np=Yc({argMax_:function(t,e=0){const n={x:Xc(t,"x","argMax")},s={axis:e};return Vc.runKernel(io,n,s)}});function Cp(t,e,n,s,r="NHWC",a){return $p(t,[...e,t[3]],n,a,s,null,null,Pp(r))}function Sp(t,e,n,s,r,a,i="channelsLast"){const[o,l]=Op(e);let u;if("channelsLast"===i)u=[o,l,t[3],t[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,t[1],t[1]]}return $p(t,u,n,s,r,a,!1,i)}function Ap(t,e,n,s,r,a,i="NDHWC"){const[o,l,u]=Dp(e);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,l,u,t[4],t[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,l,u,t[1],t[1]]}return Ep(t,c,n,s,r,!1,h,a)}function $p(t,e,n,s,r,a,i=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=t;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=t}const[p,d,,f]=e,[m,g]=Op(n),[y,b]=Op(s),x=Fp(p,y),v=Fp(d,b),{padInfo:w,outHeight:k,outWidth:_}=function(t,e,n,s,r,a,i,o,l){let u,c,h;if("number"==typeof t){u={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const r=function(t,e,n,s,r){null==s&&(s=Rp(t,e,n));const a=t[1];return[Mp((t[0]-e+2*s)/n+1,r),Mp((a-e+2*s)/n+1,r)]}([e,n],a,s,t,o);c=r[0],h=r[1]}else if("same"===t){c=Math.ceil(e/s),h=Math.ceil(n/r);const t=Math.max(0,(c-1)*s+a-e),o=Math.max(0,(h-1)*r+i-n),l=Math.floor(t/2),p=t-l,d=Math.floor(o/2);u={top:l,bottom:p,left:d,right:o-d,type:"SAME"}}else if("valid"===t)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-a+1)/s),h=Math.ceil((n-i+1)/r);else{if("object"!=typeof t)throw Error(`Unknown padding parameter: ${t}`);{const p="channelsLast"===l?t[1][0]:t[2][0],d="channelsLast"===l?t[1][1]:t[2][1],f="channelsLast"===l?t[2][0]:t[3][0],m="channelsLast"===l?t[2][1]:t[3][1];u={top:p,bottom:d,left:f,right:m,type:0===p&&0===d&&0===f&&0===m?"VALID":"EXPLICIT"},c=Mp((e-a+p+d)/s+1,o),h=Mp((n-i+f+m)/r+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(r,u,c,m,g,x,v,a,o),I=i?f*h:f;let T;return"channelsFirst"===o?T=[l,I,k,_]:"channelsLast"===o&&(T=[l,k,_,I]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:_,outChannels:I,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:d,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:t,outShape:T,filterShape:e}}function Ep(t,e,n,s,r,a=!1,i="channelsLast",o){let[l,u,c,h,p]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,p]=t;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,p,u,c,h]=t}const[d,f,m,,g]=e,[y,b,x]=Dp(n),[v,w,k]=Dp(s),_=Fp(d,v),I=Fp(f,w),T=Fp(m,k),{padInfo:N,outDepth:C,outHeight:S,outWidth:A}=function(t,e,n,s,r,a,i,o,l,u,c){let h,p,d,f;if("number"==typeof t){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const a=function(t,e,n,s,r,a){null==r&&(r=Rp(t,e,s));const i=t[1],o=t[2];return[Mp((t[0]-e+2*r)/s+1,a),Mp((i-e+2*r)/s+1,a),Mp((o-e+2*r)/s+1,a),1]}([e,n,s,1],o,0,r,t,c);p=a[0],d=a[1],f=a[2]}else if("same"===t){p=Math.ceil(e/r),d=Math.ceil(n/a),f=Math.ceil(s/i);const t=(p-1)*r+o-e,c=(d-1)*a+l-n,m=(f-1)*i+u-s,g=Math.floor(t/2),y=t-g,b=Math.floor(c/2),x=c-b,v=Math.floor(m/2);h={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}else{if("valid"!==t)throw Error(`Unknown padding parameter: ${t}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((e-o+1)/r),d=Math.ceil((n-l+1)/a),f=Math.ceil((s-u+1)/i)}return{padInfo:h,outDepth:p,outHeight:d,outWidth:f}}(r,u,c,h,y,b,x,_,I,T,o),$=a?g*p:g;let E;return"channelsFirst"===i?E=[l,$,C,S,A]:"channelsLast"===i&&(E=[l,C,S,A,$]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:p,outDepth:C,outHeight:S,outWidth:A,outChannels:$,padInfo:N,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:d,filterHeight:f,filterWidth:m,effectiveFilterDepth:_,effectiveFilterHeight:I,effectiveFilterWidth:T,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:t,outShape:E,filterShape:e}}function Rp(t,e,n,s=1){const r=Fp(e,s);return Math.floor((t[0]*(n-1)-n+r)/2)}function Op(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function Dp(t){return"number"==typeof t?[t,t,t]:t}function Fp(t,e){return e<=1?t:t+(t-1)*(e-1)}function Mp(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function Lp(t){const[e,n,s]=Op(t);return 1===e&&1===n&&1===s}function zp(t,e){return Lp(t)||Lp(e)}function Pp(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}const Vp=Yc({reshape_:function(t,e){const n={x:Xc(t,"x","reshape","string_or_numeric")},s={shape:e};return Vc.runKernel(su,n,s)}}),Bp=Yc({avgPool_:function(t,e,n,s,r){const a=Xc(t,"x","avgPool","float32");di(zp(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=Vp(a,[1,a.shape[0],a.shape[1],a.shape[2]])),di(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),null!=r&&di(xi(s),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const l={x:i},u={filterSize:e,strides:n,pad:s,dimRoundingMode:r};let c=Vc.runKernel(fo,l,u);return c=Dh(c,a.dtype),o?Vp(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Wp=Yc({avgPool3d_:function(t,e,n,s,r,a="NDHWC"){const i=Xc(t,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=Vp(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),di(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),di("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),null!=r&&di(xi(s),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const u={x:o},c={filterSize:e,strides:n,pad:s,dimRoundingMode:r,dataFormat:a};let h=Vc.runKernel(go,u,c);return h=Dh(h,o.dtype),l?Vp(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Up=Yc({batchNorm_:function(t,e,n,s,r,a){null==a&&(a=.001);const i=Xc(t,"x","batchNorm"),o=Xc(e,"mean","batchNorm"),l=Xc(n,"variance","batchNorm");let u,c;null!=r&&(u=Xc(r,"scale","batchNorm")),null!=s&&(c=Xc(s,"offset","batchNorm")),di(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),di(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),di(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(t){let e;return e=0===t.rank||1===t.rank?Vp(t,[1,1,1,t.size]):2===t.rank?Vp(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?Vp(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(i),scale:u,offset:c,mean:o,variance:l},p={varianceEpsilon:a},d=Vc.runKernel(al,h,p);return Vp(d,i.shape)}}),Gp=Yc({batchNorm2d_:function(t,e,n,s,r,a){const i=Xc(t,"x","batchNorm"),o=Xc(e,"mean","batchNorm"),l=Xc(n,"variance","batchNorm");let u,c;return null!=r&&(u=Xc(r,"scale","batchNorm")),null!=s&&(c=Xc(s,"offset","batchNorm")),di(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),di(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),di(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&di(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&di(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Up(i,o,l,c,u,a)}}),jp=Yc({batchNorm3d_:function(t,e,n,s,r,a){const i=Xc(t,"x","batchNorm"),o=Xc(e,"mean","batchNorm"),l=Xc(n,"variance","batchNorm");let u,c;return null!=r&&(u=Xc(r,"scale","batchNorm")),null!=s&&(c=Xc(s,"offset","batchNorm")),di(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),di(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),di(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&di(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&di(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Up(i,o,l,c,u,a)}}),Hp=Yc({batchNorm4d_:function(t,e,n,s,r,a){const i=Xc(t,"x","batchNorm"),o=Xc(e,"mean","batchNorm"),l=Xc(n,"variance","batchNorm");let u,c;return null!=r&&(u=Xc(r,"scale","batchNorm")),null!=s&&(c=Xc(s,"offset","batchNorm")),di(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),di(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),di(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&di(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&di(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Up(i,o,l,c,u,a)}}),qp=Yc({clipByValue_:function(t,e,n){const s=Xc(t,"x","clipByValue");di(e<=n,(()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`));const r={x:s},a={clipValueMin:e,clipValueMax:n};return Vc.runKernel(_o,r,a)}}),Xp=Yc({concat_:function(t,e=0){di(t.length>=1,(()=>"Pass at least one tensor to concat"));const n=Kc(t,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)})),1===n.length)return Fh(n[0]);const s=n,r={axis:e};return Vc.runKernel(No,s,r)}}),Kp=Yc({concat1d_:function(t){return Xp(t,0)}}),Yp=Yc({concat2d_:function(t,e){return Xp(t,e)}}),Zp=Yc({concat3d_:function(t,e){return Xp(t,e)}}),Jp=Yc({concat4d_:function(t,e){return Xp(t,e)}}),Qp=Yc({conv2d_:function(t,e,n,s,r="NHWC",a=[1,1],i){const o=Xc(t,"x","conv2d"),l=Xc(e,"filter","conv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=Vp(o,[1,o.shape[0],o.shape[1],o.shape[2]])),di(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),di(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),null!=i&&di(xi(s),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const h="NHWC"===r?u.shape[3]:u.shape[1];di(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),di(zp(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const p={x:u,filter:l},d={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},f=Vc.runKernel(Co,p,d);return c?Vp(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),td=Yc({conv1d_:function(t,e,n,s,r="NWC",a=1,i){const o=Xc(t,"x","conv1d"),l=Xc(e,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=Vp(o,[1,o.shape[0],o.shape[1]])),di(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),di(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),null!=i&&di(xi(s),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`)),di(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),di(zp(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),di("NWC"===r,(()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`));const h=Vp(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=Vp(u,[u.shape[0],1,u.shape[1],u.shape[2]]),d=Qp(p,h,[1,n],s,"NHWC",[1,a],i);return Vp(d,c?[d.shape[2],d.shape[3]]:[d.shape[0],d.shape[2],d.shape[3]])}}),ed=Yc({conv2DBackpropInput_:function(t,e,n,s,r,a="NHWC",i){di(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let o=t,l=e,u=!1;3===e.rank&&(u=!0,l=Vp(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,t[0],t[1],t[2]]),di(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),di(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),di(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?l.shape[3]:l.shape[1];di(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),di(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),null!=i&&di(xi(r),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const p={dy:l,filter:n},d={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,inputShape:o},f=Vc.runKernel(Ao,p,d);return u?Vp(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),nd=Yc({conv2dTranspose_:function(t,e,n,s,r,a){const i=Xc(t,"x","conv2dTranspose"),o=Xc(e,"filter","conv2dTranspose");return ed(n,i,o,s,r,"NHWC",a)}}),sd=Yc({conv3d_:function(t,e,n,s,r="NDHWC",a=[1,1,1]){const i=Xc(t,"x","conv3d"),o=Xc(e,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=Vp(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),di(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),di(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),di(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),di(zp(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),di("NDHWC"===r,(()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`));const c={x:l,filter:o},h={strides:n,pad:s,dataFormat:r,dilations:a},p=Vc.runKernel($o,c,h);return u?Vp(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),rd=Yc({depthwiseConv2d_:function(t,e,n,s,r="NHWC",a=[1,1],i){const o=Xc(t,"x","depthwiseConv2d"),l=Xc(e,"filter","depthwiseConv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=Vp(o,[1,o.shape[0],o.shape[1],o.shape[2]])),di(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),di(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),di(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),null!=i&&di(xi(s),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const h={x:u,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},d=Vc.runKernel(Po,h,p);return c?Vp(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),ad=Yc({floorDiv_:function(t,e){let n=Xc(t,"a","floorDiv"),s=Xc(e,"b","floorDiv");[n,s]=Rc(n,s);const r={a:n,b:s};return Vc.runKernel(rl,r)}}),id=Yc({div_:function(t,e){let n=Xc(t,"a","div"),s=Xc(e,"b","div");if([n,s]=Rc(n,s),"int32"===n.dtype&&"int32"===s.dtype)return ad(n,s);const r={a:n,b:s};return Vc.runKernel(Ho,r,{})}}),od=Yc({elu_:function(t){const e={x:Xc(t,"x","elu")};return Vc.runKernel(qo,e)}});function ld(t,e){const n=t.length,s=[];for(let r=0;r<n;r++){const a=n-1-r,i=t[a]||1;(e[e.length-1-r]||1)>1&&1===i&&s.unshift(a)}return s}function ud(t,e){const n=[];for(let s=0;s<e.length;s++){const r=t[t.length-s-1],a=e.length-s-1,i=e[a];(null==r||1===r&&i>1)&&n.unshift(a)}return n}function cd(t,e){const n=[],s=Math.max(t.length,e.length);for(let r=0;r<s;r++){let s=t[t.length-r-1];null==s&&(s=1);let a=e[e.length-r-1];if(null==a&&(a=1),1===s)n.unshift(a);else if(1===a)n.unshift(s);else{if(s!==a)throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`);n.unshift(s)}}return n}const hd=Yc({equal_:function(t,e){let n=Xc(t,"a","equal"),s=Xc(e,"b","equal");[n,s]=Rc(n,s),cd(n.shape,s.shape);const r={a:n,b:s};return Vc.runKernel(Yo,r)}}),pd=Yc({expandDims_:function(t,e=0){const n=Xc(t,"x","expandDims","string_or_numeric");di(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const s={input:n},r={dim:e};return Vc.runKernel(Jo,s,r)}}),dd=Yc({tile_:function(t,e){const n=Xc(t,"x","tile","string_or_numeric");di(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`));const s={x:n},r={reps:e};return Vc.runKernel(Ou,s,r)}}),fd=Yc({eye_:function(t,e,n,s="float32"){null==e&&(e=t);const r=Oh([t,e],s),a=t<=e?t:e;for(let t=0;t<a;++t)r.set(1,t,t);const i=Vp(r.toTensor(),[t,e]);if(null==n)return i;if(1===n.length)return dd(pd(i,0),[n[0],1,1]);if(2===n.length)return dd(pd(pd(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return dd(pd(pd(pd(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function md(t,e,n){const s={shape:t,value:e,dtype:n};return Vc.runKernel(el,{},s)}const gd=Yc({floor_:function(t){const e={x:Xc(t,"x","floor")};return Vc.runKernel(sl,e)}}),yd=Yc({gather_:function(t,e,n=0,s=0){const r={x:Xc(t,"x","gather"),indices:Xc(e,"indices","gather","int32")},a={axis:n,batchDims:s};return Vc.runKernel(il,r,a)}}),bd=Yc({greater_:function(t,e){let n=Xc(t,"a","greater"),s=Xc(e,"b","greater");[n,s]=Rc(n,s),cd(n.shape,s.shape);const r={a:n,b:s};return Vc.runKernel(ll,r)}}),xd=Yc({greaterEqual_:function(t,e){let n=Xc(t,"a","greaterEqual"),s=Xc(e,"b","greaterEqual");[n,s]=Rc(n,s),cd(n.shape,s.shape);const r={a:n,b:s};return Vc.runKernel(ul,r)}}),vd=Yc({leakyRelu_:function(t,e=.2){const n={x:Xc(t,"x","leakyRelu")},s={alpha:e};return Vc.runKernel(gl,n,s)}}),wd=Yc({log_:function(t){const e={x:Xc(t,"x","log")};return Vc.runKernel(vl,e)}}),kd=Yc({exp_:function(t){const e={x:Xc(t,"x","exp")};return Vc.runKernel(Zo,e)}}),_d=Yc({max_:function(t,e=null,n=!1){const s={x:Xc(t,"x","max")},r={reductionIndices:e,keepDims:n};return Vc.runKernel(Cl,s,r)}}),Id=Yc({mul_:function(t,e){let n=Xc(t,"a","mul"),s=Xc(e,"b","mul");[n,s]=Rc(n,s);const r={a:n,b:s};return Vc.runKernel(Vl,r)}}),Td=Yc({sub_:function(t,e){let n=Xc(t,"a","sub"),s=Xc(e,"b","sub");[n,s]=Rc(n,s);const r={a:n,b:s};return Vc.runKernel(Su,r)}}),Nd=Yc({sum_:function(t,e=null,n=!1){let s=Xc(t,"x","sum");"bool"===s.dtype&&(s=Dh(s,"int32"));const r={x:s},a={axis:e,keepDims:n};return Vc.runKernel(ku,r,a)}}),Cd=Yc({logSoftmax_:function(t,e=-1){const n=Xc(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);const s=xp(((t,n)=>{const s=_d(t,e,!0),r=Td(t,s),a=Td(Dh(r,"float32"),wd(Nd(kd(r),e,!0)));return n([a]),{value:a,gradFunc:(t,n)=>{const[s]=n,r=kd(s);return Td(t,Id(Nd(t,e,!0),r))}}}));return s(n)}}),Sd=Yc({logicalAnd_:function(t,e){const n=Xc(t,"a","logicalAnd","bool"),s=Xc(e,"b","logicalAnd","bool");cd(n.shape,s.shape);const r={a:n,b:s};return Vc.runKernel(kl,r)}}),Ad=Yc({maxPool_:function(t,e,n,s,r){const a=Xc(t,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=Vp(a,[1,a.shape[0],a.shape[1],a.shape[2]])),di(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),di(zp(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=r&&di(xi(s),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const l={x:i},u={filterSize:e,strides:n,pad:s,dimRoundingMode:r},c=Vc.runKernel(Al,l,u);return o?Vp(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),$d=Yc({maxPool3d_:function(t,e=[1,1,1],n,s,r,a="NDHWC"){const i=Xc(t,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=Vp(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),di(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),di("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),null!=r&&di(xi(s),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const u={x:o},c={filterSize:e,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},h=Vc.runKernel(El,u,c);return l?Vp(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Ed=Yc({maximum_:function(t,e){let n=Xc(t,"a","maximum"),s=Xc(e,"b","maximum");[n,s]=Rc(n,s),"bool"===n.dtype&&(n=Dh(n,"int32"),s=Dh(s,"int32")),cd(n.shape,s.shape);const r={a:n,b:s};return Vc.runKernel(Sl,r)}}),Rd=Yc({mean_:function(t,e=null,n=!1){const s={x:Xc(t,"x","mean")},r={axis:e,keepDims:n};return Vc.runKernel(Dl,s,r)}}),Od=Yc({min_:function(t,e=null,n=!1){const s={x:Xc(t,"x","min")},r={axis:e,keepDims:n};return Vc.runKernel(Fl,s,r)}}),Dd=Yc({minimum_:function(t,e){let n=Xc(t,"a","minimum"),s=Xc(e,"b","minimum");[n,s]=Rc(n,s),"bool"===n.dtype&&(n=Dh(n,"int32"),s=Dh(s,"int32")),cd(n.shape,s.shape);const r={a:n,b:s};return Vc.runKernel(Ml,r)}});function Fd(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function Md(t,e,n){const s=t.length+e.length,r=[];let a=0,i=0;for(let o=0;o<s;o++)-1===n.indexOf(o)?r.push(t[a++]):r.push(e[i++]);return r}function Ld(t,e){const n=[],s=t.length;for(let r=0;r<s;r++)-1===e.indexOf(r)&&n.push(t[r]);return[n,e.map((e=>t[e]))]}function zd(t,e){return Md(t,e.map((t=>1)),e)}function Pd(t,e,n){di(Fd(e,n),(()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`))}function Vd(t,e){if(Fd(t,e))return null;const n=[];for(let s=0;s<e;++s)-1===t.indexOf(s)&&n.push(s);return t.forEach((t=>n.push(t))),n}function Bd(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}function Wd(t,e){const n=[];for(let s=e-t;s<e;++s)n.push(s);return n}const Ud=Yc({square_:function(t){const e=Xc(t,"x","square");return Vc.runKernel("Square",{x:e},{})}}),Gd=Yc({moments_:function(t,e=null,n=!1){const s=Ii(e,(t=Xc(t,"x","moments")).shape),r=Rd(t,s,n);let a=r.shape;n||(a=zd(r.shape,s));const i=Ud(Td(Dh(t,"float32"),Vp(r,a)));return{mean:r,variance:Rd(i,s,n)}}}),jd=Yc({neg_:function(t){const e={x:Xc(t,"x","neg")};return Vc.runKernel(Bl,e)}}),Hd=Yc({notEqual_:function(t,e){let n=Xc(t,"a","notEqual"),s=Xc(e,"b","notEqual");[n,s]=Rc(n,s),cd(n.shape,s.shape);const r={a:n,b:s};return Vc.runKernel(Wl,r)}}),qd=Yc({oneHot_:function(t,e,n=1,s=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const r={indices:Xc(t,"indices","oneHot","int32")},a={depth:e,onValue:n,offValue:s};return Vc.runKernel(ql,r,a)}});function Xd(t,e="float32"){if("complex64"===e){const e=Xd(t,"float32"),n=Xd(t,"float32");return Zc(e,n)}const n=Vi(yi(t),e);return Vc.makeTensor(n,t,e)}function Kd(t,e="float32"){if("complex64"===e){const e=Kd(t,"float32"),n=Xd(t,"float32");return Zc(e,n)}const n=Pi(yi(t),e);return Vc.makeTensor(n,t,e)}const Yd=Yc({onesLike_:function(t){const e={x:Xc(t,"x","onesLike")};return Vc.runKernel(Hl,e)}}),Zd=Yc({pad_:function(t,e,n=0){const s=Xc(t,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:e,constantValue:n},a={x:s};return Vc.runKernel(Kl,a,r)}}),Jd=Yc({prelu_:function(t,e){const n={x:Xc(t,"x","prelu"),alpha:Xc(e,"alpha","prelu")};return Vc.runKernel(Zl,n)}});var Qd=n(3129);class tf{constructor(t,e,n,s,r){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=r||Math.random();this.random=Qd.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let s,r,a;do{s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);t=this.mean+this.stdDev*s*i,e=this.mean+this.stdDev*r*i,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class ef{constructor(t=0,e=1,n,s){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==s&&(s=Math.random()),"number"==typeof s&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=Qd.alea(s)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const nf=Yc({randomNormal_:function(t,e=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error(`Unsupported data type ${s}`);const a=new tf(e,n,s,!1,r),i=Oh(t,s);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}}),sf=Yc({randomUniform_:function(t,e=0,n=1,s="float32",r){const a=Oh(t,s),i=new ef(e,n,null,r);for(let t=0;t<a.values.length;t++)a.values[t]=i.nextValue();return a.toTensor()}}),rf=Yc({relu_:function(t){const e={x:Xc(t,"x","relu")};return Vc.runKernel(nu,e)}}),af=Yc({reverse_:function(t,e){const n={x:Xc(t,"x","reverse")},s={dims:e};return Vc.runKernel(uu,n,s)}}),of=Yc({selu_:function(t){const e={x:Xc(t,"x","selu")};return Vc.runKernel(fu,e)}}),lf=Yc({separableConv2d_:function(t,e,n,s,r,a=[1,1],i="NHWC"){const o=Xc(t,"x","separableConv2d"),l=Xc(e,"depthwiseFilter","separableConv2d"),u=Xc(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Vp(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");di(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),di(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),di(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),di(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),di(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const p=l.shape[2],d=l.shape[3];di(u.shape[2]===p*d,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*d}, but got ${u.shape[2]}.`));const f=rd(c,l,s,r,i,a),m=Qp(f,u,1,"valid",i);return h?Vp(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),uf=Yc({sigmoid_:function(t){const e={x:Xc(t,"x","sigmoid")};return Vc.runKernel(xu,e)}}),cf=Yc({slice_:function(t,e,n){const s=Xc(t,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");const r={x:s},a={begin:e,size:n};return Vc.runKernel(mu,r,a)}}),hf=Yc({slice1d_:function(t,e,n){const s=Xc(t,"x","slice1d");return di(1===s.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`)),cf(s,[e],[n])}}),pf=Yc({slice2d_:function(t,e,n){const s=Xc(t,"x","slice2d");return di(2===s.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`)),cf(s,e,n)}}),df=Yc({slice3d_:function(t,e,n){const s=Xc(t,"x","slice3d");return di(3===s.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`)),cf(s,e,n)}}),ff=Yc({slice4d_:function(t,e,n){const s=Xc(t,"x","slice4d");return di(4===s.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`)),cf(s,e,n)}}),mf=Yc({softmax_:function(t,e=-1){const n=Xc(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const s={logits:n},r={dim:e};return Vc.runKernel(Tu,s,r)}}),gf=Yc({softplus_:function(t){const e={x:Xc(t,"x","softplus")};return Vc.runKernel(vu,e)}}),yf=Yc({split_:function(t,e,n=0){const s={x:Xc(t,"x","split")},r={numOrSizeSplits:e,axis:n};return Vc.runKernel(Iu,s,r)}}),bf=Yc({sqrt_:function(t){const e={x:Xc(t,"x","sqrt")};return Vc.runKernel(wu,e)}}),xf=Yc({squeeze_:function(t,e){const n=Xc(t,"x","squeeze");return Vp(n,Ti(n.shape,e).newShape)}}),vf=Yc({stack_:function(t,e=0){const n=Kc(t,"tensors","stack","string_or_numeric");di(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&di(e<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const s=n,r={axis:e};return Vc.runKernel(Xl,s,r)}}),wf=Yc({tanh_:function(t){const e={x:Xc(t,"x","tanh")};return Vc.runKernel(Ru,e)}});function kf(t,e){mi(t);const n=jc(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Jc(t,null,n,e)}function _f(t,e,n){if(mi(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const s=jc(t,n);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Jc(t,e,s,n)}const If=Yc({truncatedNormal_:function(t,e=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const a=new tf(e,n,s,!0,r),i=Oh(t,s);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}}),Tf=Yc({unstack_:function(t,e=0){const n=Xc(t,"x","unstack","string_or_numeric");di(e>=-n.shape.length&&e<n.shape.length,(()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`));const s={value:n},r={axis:e};return Vc.runKernel(zu,s,r)}}),Nf=Yc({broadcastTo_:function(t,e){let n=Xc(t,"broadcastTo","x");const s=n.shape;if(e.some((t=>!(t>0)||t%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=Vp(n,t)}const r=n.shape,a=Array.from(e);for(let t=e.length-1;t>=0;t--)if(r[t]===e[t])a[t]=1;else if(1!==n.shape[t])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(0===a.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return Fh(n);const i={x:n},o={reps:a};return Vc.runKernel(Ou,i,o)}}),Cf=Yc({where_:function(t,e,n){const s=Xc(e,"a","where"),r=Xc(n,"b","where"),a=Xc(t,"condition","where","bool"),i=cd(s.shape,r.shape),o=Nf(s,i),l=Nf(r,i);1===a.rank&&di(a.shape[0]===s.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==a.rank&&fi(a.shape,l.shape,"Error in where: ");const u={condition:a,t:o,e:l};return Vc.runKernel(du,u)}}),Sf=Yc({zerosLike_:function(t){const e={x:Xc(t,"x","zerosLike")};return Vc.runKernel(Vu,e)}}),Af=Yc({transpose_:function(t,e){const n=Xc(t,"x","transpose");if(null==e&&(e=n.shape.map(((t,e)=>e)).reverse()),di(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`)),e.forEach((t=>{di(t>=0&&t<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${e}`))})),n.rank<=1)return n.clone();const s={x:n},r={perm:e};return Vc.runKernel(Mu,s,r)}}),$f=Yc({dropout_:function(t,e,n,s){const r=Xc(t,"x","dropout");if(di("float32"===r.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`)),di(e>=0&&e<1,(()=>`rate must be a float in the range [0, 1), but got ${e}.`)),0===e)return t instanceof wc?r.clone():r;const a=function(t,e){if(null==e)return t.shape.slice();if(bi(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let s=0;s<t.shape.length;s++)null==e[s]&&null!=t.shape[s]?n.push(t.shape[s]):n.push(e[s]);return n}return e}(r,n),i=1-e,o=id(gd(_p(sf(a,0,1,"float32",s),i)),i);return Id(r,o)}}),Ef=Yc({imag_:function(t){const e={input:Xc(t,"input","imag")};return Vc.runKernel(pl,e)}}),Rf=Yc({real_:function(t){const e={input:Xc(t,"input","real")};return Vc.runKernel(tu,e)}}),Of=Yc({fft_:function(t){di("complex64"===t.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`));const e={input:t};return Vc.runKernel(tl,e)}}),Df=Yc({rfft_:function(t,e){di("float32"===t.dtype,(()=>`The dtype for rfft() must be real value but got ${t.dtype}`));let n=t.shape[t.shape.length-1];const s=t.size/n;let r;if(null!=e&&e<n){const s=t.shape.map((t=>0)),a=t.shape.map((t=>t));a[t.shape.length-1]=e,r=cf(t,s,a),n=e}else if(null!=e&&e>n){const s=t.shape.map((t=>t));s[t.shape.length-1]=e-n,r=Xp([t,Xd(s)],t.shape.length-1),n=e}else r=t;const a=Sf(r),i=Vp(Zc(r,a),[s,n]),o=Of(i),l=Math.floor(n/2)+1,u=Rf(o),c=Ef(o),h=yf(u,[l,n-l],u.shape.length-1),p=yf(c,[l,n-l],c.shape.length-1),d=r.shape.slice();return d[r.shape.length-1]=l,Vp(Zc(h[0],p[0]),d)}}),Ff=Yc({ifft_:function(t){di("complex64"===t.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`));const e={input:t};return Vc.runKernel(hl,e)}}),Mf=Yc({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let s;if(e<=2){const r=Vp(t,[n,e]);s=Ff(r)}else{const r=[n,2*(e-1)],a=Vp(Rf(t),[n,e]),i=Vp(Ef(t),[n,e]),o=af(cf(a,[0,1],[n,e-2]),1),l=Id(af(cf(i,[0,1],[n,e-2]),1),vp(-1)),u=Xp([a,o],1),c=Xp([i,l],1),h=Vp(Zc(u,c),[r[0],r[1]]);s=Ff(h)}if(s=Rf(s),3===t.rank&&0!==t.shape[0]){const e=s,n=t.shape[0];s=Vp(s,[n,s.shape[0]/n,s.shape[1]]),e.dispose()}return s}}),Lf=Yc({conv2DBackpropFilter_:function(t,e,n,s,r,a="NHWC",i){let o=t;3===t.rank&&(o=Vp(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=Vp(e,[1,e.shape[0],e.shape[1],e.shape[2]])),di(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),di(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),di(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];di(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),di(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=i&&di(xi(r),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h={x:o,dy:l},p={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,filterShape:n};return Vc.runKernel(So,h,p)}}),zf=Yc({relu6_:function(t){const e={x:Xc(t,"x","relu6")};return Vc.runKernel(lu,e)}}),Pf=Yc({step_:function(t,e=0){const n={x:Xc(t,"x","step")},s={alpha:e};return Vc.runKernel(Bu,n,s)}});function Vf(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return Id(t,Pf(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Bf(t,e){let n=e;const s=ud(t.shape,e.shape);return s.length>0&&(n=Nd(n,s)),Vp(n,t.shape)}function Wf(t,e,n,s){if("linear"===e)return t;if("relu"===e)return rf(t);if("elu"===e)return od(t);if("relu6"===e)return zf(t);if("prelu"===e)return Jd(t,n);if("leakyrelu"===e)return vd(t,s);throw new Error(`Unknown fused activation ${e}.`)}const Uf=(t,e)=>!(t>0)||"linear"===e,Gf=Yc({fusedConv2d_:function({x:t,filter:e,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===Uf(Vc.state.gradientDepth,l)){let h=Qp(t,e,n,s,r,a,i);return null!=o&&(h=_p(h,o)),Wf(h,l,u,c)}const h=Xc(t,"x","conv2d"),p=Xc(e,"filter","conv2d");let d=h,f=!1;3===h.rank&&(f=!0,d=Vp(h,[1,h.shape[0],h.shape[1],h.shape[2]])),di(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),di(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),null!=i&&di(xi(s),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`)),di(d.shape[3]===p.shape[2],(()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${p.shape[2]}.`)),di(zp(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),di("NHWC"===r,(()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`));const m=$p(d.shape,p.shape,n,a,s,i);let g,y;null!=o&&(g=Xc(o,"bias","fused conv2d"),[g]=Rc(g,h),cd(m.outShape,g.shape)),null!=u&&(y=Xc(u,"prelu weights","fused conv2d"));const b=(t,e)=>{const[r,i,o,u]=e,c=Vf(t,o,l);di(Lp(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const h=[ed(i.shape,c,r,n,s),Lf(i,c,r.shape,n,s)];if(null!=u){const t=Bf(u,c);h.push(t)}return h},x={x:d,filter:p,bias:g,preluActivationWeights:y},v={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};if(null==o){const t=xp(((t,e,n)=>{let s=Vc.runKernel(ju,x,v);return n([e,t,s]),f&&(s=Vp(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}));return t(d,p)}{const t=xp(((t,e,n,s)=>{let r=Vc.runKernel(ju,x,v);return s([e,t,r,n]),f&&(r=Vp(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return t(d,p,g)}}}),jf=Yc({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,s,r,a=[1,1],i){let o=t;3===t.rank&&(o=Vp(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=Vp(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:o,dy:l},c={strides:s,pad:r,dimRoundingMode:i,dilations:a,filterShape:n};return Vc.runKernel(Vo,u,c)}}),Hf=Yc({depthwiseConv2dNativeBackpropInput_:function(t,e,n,s,r,a=[1,1],i){let o=e,l=!1;3===e.rank&&(l=!0,o=Vp(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:o,filter:n},c={strides:s,pad:r,dimRoundingMode:i,dilations:a,inputShape:t},h=Vc.runKernel(Bo,u,c);return l?Vp(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),qf=Yc({fusedDepthwiseConv2d_:function({x:t,filter:e,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===Uf(Vc.state.gradientDepth,l)){let h=rd(t,e,n,s,r,a,i);return null!=o&&(h=_p(h,o)),Wf(h,l,u,c)}const h=Xc(t,"x","depthwiseConv2d"),p=Xc(e,"filter","depthwiseConv2d");let d=h,f=!1;3===h.rank&&(f=!0,d=Vp(h,[1,h.shape[0],h.shape[1],h.shape[2]])),di(4===d.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),di(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),di(d.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==a&&(a=[1,1]),di(zp(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),null!=i&&di(xi(s),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${s}.`));const m=$p(d.shape,p.shape,n,a,s,i,!0);let g,y;null!=o&&(g=Xc(o,"bias","fused conv2d"),[g]=Rc(g,h),cd(m.outShape,g.shape)),null!=u&&(y=Xc(u,"prelu weights","fused depthwiseConv2d"));const b=(t,e)=>{di(Lp(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[r,o,u,c]=e,h=Vf(t,u,l),p=Hf(o.shape,h,r,n,s,a,i),d=jf(o,h,r.shape,n,s,a,i);return null!=c?[p,d,Bf(g,h)]:[p,d]},x={x:d,filter:p,bias:g,preluActivationWeights:y},v={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};if(null==o){const t=xp(((t,e,n)=>{let s=Vc.runKernel(Hu,x,v);return n([e,t,s]),f&&(s=Vp(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}));return t(d,p)}{const t=xp(((t,e,n,s)=>{let r=Vc.runKernel(Hu,x,v);return s([e,t,r,n]),f&&(r=Vp(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return t(d,p,g)}}}),Xf=Yc({matMul_:function(t,e,n=!1,s=!1){let r=Xc(t,"a","matMul"),a=Xc(e,"b","matMul");[r,a]=Rc(r,a);const i={a:r,b:a},o={transposeA:n,transposeB:s};return Vc.runKernel(bo,i,o)}}),Kf=Yc({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===Uf(Vc.state.gradientDepth,a)){let l=Xf(t,e,n,s);return null!=r&&(l=_p(l,r)),Wf(l,a,i,o)}let l=Xc(t,"a","fused matMul"),u=Xc(e,"b","fused matMul");[l,u]=Rc(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?u.shape[u.rank-1]:u.shape[u.rank-2],p=n?l.shape[l.rank-1]:l.shape[l.rank-2],d=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=yi(f),y=yi(m);di(l.rank>=2&&u.rank>=2&&l.rank===u.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${u.rank}.`)),di(bi(f,m),(()=>`Error in fused matMul: outer dimensions (${f}) and (${m}) of Tensors with shapes ${l.shape} and ${u.shape} must match.`)),di(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${s} must match.`));const b=l.shape.slice(0,-2).concat([p,d]),x=Vp(l,n?[g,c,p]:[g,p,c]),v=Vp(u,s?[y,d,h]:[y,h,d]);let w,k;null!=r&&(w=Xc(r,"bias","fused matMul"),[w]=Rc(w,l),cd(b,w.shape)),null!=i&&(k=Xc(i,"prelu weights","fused matMul"));const _=(t,e)=>{const[i,o,l,u]=e,c=Vf(Vp(t,l.shape),l,a);let h,p;return n||s?!n&&s?(h=Xf(c,o,!1,!1),p=Xf(c,i,!0,!1)):n&&!s?(h=Xf(o,c,!1,!0),p=Xf(i,c,!1,!1)):(h=Xf(o,c,!0,!0),p=Xf(c,i,!0,!0)):(h=Xf(c,o,!1,!0),p=Xf(i,c,!0,!1)),null!=r?[h,p,Bf(u,c)]:[h,p]},I={a:x,b:v,bias:w,preluActivationWeights:k},T={transposeA:n,transposeB:s,activation:a,leakyreluAlpha:o};if(null==r){const t=xp(((t,e,n)=>{const s=Vc.runKernel(Gu,I,T);return n([t,e,s]),{value:Vp(s,b),gradFunc:_}}));return t(x,v)}{const t=xp(((t,e,n,s)=>{const r=Vc.runKernel(Gu,I,T);return s([t,e,r,n]),{value:Vp(r,b),gradFunc:_}}));return t(x,v,w)}}});function Yf(t,e,n){const s=1-t%2,r=new Float32Array(t);for(let a=0;a<t;++a){const i=2*Math.PI*a/(t+s-1);r[a]=e-n*Math.cos(i)}return kf(r,"float32")}Yc({hammingWindow_:function(t){return Yf(t,.54,.46)}});const Zf=Yc({hannWindow_:function(t){return Yf(t,.5,.5)}}),Jf=Yc({frame_:function(t,e,n,s=!1,r=0){let a=0;const i=[];for(;a+e<=t.size;)i.push(cf(t,a,e)),a+=n;if(s)for(;a<t.size;){const s=a+e-t.size,o=Xp([cf(t,a,e-s),md([s],r)]);i.push(o),a+=n}return 0===i.length?_f([],[0,e]):Vp(Xp(i),[i.length,e])}});Yc({stft_:function(t,e,n,s,r=Zf){var a;null==s&&(a=e,s=Math.floor(Math.pow(2,Math.ceil(Math.log(a)/Math.log(2)))));const i=Jf(t,e,n),o=Id(i,r(e)),l=[];for(let t=0;t<i.shape[0];t++)l.push(Df(cf(o,[t,0],[1,e]),s));return Xp(l)}});const Qf=Yc({cropAndResize_:function(t,e,n,s,r="bilinear",a=0){const i=Xc(t,"image","cropAndResize"),o=Xc(e,"boxes","cropAndResize","float32"),l=Xc(n,"boxInd","cropAndResize","int32"),u=o.shape[0];di(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),di(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),di(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),di(2===s.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`)),di(s[0]>=1&&s[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${s}`)),di("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));const c={image:i,boxes:o,boxInd:l},h={method:r,extrapolationValue:a,cropSize:s};return Vc.runKernel(Mo,c,h)}}),tm=Yc({flipLeftRight_:function(t){const e=Xc(t,"image","flipLeftRight","float32");di(4===e.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`));const n={image:e};return Vc.runKernel(nl,n,{})}}),em=Yc({rotateWithOffset_:function(t,e,n=0,s=.5){const r=Xc(t,"image","rotateWithOffset","float32");di(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const a={image:r},i={radians:e,fillValue:n,center:s};return Vc.runKernel(Uu,a,i)}});function nm(t,e,n,s,r,a){null==s&&(s=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=t.shape[0];return n=Math.min(n,i),di(0<=s&&s<=1,(()=>`iouThreshold must be in [0, 1], but was '${s}'`)),di(2===t.rank,(()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`)),di(4===t.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`)),di(1===e.rank,(()=>"scores must be a 1D tensor")),di(e.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${e.shape[0]}`)),di(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}const sm=Yc({nonMaxSuppression_:function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY){const a=Xc(t,"boxes","nonMaxSuppression"),i=Xc(e,"scores","nonMaxSuppression"),o=nm(a,i,n,s,r),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:s=o.iouThreshold,scoreThreshold:r=o.scoreThreshold};return Vc.runKernel(Ul,{boxes:a,scores:i},l)}});function rm(t,e,n){const s=function(t,e,n){return function(t,e,n){let s=0,r=t.length,a=0,i=!1;for(;s<r;){a=s+(r-s>>>1);const o=n(e,t[a]);o>0?s=a+1:(r=a,i=!o)}return i?s:-s-1}(t,e,n||am)}(t,e,n),r=s<0?-(s+1):s;t.splice(r,0,e)}function am(t,e){return t>e?1:t<e?-1:0}function im(t,e,n,s,r){return um(t,e,n,s,r,0)}function om(t,e,n,s,r,a){return um(t,e,n,s,r,0,!1,a,!0)}function lm(t,e,n,s,r,a){return um(t,e,n,s,r,a,!0)}function um(t,e,n,s,r,a,i=!1,o=!1,l=!1){const u=[];for(let t=0;t<e.length;t++)e[t]>r&&u.push({score:e[t],boxIndex:t,suppressBeginIndex:0});u.sort(pm);const c=a>0?-.5/a:0,h=[],p=[];for(;h.length<n&&u.length>0;){const e=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=e;if(n<r)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=cm(t,a,h[n]);if(i>=s){o=!0;break}if(e.score=e.score*hm(s,c,i),e.score<=r)break}e.suppressBeginIndex=h.length,o||(e.score===n?(h.push(a),p.push(e.score)):e.score>r&&rm(u,e,pm))}const d=h.length,f=n-d;o&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=p),l&&(m.validOutputs=d),m}function cm(t,e,n){const s=t.subarray(4*e,4*e+4),r=t.subarray(4*n,4*n+4),a=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),p=Math.max(r[1],r[3]),d=(o-a)*(l-i),f=(h-u)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(a,u),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(l,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function hm(t,e,n){const s=Math.exp(e*n*n);return n<=t?s:0}function pm(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}const dm=Yc({nonMaxSuppressionWithScore_:function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const i=Xc(t,"boxes","nonMaxSuppression"),o=Xc(e,"scores","nonMaxSuppression"),l=nm(i,o,n,s,r,a),u={boxes:i,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:s=l.iouThreshold,scoreThreshold:r=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},h=Vc.runKernel(jl,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),fm=Yc({nonMaxSuppressionPadded_:function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const i=Xc(t,"boxes","nonMaxSuppression"),o=Xc(e,"scores","nonMaxSuppression"),l=nm(i,o,n,s,r,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},h=Vc.runKernel(Gl,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),mm=Yc({resizeBilinear_:function(t,e,n=!1,s=!1){const r=Xc(t,"images","resizeBilinear");di(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),di(2===e.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`)),di(!1===s||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=r,i=!1;3===r.rank&&(i=!0,a=Vp(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=e,o={images:a},l={alignCorners:n,halfPixelCenters:s,size:e},u=Vc.runKernel(iu,o,l);return i?Vp(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),gm=Yc({resizeNearestNeighbor_:function(t,e,n=!1,s=!1){const r=Xc(t,"images","resizeNearestNeighbor");di(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),di(2===e.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`)),di("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),di(!1===s||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=r,i=!1;3===r.rank&&(i=!0,a=Vp(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=e,o={images:a},l={alignCorners:n,halfPixelCenters:s,size:e},u=Vc.runKernel(ru,o,l);return i?Vp(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),ym=Yc({transform_:function(t,e,n="nearest",s="constant",r=0,a){const i=Xc(t,"image","transform","float32"),o=Xc(e,"transforms","transform","float32");di(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),di(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),di(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const l={image:i,transforms:o},u={interpolation:n,fillMode:s,fillValue:r,outputShape:a};return Vc.runKernel(Fu,l,u)}}),bm=Yc({lessEqual_:function(t,e){let n=Xc(t,"a","lessEqual"),s=Xc(e,"b","lessEqual");[n,s]=Rc(n,s),cd(n.shape,s.shape);const r={a:n,b:s};return Vc.runKernel(bl,r)}});function xm(t,e,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const r={start:t,stop:e,step:n,dtype:s};return Vc.runKernel(Ql,{},r)}const vm=Yc({bandPart_:function(t,e,n){di(e%1==0,(()=>`bandPart(): numLower must be an integer, got ${e}.`)),di(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const s=Xc(t,"a","bandPart");di(s.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`));const r=s.shape,[a,i]=s.shape.slice(-2);if(!(e<=a))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);e<0&&(e=a),n<0&&(n=i);const o=Vp(xm(0,a,1,"int32"),[-1,1]),l=xm(0,i,1,"int32"),u=Td(o,l),c=Sd(bm(u,vp(+e,"int32")),xd(u,vp(-n,"int32"))),h=Xd([a,i],s.dtype);return Vp(vf(Tf(Vp(s,[-1,a,i])).map((t=>Cf(c,t,h)))),r)}}),wm=Yc({pow_:function(t,e){let n=Xc(t,"base","pow"),s=Xc(e,"exp","pow");[n,s]=Rc(n,s);const r={a:n,b:s};return Vc.runKernel(Yl,r)}});function km(t,e,n=null){if(0===t.rank)return kp(t);if(1!==t.rank&&null===n)return km(Vp(t,[-1]),e,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===e)return Nd(kp(t),n);if(e===1/0)return _d(kp(t),n);if(e===-1/0)return Od(kp(t),n);if("euclidean"===e||2===e)return bf(Nd(wm(kp(t),vp(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&2===n.length){if(1===e)return _d(Nd(kp(t),n[0]),n[1]-1);if(e===1/0)return _d(Nd(kp(t),n[1]),n[0]);if(e===-1/0)return Od(Nd(kp(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return bf(Nd(Ud(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const _m=Yc({norm_:function(t,e="euclidean",n=null,s=!1){const r=km(t=Xc(t,"x","norm"),e,n);let a=r.shape;if(s){const e=Ii(n,t.shape);a=zd(r.shape,e)}return Vp(r,a)}}),Im=Yc({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,di(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)di(t[e].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`))}else e=!0,t=yf(t,t.shape[0],0).map((t=>xf(t,[0])));di(t.length<=t[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`));const n=[],s=t;for(let e=0;e<t.length;++e)n.push(Vc.tidy((()=>{let t=s[e];if(e>0)for(let s=0;s<e;++s){const e=Id(Nd(Id(n[s],t)),n[s]);t=Td(t,e)}return id(t,_m(t,"euclidean"))})));return e?vf(n,0):n}});function Tm(t,e=!1){return Vc.tidy((()=>{di(2===t.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`));const n=t.shape[0],s=t.shape[1];let r=fd(n),a=Fh(t);const i=_f([[1]],[1,1]);let o=Fh(i);const l=n>=s?s:n;for(let t=0;t<l;++t){const e=a,l=o,u=r;[o,a,r]=Vc.tidy((()=>{const e=cf(a,[t,t],[n-t,1]),l=_m(e),u=cf(a,[t,t],[1,1]),c=Cf(bd(u,0),_f([[-1]]),_f([[1]])),h=Td(u,Id(c,l)),p=id(e,h);o=1===p.shape[0]?Fh(i):Xp([i,cf(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=jd(id(Xf(c,h),l)),f=cf(a,[t,0],[n-t,s]),m=Id(d,o),g=Af(o);if(0===t)a=Td(f,Xf(m,Xf(g,f)));else{const e=Td(f,Xf(m,Xf(g,f)));a=Xp([cf(a,[0,0],[t,s]),e],0)}const y=Af(m),b=cf(r,[0,t],[n,r.shape[1]-t]);if(0===t)r=Td(b,Xf(Xf(b,o),y));else{const e=Td(b,Xf(Xf(b,o),y));r=Xp([cf(r,[0,0],[n,t]),e],1)}return[o,a,r]})),mp([e,l,u])}return!e&&n>s&&(r=cf(r,[0,0],[n,s]),a=cf(a,[0,0],[s,s])),[r,a]}))}const Nm=Yc({qr_:function(t,e=!1){if(di(t.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`)),2===t.rank)return Tm(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),s=Tf(Vp(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),r=[],a=[];return s.forEach((t=>{const[n,s]=Tm(t,e);r.push(n),a.push(s)})),[Vp(vf(r,0),t.shape),Vp(vf(a,0),t.shape)]}}});var Cm;!function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Cm||(Cm={}));const Sm=Yc({computeWeightedLoss_:function(t,e,n=Cm.SUM_BY_NONZERO_WEIGHTS){const s=Xc(t,"losses","computeWeightedLoss");let r=null;null!=e&&(r=Xc(e,"weights","computeWeightedLoss"));const a=null==r?s:Id(s,r);if(n===Cm.NONE)return a;if(n===Cm.SUM)return Nd(a);if(n===Cm.MEAN){if(null==r)return Rd(a);{const t=s.size/r.size,e=id(Nd(a),Nd(r));return t>1?id(e,vp(t)):e}}if(n===Cm.SUM_BY_NONZERO_WEIGHTS){if(null==r)return id(Nd(a),vp(s.size));{const t=Id(r,Kd(s.shape)),e=Dh(Nd(Hd(t,vp(0))),"float32");return id(Nd(a),e)}}throw Error(`Unknown reduction: ${n}`)}});Yc({absoluteDifference_:function(t,e,n,s=Cm.SUM_BY_NONZERO_WEIGHTS){const r=Xc(t,"labels","absoluteDifference"),a=Xc(e,"predictions","absoluteDifference");let i=null;null!=n&&(i=Xc(n,"weights","absoluteDifference")),fi(r.shape,a.shape,"Error in absoluteDifference: ");const o=kp(Td(r,a));return Sm(o,i,s)}}),Yc({cosineDistance_:function(t,e,n,s,r=Cm.SUM_BY_NONZERO_WEIGHTS){const a=Xc(t,"labels","cosineDistance"),i=Xc(e,"predictions","cosineDistance");let o=null;null!=s&&(o=Xc(s,"weights","cosineDistance")),fi(a.shape,i.shape,"Error in cosineDistance: ");const l=vp(1),u=Td(l,Nd(Id(a,i),n,!0));return Sm(u,o,r)}}),Yc({hingeLoss_:function(t,e,n,s=Cm.SUM_BY_NONZERO_WEIGHTS){let r=Xc(t,"labels","hingeLoss");const a=Xc(e,"predictions","hingeLoss");let i=null;null!=n&&(i=Xc(n,"weights","hingeLoss")),fi(r.shape,a.shape,"Error in hingeLoss: ");const o=vp(1);r=Td(Id(vp(2),r),o);const l=rf(Td(o,Id(r,a)));return Sm(l,i,s)}}),Yc({huberLoss_:function(t,e,n,s=1,r=Cm.SUM_BY_NONZERO_WEIGHTS){const a=Xc(t,"labels","huberLoss"),i=Xc(e,"predictions","huberLoss");let o=null;null!=n&&(o=Xc(n,"weights","huberLoss")),fi(a.shape,i.shape,"Error in huberLoss: ");const l=vp(s),u=kp(Td(i,a)),c=Dd(u,l),h=Td(u,c),p=_p(Id(vp(.5),Ud(c)),Id(l,h));return Sm(p,o,r)}}),Yc({logLoss_:function(t,e,n,s=1e-7,r=Cm.SUM_BY_NONZERO_WEIGHTS){const a=Xc(t,"labels","logLoss"),i=Xc(e,"predictions","logLoss");let o=null;null!=n&&(o=Xc(n,"weights","logLoss")),fi(a.shape,i.shape,"Error in logLoss: ");const l=vp(1),u=vp(s),c=jd(Id(a,wd(_p(i,u)))),h=Id(Td(l,a),wd(_p(Td(l,i),u))),p=Td(c,h);return Sm(p,o,r)}});const Am=Yc({squaredDifference_:function(t,e){let n=Xc(t,"a","squaredDifference"),s=Xc(e,"b","squaredDifference");[n,s]=Rc(n,s),cd(n.shape,s.shape);const r={a:n,b:s};return Vc.runKernel(Nu,r,{})}});Yc({meanSquaredError_:function(t,e,n,s=Cm.SUM_BY_NONZERO_WEIGHTS){const r=Xc(t,"labels","meanSquaredError"),a=Xc(e,"predictions","meanSquaredError");let i=null;null!=n&&(i=Xc(n,"weights","meanSquaredError")),fi(r.shape,a.shape,"Error in meanSquaredError: ");const o=Am(r,a);return Sm(o,i,s)}});const $m=Yc({log1p_:function(t){const e={x:Xc(t,"x","log1p")};return Vc.runKernel(wl,e)}});Yc({sigmoidCrossEntropy_:function(t,e,n,s=0,r=Cm.SUM_BY_NONZERO_WEIGHTS){let a=Xc(t,"multiClassLabels","sigmoidCrossEntropy");const i=Xc(e,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Xc(n,"weights","sigmoidCrossEntropy")),fi(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const t=vp(s),e=vp(1),n=vp(.5);a=_p(Id(a,Td(e,t)),Id(n,t))}const l=function(t,e){const n=Xc(t,"labels","sigmoidCrossEntropyWithLogits"),s=Xc(e,"logits","sigmoidCrossEntropyWithLogits");fi(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=rf(s),a=Id(s,n),i=$m(kd(jd(kp(s))));return _p(Td(r,a),i)}(a,i);return Sm(l,o,r)}});const Em=Yc({logSumExp_:function(t,e=null,n=!1){const s=Xc(t,"x","logSumExp"),r=Ii(e,s.shape),a=_d(s,r,!0),i=Td(s,a),o=kd(i),l=Nd(o,r),u=wd(l),c=_p(Vp(a,u.shape),u);if(n){const t=zd(c.shape,r);return Vp(c,t)}return c}});Yc({softmaxCrossEntropy_:function(t,e,n,s=0,r=Cm.SUM_BY_NONZERO_WEIGHTS){let a=Xc(t,"onehotLabels","softmaxCrossEntropy");const i=Xc(e,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Xc(n,"weights","softmaxCrossEntropy")),fi(a.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const t=vp(s),e=vp(1),n=vp(a.shape[1]);a=_p(Id(a,Td(e,t)),id(t,n))}const l=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);const s=xp(((t,e,s)=>{const r=Em(e,[n],!0),a=Td(Dh(e,"float32"),r);s([t,a]);const i=jd(Id(a,t));return{value:Nd(i,[n]),gradFunc:(t,e)=>{const[s,r]=e,a=zd(t.shape,[n]);return[Id(Vp(t,a),Td(Dh(s,"float32"),kd(r))),Id(Vp(t,a),Td(kd(r),Dh(s,"float32")))]}}}));return s(t,e)}(a,i);return Sm(l,o,r)}});const Rm={flipLeftRight:tm,resizeNearestNeighbor:gm,resizeBilinear:mm,rotateWithOffset:em,cropAndResize:Qf,nonMaxSuppression:sm,nonMaxSuppressionAsync:async function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY){const a=Xc(t,"boxes","nonMaxSuppressionAsync"),i=Xc(e,"scores","nonMaxSuppressionAsync"),o=nm(a,i,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const l=await Promise.all([a.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:h}=im(u,c,n,s,r);return a!==t&&a.dispose(),i!==e&&i.dispose(),kf(h,"int32")},nonMaxSuppressionWithScore:dm,nonMaxSuppressionWithScoreAsync:async function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const i=Xc(t,"boxes","nonMaxSuppressionAsync"),o=Xc(e,"scores","nonMaxSuppressionAsync"),l=nm(i,o,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:p,selectedScores:d}=lm(c,h,n,s,r,a);return i!==t&&i.dispose(),o!==e&&o.dispose(),{selectedIndices:kf(p,"int32"),selectedScores:kf(d)}},nonMaxSuppressionPadded:fm,nonMaxSuppressionPaddedAsync:async function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const i=Xc(t,"boxes","nonMaxSuppressionAsync"),o=Xc(e,"scores","nonMaxSuppressionAsync"),l=nm(i,o,n,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[p,d]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=om(p,d,u,c,h,a);return i!==t&&i.dispose(),o!==e&&o.dispose(),{selectedIndices:kf(f,"int32"),validOutputs:vp(m,"int32")}},transform:ym},Om={bandPart:vm,gramSchmidt:Im,qr:Nm};class Dm extends wp{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Vc.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=Vc.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${e}/accum_grad`,variable:fp((()=>Sf(s).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${e}/accum_var`,variable:fp((()=>Sf(s).variable(!1)))});const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;fp((()=>{const t=_p(Id(a,this.rho),Id(Ud(r),1-this.rho)),e=Id(id(bf(_p(i,this.epsilon)),bf(_p(a,this.epsilon))),r),n=_p(Id(i,this.rho),Id(Ud(e),1-this.rho));a.assign(t),i.assign(n);const o=_p(Id(e,-this.learningRate),s);s.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(mp(this.accumulatedGrads.map((t=>t.variable))),mp(this.accumulatedUpdates.map((t=>t.variable))))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedUpdates=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}Dm.className="Adadelta",hp(Dm);class Fm extends wp{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=Vc.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:`${e}/accumulator`,variable:fp((()=>md(s.shape,this.initialAccumulatorValue).variable(t)))}}const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const a=this.accumulatedGrads[n].variable;fp((()=>{const t=_p(a,Ud(r));a.assign(t);const e=_p(Id(id(r,bf(_p(t,Vc.backend.epsilon()))),-this.learningRate),s);s.assign(e)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&mp(this.accumulatedGrads.map((t=>t.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulatedGrads=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}Fm.className="Adagrad",hp(Fm);class Mm extends wp{constructor(t,e,n,s=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],fp((()=>{this.accBeta1=vp(e).variable(),this.accBeta2=vp(n).variable()})),null==s&&(this.epsilon=Vc.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);fp((()=>{const n=Td(1,this.accBeta1),s=Td(1,this.accBeta2);e.forEach(((e,r)=>{const a=Vc.registeredVariables[e];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${e}/m`,variable:fp((()=>Sf(a).variable(!1)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${e}/v`,variable:fp((()=>Sf(a).variable(!1)))});const i=Array.isArray(t)?t[r].tensor:t[e];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,u=_p(Id(o,this.beta1),Id(i,1-this.beta1)),c=_p(Id(l,this.beta2),Id(Ud(i),1-this.beta2)),h=id(u,n),p=id(c,s);o.assign(u),l.assign(c);const d=_p(Id(id(h,_p(bf(p),this.epsilon)),-this.learningRate),a);a.assign(d)})),this.accBeta1.assign(Id(this.accBeta1,this.beta1)),this.accBeta2.assign(Id(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&mp(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedSecondMoment&&mp(this.accumulatedSecondMoment.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),fp((()=>{this.accBeta1.assign(wm(this.beta1,this.iterations_+1)),this.accBeta2.assign(wm(this.beta2,this.iterations_+1))}));const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedSecondMoment=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}Mm.className="Adam",hp(Mm);class Lm extends wp{constructor(t,e,n,s=null,r=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],fp((()=>{this.iteration=vp(0).variable(),this.accBeta1=vp(e).variable()})),null==s&&(this.epsilon=Vc.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);fp((()=>{const n=Td(1,this.accBeta1),s=id(-this.learningRate,_p(Id(this.iteration,this.decay),1));e.forEach(((e,r)=>{const a=Vc.registeredVariables[e];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${e}/m`,variable:Sf(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${e}/v`,variable:Sf(a).variable(!1)});const i=Array.isArray(t)?t[r].tensor:t[e];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,u=_p(Id(o,this.beta1),Id(i,1-this.beta1)),c=Id(l,this.beta2),h=kp(i),p=Ed(c,h);o.assign(u),l.assign(p);const d=_p(Id(id(s,n),id(u,_p(p,this.epsilon))),a);a.assign(d)})),this.iteration.assign(_p(this.iteration,1)),this.accBeta1.assign(Id(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&mp(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedWeightedInfNorm&&mp(this.accumulatedWeightedInfNorm.map((t=>t.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}Lm.className="Adamax",hp(Lm);class zm extends wp{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const r=Vc.registeredVariables[e];fp((()=>{const t=_p(Id(this.c,s),r);r.assign(t)}))})),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=gp(vp(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}zm.className="SGD",hp(zm);class Pm extends zm{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=vp(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=Vc.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:`${e}/momentum`,variable:fp((()=>Sf(s).variable(t)))}}const r=this.accumulations[n].variable,a=Array.isArray(t)?t[n].tensor:t[e];null!=a&&fp((()=>{let t;const e=_p(Id(this.m,r),a);t=this.useNesterov?_p(Id(this.c,_p(a,Id(e,this.m))),s):_p(Id(this.c,e),s),r.assign(e),s.assign(t)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&mp(this.accumulations.map((t=>t.variable)))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulations=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}Pm.className="Momentum",hp(Pm);class Vm extends wp{constructor(t,e=.9,n=0,s=null,r=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==s&&(this.epsilon=Vc.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=Vc.registeredVariables[e],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${e}/rms`,variable:fp((()=>Sf(s).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${e}/momentum`,variable:fp((()=>Sf(s).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${e}/mg`,variable:fp((()=>Sf(s).variable(r)))});const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;fp((()=>{const t=_p(Id(i,this.decay),Id(Ud(a),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,r=_p(Id(e,this.decay),Id(a,1-this.decay)),l=id(Id(a,this.learningRate),bf(Td(t,_p(Ud(r),this.epsilon)))),u=_p(Id(o,this.momentum),l);i.assign(t),e.assign(r),o.assign(u);const c=Td(s,u);s.assign(c)}else{const t=_p(Id(i,this.decay),Id(Ud(a),1-this.decay)),e=_p(Id(o,this.momentum),id(Id(a,this.learningRate),bf(_p(t,this.epsilon))));i.assign(t),o.assign(e);const n=Td(s,e);s.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&mp(this.accumulatedMeanSquares.map((t=>t.variable))),null!=this.accumulatedMeanGrads&&this.centered&&mp(this.accumulatedMeanGrads.map((t=>t.variable))),null!=this.accumulatedMoments&&mp(this.accumulatedMoments.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedMoments=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}Vm.className="RMSProp",hp(Vm);class Bm{static sgd(t){return new zm(t)}static momentum(t,e,n=!1){return new Pm(t,e,n)}static rmsprop(t,e=.9,n=0,s=null,r=!1){return new Vm(t,e,n,s,r)}static adam(t=.001,e=.9,n=.999,s=null){return new Mm(t,e,n,s)}static adadelta(t=.001,e=.95,n=null){return new Dm(t,e,n)}static adamax(t=.002,e=.9,n=.999,s=null,r=0){return new Lm(t,e,n,s,r)}static adagrad(t,e=.1){return new Fm(t,e)}}const Wm={sgd:Bm.sgd,momentum:Bm.momentum,adadelta:Bm.adadelta,adagrad:Bm.adagrad,rmsprop:Bm.rmsprop,adamax:Bm.adamax,adam:Bm.adam},Um="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:t=>t();function Gm(){return new Promise((t=>Um((()=>t()))))}function jm(t,e){const n=t[0].length;t.forEach(((t,e)=>{di(t.length===n,(()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`))})),di(e>=0&&e<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const s=t[0];t.forEach(((t,r)=>{for(let a=0;a<n;a++)di(a===e||t[a]===s[a],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${t}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`))}))}function Hm(t,e){const n=t[0].slice();for(let s=1;s<t.length;s++)n[e]+=t[s][e];return n}const qm=30;function Xm(t){return t<=qm?t:Fi(t,Math.floor(Math.sqrt(t)))}function Km(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}function Ym(t,e,n,s=!0){let r=[];if(s)r=r.concat(e.slice(0)),r.push(t[0]/n),r=r.concat(t.slice(1));else{r=r.concat(t[0]);const n=e.length;for(let s=0;s<n;++s)r=r.concat([t[s+1]/e[s],e[s]]);r=r.concat(t.slice(n+1))}return r}function Zm(t,e,n=!0){const s=[];if(n){s.push(e);for(let n=e+1;n<t;++n)n<=2*e?(s.push(n),s.push(n-(e+1))):s.push(n)}else{const n=[],r=[];for(let s=1;s<t;++s)s>=2*e+1||s%2==1?r.push(s):n.push(s);s.push(...n),s.push(0),s.push(...r)}return s}function Jm(t,e,n,s=!0){const r=[];s?r.push(t[0]/n):r.push(t[0]*n);for(let n=1;n<t.length;++n)n<=e.length?s?r.push(e[n-1]*t[n]):r.push(t[n]/e[n-1]):r.push(t[n]);return r}function Qm(t,e){const n=[0];for(let s=0;s<e;++s)n.push(t[s][0]);return n}function tg(t,e,n){const s=t.slice(0,1);for(let r=0;r<n;++r)s.push(t[r+1]-e[r][0]-e[r][1]);return s}function eg(t,e){const n=t.shape.length,s=e.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${n}`);if(0===yi(t.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const r=e.shape,a=r[r.length-1];let i=1;for(let t=0;t<r.length-1;++t)i*=r[t];const o=t.shape,l=r.slice();l.pop();let u=1;for(let t=a;t<n;++t)u*=o[t],l.push(o[t]);const c=[...Mi(t.shape).map((t=>t/u)),1].slice(0,a);return[l,i,u,c]}function ng(t,e,n){const s=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(t.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+t.length-s)throw new Error(a+" update.rank != "+(r+t.length-s));for(let t=0;t<r;++t)if(n.shape[t]!==e.shape[t])throw new Error(a+` updates.shape[${t}] (${n.shape[t]}) != indices.shape[${t}] (${e.shape[t]}).`);for(let e=0;e<n.rank-r;++e)if(n.shape[e+r]!==t[e+s])throw new Error(a+` updates.shape[${e+r}] (${n.shape[e+r]}) != shape[${e+r}] (${t[e+r]})`)}function sg(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===e.size)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(0===t.size)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}ng(n,e,t)}function rg(t,e,n){const s=e.shape.length,r=s>1?e.shape[s-1]:1,a=n.length;let i=1;for(let t=r;t<a;++t)i*=n[t];const o=r<1?1:r;return{sliceRank:r,numUpdates:yi(e.shape)/o,sliceSize:i,strides:[...Mi(n.slice(0,r)),1],outputSize:yi(n)}}const ag=1.7580993408473768,ig=1.0507009873554805,og=.3275911,lg=.254829592,ug=-.284496736,cg=1.421413741,hg=-1.453152027,pg=1.061405429;function dg(...t){Xi().getBool("IS_TEST")||console.warn(...t)}function fg(...t){Xi().getBool("IS_TEST")||console.log(...t)}function mg(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let s=0;s<n.length;s+=2)n[s]=t[s/2],n[s+1]=e[s/2];return n}function gg(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let s=0;s<t.length;s+=2)e[s/2]=t[s],n[s/2]=t[s+1];return{real:e,imag:n}}function yg(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),s=new Float32Array(e);for(let e=0;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],s[Math.floor(e/4)]=t[e+1];return{real:n,imag:s}}function bg(t){const e=Math.floor(t.length/4),n=new Float32Array(e),s=new Float32Array(e);for(let e=2;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],s[Math.floor(e/4)]=t[e+1];return{real:n,imag:s}}function xg(t,e){return{real:t[2*e],imag:t[2*e+1]}}function vg(t,e,n,s){t[2*s]=e,t[2*s+1]=n}function wg(t,e){const n=new Float32Array(t/2),s=new Float32Array(t/2);for(let r=0;r<Math.ceil(t/2);r++){const a=(e?2:-2)*Math.PI*(r/t);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function kg(t,e,n){const s=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(s),imag:Math.sin(s)}}function _g(t,e,n=0){let s=[];if("number"==typeof e)di(t.shape[n]%e==0,(()=>"Number of splits must evenly divide the axis.")),s=new Array(e).fill(t.shape[n]/e);else{const r=e.reduce(((t,e)=>(-1===e&&(t+=1),t)),0);di(r<=1,(()=>"There should be only one negative value in split array."));const a=e.indexOf(-1);if(-1!==a){const s=e.reduce(((t,e)=>e>0?t+e:t));e[a]=t.shape[n]-s}di(t.shape[n]===e.reduce(((t,e)=>t+e)),(()=>"The sum of sizes must match the size of the axis dimension.")),s=e}return s}function Ig(t,e){let n,s=!1;for(t<=qm?(n=t,s=!0):n=Fi(t,Math.floor(Math.sqrt(t)));!s;)n>e||n===t?s=!0:n=Fi(t,n+1);return n}function Tg(t,e,n){const s=[],r=t.length;for(let a=0;a<r;a++)a!==e?s.push(t[a]):s.push(n);return s}function Ng(t,e,n,s){const r=e.shape.length,a=t.shape.length;if(0!==s&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (\n    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let n=0;n<s;++n)if(t.shape[n]!==e.shape[n])throw new Error(`x.shape[${n}]: ${t.shape[n]} should be equal to indices.shape[${n}]: ${e.shape[n]}.`);const i=t.shape[n],o=[];let l=1,u=1,c=1;for(let e=0;e<s;++e)o.push(t.shape[e]),l*=t.shape[e];for(let e=s;e<n;e++)o.push(t.shape[e]),u*=t.shape[e];for(let t=s;t<r;t++)o.push(e.shape[t]);for(let e=n+1;e<a;e++)o.push(t.shape[e]),c*=t.shape[e];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function Cg(t){try{return t.map((t=>ac(t)))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function Sg(t){return t.map((t=>rc(t)))}function Ag(t,e){const n=[];for(let t=0;t<e.length;t++)e[t]&&n.push(t);const s=Oh(t,"int32"),r=Oh([n.length,t.length],"int32");for(let e=0;e<n.length;e++){const a=s.indexToLoc(n[e]),i=e*t.length;r.values.set(a,i)}return r.toTensor()}const $g={kernelName:Qi,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Id(t,Pf(Dh(n,"float32"),-1))}}},Eg={kernelName:to,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Ud(Dh(n,"float32")),s=bf(Td(vp(1),e));return jd(id(t,s))}}}},Rg={kernelName:eo,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=bf(Td(Ud(Dh(n,"float32")),1));return id(t,e)}}}},Og={kernelName:no,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=cd(n.shape,s.shape);return{a:()=>{let e=t;const s=ud(n.shape,r);return s.length>0&&(e=Nd(e,s)),Vp(e,n.shape)},b:()=>{let e=t;const n=ud(s.shape,r);return n.length>0&&(e=Nd(e,n)),Vp(e,s.shape)}}}},Dg={kernelName:so,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach(((e,s)=>{n[s]=()=>t.clone()})),n}},Fg={kernelName:io,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Sf(n)}}},Mg={kernelName:oo,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Sf(n)}}},Lg={kernelName:lo,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>id(t,bf(Td(vp(1),Ud(Dh(n,"float32")))))}}},zg={kernelName:uo,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=bf(_p(vp(1),Ud(Dh(n,"float32"))));return id(t,e)}}}},Pg={kernelName:po,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=cd(n.shape,s.shape);return{a:()=>{const e=_p(Ud(n),Ud(s));let a=Id(t,id(s,e));const i=ud(n.shape,r);return i.length>0&&(a=Nd(a,i)),Vp(a,n.shape)},b:()=>{const e=_p(Ud(n),Ud(s));let a=jd(Id(t,id(n,e)));const i=ud(s.shape,r);return i.length>0&&(a=Nd(a,i)),Vp(a,s.shape)}}}},Vg={kernelName:co,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>id(t,_p(Ud(Dh(n,"float32")),1))}}},Bg={kernelName:ho,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>id(t,Td(vp(1),Ud(Dh(n,"float32"))))}}},Wg=Yc({avgPool3dGrad_:function(t,e,n,s,r,a){const i=Xc(t,"dy","avgPool3dGrad"),o=Xc(e,"input","avgPool3dGrad");let l=i,u=o,c=!1;4===o.rank&&(c=!0,l=Vp(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=Vp(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),di(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),di(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),null!=a&&di(xi(r),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const h={dy:l,input:u},p={filterSize:n,strides:s,pad:r,dimRoundingMode:a},d=Vc.runKernel(yo,h,p);return c?Vp(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Ug={kernelName:go,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{filterSize:r,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>Wg(t,s,r,a,i,o)}}},Gg=Yc({avgPoolGrad_:function(t,e,n,s,r){const a=Xc(t,"dy","avgPoolGrad"),i=Xc(e,"input","avgPoolGrad");di(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,l=a,u=!1;3===i.rank&&(u=!0,o=Vp(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=Vp(a,[1,a.shape[0],a.shape[1],a.shape[2]])),di(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),di(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:s,pad:r},p=Vc.runKernel(mo,c,h);return u?Vp(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),jg={kernelName:fo,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{filterSize:r,strides:a,pad:i}=n;return{x:()=>Gg(t,s,r,a,i)}}},Hg={kernelName:bo,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[s,r]=e,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>Xf(t,r,!1,!1),b:()=>Xf(t,s,!0,!1)}:a&&!i?{a:()=>Xf(r,t,!1,!0),b:()=>Xf(s,t,!1,!1)}:{a:()=>Xf(r,t,!0,!0),b:()=>Xf(t,s,!0,!0)}:{a:()=>Xf(t,r,!1,!0),b:()=>Xf(s,t,!0,!1)}}},qg=Yc({spaceToBatchND_:function(t,e,n){const s=Xc(t,"x","spaceToBatchND");di(s.rank>=1+e.length,(()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`)),di(n.length===e.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`)),di(s.shape.reduce(((t,s,r)=>r>0&&r<=e.length?t&&(s+n[r-1][0]+n[r-1][1])%e[r-1]==0:t),!0),(()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`));const r={x:s},a={blockShape:e,paddings:n};return Vc.runKernel(_u,r,a)}}),Xg={kernelName:xo,gradFunc:(t,e,n)=>{const{blockShape:s,crops:r}=n;return{x:()=>qg(t,s,r)}}},Kg={kernelName:"BroadcastTo",gradFunc:(t,e,n)=>{const s=n,r=s.inputShape,a=s.shape,i=Array.from(a);for(let t=r.length-1;t>=0;t--)if(r[t]===a[t])i[t]=1;else if(1!==r[t])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);const o=[];for(let t=0;t<i.length;t++)i[t]>1&&o.push(t);return{x:()=>Nd(t,o,!0)}}},Yg={kernelName:wo,gradFunc:t=>({x:()=>t.clone()})},Zg={kernelName:ko,gradFunc:t=>({x:()=>Sf(t)})},Jg={kernelName:_o,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>Cf(Sd(xd(s,r),bm(s,a)),t,Sf(t))}}},Qg={kernelName:To,inputsToSave:["x"],gradFunc:$g.gradFunc},ty={kernelName:No,saveAllInputs:!0,gradFunc:(t,e,n)=>{const s=e.map((t=>t.shape)),{axis:r}=n,a=Ii(r,e[0].shape)[0],i=s.map((t=>t[a]));return yf(t,i,a).map((t=>()=>t))}},ey={kernelName:Co,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return di(Lp(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>ed(s.shape,t,r,i,o,l),filter:()=>Lf(s,t,r.shape,i,o,l)}}},ny={kernelName:Ao,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Qp(t,r,a,i,o,1,l),filter:()=>Lf(t,s,r.shape,a,i,o,l)}}},sy=Yc({conv3DBackpropFilter_:function(t,e,n,s,r){let a=t;4===t.rank&&(a=Vp(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let i=e;4===i.rank&&(i=Vp(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),di(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),di(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),di(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),di(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),di(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},l={strides:s,pad:r,filterShape:n};return Vc.runKernel(Eo,o,l)}}),ry=Yc({conv3DBackpropInput_:function(t,e,n,s,r){di(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let a=t,i=e,o=!1;4===e.rank&&(o=!0,i=Vp(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),a=[1,t[0],t[1],t[2],t[3]]);const l=a[4],u=i.shape[4];di(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),di(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),di(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),di(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),di(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:r,strides:s,inputShape:a},p=Vc.runKernel(Ro,c,h);return o?Vp(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),ay={kernelName:$o,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:s,strides:r,pad:a}=n;di(Lp(s),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const[i,o]=e;return{x:()=>ry(i.shape,t,o,r,a),filter:()=>sy(i,t,o.shape,r,a)}}},iy=Yc({sin_:function(t){const e={x:Xc(t,"x","sin")};return Vc.runKernel(gu,e)}}),oy={kernelName:Oo,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Id(jd(iy(Dh(n,"float32"))),t)}}},ly=Yc({sinh_:function(t){const e={x:Xc(t,"x","sinh")};return Vc.runKernel(yu,e)}}),uy={kernelName:Do,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Id(ly(Dh(n,"float32")),t)}}},cy=Yc({cumsum_:function(t,e=0,n=!1,s=!1){const r={x:Xc(t,"x","cumsum")},a={axis:e,exclusive:n,reverse:s};return Vc.runKernel(Fo,r,a)}}),hy={kernelName:Fo,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:r,exclusive:a,reverse:i}=n;return{x:()=>{const e=Vd([r],s.rank);let n=cy(t,r,a,!i);return null!=e&&(n=Af(n,e)),n}}}},py={kernelName:Po,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:s,strides:r,pad:a,dimRoundingMode:i}=n,o=null==s?[1,1]:s;di(Lp(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=e;return di(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),di(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),di(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),di(zp(r,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`)),null!=i&&di(xi(a),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`)),{x:()=>Hf(l.shape,t,u,r,a,s,i),filter:()=>jf(l,t,u.shape,r,a,s,i)}}},dy={kernelName:Uo,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,a={x:s,filter:r,dy:t},i={x:s,filter:r,dy:t};return{x:()=>Vc.runKernel(Go,a,n),filter:()=>Vc.runKernel(jo,i,n)}}},fy={kernelName:qo,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,s={dy:t,y:n};return{x:()=>Vc.runKernel(Xo,s)}}},my={kernelName:Ko,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,s=Id(kd(jd(Ud(n))),2/Math.sqrt(Math.PI));return{x:()=>Id(t,s)}}},gy={kernelName:Zo,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Id(t,n)}}},yy={kernelName:Jo,inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>Vp(t,n.shape)}}},by={kernelName:Qo,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Id(t,kd(n))}}},xy={kernelName:sl,gradFunc:t=>({x:()=>Sf(t)})},vy={kernelName:rl,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=cd(n.shape,s.shape);return{a:()=>{const e=id(t,Dh(s,"float32")),a=ud(n.shape,r);return a.length>0?Vp(Nd(e,a),n.shape):e},b:()=>{let e=Id(t,Dh(n,"float32"));const a=ud(s.shape,r);a.length>0&&(e=Vp(Nd(e,a),s.shape));const i=Ud(s);return jd(id(e,Dh(i,"float32")))}}}},wy=Yc({rsqrt_:function(t){const e={x:Xc(t,"x","rsqrt")};return Vc.runKernel(hu,e)}}),ky={kernelName:al,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:s}=n,[r,a,i,o]=e,l=null==o?vp(1):o,u=ud(a.shape,r.shape),c=[];if(1===a.rank){for(let t=0;t<r.shape.length-1;++t)c.push(r.shape[t]);c.push(1)}const h=Td(r,a),p=Id(t,l),d=wy(_p(i,vp(s))),f=Id(Id(Id(d,d),d),vp(-.5));return{x:()=>1===a.rank?Vp(Id(Id(t,dd(Vp(d,[1,1,1,a.shape[0]]),c)),l),r.shape):Vp(Id(Id(t,d),l),r.shape),mean:()=>{let t=Id(Id(d,vp(-1)),p);return 1===a.rank&&(t=Nd(t,u)),Vp(t,a.shape)},variance:()=>{let t=Id(Id(f,h),p);return 1===a.rank&&(t=Nd(t,u)),Vp(t,a.shape)},scale:()=>{const e=Id(h,d);let n=Id(t,e);return 1===a.rank&&(n=Nd(n,u)),Vp(n,a.shape)},offset:()=>{let e=t;return 1===a.rank&&(e=Nd(e,u)),Vp(e,a.shape)}}}},_y=Yc({unsortedSegmentSum_:function(t,e,n){const s=Xc(t,"x","unsortedSegmentSum"),r=Xc(e,"segmentIds","unsortedSegmentSum","int32");di(xi(n),(()=>"numSegments must be of dtype int"));const a={x:s,segmentIds:r},i={numSegments:n};return Vc.runKernel(Pu,a,i)}}),Iy={kernelName:il,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[s,r]=e,{axis:a}=n,i=Ii(a,s.shape)[0];return{x:()=>{const e=s.shape,n=r.size,o=e.slice(0,i),l=o.length,u=e.slice(a,e.length).slice(1),c=u.length,h=Ty(0,l),p=Ty(l+1,l+1+c),d=Ny([o,[n],u]),f=Vp(t,d),m=Vp(r,[n]),g=Ny([[l],h,p]),y=Af(f,g);let b=_y(y,m,s.shape[i]);const x=Bd(g);return b=Af(b,x),b},indices:()=>r}}};function Ty(t,e){const n=[];for(let s=t;s<e;++s)n.push(s);return n}function Ny(t){const e=[];for(let n=0;n<t.length;++n)for(let s=0;s<t[n].length;++s)e.push(t[n][s]);return e}const Cy={kernelName:ul,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>Sf(n),b:()=>Sf(s)}}},Sy={kernelName:cl,gradFunc:t=>({x:()=>Dh(t,"float32")})},Ay={kernelName:dl,gradFunc:t=>({x:()=>Sf(t)})},$y={kernelName:fl,gradFunc:t=>({x:()=>Sf(t)})},Ey={kernelName:ml,gradFunc:t=>({x:()=>Sf(t)})},Ry={kernelName:gl,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{alpha:r}=n,a=bd(s,0);return{x:()=>Cf(a,t,Id(t,r))}}},Oy={kernelName:wl,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>id(t,_p(n,1))}}},Dy={kernelName:vl,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>id(t,Dh(n,"float32"))}}},Fy={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s]=e,{axis:r}=n;return{logits:()=>{const e=kd(s);return Td(t,Id(Nd(t,r,!0),e))}}}},My=Yc({localResponseNormalizationBackprop_:function(t,e,n,s=5,r=1,a=1,i=.5){const o={x:t,y:e,dy:n},l={depthRadius:s,bias:r,alpha:a,beta:i};return Vc.runKernel(Nl,o,l)}}),Ly={kernelName:Tl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>My(s,r,t,a,i,o,l)}}};function zy(t,e,n,s){return e.rank<n.rank&&(e=Vp(e,zd(e.shape,s))),t.rank<n.rank&&(t=Vp(t,zd(t.shape,s))),{x:()=>Id(t,Dh(hd(n,e),t.dtype))}}const Py={kernelName:Cl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const s=n,{reductionIndices:r}=s,a=e[0],i=zy(t,e[1],a,Ii(r,a.shape));return{x:()=>i.x()}}},Vy=Yc({less_:function(t,e){let n=Xc(t,"a","less"),s=Xc(e,"b","less");[n,s]=Rc(n,s),cd(n.shape,s.shape);const r={a:n,b:s};return Vc.runKernel(yl,r)}}),By={kernelName:Sl,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>Id(t,Dh(xd(n,s),"float32")),b:()=>Id(t,Dh(Vy(n,s),"float32"))}}},Wy=Yc({maxPool3dGrad_:function(t,e,n,s,r,a,i){const o=Xc(t,"dy","maxPool3dGrad"),l=Xc(e,"input","maxPool3dGrad"),u=Xc(n,"output","maxPool3dGrad");let c=o,h=l,p=u,d=!1;4===l.rank&&(d=!0,c=Vp(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Vp(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=Vp(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),di(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),di(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),di(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),null!=i&&di(xi(a),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const f={dy:c,input:h,output:p},m={filterSize:s,strides:r,pad:a,dimRoundingMode:i},g=Vc.runKernel(Rl,f,m);return d?Vp(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Uy={kernelName:El,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>Wy(t,s,r,a,i,o,l)}}},Gy=Yc({maxPoolGrad_:function(t,e,n,s,r,a,i){const o=Xc(t,"dy","maxPoolGrad"),l=Xc(e,"input","maxPoolGrad"),u=Xc(n,"output","maxPoolGrad");di(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),di(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),di(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),null!=i&&di(xi(a),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const c={dy:o,input:l,output:u},h={filterSize:s,strides:r,pad:a,dimRoundingMode:i};return Vc.runKernel($l,c,h)}}),jy={kernelName:Al,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{filterSize:a,strides:i,pad:o}=n;return{x:()=>Gy(t,s,r,a,i,o)}}},Hy={kernelName:Dl,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:r}=n,a=Ii(r,s.shape),i=yi(Ld(s.shape,a)[1]);return{x:()=>{const e=s.shape.slice();a.forEach((t=>{e[t]=1}));const n=Vp(t,e);return id(Id(n,Kd(s.shape,"float32")),i)}}}},qy={kernelName:Fl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const s=n,{axis:r}=s,[a,i]=e,o=zy(t,i,a,Ii(r,a.shape));return{x:()=>o.x()}}},Xy={kernelName:Ml,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>Id(t,Dh(bm(n,s),"float32")),b:()=>Id(t,Dh(bd(n,s),"float32"))}}},Ky={kernelName:Ll,inputsToSave:["x"],gradFunc:(t,e,n)=>{const s=e[0],{paddings:r}=n,a=r.map((t=>t[0]));return{x:()=>cf(t,a,s.shape)}}},Yy={kernelName:zl,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=cd(n.shape,s.shape);return{a:()=>{const e=ud(n.shape,r);return e.length>0?Vp(Nd(t,e),n.shape):t},b:()=>{const e=Id(t,jd(gd(id(n,s)))),a=ud(s.shape,r);return a.length>0?Vp(Nd(e,a),s.shape):e}}}},Zy={kernelName:Vl,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=cd(n.shape,s.shape);return{a:()=>{const e=Id(t,Dh(s,"float32")),a=ud(n.shape,r);return a.length>0?Vp(Nd(e,a),n.shape):e},b:()=>{const e=Id(t,Dh(n,"float32")),a=ud(s.shape,r);return a.length>0?Vp(Nd(e,a),s.shape):e}}}},Jy={kernelName:Bl,gradFunc:t=>({x:()=>jd(t)})},Qy={kernelName:ql,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>Xd(n.shape,"float32")}}},tb={kernelName:Hl,gradFunc:t=>({x:()=>Sf(t)})},eb={kernelName:Xl,saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:s}=n;return Tf(t,s).map((t=>()=>t))}},nb={kernelName:Kl,inputsToSave:["x"],gradFunc:(t,e,n)=>{const s=e[0],{paddings:r}=n,a=r.map((t=>t[0]));return{x:()=>cf(t,a,s.shape)}}},sb={kernelName:Yl,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,s,r]=e,a=n,i=s,o=cd(a.shape,i.shape);return{a:()=>{const e=Dh(i,"float32");let n=Id(t,Id(e,wm(a,Td(e,vp(1)))));const s=ud(a.shape,o);return s.length>0&&(n=Nd(n,s)),Vp(n,a.shape)},b:()=>{const e=bd(a,0),n=Cf(e,wd(a),Sf(a));let s=Id(t,Id(r,n));const l=ud(i.shape,o);return l.length>0&&(s=Nd(s,l)),Vp(s,i.shape)}}}},rb={kernelName:Zl,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,s]=e,r=bd(n,0);return{x:()=>Cf(r,t,Id(t,s)),alpha:()=>{let e=Cf(r,Sf(t),Id(t,n));const a=ud(s.shape,t.shape);return a.length>0&&(e=Nd(e,a)),Vp(e,s.shape)}}}},ab={kernelName:Ho,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=cd(n.shape,s.shape);return{a:()=>{const e=id(t,Dh(s,"float32")),a=ud(n.shape,r);return a.length>0?Vp(Nd(e,a),n.shape):e},b:()=>{let e=Id(t,Dh(n,"float32"));const a=ud(s.shape,r);a.length>0&&(e=Vp(Nd(e,a),s.shape));const i=Ud(s);return jd(id(e,Dh(i,"float32")))}}}},ib={kernelName:eu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>id(t,jd(Ud(n)))}}},ob={kernelName:lu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,s=Id(bm(n,6),Pf(n));return{x:()=>Id(t,Dh(s,"float32"))}}},lb={kernelName:nu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Id(t,Dh(Pf(n),"float32"))}}},ub={kernelName:su,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Vp(t,n.shape)}}},cb={kernelName:iu,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[s]=e,r={dy:t,images:s};return{images:()=>Vc.runKernel(ou,r,n)}}},hb={kernelName:ru,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[s]=e,r={dy:t,images:s};return{images:()=>Vc.runKernel(au,r,n)}}},pb={kernelName:uu,gradFunc:(t,e,n)=>{const{dims:s}=n,r=Ii(s,t.shape);return{x:()=>af(t,r)}}},db={kernelName:cu,gradFunc:t=>({x:()=>Sf(t)})},fb={kernelName:hu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>jd(id(t,Id(wm(n,1.5),2)))}}},mb=Yc({logicalNot_:function(t){const e={x:Xc(t,"x","logicalNot","bool")};return Vc.runKernel(_l,e)}}),gb={kernelName:du,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>Dh(Sf(n),"float32"),t:()=>Id(t,Dh(n,t.dtype)),e:()=>Id(t,Dh(mb(n),t.dtype))}}},yb={kernelName:fu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=bd(n,vp(0)),s=vp(ag),r=vp(ig),a=Id(t,r),i=Id(Id(t,s),kd(Dh(n,"float32")));return Cf(e,a,i)}}}},bb={kernelName:xu,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Id(t,Id(n,Td(vp(1),n)))}}},xb={kernelName:bu,gradFunc:t=>({x:()=>Sf(t)})},vb=Yc({cos_:function(t){const e={x:Xc(t,"x","cos")};return Vc.runKernel(Oo,e)}}),wb={kernelName:gu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Id(vb(Dh(n,"float32")),t)}}},kb=Yc({cosh_:function(t){const e={x:Xc(t,"x","cosh")};return Vc.runKernel(Do,e)}}),_b={kernelName:yu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Id(kb(Dh(n,"float32")),t)}}},Ib={kernelName:mu,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{begin:r,size:a}=n,i=s.shape,[o,l]=op(s,r,a),u=[];for(let e=0;e<t.rank;e++)u.push([o[e],i[e]-o[e]-l[e]]);return{x:()=>Zd(t,u)}}},Tb={kernelName:Tu,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s]=e,{dim:r}=n,a=Id(t,s);return{logits:()=>Td(a,Id(Nd(a,[r],!0),s))}}},Nb={kernelName:vu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Id(t,uf(n))}}},Cb=Yc({batchToSpaceND_:function(t,e,n){const s=Xc(t,"x","batchToSpaceND"),r=e.reduce(((t,e)=>t*e));di(s.rank>=1+e.length,(()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`)),di(n.length===e.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`)),di(s.shape[0]%r==0,(()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${r}`));const a={x:s},i={blockShape:e,crops:n};return Vc.runKernel(xo,a,i)}}),Sb={kernelName:_u,gradFunc:(t,e,n)=>{const{blockShape:s,paddings:r}=n;return{x:()=>Cb(t,s,r)}}},Ab={kernelName:Iu,gradFunc:(t,e,n)=>{const{axis:s}=n;return{x:()=>Xp(t,s)}}},$b=[$g,Eg,Rg,Og,Dg,Fg,Mg,Lg,zg,Pg,Vg,Bg,Ug,jg,Hg,Xg,Kg,Yg,Zg,Jg,Qg,ty,ny,ey,ay,oy,uy,hy,py,dy,ab,fy,my,gy,yy,by,vy,xy,ky,Iy,Cy,Sy,Ay,$y,Ey,Ry,Oy,Dy,Fy,Ly,Py,Py,By,Uy,jy,Hy,qy,Xy,Ky,Yy,Zy,Jy,Qy,tb,eb,nb,nb,sb,rb,ib,ob,lb,ub,cb,hb,pb,db,fb,gb,yb,bb,xb,wb,_b,Ib,Tb,Nb,Sb,Sb,Ab,Ab,{kernelName:wu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>id(t,Id(bf(Dh(n,"float32")),2))}}},{kernelName:Nu,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=vp(2);return{a:()=>Id(t,Id(r,Td(n,s))),b:()=>Id(t,Id(r,Td(s,n)))}}},{kernelName:Cu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Id(t,Id(Dh(n,"float32"),2))}}},{kernelName:Bu,gradFunc:t=>({x:()=>Sf(t)})},{kernelName:Su,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=cd(n.shape,s.shape);return{a:()=>{let e=t;const s=ud(n.shape,r);return s.length>0&&(e=Nd(e,s)),Vp(e,n.shape)},b:()=>{let e=t;const n=ud(s.shape,r);return n.length>0&&(e=Nd(e,n)),Vp(jd(e),s.shape)}}}},{kernelName:ku,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,r=s.shape.slice(),{axis:a}=n;Ii(a,s.shape).forEach((t=>{r[t]=1}));const i=Vp(t,r),o=Id(i,Kd(s.shape,"float32"));return{x:()=>o}}},{kernelName:Eu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>id(t,Ud(vb(n)))}}},{kernelName:Ru,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Id(Td(vp(1),Ud(n)),t)}}},{kernelName:Ou,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{reps:r}=n;return{x:()=>{let e=Sf(s);if(1===s.rank)for(let n=0;n<r[0];++n)e=_p(e,cf(t,[n*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)e=_p(e,cf(t,[n*s.shape[0],a*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)e=_p(e,cf(t,[n*s.shape[0],a*s.shape[1],i*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)for(let o=0;o<r[3];++o)e=_p(e,cf(t,[n*s.shape[0],a*s.shape[1],i*s.shape[2],o*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return e}}}},{kernelName:Mu,gradFunc:(t,e,n)=>{const s=n,{perm:r}=s,a=Bd(r);return{x:()=>Af(t,a)}}},{kernelName:zu,gradFunc:(t,e,n)=>{const s=n,{axis:r}=s;return{value:()=>vf(t,r)}}},{kernelName:Pu,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=Ed(e,Sf(e)),s=yd(t,n);let r=xd(e,vp(0,"int32"));const a=s.rank-r.rank;for(let t=0;t<a;++t)r=pd(r,t+1);r=Sd(r,Kd(s.shape,"bool"));const i=Sf(s);return Cf(r,s,i)}(t,n)}}},{kernelName:Vu,gradFunc:t=>({x:()=>Sf(t)})}];for(const t of $b)Qu(t);kc().prototype.abs=function(){return this.throwIfDisposed(),kp(this)};const Eb=Yc({acos_:function(t){const e={x:Xc(t,"x","acos")};return Vc.runKernel(to,e)}});kc().prototype.acos=function(){return this.throwIfDisposed(),Eb(this)};const Rb=Yc({acosh_:function(t){const e={x:Xc(t,"x","acosh")};return Vc.runKernel(eo,e)}});kc().prototype.acosh=function(){return this.throwIfDisposed(),Rb(this)},kc().prototype.add=function(t){return this.throwIfDisposed(),_p(this,t)},kc().prototype.all=function(t,e){return this.throwIfDisposed(),Ip(this,t,e)},kc().prototype.any=function(t,e){return this.throwIfDisposed(),Tp(this,t,e)},kc().prototype.argMax=function(t){return this.throwIfDisposed(),Np(this,t)};const Ob=Yc({argMin_:function(t,e=0){const n={x:Xc(t,"x","argMin")},s={axis:e};return Vc.runKernel(oo,n,s)}});kc().prototype.argMin=function(t){return this.throwIfDisposed(),Ob(this,t)},kc().prototype.asScalar=function(){return this.throwIfDisposed(),di(1===this.size,(()=>"The array must have only 1 element.")),Vp(this,[])},kc().prototype.asType=function(t){return this.throwIfDisposed(),Dh(this,t)},kc().prototype.as1D=function(){return this.throwIfDisposed(),Vp(this,[this.size])},kc().prototype.as2D=function(t,e){return this.throwIfDisposed(),Vp(this,[t,e])},kc().prototype.as3D=function(t,e,n){return this.throwIfDisposed(),Vp(this,[t,e,n])},kc().prototype.as4D=function(t,e,n,s){return this.throwIfDisposed(),Vp(this,[t,e,n,s])},kc().prototype.as5D=function(t,e,n,s,r){return this.throwIfDisposed(),Vp(this,[t,e,n,s,r])};const Db=Yc({asin_:function(t){const e={x:Xc(t,"x","asin")};return Vc.runKernel(lo,e)}});kc().prototype.asin=function(){return this.throwIfDisposed(),Db(this)};const Fb=Yc({asinh_:function(t){const e={x:Xc(t,"x","asinh")};return Vc.runKernel(uo,e)}});kc().prototype.asinh=function(){return this.throwIfDisposed(),Fb(this)};const Mb=Yc({atan_:function(t){const e={x:Xc(t,"x","atan")};return Vc.runKernel(co,e)}});kc().prototype.atan=function(){return this.throwIfDisposed(),Mb(this)};const Lb=Yc({atan2_:function(t,e){let n=Xc(t,"a","atan2"),s=Xc(e,"b","atan2");[n,s]=Rc(n,s);const r={a:n,b:s};return Vc.runKernel(po,r)}});kc().prototype.atan2=function(t){return this.throwIfDisposed(),Lb(this,t)};const zb=Yc({atanh_:function(t){const e={x:Xc(t,"x","atanh")};return Vc.runKernel(ho,e)}});kc().prototype.atanh=function(){return this.throwIfDisposed(),zb(this)},kc().prototype.avgPool=function(t,e,n,s){return this.throwIfDisposed(),Bp(this,t,e,n,s)},kc().prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),Cb(this,t,e)},kc().prototype.batchNorm=function(t,e,n,s,r){return this.throwIfDisposed(),Up(this,t,e,n,s,r)},kc().prototype.broadcastTo=function(t){return this.throwIfDisposed(),Nf(this,t)},kc().prototype.cast=function(t){return this.throwIfDisposed(),Dh(this,t)};const Pb=Yc({ceil_:function(t){const e={x:Xc(t,"x","ceil")};return Vc.runKernel(ko,e)}});kc().prototype.ceil=function(){return this.throwIfDisposed(),Pb(this)},kc().prototype.clipByValue=function(t,e){return this.throwIfDisposed(),qp(this,t,e)},kc().prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof wc&&(t=[t]),Xp([this,...t],e)},kc().prototype.conv1d=function(t,e,n,s,r,a){return this.throwIfDisposed(),td(this,t,e,n,s,r,a)},kc().prototype.conv2dTranspose=function(t,e,n,s,r){return this.throwIfDisposed(),nd(this,t,e,n,s,r)},kc().prototype.conv2d=function(t,e,n,s,r,a){return this.throwIfDisposed(),Qp(this,t,e,n,s,r,a)},kc().prototype.cos=function(){return this.throwIfDisposed(),vb(this)},kc().prototype.cosh=function(){return this.throwIfDisposed(),kb(this)},kc().prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),cy(this,t,e,n)};const Vb=Yc({depthToSpace_:function(t,e,n="NHWC"){const s=Xc(t,"x","depthToSpace"),r="NHWC"===n?s.shape[1]:s.shape[2],a="NHWC"===n?s.shape[2]:s.shape[3],i="NHWC"===n?s.shape[3]:s.shape[1];di(r*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${e}  for depthToSpace with input shape\n    ${s.shape}`)),di(a*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${e} for depthToSpace with input shape\n        ${s.shape}`)),di(i%(e*e)==0,(()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${s.shape}`));const o={x:s},l={blockSize:e,dataFormat:n};return Vc.runKernel(zo,o,l)}});kc().prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),Vb(this,t,e)},kc().prototype.depthwiseConv2d=function(t,e,n,s,r,a){return this.throwIfDisposed(),rd(this,t,e,n,s,r,a)};const Bb=Yc({dilation2d_:function(t,e,n,s,r=[1,1],a="NHWC"){const i=Xc(t,"x","dilation2d"),o=Xc(e,"filter","dilation2d");di(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),di(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),di("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=i,u=!1;3===i.rank&&(l=Vp(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);const c={x:l,filter:o},h={strides:n,pad:s,dilations:r},p=Vc.runKernel(Uo,c,h);return u?Vp(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});kc().prototype.dilation2d=function(t,e,n,s,r){return this.throwIfDisposed(),Bb(this,t,e,n,s,r)};const Wb=Yc({divNoNan_:function(t,e){let n=Xc(t,"a","div"),s=Xc(e,"b","div");[n,s]=Rc(n,s);const r=id(n,s),a=Sf(r),i=hd(s,a);return Cf(i,a,r)}});kc().prototype.divNoNan=function(t){return this.throwIfDisposed(),Wb(this,t)},kc().prototype.div=function(t){return this.throwIfDisposed(),id(this,t)};const Ub=Yc({dot_:function(t,e){const n=Xc(t,"t1","dot"),s=Xc(e,"t2","dot");di(!(1!==n.rank&&2!==n.rank||1!==s.rank&&2!==s.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`));const r=1===n.rank?n.size:n.shape[1],a=1===s.rank?s.size:s.shape[0];if(di(r===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`)),1===n.rank&&1===s.rank){const t=Vp(n,[1,-1]),e=Vp(s,[-1,1]),r=Xf(t,e);return Vp(r,[])}if(1===n.rank&&2===s.rank){const t=Vp(n,[1,-1]),e=Vp(s,[s.shape[0],s.shape[1]]),r=Xf(t,e);return Vp(r,[r.size])}if(2===n.rank&&1===s.rank){const t=Vp(s,[-1,1]),e=Xf(n,t);return Vp(e,[e.size])}{const t=Vp(s,[s.shape[0],s.shape[1]]);return Xf(n,t)}}});kc().prototype.dot=function(t){return this.throwIfDisposed(),Ub(this,t)},kc().prototype.elu=function(){return this.throwIfDisposed(),od(this)},kc().prototype.equal=function(t){return this.throwIfDisposed(),hd(this,t)};const Gb=Yc({erf_:function(t){let e=Xc(t,"x","erf");di("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=Dh(e,"float32"));const n={x:e};return Vc.runKernel(Ko,n)}});kc().prototype.erf=function(){return this.throwIfDisposed(),Gb(this)},kc().prototype.exp=function(){return this.throwIfDisposed(),kd(this)},kc().prototype.expandDims=function(t){return this.throwIfDisposed(),pd(this,t)};const jb=Yc({expm1_:function(t){const e={x:Xc(t,"x","expm1")};return Vc.runKernel(Qo,e)}});kc().prototype.expm1=function(){return this.throwIfDisposed(),jb(this)},kc().prototype.fft=function(){return this.throwIfDisposed(),Of(this)},kc().prototype.flatten=function(){return this.throwIfDisposed(),Vp(this,[this.size])},kc().prototype.floor=function(){return this.throwIfDisposed(),gd(this)},kc().prototype.floorDiv=function(t){return this.throwIfDisposed(),ad(this,t)},kc().prototype.gather=function(t,e){return this.throwIfDisposed(),yd(this,t,e)},kc().prototype.greaterEqual=function(t){return this.throwIfDisposed(),xd(this,t)},kc().prototype.greater=function(t){return this.throwIfDisposed(),bd(this,t)},kc().prototype.ifft=function(){return this.throwIfDisposed(),Ff(this)},kc().prototype.irfft=function(){return this.throwIfDisposed(),Mf(this)};const Hb=Yc({isFinite_:function(t){const e={x:Xc(t,"x","isFinite")};return Vc.runKernel(dl,e)}});kc().prototype.isFinite=function(){return this.throwIfDisposed(),Hb(this)};const qb=Yc({isInf_:function(t){const e={x:Xc(t,"x","isInf")};return Vc.runKernel(fl,e)}});kc().prototype.isInf=function(){return this.throwIfDisposed(),qb(this)};const Xb=Yc({isNaN_:function(t){const e={x:Xc(t,"x","isNaN")};return Vc.runKernel(ml,e)}});kc().prototype.isNaN=function(){return this.throwIfDisposed(),Xb(this)},kc().prototype.leakyRelu=function(t){return this.throwIfDisposed(),vd(this,t)},kc().prototype.lessEqual=function(t){return this.throwIfDisposed(),bm(this,t)},kc().prototype.less=function(t){return this.throwIfDisposed(),Vy(this,t)};const Kb=Yc({localResponseNormalization_:function(t,e=5,n=1,s=1,r=.5){const a=Xc(t,"x","localResponseNormalization");di(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),di(xi(e),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=Vp(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:i},u={depthRadius:e,bias:n,alpha:s,beta:r},c=Vc.runKernel(Tl,l,u);return o?Vp(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});kc().prototype.localResponseNormalization=function(t,e,n,s){return this.throwIfDisposed(),Kb(this,t,e,n,s)};const Yb=Yc({logSigmoid_:function(t){const e=Xc(t,"x","logSigmoid");return xp((t=>({value:jd(gf(jd(t))),gradFunc:e=>Id(e,uf(jd(t)))})))(e)}});kc().prototype.logSigmoid=function(){return this.throwIfDisposed(),Yb(this)},kc().prototype.logSoftmax=function(t){return this.throwIfDisposed(),Cd(this,t)},kc().prototype.logSumExp=function(t,e){return this.throwIfDisposed(),Em(this,t,e)},kc().prototype.log=function(){return this.throwIfDisposed(),wd(this)},kc().prototype.log1p=function(){return this.throwIfDisposed(),$m(this)},kc().prototype.logicalAnd=function(t){return this.throwIfDisposed(),Sd(this,t)},kc().prototype.logicalNot=function(){return this.throwIfDisposed(),mb(this)};const Zb=Yc({logicalOr_:function(t,e){const n=Xc(t,"a","logicalOr","bool"),s=Xc(e,"b","logicalOr","bool");cd(n.shape,s.shape);const r={a:n,b:s};return Vc.runKernel(Il,r)}});kc().prototype.logicalOr=function(t){return this.throwIfDisposed(),Zb(this,t)};const Jb=Yc({logicalXor_:function(t,e){const n=Xc(t,"a","logicalXor","bool"),s=Xc(e,"b","logicalXor","bool");return cd(n.shape,s.shape),Sd(Zb(t,e),mb(Sd(t,e)))}});kc().prototype.logicalXor=function(t){return this.throwIfDisposed(),Jb(this,t)},kc().prototype.matMul=function(t,e,n){return this.throwIfDisposed(),Xf(this,t,e,n)},kc().prototype.maxPool=function(t,e,n,s){return this.throwIfDisposed(),Ad(this,t,e,n,s)},kc().prototype.max=function(t,e){return this.throwIfDisposed(),_d(this,t,e)},kc().prototype.maximum=function(t){return this.throwIfDisposed(),Ed(this,t)},kc().prototype.mean=function(t,e){return this.throwIfDisposed(),Rd(this,t,e)},kc().prototype.min=function(t,e){return this.throwIfDisposed(),Od(this,t,e)},kc().prototype.minimum=function(t){return this.throwIfDisposed(),Dd(this,t)};const Qb=Yc({mirrorPad_:function(t,e,n){di("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const s=Xc(t,"x","mirrorPad");if(0===s.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");di(e.length===s.rank,(()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`));const r="reflect"===n?1:0;for(let t=0;t<s.rank;t++)di(2===e[t].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),di(e[t][0]>=0&&e[t][0]<=s.shape[t]-r&&e[t][1]>=0&&e[t][1]<=s.shape[t]-r,(()=>`Padding in dimension ${t} cannot be greater than or equal to ${s.shape[t]-r} or less than 0 for input of shape ${s.shape}`));const a={paddings:e,mode:n},i={x:s};return Vc.runKernel(Ll,i,a)}});kc().prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),Qb(this,t,e)};const tx=Yc({mod_:function(t,e){let n=Xc(t,"a","mod"),s=Xc(e,"b","mod");[n,s]=Rc(n,s);const r={a:n,b:s};return Vc.runKernel(zl,r)}});kc().prototype.mod=function(t){return this.throwIfDisposed(),tx(this,t)},kc().prototype.mul=function(t){return this.throwIfDisposed(),Id(this,t)},kc().prototype.neg=function(){return this.throwIfDisposed(),jd(this)},kc().prototype.norm=function(t,e,n){return this.throwIfDisposed(),_m(this,t,e,n)},kc().prototype.notEqual=function(t){return this.throwIfDisposed(),Hd(this,t)},kc().prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),qd(this,t,e,n)},kc().prototype.onesLike=function(){return this.throwIfDisposed(),Yd(this)},kc().prototype.pad=function(t,e){return this.throwIfDisposed(),Zd(this,t,e)};const ex=Yc({pool_:function(t,e,n,s,r,a){null==r&&(r=[1,1]),null==a&&(a=1),0===s&&(s="valid");const i=Xc(t,"x","maxPool");let o=i,l=!1;3===i.rank&&(l=!0,o=Vp(i,[1,i.shape[0],i.shape[1],i.shape[2]])),di(zp(a,r),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`));const u=Sp(o.shape,e,a,r,s),c=[u.dilationHeight,u.dilationWidth];let h;h="same"===s?function(t,e){const n=t.map(((t,n)=>t+(t-1)*(e[n]-1))).map((t=>t-1)),s=n.map((t=>Math.floor(t/2))),r=n.map(((t,e)=>t-s[e]));return n.map(((t,e)=>[s[e],r[e]]))}([u.filterHeight,u.filterWidth],c):[[0,0],[0,0]];const p=1===c[0]&&1===c[1],[d,f]=function(t,e,n){const s=n.map((t=>t[0])),r=n.map((t=>t[1])),a=t.concat(s,r),i=e.map(((t,e)=>(t-a[e]%t)%t)),o=r.map(((t,e)=>t+i[e]));return[e.map(((t,e)=>[s[e],o[e]])),e.map(((t,e)=>[0,i[e]]))]}([u.inHeight,u.inWidth],c,h),m=p?s:"valid",g=p?o:qg(o,c,d),y=("avg"===n?()=>Bp(g,e,a,m):()=>Ad(g,e,a,m))(),b=p?y:Cb(y,c,f);return l?Vp(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});kc().prototype.pool=function(t,e,n,s,r){return this.throwIfDisposed(),ex(this,t,e,n,s,r)},kc().prototype.pow=function(t){return this.throwIfDisposed(),wm(this,t)},kc().prototype.prelu=function(t){return this.throwIfDisposed(),Jd(this,t)};const nx=Yc({prod_:function(t,e=null,n=!1){let s=Xc(t,"x","prod");"bool"===s.dtype&&(s=Dh(s,"int32"));const r={x:s},a={axis:e,keepDims:n};return Vc.runKernel(Jl,r,a)}});kc().prototype.prod=function(t,e){return this.throwIfDisposed(),nx(this,t,e)};const sx=Yc({reciprocal_:function(t){const e={x:Xc(t,"x","reciprocal")};return Vc.runKernel(eu,e)}});kc().prototype.reciprocal=function(){return this.throwIfDisposed(),sx(this)},kc().prototype.relu=function(){return this.throwIfDisposed(),rf(this)},kc().prototype.relu6=function(){return this.throwIfDisposed(),zf(this)},kc().prototype.reshapeAs=function(t){return this.throwIfDisposed(),Vp(this,t.shape)},kc().prototype.reshape=function(t){return this.throwIfDisposed(),Vp(this,t)},kc().prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),mm(this,t,e,n)},kc().prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),gm(this,t,e,n)},kc().prototype.reverse=function(t){return this.throwIfDisposed(),af(this,t)},kc().prototype.rfft=function(){return this.throwIfDisposed(),Df(this)};const rx=Yc({round_:function(t){const e={x:Xc(t,"x","round")};return Vc.runKernel(cu,e)}});kc().prototype.round=function(){return this.throwIfDisposed(),rx(this)},kc().prototype.rsqrt=function(){return this.throwIfDisposed(),wy(this)},kc().prototype.selu=function(){return this.throwIfDisposed(),of(this)},kc().prototype.separableConv2d=function(t,e,n,s,r,a){return this.throwIfDisposed(),lf(this,t,e,n,s,r,a)},kc().prototype.sigmoid=function(){return this.throwIfDisposed(),uf(this)};const ax=Yc({sign_:function(t){const e={x:Xc(t,"x","sign")};return Vc.runKernel(bu,e)}});kc().prototype.sign=function(){return this.throwIfDisposed(),ax(this)},kc().prototype.sin=function(){return this.throwIfDisposed(),iy(this)},kc().prototype.sinh=function(){return this.throwIfDisposed(),ly(this)},kc().prototype.slice=function(t,e){return this.throwIfDisposed(),cf(this,t,e)},kc().prototype.softmax=function(t){return this.throwIfDisposed(),mf(this,t)},kc().prototype.softplus=function(){return this.throwIfDisposed(),gf(this)},kc().prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),qg(this,t,e)},kc().prototype.split=function(t,e){return this.throwIfDisposed(),yf(this,t,e)},kc().prototype.sqrt=function(){return this.throwIfDisposed(),bf(this)},kc().prototype.square=function(){return this.throwIfDisposed(),Ud(this)},kc().prototype.squaredDifference=function(t){return this.throwIfDisposed(),Am(this,t)},kc().prototype.squeeze=function(t){return this.throwIfDisposed(),xf(this,t)},kc().prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof wc?[this,t]:[this,...t];return vf(n,e)},kc().prototype.step=function(t){return this.throwIfDisposed(),Pf(this,t)};const ix=Yc({stridedSlice_:function(t,e,n,s,r=0,a=0,i=0,o=0,l=0){const u={x:Xc(t,"x","stridedSlice")},c={begin:e,end:n,strides:s,beginMask:r,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return Vc.runKernel($u,u,c)}});kc().prototype.stridedSlice=function(t,e,n,s,r,a,i,o){return this.throwIfDisposed(),ix(this,t,e,n,s,r,a,i,o)},kc().prototype.sub=function(t){return this.throwIfDisposed(),Td(this,t)},kc().prototype.sum=function(t,e){return this.throwIfDisposed(),Nd(this,t,e)};const ox=Yc({tan_:function(t){const e={x:Xc(t,"x","tan")};return Vc.runKernel(Eu,e)}});kc().prototype.tan=function(){return this.throwIfDisposed(),ox(this)},kc().prototype.tanh=function(){return this.throwIfDisposed(),wf(this)},kc().prototype.tile=function(t){return this.throwIfDisposed(),dd(this,t)},kc().prototype.toBool=function(){return this.throwIfDisposed(),Dh(this,"bool")},kc().prototype.toFloat=function(){return this.throwIfDisposed(),Dh(this,"float32")},kc().prototype.toInt=function(){return this.throwIfDisposed(),Dh(this,"int32")};const lx=Yc({topk_:function(t,e=1,n=!0){const s=Xc(t,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(e>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${e}`);const a={x:s},i={k:e,sorted:n},[o,l]=Vc.runKernel(Du,a,i);return{values:o,indices:l}}});kc().prototype.topk=function(t,e){return this.throwIfDisposed(),lx(this,t,e)},kc().prototype.transpose=function(t){return this.throwIfDisposed(),Af(this,t)};const ux=Yc({unique_:function(t,e=0){const n=Xc(t,"x","unique","string_or_numeric");di(n.rank>0,(()=>"The input tensor must be at least 1D"));const s={x:n},r={axis:e},[a,i]=Vc.runKernel(Lu,s,r);return{values:a,indices:i}}});let cx;function hx(){return null==cx&&(cx=Vc.backend.epsilon()),cx}kc().prototype.unique=function(t){return this.throwIfDisposed(),ux(this,t)},kc().prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),_y(this,t,e)},kc().prototype.unstack=function(t){return this.throwIfDisposed(),Tf(this,t)},kc().prototype.where=function(t,e){return this.throwIfDisposed(),Cf(t,this,e)},kc().prototype.zerosLike=function(){return this.throwIfDisposed(),Sf(this)};class px extends Error{constructor(t){super(t),Object.setPrototypeOf(this,px.prototype)}}class dx extends Error{constructor(t){super(t),Object.setPrototypeOf(this,dx.prototype)}}class fx extends Error{constructor(t){super(t),Object.setPrototypeOf(this,fx.prototype)}}class mx extends Error{constructor(t){super(t),Object.setPrototypeOf(this,mx.prototype)}}class gx extends Error{constructor(t){super(t),Object.setPrototypeOf(this,gx.prototype)}}function yx(t,e){if(Array.isArray(t)){let n=[];for(let s=0;s<e;s++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function bx(t,e){if(!t)throw new gx(e)}function xx(t,e){let n=0;for(const s of t)s===e&&n++;return n}function vx(t){return 1===t.length?t[0]:t}function wx(t){return Array.isArray(t)?t:[t]}function kx(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function _x(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,((t,e)=>e.toUpperCase()))}let Ix={};function Tx(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function Nx(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach((t=>Nx(t)));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"==typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!=typeof e.value?Nx(e):t[n]=e.value)}}}function Cx(t,e={},n={},s="object",r=!1){if("string"==typeof t){const r=t;let a;if(r in n)a=n[r];else if(r in Ix)a=Ix[r];else if(a=e[r],null==a)throw new fx(`Unknown ${s}: ${t}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=t;if(null==a.className||null==a.config)throw new fx(`${s}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in Ix?[o,l]=Ix.className:i in e&&([o,l]=e[i]),null==o)throw new fx(`Unknown ${s}: ${i}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const t={};for(const e of Object.keys(Ix))t[e]=Ix[e];for(const e of Object.keys(n))t[e]=n[e];a.config.customObjects=t;const e=Object.assign({},Ix);for(const t of Object.keys(n))Ix[t]=n[t];Nx(a.config);const s=l(o,a.config,n,r);return Ix=Object.assign({},e),s}{const t=Object.assign({},Ix);for(const t of Object.keys(n))Ix[t]=n[t];const e=new o(a.config);return Ix=Object.assign({},t),e}}}function Sx(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function Ax(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function $x(t){if(null==t)throw new fx(`Invalid value in obj: ${JSON.stringify(t)}`);for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function Ex(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new fx(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function Rx(t,e,n=0,s=1/0){return bx(n>=0),bx(s>=n),Array.isArray(t)&&t.length>=n&&t.length<=s&&t.every((t=>typeof t===e))}function Ox(t,e){Array.isArray(t)?(di(t.length>0,(()=>`${e} is unexpectedly an empty array.`)),t.forEach(((t,n)=>Ox(t,`element ${n+1} of ${e}`)))):di(Number.isInteger(t)&&t>0,(()=>`Expected ${e} to be a positive integer, but got ${Dx(t)}.`))}function Dx(t){return null===t?"null":Array.isArray(t)?"["+t.map((t=>Dx(t))).join(",")+"]":"string"==typeof t?`"${t}"`:`${t}`}function Fx(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}function Mx(t,e){return fp((()=>bf(Nd(Id(t,t),e,!0))))}class Lx extends up{getConfig(){return{}}}class zx extends Lx{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return fp((()=>{const e=Mx(t,this.axis),n=qp(e,0,this.maxValue);return Id(t,id(n,_p(hx(),e)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}zx.className="MaxNorm",hp(zx);class Px extends Lx{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return fp((()=>id(t,_p(hx(),Mx(t,this.axis)))))}getConfig(){return{axis:this.axis}}}Px.className="UnitNorm",hp(Px);class Vx extends Lx{apply(t){return rf(t)}}Vx.className="NonNeg",hp(Vx);class Bx extends Lx{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return fp((()=>{const e=Mx(t,this.axis),n=_p(Id(this.rate,qp(e,this.minValue,this.maxValue)),Id(1-this.rate,e));return Id(t,id(n,_p(hx(),e)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Bx.className="MinMaxNorm",hp(Bx);const Wx={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Ux(t){return Tx(t)}function Gx(t,e={}){return Cx(t,cp.getMap().classNameMap,e,"constraint")}function jx(t){return null==t?null:"string"==typeof t?Gx({className:t in Wx?Wx[t]:t,config:{}}):t instanceof Lx?t:Gx(t)}const Hx=["channelsFirst","channelsLast"],qx=["nearest","bilinear"],Xx=["valid","same","causal"],Kx=["max","avg"],Yx=["sum","mul","concat","ave"],Zx=new Map;function Jx(t){Ex(Hx,"DataFormat",t)}function Qx(t){Ex(Xx,"PaddingMode",t)}function tv(t){Ex(Kx,"PoolMode",t)}const ev=[];function nv(t,e){ev.push(t);try{const t=e();return ev.pop(),t}catch(t){throw ev.pop(),t}}function sv(t){if(!iv(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===ev.length?"":ev.join("/")+"/")+t}function rv(t){if(!iv(t))throw new Error("Not a valid tensor name: '"+t+"'");Zx.has(t)||Zx.set(t,0);const e=Zx.get(t);if(Zx.set(t,Zx.get(t)+1),e>0){const n=`${t}_${e}`;return Zx.set(n,1),n}return t}const av=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function iv(t){return!!t.match(av)}function ov(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let s=1;for(let r=e;r<n;++r)s*=t[r];return s}function lv(t){return kf(t=Array.isArray(t)?new Float32Array(t):t)}function uv(t){return Od(lv(t)).dataSync()[0]}function cv(t){return _d(lv(t)).dataSync()[0]}function hv(t,e){if(e<t)throw new fx(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let s=t;s<e;++s)n.push(s);return n}function pv(t,e){return t.asType(e)}function dv(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),t.reshape(n)}function fv(t,e,n){return fp((()=>{switch(t.rank){case 1:return hf(t,e,n);case 2:return pf(t,[e,0],[n,t.shape[1]]);case 3:return df(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return ff(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return cf(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return cf(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new fx(`sliceAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function mv(t,e,n){return fp((()=>{switch(t.rank){case 1:return hf(t,e,n);case 2:return pf(t,[0,e],[t.shape[0],n]);case 3:return df(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return ff(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new fx(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function gv(t,e,n,s){return fp((()=>{switch(t.rank){case 1:return hf(t,e,n);case 2:switch(s){case 1:return fv(t,e,n);case 2:return mv(t,e,n);default:throw new fx(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return fv(t,e,n);case 2:return df(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return mv(t,e,n);default:throw new fx(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return fv(t,e,n);case 2:return ff(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return ff(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return mv(t,e,n);default:throw new fx(`The axis is not within the rank of the tensor ${s}`)}default:throw new fx(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function yv(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),Xp(t,e)}function bv(t,e){switch(t.rank){case 1:return Kp([t,e]);case 2:return Yp([t,e],0);case 3:return Zp([t,e],0);case 4:return Jp([t,e],0);default:throw new fx(`concatAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}function xv(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new fx(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return dd(t,e)}function vv(t,e=0,n=1,s,r){return nf(t,e,n,s,r)}function wv(t,e,n,s){if(t.rank<2||e.rank<2)throw new mx(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3&&t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new mx(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${e.shape}`);if(2===t.rank&&2===e.rank)return Kf({a:t,b:e,transposeA:!1,transposeB:!1,bias:s?Iv(t.rank,s,"channelsLast"):null,activation:n});{const r=t.shape.slice(),a=r.pop();t=t.reshape([-1,a]);const i=e.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:e.rank},((t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n));e=e.transpose(c).reshape([l,-1]);const h=[...r,...u];return Kf({a:t,b:e,transposeA:!1,transposeB:!1,bias:s?Iv(t.rank,s,"channelsLast"):null,activation:n}).reshape(h)}}function kv(t,e,n){return fp((()=>(e=Array.isArray(e)?kf(e,"int32"):e.toInt(),yd(t,e,n))))}function _v(t){return Id(t,t)}function Iv(t,e,n){const s=e.shape;if(1!==e.rank&&e.rank!==t)throw new fx(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${t}`);if(5===t){if("channelsFirst"===n)return 1===s.length?e.reshape([1,s[0],1,1,1]):e.reshape([1,s[3],s[0],s[1],s[2]]);if("channelsLast"===n)return 1===s.length?e.reshape([1,1,1,1,s[0]]):e.reshape([1].concat(s))}else if(4===t){if("channelsFirst"===n)return 1===s.length?e.reshape([1,s[0],1,1]):e.reshape([1,s[2],s[0],s[1]]);if("channelsLast"===n)return 1===s.length?e.reshape([1,1,1,s[0]]):e.reshape([1].concat(s))}else if(3===t){if("channelsFirst"===n)return 1===s.length?e.reshape([1,s[0],1]):e.reshape([1,s[1],s[0]]);if("channelsLast"===n)return 1===s.length?e.reshape([1,1,s[0]]):e.reshape([1].concat(s))}else if(t<3)return e;throw new fx(`Unsupported input rank by biasAdd: ${e.rank}`)}function Tv(t,e,n){return fp((()=>(null==n&&(n="channelsLast"),Jx(n),t.add(Iv(t.rank,e,n)))))}function Nv(t,e,n,s){return fp((()=>$f(t,e,n,s)))}function Cv(t,e,n=!1){return n?t():e()}const Sv=["fanIn","fanOut","fanAvg"],Av=["normal","uniform","truncatedNormal"];class $v extends up{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Ev extends $v{apply(t,e){return Xd(t,e)}}Ev.className="Zeros",hp(Ev);class Rv extends $v{apply(t,e){return Kd(t,e)}}Rv.className="Ones",hp(Rv);class Ov extends $v{constructor(t){if(super(),"object"!=typeof t)throw new fx(`Expected argument of type ConstantConfig but got ${t}`);if(void 0===t.value)throw new fx(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return fp((()=>Id(vp(this.value),Kd(t,e))))}getConfig(){return{value:this.value}}}Ov.className="Constant",hp(Ov);class Dv extends $v{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return sf(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Dv.className="RandomUniform",hp(Dv);class Fv extends $v{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new mx(`randomNormal does not support dType ${e}.`);return vv(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Fv.className="RandomNormal",hp(Fv);class Mv extends $v{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new mx(`truncatedNormal does not support dType ${e}.`);return If(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Mv.className="TruncatedNormal",hp(Mv);class Lv extends $v{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return fp((()=>{if(2!==t.length||t[0]!==t[1])throw new fx("Identity matrix initializer can only be used for 2D square matrices.");return Id(this.gain,fd(t[0]))}))}getConfig(){return{gain:this.gain}}}Lv.className="Identity",hp(Lv);class zv extends $v{constructor(t){if(super(),t.scale<0)throw new fx(`scale must be a positive float. Got: ${t.scale}`);var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,Ex(Sv,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){Ex(Av,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,s;if(Jx(e),2===t.length)n=t[0],s=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=ov(t,2);n=t[1]*e,s=t[0]*e}else if("channelsLast"===e){const e=ov(t,0,t.length-2);n=t[t.length-2]*e,s=t[t.length-1]*e}}else{const e=ov(t);n=Math.sqrt(e),s=Math.sqrt(e)}return[n,s]}(t),s=n[0],r=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,s):"fanOut"===this.mode?a/=Math.max(1,r):a/=Math.max(1,(s+r)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new mx(`${this.getClassName()} does not support dType ${e}.`);return If(t,0,n,e,this.seed)}{const n=Math.sqrt(3*a);return sf(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}zv.className="VarianceScaling",hp(zv);class Pv extends zv{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return zv.className}}Pv.className="GlorotUniform",hp(Pv);class Vv extends zv{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return zv.className}}Vv.className="GlorotNormal",hp(Vv);class Bv extends zv{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return zv.className}}Bv.className="HeNormal",hp(Bv);class Wv extends zv{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return zv.className}}Wv.className="HeUniform",hp(Wv);class Uv extends zv{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return zv.className}}Uv.className="LeCunNormal",hp(Uv);class Gv extends zv{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return zv.className}}Gv.className="LeCunNormal",hp(Gv);class jv extends $v{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new mx("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return fp((()=>{if(t.length<2)throw new mx("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=vv(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=Om.gramSchmidt(e);return t[0]>t[1]&&(n=n.transpose()),Id(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}jv.className="Orthogonal",hp(jv);const Hv={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function qv(t,e={}){return Cx(t,cp.getMap().classNameMap,e,"initializer")}function Xv(t){return Tx(t)}function Kv(t){if("string"==typeof t){const e=t in Hv?Hv[t]:t;if("GlorotNormal"===e)return new Vv;if("GlorotUniform"===e)return new Pv;if("HeNormal"===e)return new Bv;if("HeUniform"===e)return new Wv;if("LeCunNormal"===e)return new Uv;if("LeCunUniform"===e)return new Gv;{const t={};return t.className=e,t.config={},qv(t)}}return t instanceof $v?t:qv(t)}let Yv=0;function Zv(){return Yv++}const Jv={};function Qv(t=""){return t in Jv||(Jv[t]=0),Jv[t]+=1,t+Jv[t].toString()}function tw(t){return Array.isArray(t)&&Array.isArray(t[0])}function ew(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function nw(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new fx(`Expected Tensor length to be 1; got ${t.length}`);e=t[0]}else e=t;return e}function sw(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return t[0];throw new fx(`Expected exactly 1 Shape; got ${t.length}`)}return t}function rw(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce(((t,e)=>t*e));return e}const aw="Variable";class iw{constructor(t,e="float32",n=aw,s=!0,r=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=Zv(),n=null==n?aw:n,this.originalName=sv(n),this.name=rv(this.originalName),this.trainable_=s,this.constraint=r,this.val=function(t,e=!0,n,s){return Vc.makeVariable(t,e,n,s)}(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function ow(t){return t.map((t=>t.read()))}function lw(t){t.forEach((t=>{t[0].write(t[1])}))}class uw{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class cw{constructor(t,e,n,s,r,a,i){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=i,this.id=Zv(),null!=a&&(this.originalName=sv(a),this.name=rv(this.originalName)),this.rank=e.length}}let hw=0;class pw{constructor(t,e){this.callArgs=e,this.id=hw++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const e of t.inboundLayers)null!=e&&e.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let dw=0;class fw extends up{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=dw++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=kx(t)+"_"+Qv(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new dx(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new fx(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return vx(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return vx(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new px(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new px(`Layer ${this.name} is not connected, no input to return.`);return vx(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new px(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new px(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return vx(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((t=>t()))}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach((e=>e.trainable=t)),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((t=>t.trainable)):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((t=>!t.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=wx(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=wx(this.inputSpec);if(t.length!==e.length)throw new fx(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let n=0;n<t.length;n++){const s=t[n],r=e[n];if(null==r)continue;const a=s.rank;if(null!=r.ndim&&a!==r.ndim)throw new fx(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(null!=r.maxNDim&&a>r.maxNDim)throw new fx(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(null!=r.minNDim&&a<r.minNDim)throw new fx(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(null!=r.dtype&&s.dtype!==r.dtype)throw new fx(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){const t=s.shape;for(const e in r.axes){const s=Number(e),a=r.axes[e],i=s>=0?t[s]:t[t.length+s];if(null!=a&&-1===[a,null].indexOf(i))throw new fx(`Input ${n} is incompatible with layer ${this.name}: expected axis ${s} of input shape to have value ${a} but got shape ${t}.`)}}if(null!=r.shape)for(let t=0;t<r.shape.length;++t){const e=r.shape[t],a=s.shape[t];if(null!=e&&null!=a&&e!==a)throw new fx(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=wx(t);let s=!0;for(const t of n)if(!(t instanceof cw)){s=!1;break}let r=!0;for(const t of n)if(t instanceof cw){r=!1;break}if(s===r)throw new fx("Arguments to apply() must be all SymbolicTensors or all Tensors");return nv(this.name,(()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of wx(t))e.push(n.shape);this.build(vx(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(t),r){let s=this.call(t,e);const r=wx(s),a=[];for(let t of r)-1!==n.indexOf(t)&&(t=t.clone()),a.push(t);if(s=vx(a),null!=this.activityRegularizer)throw new mx("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}{const n=function(t){t=wx(t);const e=[];for(const n of t)e.push(n.shape);return vx(e)}(t),s=this.computeOutputShape(n);let r;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),r=null!=s&&s.length>0&&Array.isArray(s[0])?s.map(((n,s)=>new cw(a,n,this,wx(t),e,this.name,s))):new cw(a,s,this,wx(t),e,this.name),this.addInboundNode(t,r,null,null,n,s,e),this._refCount++,null!=this.activityRegularizer)throw new mx("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach(((n,s)=>{null!=n&&null!=t[s]&&t[s]!==n&&(e=!0)})),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new px(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new px(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new dx(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return rw(this.weights)}build(t){this.built=!0}getWeights(t=!1){return ow(t?this.trainableWeights:this.weights)}setWeights(t){fp((()=>{const e=this.weights;if(e.length!==t.length)throw new fx(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],s=ow(e);for(let r=0;r<s.length;++r){const a=s[r],i=e[r],o=t[r];if(!bi(a.shape,o.shape))throw new fx(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}lw(n)}))}addWeight(t,e,n,s,r,a,i){if(-1!==this._addedWeightNames.indexOf(t))throw new fx(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(s=Kv("zeros"));const o=s.apply(e,n),l=new iw(o,n,t,a,i);return o.dispose(),null!=r&&this.addLoss((()=>r.apply(l.read()))),null==a&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=wx(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach((t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return e}addInboundNode(t,e,n,s,r,a,i=null){const o=wx(t);e=wx(e),n=wx(n),s=wx(s),r=ew(r),a=ew(a);const l=[],u=[],c=[];for(const t of o)l.push(t.sourceLayer),u.push(t.nodeIndex),c.push(t.tensorIndex);new pw({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:e,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},i);for(let t=0;t<e.length;t++)e[t].sourceLayer=this,e[t].nodeIndex=this.inboundNodes.length-1,e[t].tensorIndex=t}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach((t=>t.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function mw(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const s=mw(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of s)-1===e.indexOf(t)&&e.push(t)}return e}}}class gw extends fw{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:Qv("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new fx("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new fx("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new fx("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const s=new cw(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new pw({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new fx(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function yw(t){if(null==t)return;const e=[],n=[],s=[];for(const r in t){const a=t[r];if("number"!=typeof a){const t=a;e.push(t.data()),n.push(r),s.push(t)}}if(e.length>0){const r=await Promise.all(e);for(let e=0;e<r.length;++e)t[n[e]]=r[e][0];mp(s)}}function bw(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}var xw;gw.className="InputLayer",hp(gw),function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(xw||(xw={}));class vw{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class ww{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class kw extends vw{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const t in e){const s=e[t];if("number"==typeof s)this.totals.hasOwnProperty(t)||(this.totals[t]=0),this.totals[t]=this.totals[t]+s*n;else{let e;t in this.totals?e=this.totals[t]:this.totals[t]=0;const r=fp((()=>_p(this.totals[t],Id(s,n))));this.totals[t]=r,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const t of this.params.metrics)null!=this.totals[t]&&("number"==typeof this.totals[t]?e[t]=this.totals[t]/this.seen:fp((()=>{const n=Id(id(1,this.seen),this.totals[t]);e[t]=n,this.totals[t].dispose(),gp(e[t])})))}}class _w extends vw{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const t in e)null==this.history[t]&&(this.history[t]=[]),this.history[t].push(e[t])}async syncData(){const t=[],e=[],n=[];for(const s in this.history){const r=this.history[s];for(let a=0;a<r.length;++a)if("number"!=typeof r[a]){const i=r[a];t.push(i.data()),e.push(s),n.push(a)}}const s=await Promise.all(t);for(let t=0;t<s.length;++t)this.history[e[t]][n[t]].dispose(),this.history[e[t]][n[t]]=s[t][0]}}class Iw extends vw{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Ri(this.yieldEvery)&&(this.maybeWait=function(t,e){let n,s=sc();return(...r)=>{const a=sc();return a-s<e||(s=a,n=t(...r)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const s=[];null!=this.yield&&(await yw(n),s.push(this.yield(t,e,n))),s.push(Gm()),await Promise.all(s)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await yw(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await yw(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(Gm()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await yw(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await yw(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(Gm()):Ri(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await yw(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await yw(t),await this.trainEnd(t))}}function Tw(t,e){return null==t&&(t={}),t instanceof vw?[t]:Array.isArray(t)&&t[0]instanceof vw?t:wx(t).map((t=>new Iw(t,e)))}class Nw{constructor(){}static registerCallbackConstructor(t,e){di(t>=0&&Number.isInteger(t),(()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`)),Nw.checkForDuplicate(e),null==Nw.constructors[t]&&(Nw.constructors[t]=[]),Nw.constructors[t].push(e)}static checkForDuplicate(t){for(const e in Nw.constructors)Nw.constructors[+e].forEach((e=>{if(e===t)throw new fx("Duplicate callback constructor.")}))}static clear(){Nw.constructors={}}static createCallbacks(t){const e=[];for(const n in Nw.constructors){const s=+n;t>=s&&e.push(...Nw.constructors[s])}return e.map((t=>new t))}}function Cw(t,e,n,s,r,a,i,o,l){const u=new _w,c=[new kw,...Nw.createCallbacks(e)];null!=t&&c.push(...t),c.push(u);const h=new ww(c);return h.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:i,verbose:e,doValidation:o,metrics:l}),{callbackList:h,history:u}}function Sw(t,e={},n=!1){return Cx(t,cp.getMap().classNameMap,e,"layer",n)}function Aw(t,e){return fp((()=>{"float32"!==t.dtype&&(t=t.asType("float32"));const n=Nd(_v(t),e,!0),s=md(n.shape,hx()),r=bf(Ed(n,s));return id(t,r)}))}function $w(t,e){return fp((()=>Rd(_v(Td(e,t)),-1)))}function Ew(t,e){return fp((()=>Rd(kp(Td(e,t)),-1)))}function Rw(t,e){return fp((()=>{const n=Td(t,e),s=qp(kp(t),hx(),Number.MAX_VALUE),r=kp(id(n,s));return Id(100,Rd(r,-1))}))}function Ow(t,e,n=!1){return fp((()=>{if(n)e=mf(e);else{const t=Nd(e,e.shape.length-1,!0);e=id(e,t)}return e=qp(e,hx(),1-hx()),jd(Nd(Id(t.toFloat(),wd(e)),e.shape.length-1))}))}function Dw(t,e,n=!1){return fp((()=>{const s=gd(function(t){const e=[ov(t.shape)];return t.reshape(e)}(t)).toInt(),r=(e=qp(e,hx(),1-hx())).shape;return Ow(qd(s,r[r.length-1]).reshape(r),e,n)}))}function Fw(t,e){return fp((()=>{let n;return n=qp(e,hx(),1-hx()),n=wd(id(n,Td(1,n))),Rd(function(t,e){if(!bi(t.shape,e.shape))throw new fx(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return fp((()=>{const n=e.relu(),s=e.abs().neg();return n.sub(e.mul(t)).add(s.exp().log1p())}))}(t,n),-1)}))}function Mw(t,e){return fp((()=>{const n=Aw(t,-1),s=Aw(e,-1),r=Id(n,s);return jd(Nd(r,-1))}))}Nw.constructors={};const Lw={meanSquaredError:$w,meanAbsoluteError:Ew,meanAbsolutePercentageError:Rw,meanSquaredLogarithmicError:function(t,e){return fp((()=>{const n=qp(e,hx(),Number.MAX_VALUE),s=wd(_p(1,n)),r=qp(t,hx(),Number.MAX_VALUE),a=wd(_p(1,r));return Rd(_v(Td(s,a)),-1)}))},squaredHinge:function(t,e){return fp((()=>{const n=Ed(0,Td(1,Id(t,e)));return Rd(_v(n),-1)}))},hinge:function(t,e){return fp((()=>{const n=Ed(0,Td(1,Id(t,e)));return Rd(n,-1)}))},categoricalHinge:function(t,e){return fp((()=>{const n=Nd(Id(t,e),-1),s=_d(Id(Td(1,t),e),-1);return Ed(0,_p(1,Td(s,n)))}))},logcosh:function(t,e){return fp((()=>{const n=Math.log(2),s=Td(e,t),r=Td(_p(s,gf(Id(-2,s))),n);return Rd(r,-1)}))},categoricalCrossentropy:Ow,sparseCategoricalCrossentropy:Dw,binaryCrossentropy:Fw,kullbackLeiblerDivergence:function(t,e){return fp((()=>{const n=qp(t,hx(),1),s=qp(e,hx(),1);return Nd(Id(t,wd(id(n,s))),-1)}))},poisson:function(t,e){return fp((()=>{const n=wd(_p(hx(),e));return Rd(Td(e,Id(t,n)),-1)}))},cosineProximity:Mw};function zw(t){if("string"==typeof t){if(t in Lw)return Lw[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new fx(e)}return t}function Pw(t,e){return fp((()=>{const n=Id(.5,Yd(e)),s=pv(bd(e,n),t.dtype);return Rd(hd(t,s),-1)}))}function Vw(t,e){return fp((()=>pv(hd(Np(t,-1),Np(e,-1)),"float32")))}function Bw(t,e){return Fw(t,e)}function Ww(t,e){return t.rank===e.rank&&(t=t.squeeze([t.rank-1])),(e=e.argMax(-1)).dtype!==t.dtype&&(e=e.asType(t.dtype)),hd(t,e).asType("float32")}const Uw=Ow,Gw=Dw,jw={binaryAccuracy:Pw,categoricalAccuracy:Vw,precision:function(t,e){return fp((()=>{const n=function(t,e){return fp((()=>Sd(t.equal(1),e.equal(1)).sum().cast("float32")))}(t,e),s=function(t,e){return fp((()=>Sd(t.equal(0),e.equal(1)).sum().cast("float32")))}(t,e),r=n.add(s);return Cf(bd(r,0),n.div(r),0).cast("float32")}))},categoricalCrossentropy:Uw,sparseCategoricalCrossentropy:Gw,mse:$w,MSE:$w,mae:Ew,MAE:Ew,mape:Rw,MAPE:Rw,cosine:Mw};function Hw(t){if("string"==typeof t&&t in jw)return jw[t];if("string"!=typeof t&&null!=t)return t;throw new fx(`Unknown metric ${t}`)}function qw(t){if(bx(null!==t,`Unknown LossOrMetricFn ${t}`),"string"==typeof t)return t;{let e;for(const n of Object.keys(Lw))if(Lw[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(jw))if(jw[n]===t){e=n;break}return void 0!==e?e:t.name}}function Xw(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!Kw(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Kw(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!=typeof n)return!1;if(!Kw(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!Kw(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function Yw(t,e,n=console.log){let s="";for(let n=0;n<t.length;++n)n>0&&(s=s.slice(0,s.length-1)+" "),s+=t[n],s=s.slice(0,e[n]),s+=" ".repeat(e[n]-s.length);n(s)}function Zw(t,e,n){let s;try{s=JSON.stringify(t.outputShape)}catch(t){s="multiple"}Yw([`${t.name} (${t.getClassName()})`,s,t.countParams().toString()],e,n)}function Jw(t,e,n,s){let r;try{r=JSON.stringify(t.outputShape)}catch(t){r="multiple"}const a=[];for(const e of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(e)))for(let t=0;t<e.inboundLayers.length;++t){const n=e.inboundLayers[t].name,s=e.nodeIndices[t],r=e.tensorIndices[t];a.push(`${n}[${s}][${r}]`)}const i=t.name,o=t.getClassName(),l=0===a.length?"":a[0];Yw([`${i} (${o})`,r,t.countParams().toString(),l],e,s);for(let t=1;t<a.length;++t)Yw(["","","",a[t]],e,s)}function Qw(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function tk(t,e){if(null===t)return null;if("string"==typeof t)return _x(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],s=t.length;for(let r=0;r<s;++r){const s=t[r];Qw(e,r,s)?n.push(s):n.push(tk(s,e))}return n}{const e={};for(const n of Object.keys(t)){const s=t[n];if("name"===n&&"string"==typeof s)e[n]=s;else{const t=_x(n);e[t]=tk(s,t)}}return e}}function ek(t,e){if(null==t)return null;if("string"==typeof t)return kx(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],s=t.length;for(let r=0;r<s;++r){const s=t[r];Qw(e,r,s)?n.push(s):n.push(ek(s,e))}return n}{const e={};for(const n of Object.keys(t)){const s=t[n];e[kx(n)]="name"!==n&&"className"!==n||"string"!=typeof s?ek(s,n):s}return e}}const nk="3.3.0";class sk{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof sk)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new fx(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return Dh(e,t.dtype)}catch(n){throw new fx(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof cw){if(null==this.id2Value[t.id])throw new fx(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new fx(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof cw){if(null==this.id2Value[t.id])throw new fx(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new fx(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&mp(this.id2Mask)}}const rk={},ak={};function ik(t,e,n,s){const r=null!=n&&n.training,a=Array.isArray(t),i=a?t:[t],o=i.map((t=>t.name)),l=[],u=e.names();for(const t of o)-1!==u.indexOf(t)?l.push(e.getValue(t)):l.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const c=o.join(",")+"|"+e.names().join(",");let h,p;if(null==rk[c]){const t=function(t,e){di(null!=t&&t.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===t.length){const r=lk(t[0],e);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const a of t){const{sorted:t,recipientMap:i}=lk(a,e);for(const e of t)r.has(e.name)||(n.push(e),r.add(e.name));for(const t in i)null==s[t]&&(s[t]=new Set),i[t].forEach((e=>s[t].add(e)))}}return{sorted:n,recipientCounts:ok(s)}}(i,e);h=t.sorted,p=t.recipientCounts,rk[c]=h,ak[c]=p}h=rk[c],p={},r||Object.assign(p,ak[c]);const d=new sk(e);for(let t=0;t<h.length;++t){if(null!=s){const t=dp().numTensors;t>s.maxNumTensors&&(s.maxNumTensors=t),t<s.minNumTensors&&(s.minNumTensors=t)}const a=h[t],i=a.sourceLayer;if(i instanceof gw)continue;const u=[],c=[],f=[];let m=!1;for(const t of a.inputs){const n=d.getValue(t),s=d.getMask(t);u.push(n),c.push(s),null!=s&&(m=!0),r||(p[t.name]--,0!==p[t.name]||e.hasKey(t)||-1!==o.indexOf(t.name)||n.isDisposed||!0===t.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=wx(i.apply(u,n));let y=null;i.supportsMasking&&(y=i.computeMask(u,c));const b=uk(a),x=Array.isArray(b)?b:[b];for(let t=0;t<x.length;++t){d.hasKey(x[t])||d.add(x[t],g[t],Array.isArray(y)?y[0]:y);const e=o.indexOf(x[t].name);-1!==e&&(l[e]=g[t])}r||mp(f)}return d.disposeMasks(),a?l:l[0]}function ok(t){const e={};for(const n in t)e[n]=t[n].size;return e}function lk(t,e){const n=new Set,s=[],r={};for(const t of e.names())n.add(t);const a=[],i=[];for(a.push(t);a.length>0;){const t=a[a.length-1];if(n.has(t.name)){a.pop();continue}const e=i[i.length-1]===a.length-1;if(0===t.inputs.length||e)a.pop(),s.push(t),n.add(t.name),e&&i.pop();else{i.push(a.length-1);for(const e of t.inputs)null==r[e.name]&&(r[e.name]=new Set),r[e.name].add(t.name),n.has(e.name)||a.push(e)}}return{sorted:s,recipientMap:r}}function uk(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const s of t.sourceLayer.inboundNodes[e].outputTensors)if(s.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}class ck extends fw{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=Qv(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],Ax(this.inputs).length!==this.inputs.length)throw new fx(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((t=>t.name))}`);Ax(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((t=>t.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const t of this.outputs){const e=t.sourceLayer,n=t.nodeIndex,s=t.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(s)}for(const t of this.inputs){const e=t.sourceLayer,n=t.nodeIndex,s=t.tensorIndex;bx(0===n,"input layer has >1 nodes"),bx(0===s,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(s)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e];if(!(n instanceof gw))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${e} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const t of this.outputLayers)this.outputNames.push(t.name);this.internalInputShapes=this.inputs.map((t=>t.shape)),this.internalOutputShapes=this.outputs.map((t=>t.shape));const e={},n={},s={},r={},a={},i=[],o=(t,e,n,s,r,l)=>{null!=s&&null!=r&&null!=l||(s=t.sourceLayer,r=t.nodeIndex,l=t.tensorIndex);const u=s.inboundNodes[r];if(-1!==n.indexOf(u))throw new dx(`The tensor ${t.name} at layer "${s.name}" is part of a cycle.`);if(-1!==e.indexOf(u))return;this.containerNodes.add(ck.nodeKey(s,r)),s.id in a||(a[s.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let t=0;t<c;t++){const s=u.inputTensors[t],r=u.inboundLayers[t],a=u.nodeIndices[t],i=u.tensorIndices[t];o(s,e,n,r,a,i)}for(e.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const t of this.outputs)o(t,l,u);const c=i.slice().reverse();for(const t of c){n[t.id]=t,t.id in e||(e[t.id]=0);let a=e[t.id];const i=null==s[t.outboundLayer.id]?0:s[t.outboundLayer.id];a=Math.max(a,i),s[t.outboundLayer.id]=a,r[t.outboundLayer.id]=t.outboundLayer,e[t.id]=a;for(let s=0;s<t.inboundLayers.length;s++){const r=t.inboundLayers[s],i=t.nodeIndices[s],o=r.inboundNodes[i],l=null==e[o.id]?0:e[o.id];e[o.id]=Math.max(a+1,l),n[o.id]=o}}const h={};for(const t in e){const s=e[t];s in h||(h[s]=[]),h[s].push(n[t])}const p={};for(const t in s){const e=s[t];e in p||(p[e]=[]),p[e].push(r[t])}let d=Object.keys(p).map((t=>parseInt(t,10))).sort(Sx);this.layers=[];for(const t of d){const e=p[t];e.sort(((t,e)=>{const n=a[t.id],s=a[e.id];return n<s?-1:n>s?1:0}));for(const t of e)t instanceof ck&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=p,d=Object.keys(h).map((t=>parseInt(t,10))).sort(Sx);const f=this.inputs.slice(),m=[];for(const t of d)for(const e of h[t]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new dx(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${m}`);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=h;const g=this.layers.map((t=>t.name));for(const t of g){const e=g.filter((e=>e===t)).length;if(1!==e)throw new dx(`The name "${t}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new pw({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((t=>null)),outputMasks:this.outputs.map((t=>null)),inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs.map((t=>t.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach((e=>{e._trainableWeights.forEach((e=>e.trainable=t))})),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new fx("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let s=0;for(const t of this.layers)for(const e of t.weights){if(null!=n[e.originalName])throw new fx(`Duplicate weight name: ${e.originalName}`);n[e.originalName]=e,s++}const r=[];for(const s in t){let a=s;if(null==n[s]){const t=s.split("/");a=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[a])r.push([n[a],t[s]]);else if(e)throw new fx(`Provided weight data has no target variable: ${s}`);delete n[a]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new fx(`${t.length} of ${s} weights are not set: ${t}`)}lw(r)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${nk}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=ek(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return fp((()=>{t=wx(t);const n=new sk;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return ik(this.outputs,n,e)}))}computeMask(t,e){return fp((()=>{let n;return t=wx(t),n=null==e?yx(null,t.length):wx(e),this.runInternalGraph(t,n)[1]}))}computeOutputShape(t){const e=ew(t);if(e.length!==this.inputLayers.length)throw new fx(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let t=0;t<e.length;t++){const s=this.inputLayers[t],r=e[t];n[s.name+"_0_0"]=r}const s=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(Sx);if(s.length>1)for(const t of s){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((t=>t.id)).indexOf(e.id))continue;const s=[];for(let e=0;e<t.inboundLayers.length;e++){const r=t.inboundLayers[e],a=t.nodeIndices[e],i=t.tensorIndices[e],o=n[`${r.name}_${a}_${i}`];s.push(o)}const r=ew(e.computeOutputShape(vx(s))),a=e.inboundNodes.indexOf(t);for(let t=0;t<r.length;t++)n[`${e.name}_${a}_${t}`]=r[t]}}const r=[],a=[];for(let t=0;t<this.outputLayers.length;t++){const e=this.outputLayers[t],n=this.outputLayersNodeIndices[t],s=this.outputLayersTensorIndices[t],r=`${e.name}_${n}_${s}`;a.push(r)}for(let t=0;t<a.length;t++){const e=a[t];bx(e in n),r.push(n[e])}return vx(r)}runInternalGraph(t,e){null==e&&(e=yx(null,t.length));const n={};for(let s=0;s<this.inputs.length;++s){const r=this.inputs[s],a=t[s],i=e[s];n[r.id]=[a,i]}const s=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(Sx);for(const t of s){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer,s=t.inputTensors,r=t.outputTensors,a=new Array;for(const t of s)t.id in n&&a.push(n[t.id]);if(a.length===s.length){let s,i,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===a.length){const[t,n]=a[0];null==u.mask&&(u.mask=n),o=wx(e.call(t,u)),l=wx(e.computeMask(t,n)),s=[t],i=[n]}else s=a.map((t=>t[0])),i=a.map((t=>t[1])),null==u.mask&&(u.mask=i),o=wx(e.call(s,u)),l=wx(e.computeMask(s,i));if(e.activityRegularizer)throw new mx("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<r.length;++t){const e=r[t],s=o[t],a=l[t];n[e.id]=[s,a]}}}}const r=[],a=[],i=[];for(const t of this.outputs){bx(t.id in n,`Could not compute output ${t.name} : ${t.id}`);const[e,s]=n[t.id];i.push(e.shape),r.push(e),a.push(s)}return[r,a,i]}buildNodeConversionMap(t){const e={};let n;for(const t of this.layers){n=t instanceof ck?1:0;for(let s=0;s<t.inboundNodes.length;s++){const r=ck.nodeKey(t,s);this.containerNodes.has(r)&&(e[r]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new fx(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new fx("Provide either a layer name or layer index");for(const e of this.layers)if(e.name===t)return e;throw new fx(`No such layer: ${t}`)}calculateLosses(){return fp((()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const s=ck.nodeKey(e,n);this.containerNodes.has(s)&&t.push(...e.calculateLosses())}return t}))}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const t of this.layers){const s=t.getClassName(),r=t.getConfig(),a=[];for(let n=0;n<t.inboundNodes.length;n++){const s=t.inboundNodes[n],r=ck.nodeKey(t,n);let i={};if(this.containerNodes.has(r)){if(s.callArgs)try{JSON.stringify(s.callArgs),i=s.callArgs}catch(e){console.warn(`Layer ${t.name} was passed non-serializable keyword arguments: ${s.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(s.inboundLayers.length>0){const t=[];for(let n=0;n<s.inboundLayers.length;n++){const r=s.inboundLayers[n],a=s.nodeIndices[n],o=s.tensorIndices[n];let l=e[ck.nodeKey(r,a)];null==l&&(l=0),t.push([r.name,l,o,i])}a.push(t)}}}const i={};i.name=t.name,i.className=s,i.config=r,i.inboundNodes=a,n.push(i)}t.layers=n;const s=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t],r=this.inputLayersNodeIndices[t],a=ck.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=e[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[t];s.push([n.name,i,o])}t.inputLayers=s;const r=[];for(let t=0;t<this.outputLayers.length;t++){const n=this.outputLayers[t],s=this.outputLayersNodeIndices[t],a=ck.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=e[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[t];r.push([n.name,i,o])}return t.outputLayers=r,t}static fromConfig(t,e,n={},s=!1){const r={},a={};function i(t,e){t.name in a?a[t.name].push(e):a[t.name]=[e]}function o(t,e){const n=[];let s;for(const a of e){const o=a[0],l=a[1],u=a[2];if(s=null==a[3]?{}:a[3],!(o in r))return void i(t,e);const c=r[o];if(c.inboundNodes.length<=l)return void i(t,e);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&t.apply(vx(n),s)}function l(t){const n=t.name,a=Sw(t,null!=e.customObjects?e.customObjects:{});a.setFastWeightInitDuringBuild(s),r[n]=a,t.inboundNodes.forEach((t=>{if(!(t instanceof Array))throw new fx(`Corrupted configuration, expected array for nodeData: ${t}`);i(a,t)}))}const u=e.name,c=e.layers;for(const t of c)l(t);for(;!$x(a);)for(const t of c){const e=r[t.name];if(e.name in a){const t=a[e.name];delete a[e.name];for(const n of t)o(e,n)}}const h=[],p=[],d=e.inputLayers;for(const t of d){const e=t[0],n=t[1],s=t[2];bx(e in r);const a=r[e].inboundNodes[n].outputTensors;h.push(a[s])}const f=e.outputLayers;for(const t of f){const e=t[0],n=t[1],s=t[2];bx(e in r);const a=r[e].inboundNodes[n].outputTensors;p.push(a[s])}return new t({inputs:h,outputs:p,name:u})}get stateful(){if(this._stateful)throw new fx("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){fp((()=>{this.layers.forEach((t=>{t.stateful&&t.resetStates()}))}))}}function hk(t,e){return function(t,e,n){const s=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>null));if(1===s)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==s)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach((e=>{e in t?n.push(t[e]):n.push(null)})),n}throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}(t,e,"classWeight")}async function pk(t,e,n,s){if(null!=e||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=fp((()=>{if(1===t.shape.length)return t.clone();if(2===t.shape.length){if(t.shape[1]>1){const e=1;return t.argMax(e)}if(1===t.shape[1])return t.reshape([t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),s=Array.from(await e.data());mp(e);const r=[];return s.forEach((t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);r.push(n[t])})),kf(r,"float32")}return null}function dk(t,e){return Id(t,e)}function fk(t,e){let n,s;const r=e;n=r.xs,s=r.ys,di(null!=n&&null!=s,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`));const a=mk("input",t.inputNames,n),i=mk("output",t.outputNames,s),o=a[0].shape[0];di(a.length===t.inputs.length,(()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`)),di(i.length===t.outputs.length,(()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`));for(let e=0;e<a.length;e++)di(a[e].shape[0]===o,(()=>`Batch size mismatch: input ${t.inputNames[e]} has ${a[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));for(let e=0;e<i.length;e++)di(i[e].shape[0]===o,(()=>`Batch size mismatch: output ${t.outputNames[e]} has ${i[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));return{xs:a,ys:i}}function mk(t,e,n){if(n instanceof wc)return[n];if(Array.isArray(n))return di(n.length===e.length,(()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`)),n;{const s=[];for(const r of e){if(null==n[r])throw new fx(`The feature data generated by the dataset lacks the required ${t} key '${r}'.`);s.push(n[r])}return s}}function gk(t){return"function"==typeof t.iterator}function yk(t){di(t>0&&Number.isInteger(t),(()=>`batchSize is required to be a positive integer, but got ${t}`))}function bk(t,e,n){return null==t?[null]:Array.isArray(t)?t.map((t=>fv(t,e,n-e))):fv(t,e,n-e)}function xk(t,e){return fp((()=>null==t?null:Array.isArray(t)?t.map((t=>xk(t,e))):kv(t,"int32"===e.dtype?e:e.toInt())))}function vk(t,e){const n=[];let s=0,r=null;for(;s<t;)r=s+e,r>=t&&(r=t),n.push([s,r]),s=r;return n}function wk(t){const e=[];t instanceof wc&&(t=[t]);for(let n=0;n<t.length;++n){const s=t[n];if(1===s.rank)e.push(dv(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function kk(t,e){if(null==t)return;const n=[];if(e instanceof wc)n.push(e.id);else if(Array.isArray(e))e.forEach((t=>n.push(t.id)));else if(null!=e)for(const t in e){const s=e[t];n.push(s.id)}const s=[];if(t instanceof wc)-1===n.indexOf(t.id)&&s.push(t);else if(Array.isArray(t))t.forEach((t=>{-1===n.indexOf(t.id)&&s.push(t)}));else if(null!=t)for(const e in t){const r=t[e];-1===n.indexOf(r.id)&&s.push(r)}s.forEach((t=>{t.isDisposed||t.dispose()}))}function _k(t){return Array.isArray(t)}function Ik(t){return!function(t){return t instanceof wc}(t)&&!_k(t)}function Tk(t,e,n,s=!0,r=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(_k(t)&&t.length>0)e=!0;else if(Ik(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new fx(`Error when checking model ${r} expected no data, but got ${t}`)}return[]}if(null==t)return e.map((t=>null));let a;if(Ik(t)){a=[];for(const n of e){if(null==t[n])throw new fx(`No data provided for "${n}". Need data for each key in: ${e}`);a.push(t[n])}}else if(_k(t)){if(t.length!==e.length)throw new fx(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);a=t}else{if(e.length>1)throw new fx(`The model ${r} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);a=[t]}if(a=wk(a),null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const i=a[t];if(i.shape.length!==n[t].length)throw new fx(`Error when checking ${r}: expected ${e[t]} to have ${n[t].length} dimension(s). but got array with shape ${i.shape}`);for(let a=0;a<n[t].length;++a){if(0===a&&!s)continue;const o=i.shape[a],l=n[t][a];if(null!=l&&l>=0&&o!==l)throw new fx(`Error when checking ${r}: expected ${e[t]} to have shape [${n[t]}], but got array with shape [${i.shape}].`)}}return a}function Nk(t,e,n,s=!0,r=""){let a;if(Array.isArray(t)){if(t.length!==e.length)throw new fx(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);a=t}else{if(e.length>1)throw new fx(`The model expects ${e.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);a=[t]}if(null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const i=a[t];if(i.shape.length!==n[t].length)throw new fx(`Error when checking ${r}: expected ${e[t]} to have ${n[t].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[t].length;++a){if(0===a&&!s)continue;const o=i.shape[a],l=n[t][a];if(null!=l&&l!==o)throw new fx(`Error when checking ${r}: expected ${e[t]} to have shape ${JSON.stringify(n[t])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Ck extends ck{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new fx("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(t,e,n,s=console.log){const r=function(t){let e=!0;const n=[],s=[];for(const e in t.nodesByDepth)n.push(t.nodesByDepth[e]);for(const t of n){if(t.length>1||1===t.length&&t[0].inboundLayers.length>1){e=!1;break}s.push(...t)}if(e)for(const n of t.layers){let t=!1;for(const r of n.inboundNodes)if(-1!==s.indexOf(r)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),a=["Layer (type)","Output shape","Param #"];let i;if(r?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((t=>Math.floor(e*t)))),!r){a.push("Receives inputs"),i=[];for(const e in t.nodesByDepth)i.push(...t.nodesByDepth[e])}s("_".repeat(e)),Yw(a,n,s),s("=".repeat(e));const o=t.layers;for(let t=0;t<o.length;++t)r?Zw(o[t],n,s):Jw(o[t],n,i,s),s((t===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const l=function(t){let e;return e=null!=t.collectedTrainableWeights?rw(t.collectedTrainableWeights):rw(t.trainableWeights),e}(t),u=rw(t.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(e))}(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>Wm.adagrad(.01),Adadelta:()=>Wm.adadelta(1,.95,hx()),Adam:()=>Wm.adam(.001,.9,.999,hx()),Adamax:()=>Wm.adamax(.002,.9,.999,hx(),0),RMSProp:()=>Wm.rmsprop(.001,.9,0,hx()),SGD:()=>Wm.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new fx(`Unknown Optimizer ${t}`)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof wp))throw new fx("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new fx(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map((t=>zw(t)))}else{const n=zw(t.loss);this.outputs.forEach((t=>{e.push(n)}))}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new fx(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(zw(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let t=0;t<this.outputs.length;++t){const e=this.internalOutputShapes[t],n=this.outputNames[t];this.feedOutputNames.push(n),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[t])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],nv("loss",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}}));const s=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>[]));let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);n=t}if(Array.isArray(n))return e.map((t=>n));{const t=[];for(const s of e){let e=n.hasOwnProperty(s)?n[s]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),r=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};nv("metric",(()=>{for(let t=0;t<this.outputs.length;++t)-1===n.indexOf(t)&&(e=>{let n,s,a;for(const i of e){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const e=this.internalOutputShapes[t];let r;1===e[e.length-1]||this.lossFunctions[t]===Fw?-1!==["accuracy","acc"].indexOf(i)?s=Pw:-1!==["crossentropy","ce"].indexOf(i)&&(s=Bw):this.lossFunctions[t]===Dw?-1!==["accuracy","acc"].indexOf(i)?s=Ww:-1!==["crossentropy","ce"].indexOf(i)&&(s=Gw):-1!==["accuracy","acc"].indexOf(i)?s=Vw:-1!==["crossentropy","ce"].indexOf(i)&&(s=Uw),-1!==["accuracy","acc"].indexOf(i)?r="acc":-1!==["crossentropy","ce"].indexOf(i)&&(r="ce"),a=s,n=""+r}else{const t=Hw(i);a=t,n=""+qw(i)}let e;nv(n,(()=>{e=a})),r(t,n,e)}})(s[t])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const s=null==n.batchSize?32:n.batchSize;yk(s);const r=this.standardizeUserDataXY(t,e,!0,s);try{const t=r[0].concat(r[1]);this.makeTestFunction();const e=this.testFunction;return vx(this.testLoop(e,t,s,n.verbose,n.steps))}finally{kk(r[0],t),kk(r[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const s=null!=(n=n||{}).batches,r=t.testFunction;let a=[];if(n.verbose>0)throw new mx("Verbose mode is not implemented yet.");di(!s||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof e.next?e:await e.iterator();let o=0,l=0;for(;!s||l<n.batches;){const e=await i.next();if(a=fp((()=>{if(e.value){const{xs:n,ys:s}=fk(t,e.value),i=n.concat(s),u=fp((()=>r(i)));if(mp(i),0===l)for(let t=0;t<u.length;++t)a.push(vp(0));const c=i[0].shape[0];for(let t=0;t<u.length;++t){const e=u[t],n=a[t];a[t]=fp((()=>_p(a[t],Id(c,e)))),l>0&&mp(n)}mp(u),o+=c,++l}return a})),e.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let t=0;t<a.length;++t){const e=a[t];a[t]=id(a[t],o),mp(e)}return vx(a)}(this,t,e)}checkNumSamples(t,e,n,s="steps"){let r;if(null!=n){if(r=null,null!=e)throw new fx(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else{if(null==t)throw new fx(`Either the input data should have a defined shape, or ${s} shoud be specified.`);r=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return r}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new fx("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),s=n?e:[e],r=this.retrieveSymbolicTensors(s),a=new sk;if(t instanceof wc&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new fx(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)a.add(this.inputs[e],t[e])}else for(const e of this.inputs){const n=t[e.name];if(null==n)throw new fx(`No value is provided for the model's input ${e.name}`);a.add(e,n)}const i=ik(r,a);return n?i:i[0]}retrieveSymbolicTensors(t){const e=yx(null,t.length);let n=t.length;for(const s of this.layers){const r=Array.isArray(s.output)?s.output:[s.output],a=r.map((t=>t.name));for(let s=0;s<t.length;++s){const i=a.indexOf(t[s]);if(-1!==i&&(e[s]=r[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach(((e,s)=>{null==e&&n.push(t[s])})),new fx(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return e}predictLoop(t,e=32,n=!1){return fp((()=>{const s=this.checkNumSamples(t);if(n)throw new mx("Verbose predictLoop() is not implemented yet.");const r=vk(s,e),a=this.outputs.map((t=>[]));for(let e=0;e<r.length;++e)fp((()=>{const n=r[e][0],s=r[e][1],a=bk(t,n,s),i=[];if(Array.isArray(a))for(let t=0;t<a.length;++t)i.push({key:this.inputs[t],value:a[t]});else i.push({key:this.inputs[0],value:a});const o=new sk(i);return ik(this.outputs,o)})).forEach(((t,e)=>a[e].push(t)));return vx(a.map((t=>Xp(t,0))))}))}predict(t,e={}){const n=wk(t);Nk(n,this.inputNames,this.feedInputShapes,!1);try{const t=null==e.batchSize?32:e.batchSize;return yk(t),this.predictLoop(n,t)}finally{kk(n,t)}}predictOnBatch(t){Nk(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,s){if(null==this.optimizer_)throw new dx("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let t=0;t<this.feedOutputShapes.length;++t){const e=this.feedOutputShapes[t];this.feedLossFns[t]===Dw?r.push(e.slice(0,e.length-1).concat([1])):r.push(e)}if(function(t,e,n){const s=Ax(t.map((t=>t.shape[0])));s.sort();const r=Ax(e.map((t=>t.shape[0])));if(r.sort(),s.length>1)throw new fx(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((t=>t.shape)))}`);if(r.length>1)throw new fx(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((t=>t.shape)))}`);if(s.length>0&&r.length>0&&!bi(s,r))throw new fx(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}(t=Tk(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=Tk(e,this.feedOutputNames,r,!1,"target")),function(t,e,n){const s=[$w,Fw,Ow];for(let r=0;r<t.length;++r){const a=t[r],i=e[r],o=n[r];if(null!=i){if(i===Ow&&1===a.shape[a.shape.length-1])throw new fx(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(i)){const t=a.shape.slice(1),e=o.slice(1);for(let n=0;n<t.length;++n){const s=t[n],r=e[n];if(null!=r&&s!==r)throw new fx(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=s&&s>0&&t[0].shape[0]%s!=0)throw new fx(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,s,r=!0,a){const[i,o]=this.standardizeUserDataXY(t,e,r,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=s){const t=hk(s,this.outputNames);l=[];for(let e=0;e<t.length;++e)l.push(await pk(o[e],null,t[e]))}return[i,o,l]}testLoop(t,e,n,s=0,r){return fp((()=>{const a=this.checkNumSamples(e,n,r,"steps"),i=[];if(s>0)throw new mx("Verbose mode is not implemented yet.");if(null!=r)throw new mx("steps mode in testLoop() is not implemented yet");{const s=vk(a,n),r=kf(hv(0,a));for(let n=0;n<s.length;++n){const a=s[n][0],o=s[n][1],l=fv(r,a,o-a),u=xk(e,l),c=t(u);if(0===n)for(let t=0;t<c.length;++t)i.push(vp(0));for(let t=0;t<c.length;++t){const e=c[t];i[t]=_p(i[t],Id(o-a,e))}}for(let t=0;t<i.length;++t)i[t]=id(i[t],a)}return i}))}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const s=t[n];let r=s;xx(t,s)>1&&(r+=`_${xx(t.slice(0,n),s)}`),e.push(r)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((t=>t.read()));return[this.optimizer_.minimize((()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const i=new sk(t),o=ik(this.outputs,i,{training:!0});let l;for(let t=0;t<this.lossFunctions.length;++t){let n=(0,this.lossFunctions[t])(s[t],o[t]);null!=r[t]&&(n=dk(n,r[t]));const a=Rd(n);e.push(a),l=0===t?n:_p(l,n)}for(let t=0;t<this.metricsTensors.length;++t){let n;if(this.outputs.length>1&&t<this.outputs.length)n=e[t];else{const e=this.metricsTensors[t][0],r=this.metricsTensors[t][1];n=Rd(e(s[r],o[r]))}gp(n),a.push(n)}return l=Rd(l),this.calculateLosses().forEach((t=>{l=_p(l,t)})),l}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=t=>fp((()=>{const e=[];let n;const s=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let t=0;t<this.inputs.length;++t)a.push({key:this.inputs[t],value:s[t]});const i=new sk(a),o=ik(this.outputs,i);for(let t=0;t<this.lossFunctions.length;++t){const s=this.lossFunctions[t],a=Rd(s(r[t],o[t]));n=0===t?a:_p(n,a),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],s=this.metricsTensors[t][1],a=Rd(n(r[s],o[s]));e.push(a)}return e}))}async fit(t,e,n={}){return async function(t,e,n,s={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,a,i,o,l,u,c;t.isTraining=!0;try{const h=null==s.batchSize?32:s.batchSize;yk(h);const p=!1,d=await t.standardizeUserData(e,n,s.sampleWeight,s.classWeight,p,h);r=d[0],a=d[1],c=d[2];let f,m=!1;if(null!=s.validationData&&s.validationData.length>0){if(m=!0,2!==s.validationData.length)throw 3===s.validationData.length?new mx("validationData including sample weights is not supported yet."):new fx(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);i=s.validationData[0],o=s.validationData[1];const e=!0,n=await t.standardizeUserData(i,o,null,null,e,h);l=n[0],u=n[1],f=l.concat(u)}else if(null!=s.validationSplit&&s.validationSplit>0&&s.validationSplit<1){m=!0;const t=Math.floor(r[0].shape[0]*(1-s.validationSplit)),e=r[0].shape[0];l=bk(r,t,e),r=bk(r,0,t),u=bk(a,t,e),a=bk(a,0,t),f=l.concat(u)}else null!=s.validationSteps&&(m=!0);const g=r.concat(a).concat(c);t.checkTrainableWeightsConsistency();const y=t.makeTrainFunction(),b=t.getDedupedMetricsNames();let x,v;m?(t.makeTestFunction(),x=t.testFunction,v=b.slice().concat(b.map((t=>"val_"+t)))):(x=null,f=[],v=b.slice());const w=Tw(s.callbacks,s.yieldEvery),k=await async function(t,e,n,s,r,a,i,o,l,u,c,h,p,d,f){null==r&&(r=32),null==a&&(a=1),null==c&&(c=!0),null==p&&(p=0);let m=!1;null!=l&&null!=u&&(m=!0);const g=t.checkNumSamples(n,r,d,"steps_per_epoch");let y;null!=g&&(y=hv(0,g)),null==i&&(i=1);const{callbackList:b,history:x}=Cw(o,i,a,p,g,d,r,m,h);b.setModel(t),t.history=x,await b.onTrainBegin(),t.stopTraining_=!1;for(let i=p;i<a;++i){await b.onEpochBegin(i);const a={};{if("batch"===c)throw new mx("batch shuffling is not implemneted yet");c&&ci(y);const i=kf(y),o=vk(g,r);for(let c=0;c<o.length;++c){const h={};if(await b.onBatchBegin(c,h),fp((()=>{const p=o[c][0],d=o[c][1],f=fv(i,p,d-p);h.batch=c,h.size=d-p;const g=xk(n,f),y=e(g);for(let t=0;t<s.length;++t){const e=s[t],n=y[t];h[e]=n,gp(n)}if(c===o.length-1&&m){const e=t.testLoop(l,u,r);for(let t=0;t<s.length;++t){const n=s[t],r=e[t];gp(r),a["val_"+n]=r}}})),await b.onBatchEnd(c,h),bw(h),t.stopTraining_)break}i.dispose()}if(await b.onEpochEnd(i,a),t.stopTraining_)break}return await b.onTrainEnd(),await t.history.syncData(),t.history}(t,y,g,b,h,s.epochs,s.verbose,w,x,f,s.shuffle,v,s.initialEpoch,null);return k}finally{t.isTraining=!1,kk(r,e),kk(a,n),kk(l,i),kk(u,o),null!=c&&mp(c)}}(this,t,e,n)}async fitDataset(t,e){return async function(t,e,n){const s=null!=n.batchesPerEpoch;if(di(null!=t.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),di(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),di(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),di(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),di(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const r=null!=n.validationData;let a,i;if(r)if(gk(n.validationData))di(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const t=function(t){if(3===t.length)throw new mx("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);a=t.xs,i=t.ys}const o=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let u;u=r?l.slice().concat(l.map((t=>"val_"+t))):l.slice();const c=Tw(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:d}=Cw(c,h,n.epochs,null,null,function(t,e){let n=null;return null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size),n}(e,n),null,r,u);p.setModel(t),t.history=d,await p.onTrainBegin(),t.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await e.iterator();for(;f<n.epochs;){const u={};await p.onEpochBegin(f);let c=0,h=0;for(s||(m=await e.iterator());!s||c<n.batchesPerEpoch;){const e=await m.next();if(s&&e.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:s,ys:r}=fk(t,e.value),a={};a.batch=h,a.size=s[0].shape[0],await p.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const e=hk(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)i.push(await pk(r[t],null,e[t]))}const u=s.concat(r).concat(i),d=o(u);mp(u);for(let t=0;t<l.length;++t){const e=l[t],n=d[t];a[e]=n,gp(n)}await p.onBatchEnd(h,a),bw(a),h++,c++}if(s?c>=n.batchesPerEpoch:e.done){if(r){let e;e=gk(n.validationData)?wx(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):wx(t.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)u[`val_${t.metricsNames[n]}`]=e[n]}break}if(t.stopTraining_)break}if(await p.onEpochEnd(f,u),f++,t.stopTraining_)break}return await p.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),s=n[0],r=n[1],a=this.makeTrainFunction()(s.concat(r)),i=[];for(const t of a){const e=await t.data();i.push(e[0])}return mp(a),vx(i)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let t=0;t<s.length;++t)n&&!s[t].trainable||e.push({name:s[t].originalName,tensor:r[t]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=dp().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-dp().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=kx(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map((t=>kx(t)))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const s of e){if("string"!=typeof n[s])throw new Error("Serialization of non-string loss is not supported.");t[s]=kx(n[s])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[kx(qw(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((t=>kx(qw(t))));{const t={};for(const e in this.metrics)t[e]=kx(qw(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=Sw(tk(t.optimizer_config));let n,s;if("string"==typeof t.loss)n=_x(t.loss);else if(Array.isArray(t.loss))n=t.loss.map((t=>_x(t)));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=_x(t.loss[e])}if(Array.isArray(t.metrics))s=t.metrics.map((t=>_x(t)));else if(null!=t.metrics){s={};for(const e in t.metrics)s[e]=_x(t.metrics[e])}this.compile({loss:n,metrics:s,optimizer:e})}async save(t,e){if("string"==typeof t){const e=uh(t);if(0===e.length)throw new fx(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new fx(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new fx("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await eh(this.getNamedWeights(e)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${nk}`,convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:r}=await eh(await this.optimizer.getWeights(),t);n.specs.push(...r),n.data=ah([n.data,e])}if(null!=this.userDefinedMetadata){const t=!0;Xw(this.userDefinedMetadata,this.name,t),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=n.data,s.weightSpecs=n.specs,t.save(s)}setUserDefinedMetadata(t){Xw(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Ck.className="Model",hp(Ck);class Sk extends Ck{}Sk.className="Functional",hp(Sk);class Ak extends Ck{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:Qv("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some((t=>t<0)))throw new fx(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof Ak||t instanceof Ck;let n;if(e){if(n=t,1!==n.outputs.length)throw new fx("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new fx("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new fx("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=function(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new fx("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new gw({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new fx(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new fx("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=mw(this.outputs[0])}this.inboundNodes=[],new pw({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:yx(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(sw(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Ck({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new dx("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new dx("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new dx("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new dx("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},s=!1){let r,a={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new fx("Legacy serialization format not supported yet.");r=e}else di(null!=e.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),r=e.layers,delete e.layers,a=e;const i=new t(a);if(!(i instanceof Ak))throw new mx(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const t of r){const e=Sw(t,void 0,s);s&&e.setFastWeightInitDuringBuild(!0),i.add(e)}return i}set stopTraining(t){if(null==this.model)throw new fx("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new fx("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}Ak.className="Sequential",hp(Ak);class $k extends up{getConfig(){return{}}}class Ek extends $k{apply(t,e=1){return function(t,e=1){if(1!==e)throw new mx(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return od(t)}(t,e)}}Ek.className="elu",hp(Ek);class Rk extends $k{apply(t){return of(t)}}Rk.className="selu",hp(Rk);class Ok extends $k{apply(t){return rf(t)}}Ok.className="relu",hp(Ok);class Dk extends $k{apply(t){return fp((()=>Dd(6,rf(t))))}}Dk.className="relu6",hp(Dk);class Fk extends $k{apply(t){return t}}Fk.className="linear",hp(Fk);class Mk extends $k{apply(t){return uf(t)}}Mk.className="sigmoid",hp(Mk);class Lk extends $k{apply(t){return function(t){return fp((()=>{const e=_p(.5,Id(.2,t));return qp(e,0,1)}))}(t)}}Lk.className="hardSigmoid",hp(Lk);class zk extends $k{apply(t){return gf(t)}}zk.className="softplus",hp(zk);class Pk extends $k{apply(t){return function(t){return fp((()=>id(t,kp(t).add(1))))}(t)}}Pk.className="softsign",hp(Pk);class Vk extends $k{apply(t){return wf(t)}}Vk.className="tanh",hp(Vk);class Bk extends $k{apply(t,e=-1){return mf(t,e)}}Bk.className="softmax",hp(Bk);class Wk extends $k{apply(t,e=-1){return Cd(t,e)}}Wk.className="logSoftmax",hp(Wk);class Uk extends $k{apply(t,e=1){return fp((()=>uf(t.mul(e)).mul(t)))}}function Gk(t){return t.getClassName()}function jk(t,e={}){return Cx(t,cp.getMap().classNameMap,e,"activation")}function Hk(t){if(null==t){return jk({className:"linear",config:{}})}if("string"==typeof t){const e={};return e.className=t,e.config={},jk(e)}return t instanceof $k?t:jk(t)}Uk.className="swish",hp(Uk);class qk extends up{}class Xk extends qk{constructor(t){super(),function(t){if(null!=t&&"object"!=typeof t)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return fp((()=>{let e=Xd([1]);return this.hasL1&&(e=_p(e,Nd(Id(this.l1,kp(t))))),this.hasL2&&(e=_p(e,Nd(Id(this.l2,_v(t))))),e.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}Xk.className="L1L2",hp(Xk);const Kk={l1l2:"L1L2"};function Yk(t){return Tx(t)}function Zk(t,e={}){return Cx(t,cp.getMap().classNameMap,e,"regularizer")}function Jk(t){return null==t?null:"string"==typeof t?Zk({className:t in Kk?Kk[t]:t,config:{}}):t instanceof qk?t:Zk(t)}class Qk extends fw{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=nw(t);let n=rf(t);return null!=this.maxValue&&(n=qp(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}Qk.className="ReLU",hp(Qk);class t_ extends fw{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=nw(t);return vd(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}t_.className="LeakyReLU",hp(t_);class e_ extends fw{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Kv(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Jk(t.alphaRegularizer),this.alphaConstraint=jx(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new fx(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=sw(t)).slice(1);if(null!=this.sharedAxes)for(const t of this.sharedAxes)e[t-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let e=1;e<t.length;++e)n[e]=t[e];this.inputSpec=[new uw({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=nw(t),Jd(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Xv(this.alphaInitializer),alphaRegularizer:Yk(this.alphaRegularizer),alphaConstraint:Ux(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}e_.className="PReLU",hp(e_);class n_ extends fw{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new mx(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=nw(t);return od(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}n_.className="ELU",hp(n_);class s_ extends fw{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=nw(t);return n.mul(pv(n.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}s_.className="ThresholdedReLU",hp(s_);class r_ extends fw{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new Bk).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=nw(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function a_(t,e,n){if("number"==typeof t)return yx(t,e);if(t.length!==e)throw new fx(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let r=0;r<e;++r){const a=t[r];if((s=a)!==parseInt(s.toString(),10))throw new fx(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${a}`)}return t;var s}function i_(t,e,n,s,r=1){if(null==t)return t;let a;return a="same"===n?t:t-(e+(e-1)*(r-1))+1,Math.floor((a+s-1)/s)}function o_(t,e,n,s){if(null==t)return null;if("valid"===s)t=t*e+cv([n-e,0]);else{if("same"!==s)throw new fx(`Unsupport padding mode: ${s}.`);t*=e}return t}function l_(t,e){return fp((()=>(Jx(e),"channelsFirst"===e?Af(t,[0,2,3,1]):t)))}function u_(t,e){return fp((()=>(Jx(e),"channelsFirst"===e?Af(t,[0,2,3,4,1]):t)))}function c_(t,e,n,s=[1,1],r="valid",a,i,o=null){return fp((()=>{if(null==a&&(a="channelsLast"),Jx(a),3!==t.rank&&4!==t.rank)throw new fx(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new fx(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let l=l_(t,a);if("causal"===r)throw new mx("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Gf({x:l,filter:e,strides:s,pad:"same"===r?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(l=Af(l,[0,3,1,2])),l}))}r_.className="Softmax",hp(r_);class h_ extends fw{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",h_.verifyArgs(e),this.rank=t,Ox(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new mx(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=a_(e.kernelSize,t,"kernelSize"),this.strides=a_(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,Qx(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Jx(this.dataFormat),this.activation=Hk(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=Kv(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=jx(e.biasConstraint),this.biasRegularizer=Jk(e.biasRegularizer),this.activityRegularizer=Jk(e.activityRegularizer),this.dilationRate=a_(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new fx(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new fx(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new fx(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(t){if(bx("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!Rx(t.kernelSize,"number",1,3))throw new fx(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Gk(this.activation),useBias:this.useBias,biasInitializer:Xv(this.biasInitializer),biasRegularizer:Yk(this.biasRegularizer),activityRegularizer:Yk(this.activityRegularizer),biasConstraint:Ux(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class p_ extends h_{constructor(t,e){super(t,e),this.kernel=null,p_.verifyArgs(e),this.filters=e.filters,Ox(this.filters,"filters"),this.kernelInitializer=Kv(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=jx(e.kernelConstraint),this.kernelRegularizer=Jk(e.kernelRegularizer)}build(t){t=sw(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new fx(`The channel dimension of the input should be defined. Found ${t[e]}`);const n=t[e],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return fp((()=>{let e;t=nw(t);const n=null==this.bias?null:this.bias.read(),s=Fx(this.activation.getClassName());if(null!=s&&2===this.rank)e=c_(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(1===this.rank)e=function(t,e,n,s=1,r="valid",a,i=1){return fp((()=>{if(null==a&&(a="channelsLast"),Jx(a),3!==t.shape.length)throw new fx(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(3!==e.shape.length)throw new fx(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new fx(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if("channelsFirst"===a&&(t=Af(t,[0,2,1])),"causal"===r)throw new mx("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=td(t,e,s,"same"===r?"same":"valid","NWC",i);return null!=n&&(o=Tv(o,n)),o}))}(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=c_(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new mx("convolutions greater than 3D are not implemented yet.");e=function(t,e,n,s=[1,1,1],r="valid",a,i){return fp((()=>{if(null==a&&(a="channelsLast"),Jx(a),4!==t.rank&&5!==t.rank)throw new fx(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(4!==e.rank&&5!==e.rank)throw new fx(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let o=u_(t,a);if("causal"===r)throw new mx("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=sd(o,e,s,"same"===r?"same":"valid","NDHWC",i),null!=n&&(o=Tv(o,n)),"channelsFirst"===a&&(o=Af(o,[0,4,1,2,3])),o}))}(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e}))}computeOutputShape(t){t=sw(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let t=0;t<n.length;++t){const s=i_(n[t],this.kernelSize[t],this.padding,this.strides[t],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[t]);e.push(s)}let s=[t[0]];return"channelsLast"===this.dataFormat?(s=s.concat(e),s.push(this.filters)):(s.push(this.filters),s=s.concat(e)),s}getConfig(){const t={filters:this.filters,kernelInitializer:Xv(this.kernelInitializer),kernelRegularizer:Yk(this.kernelRegularizer),kernelConstraint:Ux(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new fx(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class d_ extends p_{constructor(t){super(2,t),d_.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!Rx(t.kernelSize,"number",1,2))throw new fx(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}d_.className="Conv2D",hp(d_);class f_ extends p_{constructor(t){super(3,t),f_.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new fx(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}f_.className="Conv3D",hp(f_);class m_ extends d_{constructor(t){if(super(t),this.inputSpec=[new uw({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new fx(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(4!==(t=sw(t)).length)throw new fx("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new fx("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new uw({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return fp((()=>{let e=nw(t);if(4!==e.shape.length)throw new fx(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,s=n[0];let r,a;"channelsFirst"===this.dataFormat?(r=2,a=3):(r=1,a=2);const i=n[r],o=n[a],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],p=[s,o_(i,c,l,this.padding),o_(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=Af(e,[0,2,3,1]));let d=nd(e,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=Af(d,[0,3,1,2])),null!=this.bias&&(d=Tv(d,this.bias.read(),this.dataFormat)),null!=this.activation&&(d=this.activation.apply(d)),d}))}computeOutputShape(t){const e=(t=sw(t)).slice();let n,s,r;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3):(n=3,s=1,r=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return e[n]=this.filters,e[s]=o_(e[s],o,a,this.padding),e[r]=o_(e[r],l,i,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}m_.className="Conv2DTranspose",hp(m_);class g_ extends p_{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new fx("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new fx("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new fx(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Kv(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Jk(e.depthwiseRegularizer),this.depthwiseConstraint=jx(e.depthwiseConstraint),this.pointwiseInitializer=Kv(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Jk(e.pointwiseRegularizer),this.pointwiseConstraint=jx(e.pointwiseConstraint)}build(t){if((t=sw(t)).length<this.rank+2)throw new fx(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new fx(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const n=t[e],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let t=0;t<this.rank;++t)r.push(1);r.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new uw({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return fp((()=>{let e;if(t=nw(t),1===this.rank)throw new mx("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=Af(t,[0,2,3,1])),e=lf(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=Tv(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=Af(e,[0,3,1,2])),e}))}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Xv(this.depthwiseInitializer),t.pointwiseInitializer=Xv(this.pointwiseInitializer),t.depthwiseRegularizer=Yk(this.depthwiseRegularizer),t.pointwiseRegularizer=Yk(this.pointwiseRegularizer),t.depthwiseConstraint=Ux(this.depthwiseConstraint),t.pointwiseConstraint=Ux(this.pointwiseConstraint),t}}g_.className="SeparableConv";class y_ extends g_{constructor(t){super(2,t)}}y_.className="SeparableConv2D",hp(y_);class b_ extends p_{constructor(t){super(1,t),b_.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!Rx(t.kernelSize,"number",1,1))throw new fx(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}b_.className="Conv1D",hp(b_);class x_ extends fw{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return fp((()=>{if(t=nw(t),"channelsLast"===this.dataFormat){const e=gv(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return gv(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=gv(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return gv(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}x_.className="Cropping2D",hp(x_);class v_ extends fw{constructor(t){var e;super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Jx(this.dataFormat),this.interpolation=null==t.interpolation?"nearest":t.interpolation,e=this.interpolation,Ex(qx,"InterpolationFormat",e)}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return fp((()=>{let e=nw(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=Af(e,[0,2,3,1]);const t=this.size[0]*n[2],s=this.size[1]*n[3],r="nearest"===this.interpolation?e.resizeNearestNeighbor([t,s]):e.resizeBilinear([t,s]);return Af(r,[0,3,1,2])}{const t=this.size[0]*n[1],s=this.size[1]*n[2];return"nearest"===this.interpolation?e.resizeNearestNeighbor([t,s]):e.resizeBilinear([t,s])}}))}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}v_.className="UpSampling2D",hp(v_);class w_ extends h_{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Kv(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=jx(t.depthwiseConstraint),this.depthwiseRegularizer=Jk(t.depthwiseRegularizer)}build(t){if((t=sw(t)).length<4)throw new fx(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new fx(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return fp((()=>{let e=function(t,e,n=[1,1],s="valid",r,a){return fp((()=>{null==r&&(r="channelsLast"),Jx(r);let i=l_(t,r);if(4!==t.rank)throw new fx(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(4!==e.rank)throw new fx(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return i=rd(i,e,n,"same"===s?"same":"valid","NHWC",a),"channelsFirst"===r&&(i=Af(i,[0,3,1,2])),i}))}(t=nw(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=Tv(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e}))}computeOutputShape(t){t=sw(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],s="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,r=i_(e,this.kernelSize[0],this.padding,this.strides[0]),a=i_(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],s,r,a]:[t[0],r,a,s]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Xv(this.depthwiseInitializer),t.depthwiseRegularizer=Yk(this.depthwiseRegularizer),t.depthwiseConstraint=Ux(this.depthwiseRegularizer),t}}function k_(t,e,n,s){if(Array.isArray(t)){if(null!=e||null!=n)throw new fx("When inputs is an array, neither initialState or constants should be provided");null!=s&&(n=t.slice(t.length-s,t.length),t=t.slice(0,t.length-s)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function r(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=r(e),constants:n=r(n)}}function __(t,e,n,s=!1,r,a,i=!1,o=!1){return fp((()=>{const l=e.shape.length;if(l<3)throw new fx(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(hv(2,l));if(e=Af(e,u),null!=a)throw new mx("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&((r=r.asType("bool").asType("float32")).rank===l-1&&(r=pd(r,-1)),r=Af(r,u)),s&&(e=af(e,0),null!=r&&(r=af(r,0)));const c=[];let h,p=n;const d=e.shape[0],f=Tf(e);let m,g;null!=r&&(m=Tf(r));for(let e=0;e<d;++e){const n=f[e],s=fp((()=>t(n,p)));if(null==r)h=s[0],p=s[1];else{const t=fp((()=>{const t=m[e],n=Yd(t).sub(t);return{output:s[0].mul(t).add(p[0].mul(n)),newStates:p.map(((e,r)=>s[1][r].mul(t).add(e.mul(n))))}}));h=t.output,p=t.newStates}o&&c.push(h)}return o&&(g=vf(c,1)),[h,g,p]}))}w_.className="DepthwiseConv2D",hp(w_);class I_ extends fw{constructor(t){let e;if(super(t),null==t.cell)throw new fx("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new R_({cells:t.cell}):t.cell,null==e.stateSize)throw new fx("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new uw({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?hv(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((t=>null)):this.states_}setStates(t){this.states_=t}computeOutputShape(t){tw(t)&&(t=t[0]);let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let s;if(s=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const s of e)n.push([t[0],s]);return[s].concat(n)}return s}computeMask(t,e){return fp((()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map((t=>null));return[t].concat(e)}return t}))}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new mx("Constants support is not implemented in RNN yet.");tw(t)&&(t=t[0]);const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new uw({shape:[e,null,...n]});const s=[t[0]].concat(t.slice(2));let r;if(this.cell.build(s),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!bi(this.stateSpec.map((t=>t.shape[t.shape.length-1])),r))throw new fx(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((t=>new uw({shape:[null,t]})));this.stateful&&this.resetStates()}resetStates(t,e=!1){fp((()=>{if(!this.stateful)throw new px("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new fx("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>Xd([n,t]))):this.states_=[Xd([n,this.cell.stateSize])];else if(null==t)mp(this.states_),null!=this.keptStates&&(mp(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>Xd([n,t]))):this.states_[0]=Xd([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new fx(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);!0===e?this.keptStates.push(this.states_.slice()):mp(this.states_);for(let e=0;e<this.states_.length;++e){const s=t[e],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,a=[n,r];if(!bi(s.shape,a))throw new fx(`State ${e} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${s.shape}`);this.states_[e]=s}}this.states_=this.states_.map((t=>gp(t.clone())))}))}apply(t,e){let n=null==e?null:e.initialState,s=null==e?null:e.constants;null==e&&(e={});const r=k_(t,n,s,this.numConstants);t=r.inputs,n=r.initialState,s=r.constants;let a=[],i=[];if(null!=n){e.initialState=n,a=a.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new uw({shape:t.shape}));i=i.concat(this.stateSpec)}if(null!=s&&(e.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof cw){const n=[t].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,e);return this.inputSpec=r,o}return super.apply(t,e)}call(t,e){return fp((()=>{const n=null==e?null:e.mask,s=null==e?null:e.training;let r=null==e?null:e.initialState;t=nw(t),null==r&&(r=this.stateful?this.states_:this.getInitialState(t));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new fx(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:s},o=__(((t,e)=>{const n=this.cell.call([t].concat(e),i);return[n[0],n.slice(1)]}),t,r,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,s);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(t){return fp((()=>{let e=Xd(t.shape);return e=Nd(e,[1,2]),e=dv(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((t=>t>1?xv(e,[1,t]):e)):this.cell.stateSize>1?[xv(e,[1,this.cell.stateSize])]:[e]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===I_.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,t,e)}static fromConfig(t,e,n={}){const s=Sw(e.cell,n);return new t(Object.assign(e,{cell:s}))}}I_.className="RNN",hp(I_);class T_ extends fw{}class N_ extends T_{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Ox(this.units,"units"),this.activation=Hk(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Kv(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Kv(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Kv(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Jk(t.kernelRegularizer),this.recurrentRegularizer=Jk(t.recurrentRegularizer),this.biasRegularizer=Jk(t.biasRegularizer),this.kernelConstraint=jx(t.kernelConstraint),this.recurrentConstraint=jx(t.recurrentConstraint),this.biasConstraint=jx(t.biasConstraint),this.dropout=uv([1,cv([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=uv([1,cv([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=sw(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return fp((()=>{if(2!==t.length)throw new fx(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const s=null!=e.training&&e.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=O_({ones:()=>Yd(t),rate:this.dropout,training:s})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=O_({ones:()=>Yd(n),rate:this.recurrentDropout,training:s}));const a=this.dropoutMask,i=this.recurrentDropoutMask;r=wv(null!=a?Id(t,a):t,this.kernel.read()),null!=this.bias&&(r=Tv(r,this.bias.read())),null!=i&&(n=Id(n,i));let o=_p(r,wv(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Gk(this.activation),useBias:this.useBias,kernelInitializer:Xv(this.kernelInitializer),recurrentInitializer:Xv(this.recurrentInitializer),biasInitializer:Xv(this.biasInitializer),kernelRegularizer:Yk(this.kernelRegularizer),recurrentRegularizer:Yk(this.recurrentRegularizer),biasRegularizer:Yk(this.biasRegularizer),activityRegularizer:Yk(this.activityRegularizer),kernelConstraint:Ux(this.kernelConstraint),recurrentConstraint:Ux(this.recurrentConstraint),biasConstraint:Ux(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}N_.className="SimpleRNNCell",hp(N_);class C_ extends I_{constructor(t){t.cell=new N_(t),super(t)}call(t,e){return fp((()=>{null!=this.cell.dropoutMask&&(mp(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(mp(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,s=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:r})}))}static fromConfig(t,e){return new t(e)}}C_.className="SimpleRNN",hp(C_);class S_ extends T_{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new fx("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Ox(this.units,"units"),this.activation=Hk(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Hk(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Kv(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Kv(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Kv(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Jk(t.kernelRegularizer),this.recurrentRegularizer=Jk(t.recurrentRegularizer),this.biasRegularizer=Jk(t.biasRegularizer),this.kernelConstraint=jx(t.kernelConstraint),this.recurrentConstraint=jx(t.recurrentConstraint),this.biasConstraint=jx(t.biasConstraint),this.dropout=uv([1,cv([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=uv([1,cv([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=sw(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return fp((()=>{if(2!==t.length)throw new fx(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const n=null!=e.training&&e.training;let s=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=O_({ones:()=>Yd(t),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=O_({ones:()=>Yd(s),rate:this.recurrentDropout,training:n,count:3}));const r=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(t=Id(t,r[0]));let u=wv(t,this.kernel.read());this.useBias&&(u=Tv(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=Id(s,a[0]));const c=this.recurrentKernel.read(),[h,p]=yf(c,[2*this.units,this.units],c.rank-1),d=wv(s,h),[f,m,g]=yf(u,3,u.rank-1),[y,b]=yf(d,2,d.rank-1);i=this.recurrentActivation.apply(_p(f,y)),o=this.recurrentActivation.apply(_p(m,b));const x=wv(Id(o,s),p);l=this.activation.apply(_p(g,x));const v=_p(Id(i,s),Id(_p(1,jd(i)),l));return[v,v]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Gk(this.activation),recurrentActivation:Gk(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Xv(this.kernelInitializer),recurrentInitializer:Xv(this.recurrentInitializer),biasInitializer:Xv(this.biasInitializer),kernelRegularizer:Yk(this.kernelRegularizer),recurrentRegularizer:Yk(this.recurrentRegularizer),biasRegularizer:Yk(this.biasRegularizer),activityRegularizer:Yk(this.activityRegularizer),kernelConstraint:Ux(this.kernelConstraint),recurrentConstraint:Ux(this.recurrentConstraint),biasConstraint:Ux(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}S_.className="GRUCell",hp(S_);class A_ extends I_{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new S_(t),super(t)}call(t,e){return fp((()=>{null!=this.cell.dropoutMask&&(mp(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(mp(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,s=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:r})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}A_.className="GRU",hp(A_);class $_ extends T_{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Ox(this.units,"units"),this.activation=Hk(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Hk(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Kv(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Kv(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Kv(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=Jk(t.kernelRegularizer),this.recurrentRegularizer=Jk(t.recurrentRegularizer),this.biasRegularizer=Jk(t.biasRegularizer),this.kernelConstraint=jx(t.kernelConstraint),this.recurrentConstraint=jx(t.recurrentConstraint),this.biasConstraint=jx(t.biasConstraint),this.dropout=uv([1,cv([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=uv([1,cv([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=sw(t))[t.length-1];let s;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;s=new((e=class extends $v{apply(e,s){const r=t.apply([n]),a=(new Rv).apply([n]),i=t.apply([2*n]);return bv(bv(r,a),i)}}).className="CustomInit",e)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return fp((()=>{const n=null!=e.training&&e.training;if(3!==t.length)throw new fx(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let s=t[1];const r=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=O_({ones:()=>Yd(t),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=O_({ones:()=>Yd(s),rate:this.recurrentDropout,training:n,count:4}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(t=Id(t,a[0]));let h=wv(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=Id(s,i[0])),h=_p(h,wv(s,this.recurrentKernel.read())),this.useBias&&(h=Tv(h,this.bias.read()));const[p,d,f,m]=yf(h,4,h.rank-1);o=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(d),u=_p(Id(l,r),Id(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=Id(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Gk(this.activation),recurrentActivation:Gk(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Xv(this.kernelInitializer),recurrentInitializer:Xv(this.recurrentInitializer),biasInitializer:Xv(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Yk(this.kernelRegularizer),recurrentRegularizer:Yk(this.recurrentRegularizer),biasRegularizer:Yk(this.biasRegularizer),activityRegularizer:Yk(this.activityRegularizer),kernelConstraint:Ux(this.kernelConstraint),recurrentConstraint:Ux(this.recurrentConstraint),biasConstraint:Ux(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}$_.className="LSTMCell",hp($_);class E_ extends I_{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new $_(t),super(t)}call(t,e){return fp((()=>{null!=this.cell.dropoutMask&&(mp(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(mp(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,s=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:r})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}E_.className="LSTM",hp(E_);class R_ extends T_{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return fp((()=>{let n=t.slice(1);const s=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?s.push(n.splice(0,t.stateSize.length)):s.push(n.splice(0,1));s.reverse();const r=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=s[i],a=0===i?[t[0]].concat(n):[a[0]].concat(n),a=o.call(a,e),r.push(a.slice(1))}n=[];for(const t of r.slice().reverse())n.push(...t);return[a[0]].concat(n)}))}build(t){let e;tw(t)&&(t=t[0]),this.cells.forEach(((n,s)=>{nv(`RNNCell_${s}`,(()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]}))})),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map((t=>({className:t.getClassName(),config:t.getConfig()})))};return Object.assign({},t,e)}static fromConfig(t,e,n={}){const s=[];for(const t of e.cells)s.push(Sw(t,n));return new t({cells:s})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return ow(t)}setWeights(t){const e=[];for(const n of this.cells){const s=n.weights.length,r=t.splice(s);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],r[t]])}lw(e)}}function O_(t){const{ones:e,rate:n,training:s=!1,count:r=1}=t,a=()=>Nv(e(),n),i=()=>Cv(a,e,s);return!r||r<=1?gp(i().clone()):Array(r).fill(void 0).map(i).map((t=>gp(t.clone())))}R_.className="StackedRNNCells",hp(R_);var D_,F_;class M_ extends I_{constructor(t){if(t.unroll)throw new mx("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new mx("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new uw({ndim:5})]}call(t,e){return fp((()=>{if(null!=this.cell.dropoutMask&&(mp(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(mp(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new fx("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,s=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:r})}))}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return fp((()=>{const{stateSize:e}=this.cell,n=t.shape,s=this.computeSingleOutputShape(n),r=Xd([s[0],...s.slice(2)]);return Array.isArray(e)?Array(e.length).fill(r):[r]}))}resetStates(t,e=!1){fp((()=>{if(!this.stateful)throw new px("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(null==n[0])throw new fx("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Xd(r))):this.states_=[Xd(r)];else if(null==t)mp(this.states_),null!=this.keptStates&&(mp(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Xd(r))):this.states_[0]=Xd(r);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new fx(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):mp(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],s=r;if(!bi(n.shape,s))throw new fx(`State ${e} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[e]=n}}this.states_=this.states_.map((t=>gp(t.clone())))}))}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===e,l=t[o?3:2],u=t[o?4:3],c=i_(l,s[0],r,a[0],i[0]),h=i_(u,s[1],r,a[1],i[1]);return[...t.slice(0,2),...o?[n,c,h]:[c,h,n]]}}M_.className="ConvRNN2D";class L_ extends $_{constructor(t){const{filters:e,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:i}=t;super(Object.assign({},t,{units:e})),this.filters=e,Ox(this.filters,"filters"),this.kernelSize=a_(n,2,"kernelSize"),this.kernelSize.forEach((t=>Ox(t,"kernelSize"))),this.strides=a_(s||1,2,"strides"),this.strides.forEach((t=>Ox(t,"strides"))),this.padding=r||"valid",Qx(this.padding),this.dataFormat=a||"channelsLast",Jx(this.dataFormat),this.dilationRate=a_(i||1,2,"dilationRate"),this.dilationRate.forEach((t=>Ox(t,"dilationRate")))}build(t){var e;t=sw(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new fx(`The channel dimension of the input should be defined. Found ${t[n]}`);const s=t[n],r=this.kernelSize.concat([s,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,s=this.filters;t=new((e=class extends $v{apply(t,e){return yv([n.apply([s]),Kd([s]),n.apply([2*s])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return fp((()=>{if(3!==t.length)throw new fx(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training||!1,s=t[0],r=t[1],a=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=O_({ones:()=>Yd(s),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(t,e,n)=>e&&e[n]?Id(e[n],t):t;let l=o(s,i,0),u=o(s,i,1),c=o(s,i,2),h=o(s,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=O_({ones:()=>Yd(r),rate:this.recurrentDropout,training:n,count:4}));const p=this.recurrentDropoutMask;let d=o(r,p,0),f=o(r,p,1),m=o(r,p,2),g=o(r,p,3);const[y,b,x,v]=yf(this.kernel.read(),4,3),[w,k,_,I]=this.useBias?yf(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,w,this.padding),u=this.inputConv(u,b,k,this.padding),c=this.inputConv(c,x,_,this.padding),h=this.inputConv(h,v,I,this.padding);const[T,N,C,S]=yf(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,T),f=this.recurrentConv(f,N),m=this.recurrentConv(m,C),g=this.recurrentConv(g,S);const A=this.recurrentActivation.apply(_p(l,d)),$=this.recurrentActivation.apply(_p(u,f)),E=_p(Id($,a),Id(A,this.activation.apply(_p(c,m)))),R=Id(this.recurrentActivation.apply(_p(h,g)),this.activation.apply(E));return[R,R,E]}))}getConfig(){const t=super.getConfig(),{units:e}=t,n=function(t,e){var n={};for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&e.indexOf(s)<0&&(n[s]=t[s]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(t);r<s.length;r++)e.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(t,s[r])&&(n[s[r]]=t[s[r]])}return n}(t,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,s)}inputConv(t,e,n,s){const r=Qp(t,e,this.strides,s||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Tv(r,n,this.dataFormat):r}recurrentConv(t,e){return Qp(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}L_.className="ConvLSTM2DCell",hp(L_);class z_ extends M_{constructor(t){const e=new L_(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}z_.className="ConvLSTM2D",hp(z_);class P_ extends fw{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let t=0;t<this.noiseShape.length;++t)n.push(null==this.noiseShape[t]?e[t]:this.noiseShape[t]);return n}call(t,e){return fp((()=>{this.invokeCallHook(t,e);const n=nw(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,s=this.getNoiseShape(n);return Cv((()=>Nv(n,this.rate,s,this.seed)),(()=>n),t)}return t}))}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}P_.className="Dropout",hp(P_);class V_ extends P_{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}V_.className="SpatialDropout1D",hp(V_);class B_ extends fw{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,Ox(this.units,"units"),this.activation=Hk(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=Kv(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Kv(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=jx(t.kernelConstraint),this.biasConstraint=jx(t.biasConstraint),this.kernelRegularizer=Jk(t.kernelRegularizer),this.biasRegularizer=Jk(t.biasRegularizer),this.activityRegularizer=Jk(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=sw(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=sw(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return fp((()=>{this.invokeCallHook(t,e);const n=nw(t),s=Fx(this.activation.getClassName());let r;return null!=s?r=wv(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=wv(n,this.kernel.read()),null!=this.bias&&(r=Tv(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const t={units:this.units,activation:Gk(this.activation),useBias:this.useBias,kernelInitializer:Xv(this.kernelInitializer),biasInitializer:Xv(this.biasInitializer),kernelRegularizer:Yk(this.kernelRegularizer),biasRegularizer:Yk(this.biasRegularizer),activityRegularizer:Yk(this.activityRegularizer),kernelConstraint:Ux(this.kernelConstraint),biasConstraint:Ux(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}B_.className="Dense",hp(B_);class W_ extends fw{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=sw(t);for(const e of t.slice(1))if(null==e)throw new fx(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],ov(t,1)]}call(t,e){return fp((()=>{this.invokeCallHook(t,e);let n=nw(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=n.transpose(t)}return function(t){if(t.rank<=1)throw new fx(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],ov(t.shape,1)];return t.reshape(e)}(n)}))}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}W_.className="Flatten",hp(W_);class U_ extends fw{constructor(t){super(t),this.supportsMasking=!0,this.activation=Hk(t.activation)}call(t,e){return fp((()=>{this.invokeCallHook(t,e);const n=nw(t);return this.activation.apply(n)}))}getConfig(){const t={activation:Gk(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}U_.className="Activation",hp(U_);class G_ extends fw{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return fp((()=>{return t=nw(t),e=t,n=this.n,fp((()=>{if(2!==e.shape.length)throw new fx(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return xv(dv(e,1),[1,n,1])}));var e,n}))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}G_.className="RepeatVector",hp(G_);class j_ extends fw{constructor(t){super(t),this.targetShape=t.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",s=e.slice();let r=1,a=null;for(let t=0;t<s.length;++t){const e=s[t];if(this.isUnknown(e)){if(null!==a)throw new fx("Can only specifiy one unknown dimension.");a=t}else r*=e}const i=ov(t);if(null!==a){if(0===r||i%r!=0)throw new fx(n);s[a]=i/r}else if(i!==r)throw new fx(n);return s}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return fp((()=>{this.invokeCallHook(t,e);const n=nw(t),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return n.reshape(r)}))}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}j_.className="Reshape",hp(j_);class H_ extends fw{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=hv(1,t.dims.length+1);if(!bi(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new uw({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=sw(t)).slice();return this.dims.forEach(((n,s)=>{e[s+1]=t[n]})),e}call(t,e){return Af(nw(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}H_.className="Permute",hp(H_);class q_ extends fw{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=nw(t);return Tp(Hd(n,this.maskValue),-1)}call(t,e){return fp((()=>{this.invokeCallHook(t,e);const n=nw(t),s=Tp(Hd(n,this.maskValue),-1,!0);return n.mul(s.asType(n.dtype))}))}}q_.className="Masking",hp(q_);class X_ extends fw{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(wx(t.inputLength))}this.inputDim=t.inputDim,Ox(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Ox(this.outputDim,"outputDim"),this.embeddingsInitializer=Kv(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Jk(t.embeddingsRegularizer),this.activityRegularizer=Jk(t.activityRegularizer),this.embeddingsConstraint=jx(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return fp((()=>this.maskZero?(t=nw(t),Hd(t,Sf(t))):null))}computeOutputShape(t){if(t=sw(t),null==this.inputLength)return[...t,this.outputDim];const e=wx(this.inputLength);if(e.length!==t.length-1)throw new fx(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let s=0;s<e.length;++s){const r=e[s],a=t[s+1];if(null!=r&&null!=a&&r!==a)throw new fx(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);null==r&&(e[n]=a),n++}}return[t[0],...e,this.outputDim]}call(t,e){return fp((()=>{this.invokeCallHook(t,e);let n=nw(t);return"int32"!==n.dtype&&(n=pv(n,"int32")),kv(this.embeddings.read(),n.as1D()).reshape(sw(this.computeOutputShape(n.shape)))}))}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Xv(this.embeddingsInitializer),embeddingsRegularizer:Yk(this.embeddingsRegularizer),activityRegularizer:Yk(this.activityRegularizer),embeddingsConstraint:Ux(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}X_.className="Embedding",hp(X_);class K_ extends fw{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new mx}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let s=0;s<e.length;++s){const r=t[t.length-e.length+s],a=e[s];if(null==r||null==a||r<0||a<0)n.push(null);else if(1===r)n.push(a);else if(1===a)n.push(r);else{if(r!==a)throw new fx("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(r)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[sw(t)]),t.length<2)throw new fx(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const n of t)null!=n&&null!==n[0]&&e.push(n[0]);if(e=Ax(e),e.length>1)throw new fx(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let e=1;e<t.length;++e){const s=null==t[e]?null:t[e].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}const s=t.map((t=>t.length));-1===t.indexOf(null)&&1===Ax(s).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return fp((()=>{if(this.reshapeRequired){const e=[],n=t.map((t=>t.rank));if(-1===n.indexOf(null)){const s=cv(n);for(let n of t){const t=n.rank;for(let e=0;e<s-t;++e)n=dv(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const s of t){const t=s.rank;if(null==t){const t=s.shape,r=t[0],a=t.slice(1).concat([r]);let i=s.reshape([r].concat(ov(t.slice(1))));i=Af(i,[1,0]),i=i.reshape(a),e.push(i),n=!0}else if(t>1){const r=hv(1,t).concat([0]);e.push(Af(s,r)),n=!0}else e.push(s)}let s=this.mergeFunction(e);const r=s.rank;if(n)if(null==r){const t=s.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));s=Af(s.reshape([-1,e]),[1,0]).reshape(n)}else if(r>1){const t=[r-1].concat(hv(0,r-1));s=Af(s,t)}return s}}return this.mergeFunction(t)}))}computeOutputShape(t){let e;e=null==t[0]?null:t[0].slice(1);for(let n=1;n<t.length;++n){const s=null==t[n]?null:t[n].slice(1);e=this.computeElementwiseOpOutputShape(e,s)}let n=[];for(const e of t)null!=e&&null!==e[0]&&n.push(e[0]);return n=Ax(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return fp((()=>{if(null==e)return null;if(!Array.isArray(e))throw new fx("`mask` should be an Array");if(!Array.isArray(t))throw new fx("`inputs` should be an Array");if(e.length!==t.length)throw new fx(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every((t=>null==t)))return null;let n=(e=e.map((t=>null==t?t:pd(t,0))))[0];for(let t=1;t<e.length-1;++t)n=Sd(n,e[t]);return n}))}}class Y_ extends K_{constructor(t){super(t)}mergeFunction(t){return fp((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=_p(e,t[n]);return e}))}}Y_.className="Add",hp(Y_);class Z_ extends K_{constructor(t){super(t)}mergeFunction(t){return fp((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Id(e,t[n]);return e}))}}Z_.className="Multiply",hp(Z_);class J_ extends K_{constructor(t){super(t)}mergeFunction(t){return fp((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=_p(e,t[n]);return Id(1/t.length,e)}))}}J_.className="Average",hp(J_);class Q_ extends K_{constructor(t){super(t)}mergeFunction(t){return fp((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Ed(e,t[n]);return e}))}}Q_.className="Maximum",hp(Q_);class tI extends K_{constructor(t){super(t)}mergeFunction(t){return fp((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Dd(e,t[n]);return e}))}}tI.className="Minimum",hp(tI);class eI extends K_{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new fx("A `Concatenate` layer should be called on a list of at least 2 inputs");let e=!0;for(const n of t)if(null!=n){e=!1;break}if(e)return;const n=[];for(let e=0;e<t.length;++e){const s=t[e].slice();s.splice(this.axis,1);let r=!1;for(const t of n)if(bi(t,s)){r=!0;break}r||n.push(s)}if(n.length>1)throw new fx("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return fp((()=>yv(t,this.axis)))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new fx("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(const t of e.slice(1)){if(null==n[s]||null==t[s]){n[s]=null;break}n[s]+=t[s]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new fx("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new fx("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new fx(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return fp((()=>{let n=!0;if(e.forEach((t=>{null==t||(n=!1)})),n)return null;const s=[];for(let n=0;n<t.length;++n)null==e[n]?s.push(Yd(t[n]).asType("bool")):e[n].rank<t[n].rank?s.push(pd(e[n],-1)):s.push(e[n]);const r=Xp(s,this.axis);return Ip(r,-1,!1)}))}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function nI(t,e){for(;t<0;)t+=e;return t}eI.className="Concatenate",hp(eI);class sI extends K_{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){di(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new mx("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(e,n);if(e[s[0]]!==n[s[1]])throw new fx(`Dimension incompatibility: ${e[s[0]]} !== ${n[s[1]]}`)}mergeFunction(t){if(2!==t.length)throw new fx(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],s=t[1];return e=Array.isArray(this.axes)?this.axes.map(((e,n)=>nI(e,t[n].shape.length))):[nI(this.axes,n.shape.length),nI(this.axes,s.shape.length)],this.normalize&&(n=Aw(n,e[0]),s=Aw(s,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new mx("batchDot is not implemented for tensors of 4D or higher rank yet");if(di(t.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${t.shape.length}`)),di(t.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new mx("batchDot is not implemented for complex64-type Tensors yet.");const s=t.shape.length,r=e.shape.length;null==n&&(n=[s-1,r-2]);const a=n;return fp((()=>{let n,i;if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)i=a[0]===a[1]?t.mul(e).sum(a[0]):t.transpose([1,0]).mul(e).sum(a[1]);else{const n=a[0]!==t.shape.length-1,s=a[1]===e.shape.length-1;i=t.matMul(e,n,s)}if(n>0){let t;t=s>r?s+r-3:s-1;const e=[];for(let s=t;s<t+n;++s)e.push(s);i=i.squeeze(e)}return 1===i.shape.length&&(i=i.expandDims(1)),i}))}(n,s,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[nI(this.axes,t.length),nI(this.axes,e.length)],n}computeOutputShape(t){di(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new mx("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(e,n);e.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const r=e.concat(n);return 1===r.length&&r.push(1),r}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}sI.className="Dot",hp(sI);class rI extends fw{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return fp((()=>{this.invokeCallHook(t,e);const n=nw(t);return Cv((()=>vv(n.shape,0,this.stddev).add(n)),(()=>n),e.training||!1)}))}}rI.className="GaussianNoise",hp(rI);class aI extends fw{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return fp((()=>{this.invokeCallHook(t,e);const n=nw(t);return this.rate>0&&this.rate<1?Cv((()=>{const t=Math.sqrt(this.rate/(1-this.rate));return n.mul(vv(n.shape,1,t))}),(()=>n),e.training||!1):n}))}}aI.className="GaussianDropout",hp(aI);class iI extends fw{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||nw(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return fp((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return Cv((()=>{const e=nw(t),s=-1.7580993408473766;let r=xd(sf(n),this.rate);r=pv(r,"float32");const a=((1-this.rate)*(1+this.rate*s**2))**-.5,i=-a*s*this.rate;return e.mul(r).add(r.add(-1).mul(s)).mul(a).add(i)}),(()=>nw(t)),e.training||!1)}return t}))}}function oI(t,e,n,s,r,a=.001){let i;if(2===t.rank)i=Gp(t,e,n,s,r,a);else if(3===t.rank)i=jp(t,e,n,s,r,a);else{if(4!==t.rank)throw new mx(`batchNormalization is not implemented for array of rank ${t.rank} yet`);i=Hp(t,e,n,s,r,a)}return i}iI.className="AlphaDropout",hp(iI);class lI extends fw{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Kv(t.betaInitializer||"zeros"),this.gammaInitializer=Kv(t.gammaInitializer||"ones"),this.movingMeanInitializer=Kv(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Kv(t.movingVarianceInitializer||"ones"),this.betaConstraint=jx(t.betaConstraint),this.gammaConstraint=jx(t.gammaConstraint),this.betaRegularizer=Jk(t.betaRegularizer),this.gammaRegularizer=Jk(t.gammaRegularizer)}build(t){t=sw(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new fx(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new uw({ndim:t.length,axes:{[e]:n}})];const s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return fp((()=>{const n=null!=e.training&&e.training,s=nw(t),r=s.shape,a=r.length,i=hv(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const l=yx(1,a);l[o]=r[o];const u=i.slice();u.sort();const c=!bi(u,hv(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const t=this.movingMean.read().reshape(l),e=this.movingVariance.read().reshape(l),n=this.center?this.beta.read().reshape(l):null,r=this.scale?this.gamma.read().reshape(l):null;return oI(s,t,e,n,r,this.epsilon)}return oI(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,d]=function(t,e,n,s,r=.001){return bi(s.slice().sort(),hv(0,t.rank-1))?function(t,e,n,s,r=.001){return fp((()=>{const a=Gd(t,s),i=a.mean,o=a.variance;return[oI(t,i,o,n,e,r),i,o]}))}(t,e,n,s,r):function(t,e,n,s,r=.001){return fp((()=>{const a=Gd(t,s),i=a.mean,o=a.variance,l=[];for(const e of hv(0,t.rank))-1!==s.indexOf(e)?l.push(1):l.push(t.shape[e]);const u=i.reshape(l),c=o.reshape(l),h=null==e?null:e.reshape(l),p=null==n?null:n.reshape(l);return[oI(t,u,c,p,h,r),i,o]}))}(t,e,n,s,r)}(s,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(t,e,n)=>{fp((()=>{const s=1-n,r=t.read(),a=r.sub(e).mul(s);t.write(r.sub(a))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,d,this.momentum)})(),h}))}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Xv(this.betaInitializer),gammaInitializer:Xv(this.gammaInitializer),movingMeanInitializer:Xv(this.movingMeanInitializer),movingVarianceInitializer:Xv(this.movingVarianceInitializer),betaRegularizer:Yk(this.betaRegularizer),gammaRegularizer:Yk(this.gammaRegularizer),betaConstraint:Ux(this.betaConstraint),gammaConstraint:Ux(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}lI.className="BatchNormalization",hp(lI);class uI extends fw{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Kv(t.betaInitializer||"zeros"),this.gammaInitializer=Kv(t.gammaInitializer||"ones"),this.betaRegularizer=Jk(t.betaRegularizer),this.gammaRegularizer=Jk(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=sw(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let t=0;t<this.axis.length;++t)this.axis[t]<0&&(this.axis[t]+=e);for(const t of this.axis)if(t<0||t>=e)throw new Error(`Invalid axis: ${t}`);if(this.axis.length!==Ax(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((e=>t[e]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(t,e){const n=nw(t),s=n.shape,r=s.length;return fp((()=>{let{mean:t,variance:e}=Gd(n,this.axis,!0);const a=yx(1,r);for(const t of this.axis)a[t]=s[t];const i=t=>null!=t&&t.shape.length!==r&&this.axis!==[r-1]?t.reshape(a):t;let o=i(this.gamma.read()),l=i(this.beta.read());const u=[],c=[];for(let t=0;t<r;++t)-1!==this.axis.indexOf(t)?(u.push(s[t]),c.push(1)):(u.push(1),c.push(s[t]));return t=t.tile(u),e=e.tile(u),o=o.tile(c),l=l.tile(c),oI(n,t,e,l,o,this.epsilon)}))}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Xv(this.betaInitializer),gammaInitializer:Xv(this.gammaInitializer),betaRegularizer:Yk(this.betaRegularizer),gammaRegularizer:Yk(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}uI.className="LayerNormalization",hp(uI);class cI extends fw{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new fx(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new fx(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new fx(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new uw({ndim:4})]}computeOutputShape(t){let e,n;return t=sw(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return fp((()=>{return e=nw(t),n=this.padding,s=this.dataFormat,fp((()=>{if(4!==e.rank)throw new fx(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new fx("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==s&&(s="channelsLast"),"channelsLast"!==s&&"channelsFirst"!==s)throw new fx(`Unknown data format: ${s}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let t;return t="channelsFirst"===s?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Zd(e,t)}));var e,n,s}))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function hI(t,e,n,s,r,a){return fp((()=>{let i;Jx(r),tv(a),Qx(s),null==n&&(n=[1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),t=l_(t,r);const o="same"===s?"same":"valid";return i="max"===a?Ad(t,e,n,o):Bp(t,e,n,o),"channelsFirst"===r&&(i=Af(i,[0,3,1,2])),i}))}function pI(t,e,n,s,r,a){return fp((()=>{let i;Jx(r),tv(a),Qx(s),null==n&&(n=[1,1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),t=u_(t,r);const o="same"===s?"same":"valid";return i="max"===a?$d(t,e,n,o):Wp(t,e,n,o),"channelsFirst"===r&&(i=Af(i,[0,4,1,2,3])),i}))}cI.className="ZeroPadding2D",hp(cI);class dI extends fw{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new fx(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if(Ox(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new fx(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}Ox(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,Qx(this.padding),this.inputSpec=[new uw({ndim:3})]}computeOutputShape(t){const e=i_((t=sw(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return fp((()=>{this.invokeCallHook(t,e),t=dv(nw(t),2);const n=this.poolingFunction(nw(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return xf(n,[2])}))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class fI extends dI{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return Jx(r),Qx(s),hI(t,e,n,s,r,"max")}}fI.className="MaxPooling1D",hp(fI);class mI extends dI{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return Jx(r),Qx(s),hI(t,e,n,s,r,"avg")}}mI.className="AveragePooling1D",hp(mI);class gI extends fw{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new fx(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];Ox(this.poolSize,"poolSize"),Ox(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Jx(this.dataFormat),Qx(this.padding),this.inputSpec=[new uw({ndim:4})]}computeOutputShape(t){t=sw(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=i_(e,this.poolSize[0],this.padding,this.strides[0]),n=i_(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return fp((()=>(this.invokeCallHook(t,e),this.poolingFunction(nw(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class yI extends gI{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return Jx(r),Qx(s),hI(t,e,n,s,r,"max")}}yI.className="MaxPooling2D",hp(yI);class bI extends gI{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return Jx(r),Qx(s),hI(t,e,n,s,r,"avg")}}bI.className="AveragePooling2D",hp(bI);class xI extends fw{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new fx(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Ox(this.poolSize,"poolSize"),Ox(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Jx(this.dataFormat),Qx(this.padding),this.inputSpec=[new uw({ndim:5})]}computeOutputShape(t){t=sw(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],s="channelsFirst"===this.dataFormat?t[4]:t[3];return e=i_(e,this.poolSize[0],this.padding,this.strides[0]),n=i_(n,this.poolSize[1],this.padding,this.strides[1]),s=i_(s,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,s]:[t[0],e,n,s,t[4]]}call(t,e){return fp((()=>(this.invokeCallHook(t,e),this.poolingFunction(nw(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class vI extends xI{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return Jx(r),Qx(s),pI(t,e,n,s,r,"max")}}vI.className="MaxPooling3D",hp(vI);class wI extends xI{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return Jx(r),Qx(s),pI(t,e,n,s,r,"avg")}}wI.className="AveragePooling3D",hp(wI);class kI extends fw{constructor(t){super(t),this.inputSpec=[new uw({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new mx}}class _I extends kI{constructor(t){super(t||{})}call(t,e){return fp((()=>{const e=nw(t);return Rd(e,1)}))}}_I.className="GlobalAveragePooling1D",hp(_I);class II extends kI{constructor(t){super(t||{})}call(t,e){return fp((()=>{const e=nw(t);return _d(e,1)}))}}II.className="GlobalMaxPooling1D",hp(II);class TI extends fw{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Jx(this.dataFormat),this.inputSpec=[new uw({ndim:4})]}computeOutputShape(t){return"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new mx}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class NI extends TI{call(t,e){return fp((()=>{const e=nw(t);return"channelsLast"===this.dataFormat?Rd(e,[1,2]):Rd(e,[2,3])}))}}NI.className="GlobalAveragePooling2D",hp(NI);class CI extends TI{call(t,e){return fp((()=>{const e=nw(t);return"channelsLast"===this.dataFormat?_d(e,[1,2]):_d(e,[2,3])}))}}CI.className="GlobalMaxPooling2D",hp(CI);class SI extends fw{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const s=Sw(e.layer,n);delete e.layer;const r={layer:s};return Object.assign(r,e),new t(r)}}class AI extends SI{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=sw(t)).length<3)throw new fx(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=sw(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),s=t[1];return[n[0],s].concat(n.slice(1))}call(t,e){return fp((()=>__(((t,n)=>[nw(this.layer.call(t,e)),[]]),t=nw(t),[],!1,null,null,!1,!0)[1]))}}AI.className="TimeDistributed",hp(AI);class $I extends SI{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=Sw(n),e.goBackwards=!0!==e.goBackwards;const s={};var r;if(s.className=t.layer.getClassName(),s.config=e,this.backwardLayer=Sw(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,r=this.mergeMode,Ex(Yx,"BidirectionalMergeMode",r),t.weights)throw new mx("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,s,r=this.forwardLayer.computeOutputShape(t);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(s=r.slice(1),e=r[0]):e=r[0],"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(s).concat(s.slice()):[e].concat(s).concat(s.slice()):vx(n)}apply(t,e){let n=null==e?null:e.initialState,s=null==e?null:e.constants;null==e&&(e={});const r=k_(t,n,s,this.numConstants);if(t=r.inputs,n=r.initialState,s=r.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==s)return super.apply(t,e);const a=[],i=[];if(null!=n){const t=n.length;if(t%2>0)throw new fx("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,a.push(...n);const s=n.map((t=>new uw({shape:t.shape})));this.forwardLayer.stateSpec=s.slice(0,t/2),this.backwardLayer.stateSpec=s.slice(t/2),i.push(...s)}if(null!=s)throw new mx("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof cw;for(const t of a)if(t instanceof cw!==o)throw new fx("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[t].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,e);return this.inputSpec=r,o}return super.apply(t,e)}call(t,e){return fp((()=>{const n=e.initialState;let s,r,a,i;if(null==n)s=this.forwardLayer.call(t,e),r=this.backwardLayer.call(t,e);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);s=this.forwardLayer.call(t,Object.assign(e,{initialState:a})),r=this.backwardLayer.call(t,Object.assign(e,{initialState:i}))}return this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=af(r,1)),"concat"===this.mergeMode?i=yv([s,r]):"sum"===this.mergeMode?i=_p(s,r):"ave"===this.mergeMode?i=Id(.5,_p(s,r)):"mul"===this.mergeMode?i=Id(s,r):null==this.mergeMode&&(i=[s,r]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){nv(this.forwardLayer.name,(()=>{this.forwardLayer.build(t)})),nv(this.backwardLayer.name,(()=>{this.backwardLayer.build(t)})),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map((t=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=Sw(e.layer);if(delete e.layer,null!=e.numConstants)throw new mx("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=e;return s.layer=n,new t(s)}}$I.className="Bidirectional",hp($I),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(D_||(D_={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(F_||(F_={}));const EI={};function RI(t){return EI[t]}function OI(t,e,n,s,r){const a=e.inputParams[t];if(a&&void 0!==a.inputIndexStart){const t=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?t+1:a.inputIndexEnd;if("tensor"===a.type)return DI(e.inputNames[a.inputIndexStart],n,s,r);if("tensors"===a.type)return e.inputNames.slice(t,i).map((t=>DI(t,n,s,r)));const o=DI(e.inputNames.slice(t)[0],n,s,r),l=o.dataSync();return"number"===a.type?l[0]:zi(o.shape,l)}const i=e.attrParams[t];return i&&i.value}function DI(t,e,n,s){const[r,a]=LI(t);if(null!=s){const t=s.getHashTableHandleByName(r);if(null!=t)return t}const i=n.currentContextIds.find((t=>!!e[MI(r,t)]));return void 0!==i?e[MI(r,i)][a]:void 0}function FI(t,e){const[n,s]=LI(t);return[MI(n,e&&e.currentContextId),s]}function MI(t,e){return e?`${t}-${e}`:t}function LI(t){const e=t.split(":");return 1===e.length?[t,0]:[e[0],Number(e[e.length-1])]}function zI(t,e,n){let s=OI("pad",t,e,n);if("explicit"===s){s=OI("explicitPaddings",t,e,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let t=0;t<4;t++)r[t][0]=s[2*t],r[t][1]=s[2*t+1];return r}return s}function PI(t){return t.kept?t:Fh(t)}const VI=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],BI=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],WI=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],UI=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],GI=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],jI=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],HI=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],qI=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],XI=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],KI=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],YI=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],ZI=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],JI=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],QI=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],tT=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],eT=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],nT=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];class sT{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[].concat(...[r,a,i,o,l,u,c,f,d,h,m,g,y,b,x,v,p].map((t=>t.json)));this.opMappers=t.reduce(((t,e)=>(t[e.tfOpName]=e,t)),{})}transformGraph(t,e={}){const n=t.node,s=[],r=[],a=[],i=n.reduce(((t,e)=>(t[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?s.push(t[e.name]):"Const"===e.op?r.push(t[e.name]):null!=e.input&&0!==e.input.length||a.push(t[e.name]),t)),{});let o=[];const l=[];let u={},c={};null!=e&&(u=this.mapSignatureEntries(e.inputs),c=this.mapSignatureEntries(e.outputs));const h=Object.keys(i);h.forEach((t=>{const e=i[t];e.inputNames.forEach((t=>{const[n]=FI(t);e.inputs.push(i[n]),i[n].children.push(e)}))})),0===Object.keys(c).length?h.forEach((t=>{const e=i[t];0===e.children.length&&l.push(e)})):Object.keys(c).forEach((t=>{const[e]=FI(t),n=i[e];null!=n&&(n.signatureKey=c[t],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((t=>{const[e]=FI(t),n=i[e];n&&(n.signatureKey=u[t],o.push(n))})):o=s;let p={};null!=t.library&&null!=t.library.function&&(p=t.library.function.reduce(((t,e)=>(t[e.signature.name]=this.mapFunction(e),t)),{}));const d={nodes:i,inputs:o,outputs:l,weights:r,placeholders:s,signature:e,functions:p};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(t){return Object.keys(t||{}).reduce(((e,n)=>(e[t[n].name]=n,e)),{})}mapNode(t){const e=RI(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map((t=>t.startsWith("^")?t.substr(1):t)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr};return null!=e.inputs&&(n.inputParams=e.inputs.reduce(((t,e)=>(t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t)),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce(((e,n)=>{const s=n.type;let r;switch(n.type){case"string":r=aT(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=aT(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=mT(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=mT(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=oT(t.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=oT(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=fT(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=fT(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=iT(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=iT(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=yT(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=yT(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=dT(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=dT(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=gT(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=gT(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=cT(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=cT(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=hT(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=hT(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=uT(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=uT(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${t.op}`)}return e[n.name]={value:r,type:s},e}),{})),n}mapFunction(t){const e=t.nodeDef,n=[];let s={};null!=e&&(s=e.reduce(((t,e)=>(t[e.name]=this.mapNode(e),"Const"===e.op&&n.push(t[e.name]),t)),{}));const r=[],a=[];t.signature.inputArg.forEach((t=>{const[e]=FI(t.name),n={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:lT(t.type),type:"dtype"}},children:[]};n.signatureKey=t.name,r.push(n),s[e]=n})),Object.keys(s).forEach((t=>{const e=s[t];e.inputNames.forEach((t=>{const[n]=FI(t);e.inputs.push(s[n]),s[n].children.push(e)}))}));const i=t.ret;t.signature.outputArg.forEach((t=>{const[e,n]=FI(i[t.name]),r=s[e];null!=r&&(r.defaultOutput=n,a.push(r))}));const o=this.mapArgsToSignature(t);return{nodes:s,inputs:r,outputs:a,weights:n,placeholders:[],signature:o}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce(((t,e)=>(t[e.name]=this.mapArgToTensorInfo(e),t)),{}),outputs:t.signature.outputArg.reduce(((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e)),{})}}mapArgToTensorInfo(t,e){let n=t.name;return null!=e&&(n=e[n]),{name:n,dtype:t.type}}}function rT(t,e){const n=Array.isArray(t)?String.fromCharCode.apply(null,t):function(t){const e=Xi().global;if(void 0!==e.atob)return e.atob(t);if("undefined"!=typeof Buffer)return new Buffer(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(t);return e?n:n.toLowerCase()}function aT(t,e,n,s=!1){const r=t[e];return null!=r?rT(r.s,s):n}function iT(t,e,n){const s=t[e];return s?s.b:n}function oT(t,e,n){const s=t[e]||{},r=null!=s.i?s.i:null!=s.f?s.f:n;return"number"==typeof r?r:parseInt(r,10)}function lT(t){switch("string"==typeof t&&(t=D_[t]),t){case D_.DT_FLOAT:return"float32";case D_.DT_INT32:case D_.DT_INT64:case D_.DT_INT8:case D_.DT_UINT8:return"int32";case D_.DT_BOOL:return"bool";case D_.DT_DOUBLE:return"float32";case D_.DT_STRING:return"string";default:return null}}function uT(t,e,n){const s=t[e];return s&&s.func?s.func.name:n}function cT(t,e,n){const s=t[e];return s&&s.type?lT(s.type):n}function hT(t,e,n){const s=t[e];return s&&s.list&&s.list.type?s.list.type.map((t=>lT(t))):n}function pT(t){if(!t.unknownRank)return null!=t.dim?t.dim.map((t=>"number"==typeof t.size?t.size:parseInt(t.size,10))):[]}function dT(t,e,n){const s=t[e];return s&&s.shape?pT(s.shape):n}function fT(t,e,n){const s=t[e];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map((t=>"number"==typeof t?t:parseInt(t,10))):n}function mT(t,e,n,s=!1){const r=t[e];return r&&r.list&&r.list.s?r.list.s.map((t=>rT(t,s))):n}function gT(t,e,n){const s=t[e];return s&&s.list&&s.list.shape?s.list.shape.map((t=>pT(t))):n}function yT(t,e,n){const s=t[e];return s&&s.list&&s.list.b?s.list.b:n}class bT{constructor(t,e,n){this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map((t=>this.getInput(t))),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce(((t,e)=>(t[e]=this.getAttr(e),t)),{}))}getInput(t){return DI(t,this.tensorMap,this.context)}getAttr(t,e){const n=this.node.rawAttrs[t];if(null!=n.tensor)return DI(t,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return oT(this.node.rawAttrs,t,e);if(null!=n.s)return aT(this.node.rawAttrs,t,e);if(null!=n.b)return iT(this.node.rawAttrs,t,e);if(null!=n.shape)return dT(this.node.rawAttrs,t,e);if(null!=n.type)return cT(this.node.rawAttrs,t,e);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return fT(this.node.rawAttrs,t,e);if(null!=n.list.s)return mT(this.node.rawAttrs,t,e);if(null!=n.list.shape)return gT(this.node.rawAttrs,t,e);if(null!=n.list.b)return yT(this.node.rawAttrs,t,e);if(null!=n.list.type)return hT(this.node.rawAttrs,t,e)}return e}}const xT=Yc({addN_:function(t){di(Array.isArray(t),(()=>"The argument passed to tf.addN() must be a list of tensors")),di(t.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${t.length}`));const e=t.map(((t,e)=>Xc(t,`tensors${e}`,"addN"))),n=e[0];e.forEach((t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),e.forEach((t=>{if(!bi(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const s=e;return Vc.runKernel(so,s)}});function vT(t,e,n=""){if("number"!=typeof t&&"number"!=typeof e){di(t.length===e.length,(()=>n+` Shapes ${t} and ${e} must match`));for(let s=0;s<t.length;s++){const r=t[s],a=e[s];di(r<0||a<0||r===a,(()=>n+` Shapes ${t} and ${e} must match`))}}}function wT(t){return"number"!=typeof t&&!t.some((t=>t<0))}function kT(t,e,n){let s=_T(t,n);const r=!wT(s);if(r&&0===e.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&e.forEach((t=>{s=_T(t.shape,s)})),!wT(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function _T(t,e){if("number"==typeof t)return e;if("number"==typeof e)return t;if(t.length!==e.length)throw new Error(`Incompatible ranks during merge: ${t} vs. ${e}`);const n=[];for(let s=0;s<t.length;++s){const r=t[s],a=e[s];if(r>=0&&a>=0&&r!==a)throw new Error(`Incompatible shape during merge: ${t} vs. ${e}`);n[s]=r>=0?r:a}return n}class IT{constructor(t,e,n,s,r,a,i){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=s,this.identicalElementShapes=r,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=vp(0),gp(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.tensor.id)||e.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map((t=>this.read(t)))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},\n          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),vT(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);n.tensor=e,gp(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach(((t,n)=>this.write(t,e[n])))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let e=0;e<this.size();e++)t.push(e)}if(0===t.length)return Qc([],[0].concat(this.elementShape));const n=this.readMany(t);return vT(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),vf(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(0===this.size())return Qc([],[0].concat(this.elementShape));const e=[];for(let t=0;t<this.size();t++)e.push(t);const n=this.readMany(e);return vT(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Xp(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(t,Tf(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let n=0;const s=t.map((t=>(n+=t,n)));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const r=0===n?0:e.size/n,a=[];fp((()=>{e=Vp(e,[1,n,r]);for(let n=0;n<t.length;++n){const i=[0,0===n?0:s[n-1],0],o=[1,t[n],r];a[n]=Vp(cf(e,i,o),this.elementShape)}return a}));const i=[];for(let e=0;e<t.length;e++)i[e]=e;this.writeMany(i,a)}}class TT{constructor(t,e,n,s=-1){this.tensors=t,this.elementShape=e,this.elementDtype=n,null!=t&&t.forEach((t=>{if(n!==t.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${t.dtype}`);vT(e,t.shape,"TensorList shape mismatch: "),gp(t)})),this.idTensor=vp(0),this.maxNumElements=s,gp(this.idTensor)}get id(){return this.idTensor.id}copy(){return new TT([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.id)||e.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,n=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);vT(t,this.elementShape,"TensorList shape mismatch: ");const s=kT(this.elementShape,this.tensors,t);return fp((()=>{const t=this.tensors.map((t=>Vp(t,s)));return vf(t,0)}))}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=kT(this.elementShape,this.tensors,t),s=this.tensors.pop();return vT(s.shape,t,"TensorList shape mismatch: "),Vp(s,n)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(vT(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");gp(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=t}getItem(t,e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[t])throw new Error(`element at index ${t} is null.`);vT(this.tensors[t].shape,e,"TensorList shape mismatch: ");const s=kT(this.elementShape,this.tensors,e);return Vp(this.tensors[t],s)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||-1!==this.maxNumElements&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);vT(this.elementShape,e.shape,"TensorList shape mismatch: "),gp(e),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);vT(this.elementShape,n,"TensorList shape mismatch: "),t=t.slice(0,this.size());const s=kT(this.elementShape,this.tensors,n);return 0===t.length?Qc([],[0].concat(s)):fp((()=>{const e=t.map((t=>Vp(this.tensors[t],s)));return vf(e,0)}))}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);vT(this.elementShape,e,"TensorList shape mismatch: ");const n=kT(this.elementShape,this.tensors,e);return 0===this.size()?Qc([],[0].concat(n)):fp((()=>{const t=this.tensors.map((t=>Vp(t,n)));return Xp(t,0)}))}}const NT=Yc({maxPoolWithArgmax_:function(t,e,n,s,r=!1){const a={x:Xc(t,"x","maxPoolWithArgmax")},i={filterSize:e,strides:n,pad:s,includeBatchInIndex:r},o=Vc.runKernel(Ol,a,i);return{result:o[0],indexes:o[1]}}});function CT(t,e,n){const[s,r]=OI("fusedOps",t,e,n),a="biasadd"===s,i="prelu"===r,o="fusedbatchnorm"===s,l=OI("numArgs",t,e,n);if(a){if(i&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(o)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const u=OI("strides",t,e,n),c=zI(t,e,n),h=OI("dataFormat",t,e,n).toUpperCase(),p=OI("dilations",t,e,n),[d,f]=OI("args",t,e,n);return{stride:u,pad:c,dataFormat:h,dilations:p,biasArg:d,preluArg:f,activationFunc:r,leakyreluAlpha:OI("leakyreluAlpha",t,e,n)}}function ST(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const s={start:t,stop:e,num:n};return Vc.runKernel(xl,{},s)}const AT=Yc({multinomial_:function(t,e,n,s=!1){const r=Xc(t,"logits","multinomial"),a=r.size,i=r.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?Vp(r,[1,-1]):r},l={numSamples:e,seed:n,normalized:s},u=Vc.runKernel(Pl,o,l);return 1===i?Vp(u,[u.size]):u}}),$T=async function(t){const e=Xc(t,"condition","whereAsync","bool"),n=await e.data(),s=Ag(e.shape,n);return t!==e&&e.dispose(),s};function ET(t,e,n){return{boxes:OI("boxes",t,e,n),scores:OI("scores",t,e,n),maxOutputSize:OI("maxOutputSize",t,e,n),iouThreshold:OI("iouThreshold",t,e,n),scoreThreshold:OI("scoreThreshold",t,e,n),softNmsSigma:OI("softNmsSigma",t,e,n)}}class RT{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=vp(0),this.tensorMap=new Map,gp(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return vp(this.size(),"int32")}async import(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),fp((()=>{const t=Tf(e),s=n.length,r=t.length;di(s===r,(()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${r} elements.`));for(let e=0;e<s;e++){const s=n[e],r=t[e];gp(r),this.tensorMap.set(s,r)}return this.handle}))}async find(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return fp((()=>{const t=[];for(let s=0;s<n.length;s++){const r=n[s],a=this.findWithDefault(r,e);t.push(a)}return vf(t)}))}findWithDefault(t,e){const n=this.tensorMap.get(t);return null!=n?n:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}}const OT=Yc({sparseToDense_:function(t,e,n,s=0){const r=Xc(t,"sparseIndices","sparseToDense","int32"),a=Xc(e,"sparseValues","sparseToDense"),i=Xc(s,"defaultValue","sparseToDense",a.dtype);!function(t,e,n,s){if("int32"!==t.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const r=t.rank>0?t.shape[0]:1,a=t.rank>1?t.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=e.size;if(0!==e.rank&&(1!==e.rank||i!==r))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${r}]`);if(e.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,a,n,i);const o={sparseIndices:r,sparseValues:a,defaultValue:i},l={outputShape:n};return Vc.runKernel(Au,o,l)}}),DT=Yc({bincount_:function(t,e,n){const s=Xc(t,"x","bincount"),r=Xc(e,"weights","bincount");di("int32"===s.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`)),di(n>=0,(()=>`size must be non-negative, but got ${n}.`)),di(r.size===s.size||0===r.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`));const a={x:s,weights:r},i={size:n};return Vc.runKernel(vo,a,i)}}),FT=Yc({denseBincount_:function(t,e,n,s=!1){const r=Xc(t,"x","denseBincount"),a=Xc(e,"weights","denseBincount");di("int32"===r.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`)),di(r.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`)),di(n>=0,(()=>`size must be non-negative, but got ${n}.`)),di(a.size===r.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${a.shape}.`));const i={x:r,weights:a},o={size:n,binaryOutput:s};return Vc.runKernel(Lo,i,o)}}),MT=Yc({scatterND_:function(t,e,n){const s=Xc(t,"indices","scatterND","int32"),r=Xc(e,"updates","scatterND");sg(r,s,n);const a={indices:s,updates:r},i={shape:n};return Vc.runKernel(pu,a,i)}}),LT=Yc({gatherND_:function(t,e){const n=Xc(e,"indices","gatherND","int32"),s={params:Xc(t,"x","gatherND"),indices:n};return Vc.runKernel(ol,s)}});function zT(t,e,n,s){const r=((t,e,n)=>{switch(t.category){case"arithmetic":return fp((()=>((t,e,n)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[_p(OI("a",t,e,n),OI("b",t,e,n))];case"AddN":return[xT(OI("tensors",t,e,n))];case"FloorMod":case"Mod":return[tx(OI("a",t,e,n),OI("b",t,e,n))];case"Mul":return[Id(OI("a",t,e,n),OI("b",t,e,n))];case"RealDiv":case"Div":return[id(OI("a",t,e,n),OI("b",t,e,n))];case"DivNoNan":return[Wb(OI("a",t,e,n),OI("b",t,e,n))];case"FloorDiv":return[ad(OI("a",t,e,n),OI("b",t,e,n))];case"Sub":return[Td(OI("a",t,e,n),OI("b",t,e,n))];case"Minimum":return[Dd(OI("a",t,e,n),OI("b",t,e,n))];case"Maximum":return[Ed(OI("a",t,e,n),OI("b",t,e,n))];case"Pow":return[wm(OI("a",t,e,n),OI("b",t,e,n))];case"SquaredDifference":return[Am(OI("a",t,e,n),OI("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"basic_math":return fp((()=>((t,e,n)=>{switch(t.op){case"Abs":case"ComplexAbs":return[kp(OI("x",t,e,n))];case"Acos":return[Eb(OI("x",t,e,n))];case"Acosh":return[Rb(OI("x",t,e,n))];case"Asin":return[Db(OI("x",t,e,n))];case"Asinh":return[Fb(OI("x",t,e,n))];case"Atan":return[Mb(OI("x",t,e,n))];case"Atan2":return[Lb(OI("x",t,e,n),OI("y",t,e,n))];case"Atanh":return[zb(OI("x",t,e,n))];case"Ceil":return[Pb(OI("x",t,e,n))];case"Complex":return[Zc(OI("real",t,e,n),OI("imag",t,e,n))];case"Cos":return[vb(OI("x",t,e,n))];case"Cosh":return[kb(OI("x",t,e,n))];case"Elu":return[od(OI("x",t,e,n))];case"Erf":return[Gb(OI("x",t,e,n))];case"Exp":return[kd(OI("x",t,e,n))];case"Expm1":return[jb(OI("x",t,e,n))];case"Floor":return[gd(OI("x",t,e,n))];case"Log":return[wd(OI("x",t,e,n))];case"Log1p":return[$m(OI("x",t,e,n))];case"Imag":return[Ef(OI("x",t,e,n))];case"Neg":return[jd(OI("x",t,e,n))];case"Reciprocal":return[sx(OI("x",t,e,n))];case"Real":return[Rf(OI("x",t,e,n))];case"Relu":return[rf(OI("x",t,e,n))];case"Round":return[rx(OI("x",t,e,n))];case"Selu":return[of(OI("x",t,e,n))];case"Sigmoid":return[uf(OI("x",t,e,n))];case"Sin":return[iy(OI("x",t,e,n))];case"Sign":return[ax(OI("x",t,e,n))];case"Sinh":return[ly(OI("x",t,e,n))];case"Softplus":return[gf(OI("x",t,e,n))];case"Sqrt":return[bf(OI("x",t,e,n))];case"Square":return[Ud(OI("x",t,e,n))];case"Tanh":return[wf(OI("x",t,e,n))];case"Tan":return[ox(OI("x",t,e,n))];case"ClipByValue":return[qp(OI("x",t,e,n),OI("clipValueMin",t,e,n),OI("clipValueMax",t,e,n))];case"Relu6":return[zf(OI("x",t,e,n))];case"Rsqrt":return[wy(DI(t.inputNames[0],e,n))];case"Prod":return[nx(OI("x",t,e,n),OI("axes",t,e,n))];case"LeakyRelu":return[vd(OI("x",t,e,n),OI("alpha",t,e,n))];case"Prelu":return[Jd(OI("x",t,e,n),OI("alpha",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"control":return(async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const s=OI("thenBranch",t,e,n),r=OI("elseBranch",t,e,n),a=OI("cond",t,e,n),i=OI("args",t,e,n);return(await a.data())[0]?n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const s=OI("body",t,e,n),r=OI("cond",t,e,n),a=OI("args",t,e,n),i=await n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map((t=>t.id));let l=await i[0].data();i.forEach((t=>{t.kept||-1!==o.indexOf(t.id)||t.dispose()}));let u=a;for(;l[0];){const t=u;u=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const e=u.map((t=>t.id));t.forEach((t=>{t.kept||-1!==o.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}));const a=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await a[0].data(),a.forEach((t=>{t.kept||-1!==o.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}))}return u}case"LoopCond":return[PI(OI("pred",t,e,n))];case"Switch":{const s=OI("pred",t,e,n);let r=OI("data",t,e,n);return r.kept||(r=PI(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=t.inputNames.find((t=>void 0!==DI(t,e,n)));return s?[PI(DI(s,e,n))]:void 0}case"Enter":{const s=OI("frameName",t,e,n),r=OI("tensor",t,e,n);return n.enterFrame(s),[PI(r)]}case"Exit":{const s=OI("tensor",t,e,n);return n.exitFrame(),[PI(s)]}case"NextIteration":{const s=OI("tensor",t,e,n);return n.nextIteration(),[PI(s)]}case"TensorArrayV3":{const s=OI("size",t,e,n),r=OI("dtype",t,e,n),a=OI("elementShape",t,e,n),i=OI("dynamicSize",t,e,n),o=OI("clearAfterRead",t,e,n),l=OI("identicalElementShapes",t,e,n),u=OI("name",t,e,n),c=new IT(u,r,s,a,l,i,o);return n.addTensorArray(c),[c.idTensor,vp(1)]}case"TensorArrayWriteV3":{const s=OI("tensorArrayId",t,e,n),r=OI("index",t,e,n),a=OI("tensor",t,e,n),i=n.getTensorArray(s.id);return i.write(r,a),[i.idTensor]}case"TensorArrayReadV3":{const s=OI("tensorArrayId",t,e,n),r=OI("index",t,e,n);return[n.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=OI("tensorArrayId",t,e,n),r=OI("indices",t,e,n),a=OI("dtype",t,e,n);return[n.getTensorArray(s.id).gather(r,a)]}case"TensorArrayScatterV3":{const s=OI("tensorArrayId",t,e,n),r=OI("indices",t,e,n),a=OI("tensor",t,e,n),i=n.getTensorArray(s.id);return i.scatter(r,a),[i.idTensor]}case"TensorArrayConcatV3":{const s=OI("tensorArrayId",t,e,n),r=n.getTensorArray(s.id),a=OI("dtype",t,e,n);return[r.concat(a)]}case"TensorArraySplitV3":{const s=OI("tensorArrayId",t,e,n),r=OI("tensor",t,e,n),a=OI("lengths",t,e,n),i=n.getTensorArray(s.id);return i.split(a,r),[i.idTensor]}case"TensorArraySizeV3":{const s=OI("tensorArrayId",t,e,n);return[vp(n.getTensorArray(s.id).size(),"int32")]}case"TensorArrayCloseV3":{const s=OI("tensorArrayId",t,e,n),r=n.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=OI("tensorListId",t,e,n),r=OI("index",t,e,n),a=OI("tensor",t,e,n),i=n.getTensorList(s.id);return i.setItem(r,a),[i.idTensor]}case"TensorListGetItem":{const s=OI("tensorListId",t,e,n),r=OI("index",t,e,n),a=OI("elementShape",t,e,n),i=OI("elementDType",t,e,n);return[n.getTensorList(s.id).getItem(r,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const s=OI("indices",t,e,n),r=function(t,e,n,s){if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const r=Math.max(...e);if(null!=s&&-1!==s&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const a=new TT([],n,t.dtype,s),i=Tf(t,0);return e.forEach(((t,e)=>{a.setItem(t,i[e])})),a}(OI("tensor",t,e,n),s,OI("elementShape",t,e,n),OI("numElements",t,e,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=OI("elementShape",t,e,n),r=OI("elementDType",t,e,n);let a;a="TensorListReserve"===t.op?"numElements":"maxNumElements";const i=function(t,e,n){return new TT([],t,e,n)}(s,r,OI(a,t,e,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const s=OI("tensorListId",t,e,n),r=OI("indices",t,e,n),a=OI("elementShape",t,e,n),i=OI("elementDType",t,e,n);return[n.getTensorList(s.id).gather(r,i,a)]}case"TensorListStack":{const s=OI("tensorListId",t,e,n),r=OI("elementShape",t,e,n),a=OI("elementDType",t,e,n),i=OI("numElements",t,e,n);return[n.getTensorList(s.id).stack(r,a,i)]}case"TensorListFromTensor":{const s=function(t,e,n){const s=t.dtype;if(t.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${t.shape}`);if(t.dtype!==n)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${n}`);vT(t.shape.slice(1),e,"TensorList shape mismatch: ");const r=Tf(t);return new TT(r,e,s)}(OI("tensor",t,e,n),OI("elementShape",t,e,n),OI("elementDType",t,e,n));return n.addTensorList(s),[s.idTensor]}case"TensorListConcat":{const s=OI("tensorListId",t,e,n),r=n.getTensorList(s.id),a=OI("dtype",t,e,n),i=OI("elementShape",t,e,n);return[r.concat(a,i)]}case"TensorListPushBack":{const s=OI("tensorListId",t,e,n),r=OI("tensor",t,e,n),a=n.getTensorList(s.id);return a.pushBack(r),[a.idTensor]}case"TensorListPopBack":{const s=OI("tensorListId",t,e,n),r=OI("elementShape",t,e,n),a=OI("elementDType",t,e,n);return[n.getTensorList(s.id).popBack(r,a)]}case"TensorListSplit":{const s=OI("tensor",t,e,n),r=OI("elementShape",t,e,n),a=function(t,e,n){let s=0;const r=e.map((t=>(s+=t,s)));if(s!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${s}, and tensor's shape is: ${t.shape}`);const a=_T(t.shape.slice(1),n),i=0===s?0:t.size/s,o=fp((()=>{const n=[];t=Vp(t,[1,s,i]);for(let s=0;s<e.length;++s){const o=[0,0===s?0:r[s-1],0],l=[1,e[s],i];n[s]=Vp(cf(t,o,l),a)}return t.dispose(),n})),l=new TT([],n,t.dtype,e.length);for(let t=0;t<o.length;t++)l.setItem(t,o[t]);return l}(s,OI("lengths",t,e,n),r);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n);case"convolution":return fp((()=>((t,e,n)=>{switch(t.op){case"Conv1D":{const s=OI("stride",t,e,n),r=OI("pad",t,e,n),a=OI("dataFormat",t,e,n).toUpperCase(),i=OI("dilation",t,e,n);return[td(OI("x",t,e,n),OI("filter",t,e,n),s,r,a,i)]}case"Conv2D":{const s=OI("strides",t,e,n),r=zI(t,e,n),a=OI("dataFormat",t,e,n).toUpperCase(),i=OI("dilations",t,e,n);return[Qp(OI("x",t,e,n),OI("filter",t,e,n),[s[1],s[2]],r,a,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:s,pad:r,dataFormat:a,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:c}=CT(t,e,n);return[Gf({x:OI("x",t,e,n),filter:OI("filter",t,e,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:r,dataFormat:a,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:c}=CT(t,e,n);return[qf({x:OI("x",t,e,n),filter:OI("filter",t,e,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=OI("outputShape",t,e,n),r=OI("strides",t,e,n),a=zI(t,e,n);return[nd(OI("x",t,e,n),OI("filter",t,e,n),s,[r[1],r[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=OI("strides",t,e,n),r=zI(t,e,n),a=OI("dilations",t,e,n),i=OI("dataFormat",t,e,n).toUpperCase();return[rd(OI("input",t,e,n),OI("filter",t,e,n),[s[1],s[2]],r,i,[a[1],a[2]])]}case"Conv3D":{const s=OI("strides",t,e,n),r=OI("pad",t,e,n),a=OI("dataFormat",t,e,n).toUpperCase(),i=OI("dilations",t,e,n);return[sd(OI("x",t,e,n),OI("filter",t,e,n),[s[1],s[2],s[3]],r,a,[i[1],i[2],i[3]])]}case"AvgPool":{const s=OI("strides",t,e,n),r=OI("pad",t,e,n),a=OI("kernelSize",t,e,n);return[Bp(OI("x",t,e,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPool":{const s=OI("strides",t,e,n),r=OI("pad",t,e,n),a=OI("kernelSize",t,e,n);return[Ad(OI("x",t,e,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPoolWithArgmax":{const s=OI("strides",t,e,n),r=OI("pad",t,e,n),a=OI("kernelSize",t,e,n),i=OI("includeBatchInIndex",t,e,n),{result:o,indexes:l}=NT(OI("x",t,e,n),[a[1],a[2]],[s[1],s[2]],r,i);return[o,l]}case"AvgPool3D":{const s=OI("strides",t,e,n),r=OI("pad",t,e,n),a=OI("kernelSize",t,e,n);return[Wp(OI("x",t,e,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"MaxPool3D":{const s=OI("strides",t,e,n),r=OI("pad",t,e,n),a=OI("kernelSize",t,e,n);return[$d(OI("x",t,e,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"Dilation2D":{const s=OI("strides",t,e,n),r=OI("pad",t,e,n),a=OI("dilations",t,e,n),i=s[1],o=s[2],l=a[1],u=a[2];return[Bb(OI("x",t,e,n),OI("filter",t,e,n),[i,o],r,[l,u],"NHWC")]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"creation":return fp((()=>((t,e,n)=>{switch(t.op){case"Fill":{const s=OI("shape",t,e,n),r=OI("dtype",t,e,n);return[md(s,OI("value",t,e,n),r)]}case"LinSpace":return[ST(OI("start",t,e,n),OI("stop",t,e,n),OI("num",t,e,n))];case"Multinomial":{const s=OI("logits",t,e,n),r=OI("numSamples",t,e,n),a=OI("seed",t,e,n);return[AT(s,r,a)]}case"OneHot":{const s=OI("indices",t,e,n),r=OI("depth",t,e,n),a=OI("onValue",t,e,n),i=OI("offValue",t,e,n);return[qd(s,r,a,i)]}case"Ones":return[Kd(OI("shape",t,e,n),OI("dtype",t,e,n))];case"OnesLike":return[Yd(OI("x",t,e,n))];case"RandomUniform":return[sf(OI("shape",t,e,n),OI("minval",t,e,n),OI("maxval",t,e,n),OI("dtype",t,e,n))];case"Range":return[xm(OI("start",t,e,n),OI("stop",t,e,n),OI("step",t,e,n),OI("dtype",t,e,n))];case"TruncatedNormal":{const s=OI("shape",t,e,n),r=OI("mean",t,e,n),a=OI("stdDev",t,e,n),i=OI("seed",t,e,n);return[If(s,r,a,OI("dtype",t,e,n),i)]}case"Zeros":return[Xd(OI("shape",t,e,n),OI("dtype",t,e,n))];case"ZerosLike":return[Sf(OI("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"dynamic":return(async(t,e,n)=>{switch(t.op){case"NonMaxSuppressionV5":{const{boxes:s,scores:r,maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}=ET(t,e,n),u=await Rm.nonMaxSuppressionWithScoreAsync(s,r,a,i,o,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:s,scores:r,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=ET(t,e,n),l=OI("padToMaxOutputSize",t,e,n),u=await Rm.nonMaxSuppressionPaddedAsync(s,r,a,i,o,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:s,scores:r,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=ET(t,e,n);return[await Rm.nonMaxSuppressionAsync(s,r,a,i,o)]}case"Where":{const s=Dh(OI("condition",t,e,n),"bool"),r=[await $T(s)];return s.dispose(),r}case"ListDiff":return async function(t,e){const n=Xc(t,"x","setdiff1d"),s=Xc(e,"y","setdiff1d");di(n.dtype===s.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`)),di(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),di(1===s.rank,(()=>`y should be 1D tensor, but got y (${s.shape}).`));const r=await n.data(),a=await s.data(),i=new Set(a);let o=0;for(let t=0;t<r.length;t++)i.has(r[t])||o++;const l=new yc([o],n.dtype),u=new yc([o],"int32");for(let t=0,e=0;t<r.length;t++)i.has(r[t])||(l.values[e]=r[t],u.values[e]=t,e++);return[l.toTensor(),u.toTensor()]}(OI("x",t,e,n),OI("y",t,e,n));default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n);case"evaluation":return fp((()=>((t,e,n)=>{switch(t.op){case"TopKV2":{const s=OI("x",t,e,n),r=OI("k",t,e,n),a=OI("sorted",t,e,n),i=lx(s,r,a);return[i.values,i.indices]}case"Unique":{const s=OI("x",t,e,n),r=ux(s);return[r.values,r.indices]}case"UniqueV2":{const s=OI("x",t,e,n),r=OI("axis",t,e,n),a=ux(s,r);return[a.values,a.indices]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"image":return fp((()=>((t,e,n)=>{switch(t.op){case"ResizeBilinear":{const s=OI("images",t,e,n),r=OI("size",t,e,n),a=OI("alignCorners",t,e,n),i=OI("halfPixelCenters",t,e,n);return[Rm.resizeBilinear(s,[r[0],r[1]],a,i)]}case"ResizeNearestNeighbor":{const s=OI("images",t,e,n),r=OI("size",t,e,n),a=OI("alignCorners",t,e,n),i=OI("halfPixelCenters",t,e,n);return[Rm.resizeNearestNeighbor(s,[r[0],r[1]],a,i)]}case"CropAndResize":{const s=OI("image",t,e,n),r=OI("boxes",t,e,n),a=OI("boxInd",t,e,n),i=OI("cropSize",t,e,n),o=OI("method",t,e,n),l=OI("extrapolationValue",t,e,n);return[Rm.cropAndResize(s,r,a,i,o,l)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"graph":return fp((()=>((t,e,n)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const s=OI("default",t,e,n);return[DI(t.name,e,n)||s];case"Placeholder":return[DI(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[PI(OI("x",t,e,n))];case"IdentityN":return OI("x",t,e,n).map((t=>PI(t)));case"Shape":return[kf(OI("x",t,e,n).shape,"int32")];case"ShapeN":return OI("x",t,e,n).map((t=>kf(t.shape)));case"Size":return[vp(OI("x",t,e,n).size,"int32")];case"Rank":return[vp(OI("x",t,e,n).rank,"int32")];case"NoOp":return[vp(1)];case"Print":const r=OI("x",t,e,n),a=OI("data",t,e,n),i=OI("message",t,e,n),o=OI("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let t=0;t<a.length;t++)console.log(Array.prototype.slice.call(a[t].dataSync()).slice(0,o));return[r];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"logical":return fp((()=>((t,e,n)=>{switch(t.op){case"Equal":return[hd(OI("a",t,e,n),OI("b",t,e,n))];case"NotEqual":return[Hd(OI("a",t,e,n),OI("b",t,e,n))];case"Greater":return[bd(OI("a",t,e,n),OI("b",t,e,n))];case"GreaterEqual":return[xd(OI("a",t,e,n),OI("b",t,e,n))];case"Less":return[Vy(OI("a",t,e,n),OI("b",t,e,n))];case"LessEqual":return[bm(OI("a",t,e,n),OI("b",t,e,n))];case"LogicalAnd":return[Sd(OI("a",t,e,n),OI("b",t,e,n))];case"LogicalNot":return[mb(OI("a",t,e,n))];case"LogicalOr":return[Zb(OI("a",t,e,n),OI("b",t,e,n))];case"Select":case"SelectV2":return[Cf(OI("condition",t,e,n),OI("a",t,e,n),OI("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"matrices":return fp((()=>((t,e,n)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Xf(OI("a",t,e,n),OI("b",t,e,n),OI("transposeA",t,e,n),OI("transposeB",t,e,n))];case"Transpose":return[Af(OI("x",t,e,n),OI("perm",t,e,n))];case"_FusedMatMul":const[s,r]=OI("fusedOps",t,e,n),a="biasadd"===s,i="prelu"===r,o=OI("numArgs",t,e,n),l=OI("leakyreluAlpha",t,e,n);if(a){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,c]=OI("args",t,e,n);return[Kf({a:OI("a",t,e,n),b:OI("b",t,e,n),transposeA:OI("transposeA",t,e,n),transposeB:OI("transposeB",t,e,n),bias:u,activation:r,preluActivationWeights:c,leakyreluAlpha:l})];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"normalization":return fp((()=>((t,e,n)=>{switch(t.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Up(OI("x",t,e,n),OI("mean",t,e,n),OI("variance",t,e,n),OI("offset",t,e,n),OI("scale",t,e,n),OI("epsilon",t,e,n))];case"LRN":return[Kb(OI("x",t,e,n),OI("radius",t,e,n),OI("bias",t,e,n),OI("alpha",t,e,n),OI("beta",t,e,n))];case"Softmax":return[mf(OI("x",t,e,n))];case"LogSoftmax":return[Cd(OI("x",t,e,n))];case"SparseToDense":return[OT(OI("sparseIndices",t,e,n),OI("outputShape",t,e,n),OI("sparseValues",t,e,n),OI("defaultValue",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"reduction":return fp((()=>((t,e,n)=>{switch(t.op){case"Max":{const s=OI("axis",t,e,n),r=OI("keepDims",t,e,n);return[_d(OI("x",t,e,n),s,r)]}case"Mean":{const s=OI("axis",t,e,n),r=OI("keepDims",t,e,n);return[Rd(OI("x",t,e,n),s,r)]}case"Min":{const s=OI("axis",t,e,n),r=OI("keepDims",t,e,n);return[Od(OI("x",t,e,n),s,r)]}case"Sum":{const s=OI("axis",t,e,n),r=OI("keepDims",t,e,n);return[Nd(OI("x",t,e,n),s,r)]}case"All":{const s=OI("axis",t,e,n),r=OI("keepDims",t,e,n);return[Ip(OI("x",t,e,n),s,r)]}case"Any":{const s=OI("axis",t,e,n),r=OI("keepDims",t,e,n);return[Tp(OI("x",t,e,n),s,r)]}case"ArgMax":{const s=OI("axis",t,e,n);return[Np(OI("x",t,e,n),s)]}case"ArgMin":{const s=OI("axis",t,e,n);return[Ob(OI("x",t,e,n),s)]}case"Prod":{const s=OI("axis",t,e,n),r=OI("keepDims",t,e,n);return[nx(OI("x",t,e,n),s,r)]}case"Cumsum":{const s=OI("axis",t,e,n),r=OI("exclusive",t,e,n),a=OI("reverse",t,e,n);return[cy(OI("x",t,e,n),s,r,a)]}case"Bincount":const s=OI("x",t,e,n),r=OI("weights",t,e,n),a=OI("size",t,e,n);return[DT(s,r,a)];case"DenseBincount":{const s=OI("x",t,e,n),r=OI("weights",t,e,n),a=OI("size",t,e,n),i=OI("binaryOutput",t,e,n);return[FT(s,r,a,i)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"slice_join":return fp((()=>((t,e,n)=>{switch(t.op){case"ConcatV2":case"Concat":{const s=OI("n",t,e,n),r=OI("axis",t,e,n);let a=OI("tensors",t,e,n);return a=a.slice(0,s),[Xp(a,r)]}case"Gather":{const s=OI("x",t,e,n),r=OI("indices",t,e,n);return[yd(s,Dh(r,"int32"),0)]}case"GatherV2":{const s=OI("axis",t,e,n),r=OI("batchDims",t,e,n),a=OI("x",t,e,n),i=OI("indices",t,e,n);return[yd(a,Dh(i,"int32"),s,r)]}case"Reverse":{const s=OI("dims",t,e,n),r=[];for(let t=0;t<s.length;t++)s[t]&&r.push(t);const a=OI("x",t,e,n);return[af(a,r)]}case"ReverseV2":{const s=OI("axis",t,e,n),r=OI("x",t,e,n);return[af(r,s)]}case"Slice":{const s=OI("begin",t,e,n),r=OI("size",t,e,n);return[cf(OI("x",t,e,n),s,r)]}case"StridedSlice":{const s=OI("begin",t,e,n),r=OI("end",t,e,n),a=OI("strides",t,e,n),i=OI("beginMask",t,e,n),o=OI("endMask",t,e,n),l=OI("ellipsisMask",t,e,n),u=OI("newAxisMask",t,e,n),c=OI("shrinkAxisMask",t,e,n),h=OI("x",t,e,n);return[ix(h,s,r,a,i,o,l,u,c)]}case"Pack":return fp((()=>{const s=OI("axis",t,e,n),r=OI("tensors",t,e,n),a=r[0].shape,i=xf(r[0]).shape,o=r.map((t=>{const e=bi(t.shape,a);if(!e&&!bi(xf(t).shape,i))throw new Error("the input tensors shape does not match");return e?t:Vp(t,a)}));return[vf(o,s)]}));case"Unpack":{const s=OI("axis",t,e,n),r=OI("tensor",t,e,n);return Tf(r,s)}case"Tile":{const s=OI("reps",t,e,n);return[dd(OI("x",t,e,n),s)]}case"Split":case"SplitV":{const s=OI("axis",t,e,n),r=OI("numOrSizeSplits",t,e,n),a=OI("x",t,e,n);return yf(a,r,s)}case"ScatterNd":{const s=OI("indices",t,e,n),r=OI("values",t,e,n),a=OI("shape",t,e,n);return[MT(s,r,a)]}case"GatherNd":{const s=OI("x",t,e,n),r=OI("indices",t,e,n);return[LT(s,r)]}case"SparseToDense":{const s=OI("sparseIndices",t,e,n),r=OI("outputShape",t,e,n),a=OI("sparseValues",t,e,n),i=OI("defaultValue",t,e,n);return[OT(s,a,r,a.dtype===i.dtype?i:Dh(i,a.dtype))]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"spectral":return fp((()=>((t,e,n)=>{switch(t.op){case"FFT":return[Of(OI("x",t,e,n))];case"IFFT":return[Ff(OI("x",t,e,n))];case"RFFT":return[Df(OI("x",t,e,n))];case"IRFFT":return[Mf(OI("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"transformation":return fp((()=>((t,e,n)=>{switch(t.op){case"Cast":return[Dh(OI("x",t,e,n),OI("dtype",t,e,n))];case"ExpandDims":{const s=OI("axis",t,e,n);return[pd(OI("x",t,e,n),s)]}case"Squeeze":{const s=OI("axis",t,e,n);return[xf(OI("x",t,e,n),s)]}case"Reshape":return[Vp(OI("x",t,e,n),OI("shape",t,e,n))];case"MirrorPad":return[Qb(OI("x",t,e,n),OI("padding",t,e,n),OI("mode",t,e,n))];case"PadV2":case"Pad":return[Zd(OI("x",t,e,n),OI("padding",t,e,n),OI("constantValue",t,e,n))];case"SpaceToBatchND":{const s=OI("blockShape",t,e,n),r=OI("paddings",t,e,n);return[qg(OI("x",t,e,n),s,r)]}case"BatchToSpaceND":{const s=OI("blockShape",t,e,n),r=OI("crops",t,e,n);return[Cb(OI("x",t,e,n),s,r)]}case"DepthToSpace":{const s=OI("blockSize",t,e,n),r=OI("dataFormat",t,e,n).toUpperCase();return[Vb(OI("x",t,e,n),s,r)]}case"BroadcastTo":return[Nf(OI("x",t,e,n),OI("shape",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"hash_table":return(async(t,e,n,s)=>{switch(t.op){case"HashTable":case"HashTableV2":{const r=OI("keyDType",t,e,n),a=OI("valueDType",t,e,n),i=new RT(r,a);return s.addHashTable(t.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const r=OI("tableHandle",t,e,n,s),a=OI("keys",t,e,n),i=OI("values",t,e,n),o=s.getHashTableById(r.id);return[await o.import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{const r=OI("tableHandle",t,e,n,s),a=OI("keys",t,e,n),i=OI("defaultValue",t,e,n),o=s.getHashTableById(r.id);return[await o.find(a,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=OI("tableHandle",t,e,n,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n,s);case"custom":const r=RI(t.op);if(r&&r.customExecutor)return r.customExecutor(new bT(t,e,n));throw TypeError(`Custom op ${t.op} is not registered.`);default:throw TypeError(`Unknown op '${t.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(t,e,n);return ji(r)?r.then((t=>[].concat(t))):[].concat(r)}class PT{constructor(t={},e={},n={},s={}){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=n,this.functionMap=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map((t=>0===t.id&&0===t.iterationId?"":`${t.frameName}-${t.iterationId}`)).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}function VT(t,e,n,s){const r=new Set,a=[];let i=null,o=null;const l=new Set,u=Object.keys(t).map((t=>LI(t)[0]));let c=[];null!=s&&(c=s.map((t=>LI(t.name)[0])));const h=[...e];for(;h.length>0;){const t=h.pop();(GT(t)||jT(t)||HT(t))&&null==i&&(i=t,o=i.children.map((t=>t.name)).filter((t=>r.has(t)))),r.add(t.name),null==n[t.name]&&-1===u.indexOf(t.name)&&-1===c.indexOf(t.name)&&(0!==t.inputs.length?t.inputs.forEach((t=>{l.has(t.name)||(l.add(t.name),h.push(t))})):a.push(t.name))}return{inputs:t,outputs:e,usedNodes:r,missingInputs:a,dynamicNode:i,syncInputs:o}}const BT=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],WT=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],UT=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function GT(t){return BT.indexOf(t.op)>=0}function jT(t){return WT.indexOf(t.op)>=0}function HT(t){return UT.indexOf(t.op)>=0}class qT{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach((e=>{this._functionExecutorMap[e]=new qT(t.functions[e],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map((e=>t[e].map((t=>t.id))));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((t=>t.signatureKey||t.name))}get outputNodes(){return this._outputs.map((t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e}))}get functions(){return Object.keys(this._functions).reduce(((t,e)=>(t[e]=this._functions[e].signature,t)),{})}getCompilationKey(t,e){const n=t.map((t=>t.name)).sort(),s=e.map((t=>t.name)).sort();return n.join(this.SEPERATOR)+"--"+s.join(this.SEPERATOR)}compile(t,e){const n=VT(t,e,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:r,syncInputs:a}=n;if(null!=r)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){const n=e.map((t=>t.name)),r=Object.keys(t);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${r}]. Missing the following inputs: [${s}]`)}return function(t,e,n){const{usedNodes:s,inputs:r}=n,a=[],i=Object.keys(r).map((t=>LI(t)[0])).map((e=>t.nodes[e])),o=t.initNodes;i.forEach((t=>{s.has(t.name)&&a.push(t)})),t.weights.forEach((t=>{s.has(t.name)&&a.push(t)})),null!=o&&o.forEach((t=>{s.has(t.name)&&a.push(t)}));const l=new Set,u=[];for(;a.length>0;){const t=a.pop();l.add(t.name),e[t.name]||u.push(t),t.children.forEach((t=>{!l.has(t.name)&&s.has(t.name)&&t.inputs.every((t=>l.has(t.name)))&&a.push(t)}))}return u}(this.graph,this.weightMap,n)}execute(t,e){t=this.mapInputs(t);const n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const s=n.map((t=>this.graph.nodes[LI(t)[0]])),r=e.map((t=>LI(t)[0]));let a=r.map((t=>this.graph.nodes[t]));0===a.length&&(a=this._outputs);const i=this.getCompilationKey(s,a);let o=this.compiledMap.get(i);null==o&&(o=this.compile(t,a),this.compiledMap.set(i,o));const l={},u={};return fp((()=>{const n=new PT(this.weightMap,l,u,this.functionExecutorMap),s=Object.assign({},this.weightMap);Object.keys(t).forEach((e=>{const[n,r]=LI(e),a=[];a[r]=t[e],s[n]=a}));const a=this.getFrozenTensorIds(s),i={};for(let t=0;t<o.length;t++){const e=o[t];if(!s[e.name]){const t=zT(e,s,n,this._resourceManager);if(ji(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);s[e.name]=t,this.checkTensorForDisposal(e.name,e,s,n,a,r,i)}}return null==this.parent&&n.dispose(a),e.map((t=>DI(t,s,n)))}))}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map((e=>t[e])).map((t=>t.map((t=>t.id)))));return new Set(e)}checkTensorForDisposal(t,e,n,s,r,a,i){"control"!==e.category&&-1===a.indexOf(t)&&(n[t].forEach((t=>{null!=t&&(i[t.id]=(i[t.id]||0)+e.children.length)})),e.inputs.forEach((t=>{if("control"!==t.category){const e=function(t,e,n){return e[MI(t,n.currentContextId)]}(t.name,n,s);null!=e&&e.forEach((t=>{if(t&&!r.has(t.id)){const e=i[t.id];1===e?(t.dispose(),delete i[t.id]):null!=e&&i[t.id]--}}))}})))}async executeAsync(t,e){return this._executeAsync(t,e)}async _executeAsync(t,e,n=!1,s={},r={}){n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));const a=new PT(this.weightMap,s,r,this.functionExecutorMap),i=await this.executeWithControlFlow(t,a,e,n),o=e.map((t=>DI(t,i,a))),l=o.map((t=>t.id)),u=Object.keys(t).map((e=>t[e].id)),c=new Set([...l,...u,...this.weightIds]);return Object.keys(i).forEach((t=>{i[t].forEach((t=>{!t||t.isDisposed||c.has(t.id)||t.dispose()}))})),null==this.parent&&a.dispose(c),o}async executeFunctionAsync(t,e,n){const s=t.reduce(((t,e,n)=>(t[this.inputs[n].name]=e,t)),{});return this._executeAsync(s,this.outputNodes,!0,e,n)}async executeWithControlFlow(t,e,n,s){const r=Object.keys(t),a=r.map((t=>this.graph.nodes[LI(t)[0]])),i=n.map((t=>LI(t)[0]));let o=i.map((t=>this.graph.nodes[t]));0===o.length&&(o=this._outputs);const{usedNodes:l,missingInputs:u,dynamicNode:c,syncInputs:h}=VT(t,o,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map((t=>({node:t,contexts:e.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(t).forEach((e=>{const[n,s]=LI(e),r=[];r[s]=t[e],d[n]=r}));const f={},m=this.getFrozenTensorIds(d),g={};for(;p.length>0;){const t=this.processStack(a,p,e,d,g,m,i,f,l);await Promise.all(t)}null!=c||s||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((t=>!GT(t)&&!DI(t.name,d,e))).map((t=>t.name));if(y.length>0){let t="";throw null!=c&&(t=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${r}]. Consider providing the following inputs: [${u}]. ${t}`)}return d}processStack(t,e,n,s,r,a,i,o,l){const u=[];for(;e.length>0;){const t=e.pop();n.currentContext=t.contexts;let c="";if("Enter"===t.node.op&&OI("isConstant",t.node,s,n)&&([c]=FI(t.node.name,n)),null==s[t.node.name]){const h=zT(t.node,s,n,this._resourceManager);c||([c]=FI(t.node.name,n));const p=n.currentContext;ji(h)?u.push(h.then((u=>(s[c]=u,n.currentContext=p,this.checkTensorForDisposal(c,t.node,s,n,a,i,o),this.processChildNodes(t.node,e,n,s,r,l),u)))):(s[c]=h,this.checkTensorForDisposal(c,t.node,s,n,a,i,o),this.processChildNodes(t.node,e,n,s,r,l))}else this.processChildNodes(t.node,e,n,s,r,l)}return u}processChildNodes(t,e,n,s,r,a){t.children.forEach((t=>{const[i]=FI(t.name,n);!r[i]&&a.has(t.name)&&("Merge"===t.op?t.inputNames.some((t=>!!DI(t,s,n)))&&(r[i]=!0,e.push({contexts:n.currentContext,node:t})):t.inputNames.every((t=>!!DI(t,s,n)))&&(r[i]=!0,e.push({contexts:n.currentContext,node:t})))}))}dispose(){Object.keys(this.weightMap).forEach((t=>this.weightMap[t].forEach((t=>t.dispose()))))}checkInputShapeAndType(t){Object.keys(t).forEach((e=>{const n=t[e],[s]=LI(e),r=this.graph.nodes[s];if(r.attrParams.shape&&r.attrParams.shape.value){const t=r.attrParams.shape.value;di(t.length===n.shape.length&&n.shape.every(((e,n)=>-1===t[n]||t[n]===e)),(()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${t}], but was [${n.shape}]`))}r.attrParams.dtype&&r.attrParams.dtype.value&&di(n.dtype===r.attrParams.dtype.value,(()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(t){const e={};for(const n in t)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?e[this._signature.inputs[n].name]=t[n]:e[n]=t[n];return e}checkInputs(t){const e=Object.keys(t).filter((t=>{const[e]=LI(t);return null==this.graph.nodes[e]}));if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map((t=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[t]?this._signature.outputs[t].name:t),{})}checkOutputs(t){t.forEach((t=>{const[e]=LI(t);if(!this.graph.nodes[e])throw new Error(`The output '${t}' is not found in the graph`)}))}}class XT{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}class KT{constructor(t,e={}){this.modelUrl=t,this.loadOptions=e,this.version="n/a",null==e&&(this.loadOptions={}),this.resourceManager=new XT}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=Gh(t,this.loadOptions);else{const s=(e=t,n=this.loadOptions,lh.getLoadHandlers(e,n));if(0===s.length)s.push(Gh(t,this.loadOptions));else if(s.length>1)throw new Error(`Found more than one (${s.length}) load handlers for URL '${[t]}'`);this.handler=s[0]}var e,n}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=await this.handler.load();return this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${e.versions.producer}.${e.versions.minConsumer}`;const s=function(t,e){const n={};let s,r=0;for(const a of e){const e=a.name,i=a.dtype,o=a.shape,l=yi(o);let u;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=th[n.dtype],c=t.slice(r,r+l*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];u[t]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===s&&(s=oh()),u=s(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${e}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];u[t]=Math.round(e*n.scale+n.min)}}r+=l*o}else if("string"===i){const e=yi(a.shape);u=[];for(let n=0;n<e;n++){const e=new Uint32Array(t.slice(r,r+4))[0];r+=4;const n=new Uint8Array(t.slice(r,r+e));u.push(n),r+=e}}else{const s=th[i],a=t.slice(r,r+l*s);if("float32"===i)u=new Float32Array(a);else if("int32"===i)u=new Int32Array(a);else if("bool"===i)u=new Uint8Array(a);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${e}': ${i}`);{u=new Float32Array(a);const t=new Float32Array(u.length/2),s=new Float32Array(u.length/2);for(let e=0;e<t.length;e++)t[e]=u[2*e],s[e]=u[2*e+1];const r=Qc(t,o,"float32"),i=Qc(s,o,"float32");n[e]=Zc(r,i),r.dispose(),i.dispose()}}r+=l*s}"complex64"!==i&&(n[e]=Qc(u,o,i))}return n}(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new qT(sT.Instance.transformGraph(e,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,null!=t.modelInitializer&&null!=t.modelInitializer.node){const e=sT.Instance.transformGraph(t.modelInitializer);this.initializer=new qT(e),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if("string"==typeof t){const e=uh(t);if(0===e.length)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Error(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){return this.execute(t,this.outputNodes)}normalizeInputs(t){if(!(t instanceof wc||Array.isArray(t)))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce(((e,n,s)=>(e[n]=t[s],e)),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce(((e,n)=>(e[n]=[t[n]],e)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}var YT,ZT,JT=n(6377);function QT(t,e,n=new Map,s=new Set){if(null==t)return null;if(s.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const r=e(t);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(sN(t)){const r=Array.isArray(t)?[]:{};s.add(t);for(const a in t){const i=QT(t[a],e,n,s);r[a]=i}return s.delete(t),r}throw new Error(`Can't recurse into non-iterable type: ${t}`)}return n.set(t,r.value),r.value}function tN(t,e=nN){return eN(t,e)}function eN(t,e,n=new Set){const s=t[0];if(n.has(s))throw new Error("Circular references are not supported.");const r=e(t);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(sN(s)){const r=Array.isArray(s)?[]:{};n.add(s);for(const a in s){const s=eN(t.map((t=>t[a])),e,n);r[a]=s}return n.delete(s),r}throw new Error(`Can't recurse into non-iterable type: ${s}`)}return r.value}function nN(t){return null===t?null:sN(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}function sN(t){return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"==typeof t&&!(t instanceof wc))}function rN(t){return QT(t,aN)}function aN(t){return t instanceof wc?{value:t.clone(),recurse:!1}:sN(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}class iN{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class oN extends iN{constructor(){super(oN.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let t=0;t<n;t++)e[t]=this.get(this.wrap(this.begin+t));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}oN.INITIAL_CAPACITY=32;class lN{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new yN(this,t)}filter(t){return new mN(this,t)}map(t){return new gN(this,t)}mapAsync(t){return new bN(this,t)}serialMapAsync(t){return new bN(this,t).serial()}flatmap(t){return new vN(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile((t=>!0===t))}rowMajorBatch(t,e=!0){return new fN(this,t,e)}columnMajorBatch(t,e=!0,n=nN){return this.rowMajorBatch(t,e).map((t=>tN(t,n)))}concatenate(t,e){return new wN(new uN([this,t]),e)}take(t){return t<0||null==t?this:new dN(this,t)}skip(t){return t<0||null==t?this:new pN(this,t)}prefetch(t){return new kN(this,t)}shuffle(t,e){return new _N(this,t,e)}serial(){return new hN(this)}}class uN extends lN{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:rN(t),done:!1}}}class cN extends lN{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}}class hN extends lN{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class pN extends lN{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;mp(t.value)}return this.upstream.next()}}class dN extends lN{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class fN extends lN{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class mN extends lN{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;mp(t.value)}}}class gN extends lN{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=Dc(t.value),n=this.transform(t.value),s=Dc(n);for(const t of e)Oc(t,s)||t.dispose();return{value:n,done:!1}}}class yN extends lN{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class bN extends lN{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=Dc(t.value),n=await this.transform(t.value),s=Dc(n);for(const t of e)Oc(t,s)||t.dispose();return{value:n,done:!1}}}class xN extends lN{constructor(){super(),this.outputQueue=new oN,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class vN extends xN{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=Dc(t.value),n=this.transform(t.value),s=Dc(n);this.outputQueue.pushAll(n);for(const t of e)Oc(t,s)||t.dispose();return!0}}class wN extends lN{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}(ZT=YT||(YT={}))[ZT.FAIL=0]="FAIL",ZT[ZT.SHORTEST=1]="SHORTEST",ZT[ZT.LONGEST=2]="LONGEST";class kN extends lN{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new iN(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class _N extends kN{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=JT.alea(n||sc().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}class IN{constructor(){this.size=null}batch(t,e=!0){const n=this;let s;return di(t>0,(()=>`batchSize needs to be positive, but it is\n      ${t}`)),s=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),TN((async()=>(await n.iterator()).columnMajorBatch(t,e,NN)),s)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,TN((async()=>(await e.iterator()).concatenate(await t.iterator())),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,TN((async()=>(await e.iterator()).filter((e=>fp((()=>t(e)))))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return TN((async()=>(await e.iterator()).map((e=>fp((()=>t(e)))))),this.size)}mapAsync(t){const e=this;return TN((async()=>(await e.iterator()).mapAsync(t)),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return TN((async()=>(await e.iterator()).prefetch(t)),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,TN((async()=>{return n=(r=async()=>({value:await e.iterator(),done:!1}),new cN(r)).take(t),new wN(n,s);var n,s,r}),n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,TN((async()=>(await e.iterator()).skip(t)),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,r=JT.alea(e||sc().toString());return TN((async()=>{let e=r.int32();return n&&(e+=r.int32()),(await s.iterator()).shuffle(t,e.toString())}),this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,TN((async()=>(await e.iterator()).take(t)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function TN(t,e=null){return new class extends IN{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function NN(t){if(null===t)return null;return null==(e=t[0])||null===(n=e)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(e)||"object"==typeof e&&e instanceof wc||Ai(e)?{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof wc?vf(t):Qc(t)}(t),recurse:!1}:{value:null,recurse:!0};var e,n}function CN(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&di("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the CPU backend.`))}))}IN.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const SN=Ag;class AN extends li{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new oi(this,pp())}nextDataId(){return AN.nextDataId++}write(t,e,n){this.firstUse&&(this.firstUse=!1,Xi().get("IS_NODE")&&dg("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const s={id:this.nextDataId()};return this.data.set(s,{values:t,dtype:n,refCount:1}),s}makeTensorInfo(t,e,n){let s;if("string"===e&&null!=n&&n.length>0&&Ei(n[0])){const r=n.map((t=>rc(t)));s=this.write(r,t,e)}else s=this.write(n,t,e);return{dataId:s,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){this.data.get(t).refCount++}decRef(t){this.data.has(t)&&this.data.get(t).refCount--}move(t,e,n,s,r){this.data.set(t,{values:e,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);return"complex64"===e?mg(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map((t=>ac(t)))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return Oh(t.shape,t.dtype,n)}makeOutput(t,e,n){const s=this.write(t,e,n);return pp().makeTensorFromDataId(s,e,n,this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(t);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=sc();return t(),{kernelMs:sc()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){CN([t],"where");const e=this.readSync(t.dataId);return SN(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function $N(t,e,n){return({inputs:s,attrs:r,backend:a})=>{const{x:i}=s;if(CN(i,t),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=yi(i.shape),c=n||i.dtype,h=Ci(c,u);for(let t=0;t<u;++t)h[t]=e(l[t],r);return o.makeTensorInfo(i.shape,c,h)}}function EN(t,e,n){return({inputs:s,attrs:r,backend:a})=>{const{x:i}=s;if(CN(i,t),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=n||i.dtype,c=e(l,u,r);return o.makeTensorInfo(i.shape,u,c)}}AN.nextDataId=0,bp("cpu",(()=>new AN),1);const RN=$N(qo,(t=>t>=0?t:Math.exp(t)-1)),ON={kernelName:qo,backendName:"cpu",kernelFunc:RN};function DN(t){const{inputs:e,backend:n}=t,{x:s}=e;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const FN={kernelName:cl,backendName:"cpu",kernelFunc:DN};function MN(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{alpha:a}=s;CN([r],"leakyRelu");const i=yi(r.shape),o=n.data.get(r.dataId).values,l=Ni("float32",i);for(let t=0;t<o.length;t++)l[t]=o[t]<0?a*o[t]:o[t];return n.makeTensorInfo(r.shape,"float32",l)}const LN={kernelName:gl,backendName:"cpu",kernelFunc:MN};function zN(t){return(e,n,s,r,a)=>{const i=cd(e,n),o=i.length,l=Mi(i),u=Ni(a,yi(i)),c=e.length,h=n.length,p=Mi(e),d=Mi(n),f=ld(e,i),m=ld(n,i);if(f.length+m.length===0)for(let e=0;e<u.length;++e)u[e]=t(s[e%s.length],r[e%r.length]);else for(let e=0;e<u.length;++e){const n=Gi(e,o,l),a=n.slice(-c);f.forEach((t=>a[t]=0));const i=Ui(a,c,p),g=n.slice(-h);m.forEach((t=>g[t]=0));const y=Ui(g,h,d);u[e]=t(s[i],r[y])}return[u,i]}}const PN=zN(((t,e)=>t<0?e*t:t));function VN(t){const{inputs:e,backend:n}=t,{x:s,alpha:r}=e;CN([s,r],"prelu");const a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,[o,l]=PN(s.shape,r.shape,a,i,s.dtype);return n.makeTensorInfo(l,s.dtype,o)}const BN={kernelName:Zl,backendName:"cpu",kernelFunc:VN},WN=$N(nu,(t=>Math.max(0,t))),UN={kernelName:nu,backendName:"cpu",kernelFunc:WN},GN=$N(lu,(t=>Math.min(Math.max(0,t),6))),jN={kernelName:lu,backendName:"cpu",kernelFunc:GN};function HN(t,e,n,s,r){if("linear"===n)return DN({inputs:{x:e},backend:t});if("relu"===n)return WN({inputs:{x:e},backend:t});if("elu"===n)return RN({inputs:{x:e},backend:t});if("relu6"===n)return GN({inputs:{x:e},backend:t});if("prelu"===n)return VN({inputs:{x:e,alpha:s},backend:t});if("leakyrelu"===n)return MN({inputs:{x:e},backend:t,attrs:{alpha:r}});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function qN(t){const{inputs:e,backend:n}=t,{real:s,imag:r}=e,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=n.makeTensorInfo(s.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",i)},o}const XN={kernelName:Io,backendName:"cpu",kernelFunc:qN};function KN(t,e,n="float32"){if("complex64"===n)return qN({inputs:{real:KN(t,e,"float32"),imag:KN(t,e,"float32")},backend:t});const s=Vi(yi(e),n);return t.makeTensorInfo(e,n,s)}function YN(t){const{inputs:e,backend:n}=t,{input:s}=e,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const ZN={kernelName:tu,backendName:"cpu",kernelFunc:YN};function JN(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{dtype:a}=s;if("complex64"===a){if("complex64"===r.dtype)return DN({inputs:{x:r},backend:n});const t=KN(n,r.shape,r.dtype),e=JN({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),s=qN({inputs:{real:e,imag:t},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),s}if("complex64"===r.dtype){const t=YN({inputs:{input:r},backend:n}),e=JN({inputs:{x:t},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(t),e}if(!Si(r.dtype,a)){const t=DN({inputs:{x:r},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:a}}if("int32"===a){const t=n.data.get(r.dataId).values,e=Int32Array.from(t);return n.makeTensorInfo(r.shape,"int32",e)}if("bool"===a){const t=n.data.get(r.dataId).values,e=nc([0],r.dtype),[s,a]=zN(((t,e)=>t!==e?1:0))(r.shape,[],t,e,"bool");return n.makeTensorInfo(a,"bool",s)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}const QN={kernelName:wo,backendName:"cpu",kernelFunc:JN};function tC(t,e,n,s){return null==n?({inputs:n,backend:r})=>{const{a,b:i}=n,o=r;CN([a,i],t);const l=o.data.get(a.dataId).values,u=o.data.get(i.dataId).values,c=s||a.dtype,[h,p]=e(a.shape,i.shape,l,u,c);return o.makeTensorInfo(p,c,h)}:({inputs:t,backend:r})=>{const{a,b:i}=t,o=r;if("complex64"===a.dtype||"complex64"===i.dtype){const t=JN({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),e=o.data.get(t.dataId),s=e.complexTensorInfos.real,r=e.complexTensorInfos.imag,l=o.data.get(s.dataId).values,u=o.data.get(r.dataId).values,c=JN({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(d.dataId).values,[g,y,b]=n(a.shape,i.shape,l,u,f,m),x=o.makeTensorInfo(b,"float32",g),v=o.makeTensorInfo(b,"float32",y),w=qN({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(t),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{const t=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,r=s||a.dtype,[l,u]=e(a.shape,i.shape,t,n,r);return o.makeTensorInfo(u,r,l)}}}function eC(t){return(e,n,s,r,a,i)=>{const o=cd(e,n),l=yi(o),u=o.length,c=Mi(o),h=Ni("float32",l),p=Ni("float32",l),d=ld(e,o),f=ld(n,o),m=mg(s,r),g=mg(a,i),y=e.length,b=Mi(e),x=n.length,v=Mi(n);if(d.length+f.length===0)for(let e=0;e<h.length;e++){const n=e%m.length,s=e%g.length,r=t(m[2*n],m[2*n+1],g[2*s],g[2*s+1]);h[e]=r.real,p[e]=r.imag}else for(let e=0;e<h.length;e++){const n=Gi(e,u,c),s=n.slice(-y);d.forEach((t=>s[t]=0));const r=Ui(s,y,b),a=n.slice(-x);f.forEach((t=>a[t]=0));const i=Ui(a,x,v),o=t(m[2*r],m[2*r+1],g[2*i],g[2*i+1]);h[e]=o.real,p[e]=o.imag}return[h,p,o]}}const nC=zN(((t,e)=>t+e)),sC=eC(((t,e,n,s)=>({real:t+n,imag:e+s}))),rC=tC(no,nC,sC),aC={kernelName:no,backendName:"cpu",kernelFunc:rC};function iC(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{shape:a}=s,i=yi(r.shape),o=_i(a,i),l=yi(o);di(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(r.dataId);const u=n.data.get(r.dataId);if(null!=u.complexTensorInfos){const t=u.complexTensorInfos.real,e=u.complexTensorInfos.imag;t.shape=o,e.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}const oC={kernelName:su,backendName:"cpu",kernelFunc:iC};function lC(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:a}=e,{transposeA:i,transposeB:o}=s;CN([r,a],"matMul");const l=r.shape.length,u=a.shape.length,c=i?r.shape[l-2]:r.shape[l-1],h=o?a.shape[u-1]:a.shape[u-2],p=i?r.shape[l-1]:r.shape[l-2],d=o?a.shape[u-2]:a.shape[u-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=yi(f),y=yi(m);di(l>=2&&u>=2&&(g===y||1===g||1===y),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`));const b=(g>y?r.shape.slice(0,-2):a.shape.slice(0,-2)).concat([p,d]);di(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,d,h]:[y,h,d],v=iC({inputs:{x:r},backend:n,attrs:{shape:i?[g,c,p]:[g,p,c]}}),w=iC({inputs:{x:a},backend:n,attrs:{shape:x}}),k=i?v.shape[1]:v.shape[2],_=i?v.shape[2]:v.shape[1],I=o?w.shape[1]:w.shape[2],T=Math.max(g,y),N=n.data.get(v.dataId).values,C=n.data.get(w.dataId).values,S=Mi(v.shape),A=Mi(w.shape),[$,E,R]=i?[S[0],1,S[1]]:[S[0],S[1],1],[O,D,F]=o?[1,A[1],A[0]]:[A[1],1,A[0]],M=_*I,L=Oh([T,_,I],v.dtype),z=L.values,P=n.blockSize;for(let t=0;t<T;t++)for(let e=0;e<_;e+=P)for(let n=0;n<I;n+=P)for(let s=0;s<k;s+=P){const r=Math.min(e+P,_),a=Math.min(n+P,I),i=Math.min(s+P,k);for(let o=e;o<r;o++)for(let e=n;e<a;e++){let n=0;for(let r=s;r<i;r++){const s=Math.min(t,g-1)*$,a=Math.min(t,y-1)*F;n+=N[s+o*E+r*R]*C[r*O+e*D+a]}z[t*M+(o*I+e)]+=n}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,L.dtype,L.values)}const uC={kernelName:bo,backendName:"cpu",kernelFunc:lC},cC={kernelName:Gu,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:a,bias:i,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;let p,d,f;const m=[];p=lC({inputs:{a:r,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(d=rC({inputs:{a:p,b:i},backend:n}),m.push(p),p=d),c&&(f=HN(n,p,c,o,h),m.push(p),p=f);for(const t of m)n.disposeIntermediateTensorInfo(t);return p}};function hC(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const pC={kernelName:Qi,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;CN(e,"abs");let s=new Float32Array(yi(e.shape));return s=hC(n.data.get(e.dataId).values),n.makeOutput(s,e.shape,"float32")}},dC=$N(to,(t=>Math.acos(t))),fC={kernelName:to,backendName:"cpu",kernelFunc:dC},mC=$N(eo,(t=>Math.acosh(t))),gC={kernelName:eo,backendName:"cpu",kernelFunc:mC},yC={kernelName:so,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,s=e;CN(e,"addN");const r=s.map((t=>n.data.get(t.dataId).values)),a=Oh(s[0].shape,s[0].dtype),i=a.values;for(let t=0;t<s.length;t++){const e=r[t];for(let t=0;t<i.length;t++)i[t]+=e[t]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function bC(t,e,n,s,r){const a=e.length,i=yi(e),o=Mi(e),l=Mi(r),u=Ni(n,yi(r));for(let e=0;e<i;++e){const n=Gi(e,a,o),r=new Array(n.length);for(let t=0;t<r.length;t++)r[t]=n[s[t]];u[Ui(r,a,l)]=t[e]}return u}function xC(t){const{inputs:e,attrs:n,backend:s}=t,{x:r}=e,{perm:a}=n;CN(r,"transpose");const i=r.shape.length,o=new Array(i);for(let t=0;t<o.length;t++)o[t]=r.shape[a[t]];const l=bC(s.data.get(r.dataId).values,r.shape,r.dtype,a,o);return{dataId:s.write(l,o,r.dtype),shape:o,dtype:r.dtype}}const vC={kernelName:Mu,backendName:"cpu",kernelFunc:xC},wC={kernelName:ro,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a,keepDims:i}=s;CN(r,"all");const o=Ii(a,r.shape);let l=o;const u=Vd(l,r.shape.length);let c=r;null!=u&&(c=xC({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Wd(l.length,r.shape.length)),Pd("all",l,c.shape.length);const[h,p]=Ld(c.shape,l),d=yi(p),f=Vi(yi(h),c.dtype),m=n.data.get(c.dataId).values;for(let t=0;t<f.length;++t){const e=t*d;let n=m[e];for(let t=0;t<d;++t){const s=m[e+t];n=n&&s}f[t]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const t=iC({inputs:{x:g},backend:n,attrs:{shape:zd(h,o)}});return n.disposeIntermediateTensorInfo(g),t}return g}},kC={kernelName:ao,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a,keepDims:i}=s;CN(r,"any");const o=Ii(a,r.shape);let l=o;const u=Vd(l,r.shape.length);let c=r;null!=u&&(c=xC({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Wd(l.length,r.shape.length)),Pd("any",l,c.shape.length);const[h,p]=Ld(c.shape,l),d=yi(p),f=Vi(yi(h),c.dtype),m=n.data.get(c.dataId).values;for(let t=0;t<f.length;++t){const e=t*d;let n=m[e];for(let t=0;t<d;++t){const s=m[e+t];n=n||s}f[t]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const t=iC({inputs:{x:g},backend:n,attrs:{shape:zd(h,o)}});return n.disposeIntermediateTensorInfo(g),t}return g}},_C={kernelName:io,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a}=s;CN(r,"argMax");let i=Ii(a,r.shape);const o=Vd(i,r.shape.length);let l=r;const u=[];null!=o&&(l=xC({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Wd(i.length,l.shape.length)),i=[i[0]],Pd("argMax",i,l.shape.length);const[c,h]=Ld(l.shape,i),p=Vi(yi(c),"int32"),d=yi(h),f=n.data.get(l.dataId).values;for(let t=0;t<p.length;++t){const e=t*d;let n=f[e],s=0;for(let t=0;t<d;++t){const r=f[e+t];r>n&&(n=r,s=t)}p[t]=s}return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(c,"int32",p)}},IC={kernelName:oo,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a}=s;CN(r,"argMin");let i=Ii(a,r.shape);const o=Vd(i,r.shape.length);let l=r;const u=[];null!=o&&(l=xC({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Wd(i.length,l.shape.length)),i=[i[0]],Pd("argMin",i,l.shape.length);const[c,h]=Ld(l.shape,i),p=Vi(yi(c),"int32"),d=yi(h),f=n.data.get(l.dataId).values;for(let t=0;t<p.length;++t){const e=t*d;let n=f[e],s=0;for(let t=0;t<d;++t){const r=f[e+t];r<n&&(n=r,s=t)}p[t]=s}return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(c,"int32",p)}},TC=$N(lo,(t=>Math.asin(t))),NC={kernelName:lo,backendName:"cpu",kernelFunc:TC},CC=$N(uo,(t=>Math.asinh(t))),SC={kernelName:uo,backendName:"cpu",kernelFunc:CC},AC=$N(co,(t=>Math.atan(t))),$C={kernelName:co,backendName:"cpu",kernelFunc:AC},EC=zN(((t,e)=>Math.atan2(t,e))),RC=tC(po,EC),OC={kernelName:po,backendName:"cpu",kernelFunc:RC},DC=$N(ho,(t=>Math.atanh(t))),FC={kernelName:ho,backendName:"cpu",kernelFunc:DC};function MC(t,e,n,s,r,a){const i=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,p=r.padInfo.top,d=r.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Oh(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let e=0;e<r.batchSize;++e){const n=e*y,m=e*s[0];for(let e=0;e<r.inChannels;++e)for(let y=0;y<r.outHeight;++y){const v=y*i-p,w=Math.max(0,v),k=Math.min(r.inHeight,c+v),_=n+y*b;for(let n=0;n<r.outWidth;++n){const i=n*o-d,c=Math.max(0,i),p=Math.min(r.inWidth,h+i);let y=f,b=0,v=0;for(let n=w;n<k;n+=l){const r=m+n*s[1];for(let n=c;n<p;n+=u){const i=t[r+n*s[2]+e];"max"===a&&i>y?y=i:"avg"===a&&(b+=i,v++)}if(isNaN(y))break}g[_+n*x+e]="avg"===a?b/v:y}}}return m}function LC(t,e,n,s,r=!1,a=!1){const i=Oh(s.outShape,"int32"),o=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,p=s.effectiveFilterWidth,d=s.padInfo.top,f=s.padInfo.left,m=Oh(e,n,t);for(let t=0;t<s.batchSize;++t)for(let e=0;e<s.inChannels;++e)for(let n=0;n<s.outHeight;++n){const g=n*o-d;let y=g;for(;y<0;)y+=u;const b=Math.min(s.inHeight,h+g);for(let o=0;o<s.outWidth;++o){const h=o*l-f;let d=h;for(;d<0;)d+=c;const x=Math.min(s.inWidth,p+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<b;n+=u){const i=n-g;for(let o=d;o<x;o+=c){const l=o-h,u=m.get(t,n,o,e);u>v&&(v=u,w=r?a?((t*s.inHeight+n)*s.inWidth+o)*s.inChannels+e:(n*s.inWidth+o)*s.inChannels+e:i*p+l)}}i.set(w,t,n,o,e)}}return i}function zC(t,e,n,s,r,a){const i=r.strideDepth,o=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,p=r.effectiveFilterDepth,d=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,b="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Oh(r.outShape,n),v=x.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],_=r.outShape[3]*r.outShape[4],I=r.outShape[4];for(let e=0;e<r.batchSize;++e){const n=e*w,x=e*s[0];for(let e=0;e<r.inChannels;++e)for(let w=0;w<r.outDepth;++w){const T=w*i-m;let N=T;for(;N<0;)N+=u;const C=Math.min(r.inDepth,p+T),S=n+w*k;for(let n=0;n<r.outHeight;++n){const i=n*o-g;let p=i;for(;p<0;)p+=c;const m=Math.min(r.inHeight,d+i),w=S+n*_;for(let n=0;n<r.outWidth;++n){const i=n*l-y;let o=i;for(;o<0;)o+=h;const d=Math.min(r.inWidth,f+i),g=w+n*I;let k=b,_=0,T=0;for(let n=N;n<C;n+=u){const r=x+n*s[1];for(let n=p;n<m;n+=c){const i=r+n*s[2];for(let n=o;n<d;n+=h){const r=t[i+n*s[3]+e];if("max"===a&&r>k?k=r:"avg"===a&&(_+=r,T++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+e]="avg"===a?_/T:k}}}}return x}const PC={kernelName:fo,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;CN(r,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;di(zp(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Sp(r.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&bi(u.inShape,u.outShape))c=DN({inputs:{x:r},backend:n});else{const t=n.data.get(r.dataId).values,e=Mi(r.shape),s=MC(t,r.shape,r.dtype,e,u,"avg");c=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return c}},VC={kernelName:go,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s;CN(r,"avgPool3d");const c=Ap(r.shape,a,i,1,o,l,u),h=zC(n.data.get(r.dataId).values,r.shape,r.dtype,Mi(r.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},BC={kernelName:yo,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:a}=e,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;CN([r,a],"avgPool3DGrad");const c=Ap(a.shape,i,o,1,l,u),h=c.strideDepth,p=c.strideHeight,d=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,_=v-1-c.padInfo.front,I=k-1-c.padInfo.left,T=w-1-c.padInfo.top,N=Oh(a.shape,"float32"),C=1/(f*m*g),S=n.bufferSync(r);for(let t=0;t<c.batchSize;++t)for(let e=0;e<c.inChannels;++e)for(let n=0;n<c.inDepth;++n)for(let s=0;s<c.inHeight;++s)for(let r=0;r<c.inWidth;++r){const a=n-_,i=s-T,o=r-I;let l=0;for(let n=0;n<v;n+=y){const s=(a+n)/h;if(!(s<0||s>=c.outDepth||Math.floor(s)!==s))for(let n=0;n<w;n+=b){const r=(i+n)/p;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<k;n+=x){const a=(o+n)/d;a<0||a>=c.outWidth||Math.floor(a)!==a||(l+=S.get(t,s,r,a,e))}}}N.set(l*C,t,n,s,r,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},WC={kernelName:mo,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:a}=e,i=a;CN([r,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=Sp(i.shape,o,l,1,u),h=c.strideHeight,p=c.strideWidth,d=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,v=y-1-c.padInfo.top,w=Oh(i.shape,"float32"),k=1/(d*f),_=n.data.get(r.dataId).values,I=Oh(r.shape,"float32",_);for(let t=0;t<c.batchSize;++t)for(let e=0;e<c.inChannels;++e)for(let n=0;n<c.inHeight;++n)for(let s=0;s<c.inWidth;++s){const r=n-v,a=s-x;let i=0;for(let n=0;n<y;n+=m){const s=(r+n)/h;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<b;n+=g){const r=(a+n)/p;r<0||r>=c.outWidth||Math.floor(r)!==r||(i+=I.get(t,s,r,e))}}w.set(i*k,t,n,s,e)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},UC={kernelName:al,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,scale:a,offset:i,mean:o,variance:l}=e;di(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),di(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),di(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),CN([r,o,l,a,i],"batchNorm");let{varianceEpsilon:u}=s;null==u&&(u=.001);const c=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,p=n.data.get(l.dataId).values,d=a?n.data.get(a.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=d.length,b=p.length,x=h.length;let v=0,w=0,k=0,_=0;for(let t=0;t<c.length;++t)m[t]=f[v++]+(c[t]-h[w++])*d[k++]/Math.sqrt(p[_++]+u),v>=g&&(v=0),w>=x&&(w=0),k>=y&&(k=0),_>=b&&(_=0);return n.makeTensorInfo(r.shape,r.dtype,m)}};function GC(t,e,n,s,r){const a=ap(s,e,n),i=yi(n),o=Mi(s);if(a){const n=ip(e,o);return"string"===r?t.slice(n,n+i):t.subarray(n,n+i)}const l=Oh(s,r,"string"===r?Cg(t):t),u=Oh(n,r);for(let t=0;t<u.size;++t){const n=u.indexToLoc(t),s=n.map(((t,n)=>t+e[n]));u.set(l.get(...s),...n)}return"string"===r?Sg(u.values):u.values}function jC(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:a,size:i}=s;CN(r,"slice");const[o,l]=op(r,a,i);qh(r,o,l);const u=GC(n.data.get(r.dataId).values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}const HC={kernelName:mu,backendName:"cpu",kernelFunc:jC},qC={kernelName:xo,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:a,crops:i}=s;CN([r],"batchToSpaceND");const o=a.reduce(((t,e)=>t*e)),l=Ym(r.shape,a,o),u=Zm(l.length,a.length),c=Jm(r.shape,a,o),h=Qm(i,a.length),p=tg(c,i,a.length),d=iC({inputs:{x:r},backend:n,attrs:{shape:l}}),f=xC({inputs:{x:d},backend:n,attrs:{perm:u}}),m=iC({inputs:{x:f},backend:n,attrs:{shape:c}}),g=jC({inputs:{x:m},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function XC(t,e,n,s,r){const a=yi(s),i=Vi(r,n);for(let n=0;n<t.length;n++){const s=t[n];if(s<0)throw new Error("Input x must be non-negative!");s>=r||(i[s]+=a>0?e[n]:1)}return i}function KC(t,e,n,s=!1){const r=t.shape[0],a=t.shape[1],i=Oh([r,n],e.dtype);for(let o=0;o<r;o++)for(let r=0;r<a;r++){const a=t.get(o,r);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(s?i.set(1,o,a):e.size>0?i.set(i.get(o,a)+e.get(o,r),o,a):i.set(i.get(o,a)+1,o,a))}return i}const YC={kernelName:vo,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,weights:a}=e,{size:i}=s,o=XC(n.data.get(r.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}};function ZC(t){return(e,n,s)=>{const r=Ni(n,e.length);for(let n=0;n<e.length;++n)r[n]=t(e[n],s);return r}}const JC=ZC((t=>Math.ceil(t))),QC=EN(ko,JC),tS={kernelName:ko,backendName:"cpu",kernelFunc:QC},eS=$N(_o,((t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t})),nS={kernelName:_o,backendName:"cpu",kernelFunc:eS},sS={kernelName:To,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend,s=new Float32Array(yi(e.shape)),r=n.data.get(e.dataId),a=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values;for(let t=0;t<o.length;t++){const e=o[t],n=l[t];s[t]=Math.hypot(e,n)}return n.makeOutput(s,e.shape,"float32")}};function rS(t,e,n,s){const r=Ci(n,yi(e));if(s&&"string"!==n){let e=0;t.forEach((t=>{const n=yi(t.shape);r.set(t.vals,e),e+=n}))}else{let s=0;t.forEach((t=>{const a="string"===n?Cg(t.vals):t.vals;let i=0;for(let n=0;n<t.shape[0];++n){const o=n*e[1]+s;for(let e=0;e<t.shape[1];++e)r[o+e]=a[i++]}s+=t.shape[1]}))}return r}function aS(t){const{inputs:e,backend:n}=t,{input:s}=e,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const iS={kernelName:pl,backendName:"cpu",kernelFunc:aS};function oS(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s,a=Ii(r,e[0].shape)[0];let i=Hm(e.map((t=>t.shape)),a);if(0===yi(i))return n.makeTensorInfo(i,e[0].dtype,[]);const o=e.filter((t=>yi(t.shape)>0));if(1===o.length)return DN({inputs:{x:o[0]},backend:n});if(jm(o.map((t=>t.shape)),a),"complex64"===o[0].dtype){const t=o.map((t=>YN({inputs:{input:t},backend:n}))),e=o.map((t=>aS({inputs:{input:t},backend:n}))),s=oS({inputs:t,backend:n,attrs:{axis:a}}),r=oS({inputs:e,backend:n,attrs:{axis:a}}),i=qN({inputs:{real:s,imag:r},backend:n});return t.forEach((t=>n.disposeIntermediateTensorInfo(t))),e.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),i}const l=o.map((t=>{const e=yi(t.shape.slice(a));return iC({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})})),u=l.map((t=>({vals:n.data.get(t.dataId).values,shape:t.shape})));i=Hm(l.map((t=>t.shape)),1);const c=1===l[0].shape[0],h=rS(u,i,e[0].dtype,c),p=Hm(o.map((t=>t.shape)),a),d=n.makeTensorInfo(p,e[0].dtype,h);return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),d}const lS={kernelName:No,backendName:"cpu",kernelFunc:oS};function uS(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:a}=e,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s;CN([r,a],"conv2d");const h=Pp(l),p=$p(r.shape,a.shape,i,u,o,c,!1,h),d=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x="channelsLast"===p.dataFormat,v=new yc(p.outShape,r.dtype),w=Mi(r.shape),k=Mi(a.shape),_=w[0],I=x?w[1]:w[2],T=x?w[2]:1,N=x?1:w[1],C=v.strides[0],S=x?v.strides[1]:v.strides[2],A=x?v.strides[2]:1,$=x?1:v.strides[1],E=n.data.get(r.dataId).values,R=n.data.get(a.dataId).values,O=v.values;for(let t=0;t<p.batchSize;++t){const e=t*_,n=t*C;for(let t=0;t<p.outHeight;++t){const s=n+t*S,r=t*p.strideHeight-b;for(let t=0;t<d;++t){const n=r+t*m;if(n<0||n>=p.inHeight)continue;const a=t*k[0],i=e+n*I;for(let t=0;t<p.outWidth;++t){const e=s+t*A,n=t*p.strideWidth-y;for(let t=0;t<f;++t){const s=n+t*g;if(s<0||s>=p.inWidth)continue;const r=i+s*T;let o=a+t*k[1];for(let t=0;t<p.inChannels;++t){const n=E[r+t*N];for(let t=0;t<p.outChannels;++t)O[e+t*$]+=n*R[o+t];o+=p.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,O)}const cS={kernelName:Co,backendName:"cpu",kernelFunc:uS},hS={kernelName:So,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:a}=e,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;CN([r,a],"conv2dBackpropFilter");const h=Pp(l),p=$p(r.shape,c,i,1,o,u,!1,h),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new yc(p.filterShape,"float32"),x=p.padInfo.left,v=p.padInfo.top,w=n.data.get(r.dataId).values,k=n.data.get(a.dataId).values,_=new yc(r.shape,r.dtype,w),I=new yc(a.shape,a.dtype,k);for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((v-t)/d)),n=Math.min(p.outHeight,(p.inHeight+v-t)/d);for(let s=0;s<g;++s){const r=Math.max(0,Math.ceil((x-s)/f)),a=Math.min(p.outWidth,(p.inWidth+x-s)/f);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let l=0;for(let u=0;u<p.batchSize;++u)for(let c=e;c<n;++c){const e=t+c*d-v;for(let t=r;t<a;++t){const n=s+t*f-x;l+=y?_.get(u,e,n,i)*I.get(u,c,t,o):_.get(u,i,e,n)*I.get(u,o,c,t)}}b.set(l,t,s,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},pS={kernelName:Ao,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:a}=e,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s;CN([r,a],"conv2dBackpropInput");const h=Mi(a.shape),p=Mi(r.shape);let d=Pp(u);const f=$p(i,a.shape,o,1,l,c,!1,d),m=new yc(f.inShape,"float32"),g=m.values,y=n.data.get(r.dataId).values,b=n.data.get(a.dataId).values,[x,v,w]=h,{batchSize:k,filterHeight:_,filterWidth:I,inChannels:T,inHeight:N,inWidth:C,outChannels:S,outHeight:A,outWidth:$,strideHeight:E,strideWidth:R}=f;d=f.dataFormat;const O=_-1-f.padInfo.top,D=I-1-f.padInfo.left,F="channelsLast"===d,M=m.strides[0],L=F?m.strides[1]:m.strides[2],z=F?m.strides[2]:1,P=F?1:m.strides[1],V=p[0],B=F?p[1]:p[2],W=F?p[2]:1,U=F?1:p[1];for(let t=0;t<k;++t)for(let e=0;e<T;++e)for(let n=0;n<N;++n){const s=n-O,r=Math.max(0,Math.ceil(s/E)),a=Math.min(A,(_+s)/E);for(let i=0;i<C;++i){const o=i-D,l=Math.max(0,Math.ceil(o/R)),u=Math.min($,(I+o)/R);let c=0;for(let n=r;n<a;++n){const r=n*E-s;for(let s=l;s<u;++s){const a=V*t+B*n+W*s,i=x*(_-1-r)+v*(I-1-(s*R-o))+w*e;for(let t=0;t<S;++t)c+=y[a+U*t]*b[i+t]}}g[M*t+L*n+z*i+P*e]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},dS={kernelName:$o,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:a}=e,{strides:i,pad:o,dilations:l}=s;CN([r,a],"conv3d");const u=Ep(r.shape,a.shape,i,l,o),{filterDepth:c,filterHeight:h,filterWidth:p,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,v=new yc(u.outShape,r.dtype),w=n.data.get(r.dataId).values,k=n.data.get(a.dataId).values,_=v.values,I=Mi(r.shape),T=Mi(a.shape);for(let t=0;t<u.batchSize;++t){const e=t*I[0],n=t*v.strides[0];for(let t=0;t<u.outDepth;++t){const s=n+t*v.strides[1],r=t*u.strideDepth-y;for(let t=0;t<c;++t){const n=r+t*d;if(n<0||n>=u.inDepth)continue;const a=t*T[0],i=e+n*I[1];for(let t=0;t<u.outHeight;++t){const e=s+t*v.strides[2],n=t*u.strideHeight-x;for(let t=0;t<h;++t){const s=n+t*f;if(s<0||s>=u.inHeight)continue;const r=a+t*T[1],o=i+s*I[2];for(let t=0;t<u.outWidth;++t){const n=e+t*u.outChannels,s=t*u.strideWidth-b;for(let t=0;t<p;++t){const e=s+t*m;if(e<0||e>=u.inWidth)continue;const a=r+t*T[2],i=o+e*u.inChannels;let l=a;for(let t=0;t<u.inChannels;++t){const e=w[i+t];for(let t=0;t<u.outChannels;++t)_[n+t]+=e*k[l+t];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},fS={kernelName:Eo,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:a}=e,{strides:i,pad:o,filterShape:l}=s;CN([r,a],"conv3dBackpropFilterV2");const u=Mi(r.shape),c=Mi(a.shape),h=Ep(r.shape,l,i,1,o),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new yc(h.filterShape,"float32"),x=b.values,[v,w,k,_]=b.strides,I=n.data.get(a.dataId).values,[T,N,C,S]=c,A=n.data.get(r.dataId).values,[$,E,R,O]=u,D=h.padInfo.front,F=h.padInfo.left,M=h.padInfo.top;for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((D-t)/p)),n=Math.min(h.outDepth,(h.inDepth+D-t)/p),s=t*v;for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((M-r)/d)),i=Math.min(h.outHeight,(h.inHeight+M-r)/d),o=r*w+s;for(let s=0;s<y;++s){const l=Math.max(0,Math.ceil((F-s)/f)),u=Math.min(h.outWidth,(h.inWidth+F-s)/f),c=s*k+o;for(let o=0;o<h.inChannels;++o){const m=o*_+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*$,y=m*T;for(let m=e;m<n;++m){const e=(t+m*p-D)*E+h,n=m*N+y;for(let t=a;t<i;++t){const a=(r+t*d-M)*R+e,i=t*C+n;for(let t=l;t<u;++t){const e=t*S+i;g+=A[(s+t*f-F)*O+a+o]*I[e+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},mS={kernelName:Ro,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:a}=e,{pad:i,strides:o,inputShape:l}=s;CN([r],"conv3dBackpropInputV2");const u=Mi(r.shape),c=Mi(a.shape),h=Ep(l,a.shape,o,1,i),p=new yc(h.inShape,"float32"),d=p.values,[f,m,g,y]=p.strides,b=n.data.get(r.dataId).values,[x,v,w,k]=u,_=n.data.get(a.dataId).values,[I,T,N,C]=c,{batchSize:S,filterDepth:A,filterHeight:$,filterWidth:E,inChannels:R,inDepth:O,inHeight:D,inWidth:F,outChannels:M,outDepth:L,outHeight:z,outWidth:P,strideDepth:V,strideHeight:B,strideWidth:W}=h,U=A-1-h.padInfo.front,G=$-1-h.padInfo.top,j=E-1-h.padInfo.left;for(let t=0;t<S;++t)for(let e=0;e<R;++e)for(let n=0;n<O;++n){const s=n-U,r=Math.max(0,Math.ceil(s/V)),a=Math.min(L,(A+s)/V);for(let i=0;i<D;++i){const o=i-G,l=Math.max(0,Math.ceil(o/B)),u=Math.min(z,($+o)/B);for(let c=0;c<F;++c){const h=c-j,p=Math.max(0,Math.ceil(h/W)),S=Math.min(P,(E+h)/W);let R=0;for(let n=r;n<a;++n){const r=n*V-s;for(let s=l;s<u;++s){const a=s*B-o;for(let i=p;i<S;++i){const o=x*t+v*n+w*s+k*i,l=I*(A-1-r)+T*($-1-a)+N*(E-1-(i*W-h))+C*e;for(let t=0;t<M;++t)R+=b[o+t]*_[l+t]}}}d[f*t+m*n+g*i+y*c+e]=R}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},gS=$N(Oo,(t=>Math.cos(t))),yS={kernelName:Oo,backendName:"cpu",kernelFunc:gS},bS=$N(Do,(t=>Math.cosh(t))),xS={kernelName:Do,backendName:"cpu",kernelFunc:bS},vS={kernelName:Mo,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{image:r,boxes:a,boxInd:i}=e,{cropSize:o,method:l,extrapolationValue:u}=s,[c,h,p,d]=r.shape,f=a.shape[0],[m,g]=o,y=Oh([f,m,g,d],"float32"),b=n.data.get(a.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(r.dataId).values,w=Mi(r.shape),k=Mi(y.shape);for(let t=0;t<f;t++){const e=4*t,n=b[e],s=b[e+1],r=b[e+2],a=b[e+3],i=x[t];if(i>=c)continue;const o=m>1?(r-n)*(h-1)/(m-1):0,f=g>1?(a-s)*(p-1)/(g-1):0;for(let e=0;e<m;e++){const c=m>1?n*(h-1)+e*o:.5*(n+r)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let s=0;s<d;s++){const r=s+n*k[2]+e*k[1]+t*k[0];y.values[r]=u}else if("bilinear"===l){const n=Math.floor(c),r=Math.ceil(c),o=c-n;for(let l=0;l<g;l++){const c=g>1?s*(p-1)+l*f:.5*(s+a)*(p-1);if(c<0||c>p-1){for(let n=0;n<d;n++){const s=n+l*k[2]+e*k[1]+t*k[0];y.values[s]=u}continue}const h=Math.floor(c),m=Math.ceil(c),b=c-h;for(let s=0;s<d;s++){let a=s+h*w[2]+n*w[1]+i*w[0];const u=v[a];a=s+m*w[2]+n*w[1]+i*w[0];const c=v[a];a=s+h*w[2]+r*w[1]+i*w[0];const p=v[a];a=s+m*w[2]+r*w[1]+i*w[0];const d=u+(c-u)*b,f=p+(v[a]-p)*b;a=s+l*k[2]+e*k[1]+t*k[0],y.values[a]=d+(f-d)*o}}}else for(let n=0;n<g;++n){const r=g>1?s*(p-1)+n*f:.5*(s+a)*(p-1);if(r<0||r>p-1){for(let s=0;s<d;s++){const r=s+n*k[2]+e*k[1]+t*k[0];y.values[r]=u}continue}const o=Math.round(r),l=Math.round(c);for(let s=0;s<d;s++){const r=s+o*w[2]+l*w[1]+i*w[0],a=s+n*k[2]+e*k[1]+t*k[0];y.values[a]=v[r]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},wS={kernelName:Fo,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a,exclusive:i,reverse:o}=s;CN(r,"cumsum");const l=Vd([a],r.shape.length);let u=r;null!=l&&(u=xC({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=Wd(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=$c(u.dtype,"int32"),p=Vi(yi(u.shape),h),d=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(t,e)=>t+f-e-1:(t,e)=>t+e;for(let t=0;t<d.length;t+=f)for(let e=0;e<f;e++){const n=m(t,e);if(0===e)p[n]=i?0:d[n];else{const s=m(t,e-1);p[n]=i?d[s]+p[s]:d[n]+p[s]}}const g=n.makeTensorInfo(u.shape,h,p);if(null!=l){const t=xC({inputs:{x:g},backend:n,attrs:{perm:Bd(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),t}return g}},kS={kernelName:Lo,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,weights:a}=e,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const t=XC(n.data.get(r.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,t)}if(2===r.shape.length){const t=KC(n.bufferSync(r),n.bufferSync(a),i,o);return n.makeTensorInfo(t.shape,a.dtype,t.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}},_S={kernelName:zo,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockSize:a,dataFormat:i}=s;di("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`)),di(a>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${a}`));const o=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],h=l*a,p=u*a,d=c/(a*a),f=n.data.get(r.dataId).values,m=new Float32Array(o*h*p*d);let g=0;for(let t=0;t<o;++t)for(let e=0;e<h;++e){const n=Math.floor(e/a),s=e%a;for(let e=0;e<p;++e){const r=Math.floor(e/a),i=(s*a+e%a)*d;for(let e=0;e<d;++e){const s=e+i+c*(r+u*(n+l*t));m[g++]=f[s]}}}return n.makeTensorInfo([o,h,p,d],r.dtype,m)}};function IS(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:a}=e,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=s;CN([r,a],"depthwiseConv2DNative");const c=Mi(r.shape),h=Mi(a.shape);let p=l;null==p&&(p=[1,1]),di(zp(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`));const d=$p(r.shape,a.shape,i,p,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=d,x=b.left,v=b.top,w=d.outChannels/d.inChannels,k=new yc(d.outShape,r.dtype),_=n.data.get(r.dataId).values,I=n.data.get(a.dataId).values,T=k.values;for(let t=0;t<d.batchSize;++t){const e=t*c[0],n=t*k.strides[0];for(let t=0;t<d.outHeight;++t){const s=n+t*k.strides[1],r=t*d.strideHeight-x;for(let t=0;t<f;++t){const n=r+t*g;if(n<0||n>=d.inHeight)continue;const a=t*h[0],i=e+n*c[1];for(let t=0;t<d.outWidth;++t){const e=s+t*k.strides[2],n=t*d.strideWidth-v;for(let t=0;t<m;++t){const s=n+t*y;if(s<0||s>=d.inWidth)continue;const r=a+t*h[1],o=i+s*d.inChannels;let l=e,u=r;for(let t=0;t<d.inChannels;++t){const e=_[o+t];for(let t=0;t<w;++t)T[l+t]+=e*I[u+t];l+=w,u+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const TS={kernelName:Po,backendName:"cpu",kernelFunc:IS},NS={kernelName:Vo,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:a}=e,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s;CN([r,a],"depthwiseConv2dNativeBackpropFilter");const h=$p(r.shape,c,i,o,l,u,!0),{strideHeight:p,strideWidth:d,filterHeight:f,filterWidth:m}=h,g=new yc(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(r.dataId).values,w=new yc(r.shape,r.dtype,v),k=n.data.get(a.dataId).values,_=new yc(a.shape,a.dtype,k);for(let t=0;t<f;++t){const e=Math.max(0,Math.ceil((b-t)/p)),n=Math.min(h.outHeight,(h.inHeight+b-t)/p);for(let s=0;s<m;++s){const r=Math.max(0,Math.ceil((y-s)/d)),a=Math.min(h.outWidth,(h.inWidth+y-s)/d);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),l=i%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=e;c<n;++c){const e=t+c*p-b;for(let t=r;t<a;++t){const n=s+t*d-y;u+=w.get(l,e,n,o)*_.get(l,c,t,i)}}g.set(u,t,s,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},CS={kernelName:Bo,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:a}=e,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s;CN([r,a],"depthwiseConv2DNativeBackpropInput");const h=Mi(r.shape),p=Mi(a.shape),d=$p(c,a.shape,i,o,l,u,!0),f=new yc(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(r.dataId).values,[v,w,k]=h,_=n.data.get(a.dataId).values,[I,T,N]=p,{batchSize:C,filterHeight:S,filterWidth:A,inChannels:$,inHeight:E,inWidth:R,outChannels:O,outHeight:D,outWidth:F,strideHeight:M,strideWidth:L}=d,z=S-1-d.padInfo.top,P=A-1-d.padInfo.left,V=O/$;for(let t=0;t<C;++t)for(let e=0;e<$;++e)for(let n=0;n<E;++n){const s=n-z,r=Math.max(0,Math.ceil(s/M)),a=Math.min(D,(S+s)/M);for(let i=0;i<R;++i){const o=i-P,l=Math.max(0,Math.ceil(o/L)),u=Math.min(F,(A+o)/L);let c=0;for(let n=r;n<a;++n){const r=n*M-s;for(let s=l;s<u;++s){const a=v*t+w*n+k*s,i=I*(S-1-r)+T*(A-1-(s*L-o))+N*e;for(let t=0;t<V;++t)c+=x[a+(e*V+t)]*_[i+t]}}m[g*t+y*n+b*i+e]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},SS={kernelName:Wo,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s}=e,r=yi(s.shape),a=n.data.get(s.dataId).values,i=Oh([r,r],s.dtype),o=i.values;for(let t=0;t<a.length;t++)o[t*r+t]=a[t];const l=[...s.shape,...s.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},AS={kernelName:Uo,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:r}=t,{strides:a,pad:i,dilations:o}=n,l=e,u=l.data.get(s.dataId).values,c=s.shape.length,h=l.data.get(r.dataId).values,p=r.shape.length,{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:_,dilationHeight:I,dilationWidth:T,outShape:N}=Cp(s.shape,r.shape,a,i,"NHWC",o),C=yi(N),S=N.length,A=Ci(s.dtype,C);for(let t=0;t<d;++t)for(let e=0;e<y;++e){const n=e*v-x.top;for(let a=0;a<b;++a){const i=a*w-x.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let e=0;e<k;++e){const a=n+e*I;if(a>=0&&a<f)for(let n=0;n<_;++n){const d=i+n*T;if(d>=0&&d<m){const i=Ui([t,a,d,o],c,Mi(s.shape)),f=Ui([e,n,o],p,Mi(r.shape)),m=u[i]+h[f];m>l&&(l=m)}}}A[Ui([t,e,a,o],S,Mi(N))]=l}}}return{dataId:l.write(nc(A,s.dtype),N,s.dtype),shape:N,dtype:s.dtype}}},$S={kernelName:jo,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:r,dy:a}=t,{strides:i,pad:o,dilations:l}=n,u=e,c=zi(s.shape,u.data.get(s.dataId).values),h=zi(r.shape,u.data.get(r.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:_,dilationWidth:I,outShape:T}=Cp(s.shape,r.shape,i,o,"NHWC",l);di(a.rank===T.length,(()=>`Error in ${jo}, dy must have the same rank as output ${T.length}, but got ${a.rank}`));const N=zi(T,u.data.get(a.dataId).values),C=Bi(r.shape,r.dtype);for(let t=0;t<p;++t)for(let e=0;e<g;++e){const n=e*x-b.top;for(let s=0;s<y;++s){const r=s*v-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let e=0;e<w;++e){const s=n+e*_;if(s>=0&&s<d)for(let n=0;n<k;++n){const u=r+n*I;if(u>=0&&u<f){const r=c[t][s][u][a]+h[e][n][a];r>i&&(i=r,o=e,l=n)}}}C[o][l][a]+=N[t][e][s][a]}}}return{dataId:u.write(nc(C,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},ES={kernelName:Go,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:r,dy:a}=t,{strides:i,pad:o,dilations:l}=n,u=e,c=zi(s.shape,u.data.get(s.dataId).values),h=zi(r.shape,u.data.get(r.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:_,dilationWidth:I,outShape:T}=Cp(s.shape,r.shape,i,o,"NHWC",l);di(a.rank===T.length,(()=>`Error in ${Go}, dy must have the same rank as output ${T.length}, but got ${a.rank}`));const N=zi(T,u.data.get(a.dataId).values),C=Bi(s.shape,s.dtype);for(let t=0;t<p;++t)for(let e=0;e<g;++e){const n=e*x-b.top;for(let s=0;s<y;++s){const r=s*v-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=r<0?0:r;for(let e=0;e<w;++e){const s=n+e*_;if(s>=0&&s<d)for(let n=0;n<k;++n){const u=r+n*I;if(u>=0&&u<f){const r=c[t][s][u][a]+h[e][n][a];r>i&&(i=r,o=s,l=u)}}}C[t][o][l][a]+=N[t][e][s][a]}}}return{dataId:u.write(nc(C,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},RS={kernelName:Xo,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{dy:s,y:r}=e;CN([s,r],"eluGrad");const a=new Float32Array(yi(r.shape)),i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values;for(let t=0;t<i.length;++t){const e=i[t];a[t]=e>=1?o[t]:o[t]*(e+1)}return n.makeTensorInfo(r.shape,"float32",a)}},OS=zN(((t,e)=>t===e?1:0)),DS=tC(Yo,OS,null,"bool"),FS={kernelName:Yo,backendName:"cpu",kernelFunc:DS},MS=og,LS=lg,zS=ug,PS=cg,VS=hg,BS=pg,WS=$N(Ko,(t=>{const e=Math.sign(t),n=Math.abs(t),s=1/(1+MS*n);return e*(1-((((BS*s+VS)*s+PS)*s+zS)*s+LS)*s*Math.exp(-n*n))})),US={kernelName:Ko,backendName:"cpu",kernelFunc:WS},GS=ZC((t=>Math.exp(t))),jS=EN(Zo,GS),HS={kernelName:Zo,backendName:"cpu",kernelFunc:jS};function qS(t){const{inputs:e,backend:n,attrs:s}=t,{input:r}=e,{dim:a}=s,i=r.shape.length,o=r.shape.slice();let l=a;return a<0&&(di(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),iC({inputs:{x:r},backend:n,attrs:{shape:o}})}const XS={kernelName:Jo,backendName:"cpu",kernelFunc:qS},KS=ZC((t=>Math.expm1(t))),YS=EN(Qo,KS),ZS={kernelName:Qo,backendName:"cpu",kernelFunc:YS},JS=zN(((t,e)=>t*e)),QS=eC(((t,e,n,s)=>({real:t*n-e*s,imag:t*s+e*n}))),tA=tC(Vl,JS,QS),eA={kernelName:Vl,backendName:"cpu",kernelFunc:tA},nA=zN(((t,e)=>t/e)),sA=tC(Ho,nA),rA={kernelName:Ho,backendName:"cpu",kernelFunc:sA},aA=zN(((t,e)=>t-e)),iA=eC(((t,e,n,s)=>({real:t-n,imag:e-s}))),oA=tC(Su,aA,iA),lA={kernelName:Su,backendName:"cpu",kernelFunc:oA};function uA(t,e,n){const s=t.shape,r=s[0],a=s[1],i=n.data.get(t.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[r,a],c=yi(u),h=Ni("float32",c),p=Ni("float32",c);for(let t=0;t<r;t++){const s=jC({inputs:{x:o},backend:n,attrs:{begin:[t,0],size:[1,a]}}),r=jC({inputs:{x:l},backend:n,attrs:{begin:[t,0],size:[1,a]}}),i=qN({inputs:{real:s,imag:r},backend:n}),{real:u,imag:c}=cA(i,e,n),d=mg(u,c);for(let e=0;e<a;e++){const n=xg(d,e);h[t*a+e]=n.real,p[t*a+e]=n.imag}n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i)}const d=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",p),m=qN({inputs:{real:d,imag:f},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}function cA(t,e,n){const s=yi(t.shape),r=n.data.get(t.dataId),a=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0==((o=s)&o-1)){const r=hA(a,i,s,e,n),o=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(o,"float32",r.real),e=n.makeTensorInfo(o,"float32",r.imag),a=n.makeTensorInfo([],"float32",ec(s,"float32")),i=DN({inputs:{x:a},backend:n}),l=rA.kernelFunc({inputs:{a:t,b:a},backend:n}),u=rA.kernelFunc({inputs:{a:e,b:i},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return r}{const t=function(t,e,n){const s=new Float32Array(2*e);for(let r=0;r<e;r++){let a=0,i=0;for(let s=0;s<e;s++){const o=kg(r*s,e,n),l=xg(t,s);a+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(a/=e,i/=e),vg(s,a,i,r)}return s}(mg(a,i),s,e);return gg(t)}var o}function hA(t,e,n,s,r){if(1===n)return{real:t,imag:e};const a=mg(t,e),i=n/2,o=yg(a),l=o.real,u=o.imag,c=[l.length],h=r.makeTensorInfo(c,"float32",l),p=r.makeTensorInfo(c,"float32",u),d=qN({inputs:{real:h,imag:p},backend:r}),f=bg(a),m=f.real,g=f.imag,y=[m.length],b=r.makeTensorInfo(y,"float32",m),x=r.makeTensorInfo(y,"float32",g),v=qN({inputs:{real:b,imag:x},backend:r}),w=hA(l,u,i,s,r),k=w.real,_=w.imag,I=[k.length],T=r.makeTensorInfo(I,"float32",k),N=r.makeTensorInfo(I,"float32",_),C=qN({inputs:{real:T,imag:N},backend:r}),S=hA(m,g,i,s,r),A=S.real,$=S.imag,E=[A.length],R=r.makeTensorInfo(E,"float32",A),O=r.makeTensorInfo(E,"float32",$),D=qN({inputs:{real:R,imag:O},backend:r}),F=wg(n,s),M=[F.real.length],L=r.makeTensorInfo(M,"float32",F.real),z=r.makeTensorInfo(M,"float32",F.imag),P=qN({inputs:{real:L,imag:z},backend:r}),V=tA({inputs:{a:P,b:D},backend:r}),B=rC({inputs:{a:C,b:V},backend:r}),W=oA({inputs:{a:C,b:V},backend:r}),U=YN({inputs:{input:B},backend:r}),G=YN({inputs:{input:W},backend:r}),j=aS({inputs:{input:B},backend:r}),H=aS({inputs:{input:W},backend:r}),q=oS({inputs:[U,G],backend:r,attrs:{axis:0}}),X=oS({inputs:[j,H],backend:r,attrs:{axis:0}}),K=r.data.get(q.dataId).values,Y=r.data.get(X.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(O),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(X),{real:K,imag:Y}}const pA={kernelName:tl,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:s}=e,r=yi(s.shape),a=s.shape[s.shape.length-1],i=iC({inputs:{x:s},backend:n,attrs:{shape:[r/a,a]}}),o=uA(i,!1,n),l=iC({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function dA(t){const{backend:e,attrs:n}=t,{shape:s,value:r,dtype:a}=n,i=a||Oi(r),o=Ci(i,yi(s));return function(t,e,n){t.fill(e)}(o,r),e.makeTensorInfo(s,i,o)}const fA={kernelName:el,backendName:"cpu",kernelFunc:dA},mA={kernelName:nl,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,r=n,a=Ni(s.dtype,yi(s.shape)),[i,o,l,u]=s.shape,c=r.data.get(s.dataId).values;for(let t=0;t<i;t++){const e=t*l*o*u;for(let t=0;t<o;t++){const n=t*(l*u);for(let s=0;s<l;s++){const r=s*u;for(let o=0;o<u;o++){const h=[i,t,s,o][2],p=Math.round(l-h),d=e+n+r+o;let f=c[d];p>=0&&p<l&&(f=c[e+n+p*u+o]),a[d]=f}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},gA=ZC((t=>Math.floor(t))),yA=EN(sl,gA),bA={kernelName:sl,backendName:"cpu",kernelFunc:yA},xA=zN(((t,e)=>Math.floor(t/e))),vA=tC(rl,xA,null,"int32"),wA={kernelName:rl,backendName:"cpu",kernelFunc:vA},kA={kernelName:ju,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:a,bias:i,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s;let m=uS({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const t=m;m=rC({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(t)}if(d){const t=m;m=HN(n,m,d,o,f),n.disposeIntermediateTensorInfo(t)}return m}},_A={kernelName:Hu,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:a,bias:i,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s;let m=IS({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const t=m;m=rC({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(t)}if(d){const t=m;m=HN(n,m,d,o,f),n.disposeIntermediateTensorInfo(t)}return m}},IA={kernelName:ol,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:s,indices:r}=e,a=yi(s.shape),i=r.shape,o=i[i.length-1],[l,u,c,h]=eg(s,r);if(0===u)return n.makeTensorInfo(l,s.dtype,[]);const p=Oh([u,c],s.dtype),d=n.data.get(r.dataId).values,f=n.data.get(s.dataId).values;for(let t=0;t<u;t++){const e=[];let n=0;for(let s=0;s<o;s++){const r=d[t*o+s];n+=r*h[s],e.push(r)}if(n<0||n>=a/c)throw new Error(`Invalid indices: ${e} does not index into ${s.shape}`);for(let e=0;e<c;e++)p.values[t*c+e]=f[n*c+e]}return n.makeTensorInfo(l,p.dtype,p.values)}};function TA(t,e,n){const s=Oh(n,t.dtype);for(let n=0;n<s.size;++n){const r=s.indexToLoc(n).slice(),a=r[0],i=r[2],o=e.locToIndex([a,i]);r[2]=e.values[o];const l=t.locToIndex(r);s.values[n]=t.values[l]}return s}const NA={kernelName:il,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,indices:a}=e,{axis:i,batchDims:o}=s;CN([r,a],"gatherV2");let l=o;null==o&&(l=0);const u=yi(a.shape),c=Ng(r,a,Ii(i,r.shape)[0],l),h=iC({inputs:{x:r},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=iC({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,u/c.batchSize]}}),d=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize],f=n.bufferSync(p),m=TA(n.bufferSync(h),f,d);return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.makeTensorInfo(c.outputShape,m.dtype,m.values)}},CA=zN(((t,e)=>t>e?1:0)),SA=tC(ll,CA,null,"bool"),AA={kernelName:ll,backendName:"cpu",kernelFunc:SA},$A=zN(((t,e)=>t>=e?1:0)),EA=tC(ul,$A,null,"bool"),RA={kernelName:ul,backendName:"cpu",kernelFunc:EA},OA={kernelName:hl,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:s}=e,r=yi(s.shape),a=s.shape[s.shape.length-1],i=iC({inputs:{x:s},backend:n,attrs:{shape:[r/a,a]}}),o=uA(i,!0,n),l=iC({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},DA=$N(dl,(t=>Number.isFinite(t)?1:0),"bool"),FA={kernelName:dl,backendName:"cpu",kernelFunc:DA},MA=$N(fl,(t=>Math.abs(t)===1/0?1:0),"bool"),LA={kernelName:fl,backendName:"cpu",kernelFunc:MA},zA=$N(ml,(t=>Number.isNaN(t)?1:0),"bool"),PA={kernelName:ml,backendName:"cpu",kernelFunc:zA},VA=zN(((t,e)=>t<e?1:0)),BA=tC(yl,VA,null,"bool"),WA={kernelName:yl,backendName:"cpu",kernelFunc:BA},UA=zN(((t,e)=>t<=e?1:0)),GA=tC(bl,UA,null,"bool"),jA={kernelName:bl,backendName:"cpu",kernelFunc:GA};function HA(t,e,n){const s=(e-t)/(n-1),r=Vi(n,"float32");r[0]=t;for(let t=1;t<r.length;t++)r[t]=r[t-1]+s;return r}const qA={kernelName:xl,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:s,stop:r,num:a}=n,i=HA(s,r,a);return e.makeTensorInfo([i.length],"float32",i)}},XA=ZC((t=>Math.log(t))),KA=EN(vl,XA),YA={kernelName:vl,backendName:"cpu",kernelFunc:KA},ZA=$N(wl,(t=>Math.log1p(t))),JA={kernelName:wl,backendName:"cpu",kernelFunc:ZA},QA=zN(((t,e)=>t&&e)),t$=tC(kl,QA,null,"bool"),e$={kernelName:kl,backendName:"cpu",kernelFunc:t$},n$=$N(_l,(t=>t?0:1),"bool"),s$={kernelName:_l,backendName:"cpu",kernelFunc:n$},r$=zN(((t,e)=>t||e)),a$=tC(Il,r$,null,"bool"),i$={kernelName:Il,backendName:"cpu",kernelFunc:a$},o$={kernelName:Tl,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{depthRadius:a,bias:i,alpha:o,beta:l}=s;CN(r,"LRN");const u=r.shape[3],c=u-1,h=n.data.get(r.dataId).values,p=yi(r.shape),d=new Float32Array(p);function f(t){const e=t%u;let n=t-e+Math.max(0,e-a);const s=t-e+Math.min(e+a,c);let r=0;for(;n<=s;n++){const t=h[n];r+=t*t}return r}for(let t=0;t<p;t++){const e=f(t),n=h[t]*Math.pow(i+o*e,-l);d[t]=n}return n.makeTensorInfo(r.shape,r.dtype,d)}},l$={kernelName:Nl,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,y:a,dy:i}=e,{depthRadius:o,bias:l,alpha:u,beta:c}=s;CN(i,"LRNGrad");const h=yi(i.shape),p=i.shape[3],d=n.data.get(i.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(h),y=h;for(let t=0;t<y;t++){const e=t%p,n=t-e+Math.max(0,e-o),s=t-e+Math.min(p,e+o+1);let r=0;for(let t=n;t<s;t++)r+=Math.pow(f[t],2);r=u*r+l;for(let e=n;e<s;e++){let n=-2*u*c*f[e]*m[t]/r;t===e&&(n+=Math.pow(r,-c)),n*=d[t],g[e]+=n}}return n.makeTensorInfo(i.shape,r.dtype,g)}};function u$(t,e,n,s){const r=Ni(s,yi(n));for(let n=0;n<r.length;++n){const s=n*e;let a=t[s];for(let n=0;n<e;++n){const e=t[s+n];e>a&&(a=e)}r[n]=a}return r}function c$(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{reductionIndices:a,keepDims:i}=s,o=n;let l=r.shape;const u=l.length,c=Ii(a,l);let h=c;const p=Vd(h,u);let d=o.data.get(r.dataId).values;if(null!=p){const t=new Array(u);for(let e=0;e<t.length;e++)t[e]=l[p[e]];d=bC(d,l,r.dtype,p,t),h=Wd(h.length,u),l=t}CN(r,"max"),Pd("max",h,u);const[f,m]=Ld(l,h),g=u$(d,yi(m),f,r.dtype),y=o.write(g,f,r.dtype);let b=f;return i&&(b=zd(f,c)),{dataId:y,shape:b,dtype:r.dtype}}const h$={kernelName:Cl,backendName:"cpu",kernelFunc:c$},p$=zN(((t,e)=>Math.max(t,e))),d$=tC(Sl,p$),f$={kernelName:Sl,backendName:"cpu",kernelFunc:d$},m$={kernelName:Al,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;CN(r,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;di(zp(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Sp(r.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&bi(u.inShape,u.outShape))c=DN({inputs:{x:r},backend:n});else{const t=n.data.get(r.dataId).values,e=Mi(r.shape),s=MC(t,r.shape,r.dtype,e,u,"max");c=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return c}},g$={kernelName:El,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s;CN(r,"maxPool3d");const c=Ap(r.shape,a,i,1,o,l,u),h=zC(n.data.get(r.dataId).values,r.shape,r.dtype,Mi(r.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},y$={kernelName:Rl,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:a}=e,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;CN([r,a],"maxPool3DGrad");const c=Ap(a.shape,i,o,1,l,u),h=function(t,e){const n=Oh(e.outShape,"int32"),s=e.strideDepth,r=e.strideHeight,a=e.strideWidth,i=e.dilationDepth,o=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.front,d=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let g=0;g<e.inChannels;++g)for(let y=0;y<e.outDepth;++y){const b=y*s-p;let x=b;for(;x<0;)x+=i;const v=Math.min(e.inDepth,u+b);for(let s=0;s<e.outHeight;++s){const u=s*r-d;let p=u;for(;p<0;)p+=o;const w=Math.min(e.inHeight,c+u);for(let r=0;r<e.outWidth;++r){const d=r*a-f;let k=d;for(;k<0;)k+=l;const _=Math.min(e.inWidth,h+d);let I=Number.NEGATIVE_INFINITY,T=-1;for(let e=x;e<v;e+=i){const n=e-b;for(let s=p;s<w;s+=o){const r=s-u;for(let a=k;a<_;a+=l){const i=a-d,o=t.get(m,e,s,a,g);o>=I&&(I=o,T=n*c*h+r*c+i)}}}n.set(T,m,y,s,r,g)}}}return n}(n.bufferSync(a),c),p=c.strideDepth,d=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,v=c.effectiveFilterWidth,w=b-1-c.padInfo.front,k=v-1-c.padInfo.left,_=x-1-c.padInfo.top,I=Oh(a.shape,"float32"),T=n.bufferSync(r);for(let t=0;t<c.batchSize;++t)for(let e=0;e<c.inChannels;++e)for(let n=0;n<c.inDepth;++n)for(let s=0;s<c.inHeight;++s)for(let r=0;r<c.inWidth;++r){const a=n-w,i=s-_,o=r-k;let l=0;for(let n=0;n<b;n+=m){const s=(a+n)/p;if(!(s<0||s>=c.outDepth||Math.floor(s)!==s))for(let r=0;r<x;r+=g){const a=(i+r)/d;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let i=0;i<v;i+=y){const u=(o+i)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const p=b*x*v-1-h.get(t,s,a,u,e)===n*x*v+r*v+i?1:0;0!==p&&(l+=T.get(t,s,a,u,e)*p)}}}I.set(l,t,n,s,r,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},b$={kernelName:$l,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:a,output:i}=e,o=a;CN([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,p=Sp(o.shape,l,u,1,c,h),d=n.data.get(o.dataId).values,f=Oh(p.outShape,o.dtype,LC(d,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,v=p.effectiveFilterWidth,w=v-1-p.padInfo.left,k=x-1-p.padInfo.top,_=Oh(o.shape,"float32"),I=n.data.get(r.dataId).values,T=Oh(r.shape,"float32",I);for(let t=0;t<p.batchSize;++t)for(let e=0;e<p.inChannels;++e)for(let n=0;n<p.inHeight;++n)for(let s=0;s<p.inWidth;++s){const r=n-k,a=s-w;let i=0;for(let n=0;n<x;n+=y){const s=(r+n)/m;if(!(s<0||s>=p.outHeight||Math.floor(s)!==s))for(let r=0;r<v;r+=b){const o=(a+r)/g;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const l=x*v-1-f.get(t,s,o,e)===n*v+r?1:0;0!==l&&(i+=T.get(t,s,o,e)*l)}}_.set(i,t,n,s,e)}return n.makeTensorInfo(_.shape,_.dtype,_.values)}},x$={kernelName:Ol,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=e,l=n;CN(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,c=Sp(s.shape,r,a,[1,1],i),[h,p]=function(t,e,n,s,r){const a=MC(t,0,n,Mi(e),r,"max"),i=LC(t,e,n,r,!0,s);return[a.values,i.values]}(u,s.shape,s.dtype,o,c),d=l.write(h,c.outShape,s.dtype),f=l.write(p,c.outShape,s.dtype);return[{dataId:d,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};function v$(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a,keepDims:i}=s;let o;CN(r,"sum"),o="bool"===r.dtype?JN({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):DN({inputs:{x:r},backend:n});const l=o.shape.length,u=Ii(a,o.shape),c=Vd(u,l);let h=u,p=o;null!=c&&(p=xC({inputs:{x:o},backend:n,attrs:{perm:c}}),h=Wd(h.length,l)),Pd("sum",h,p.shape.length);const[d,f]=Ld(p.shape,h);let m=KN(n,d,$c(p.dtype,"int32"));const g=yi(f),y=n.data.get(m.dataId).values,b=n.data.get(p.dataId).values;for(let t=0;t<y.length;++t){const e=t*g;let n=0;for(let t=0;t<g;++t)n+=b[e+t];y[t]=n}if(i){const t=m;m=iC({inputs:{x:m},backend:n,attrs:{shape:zd(m.shape,u)}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(p),m}const w$={kernelName:ku,backendName:"cpu",kernelFunc:v$},k$={kernelName:Dl,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a,keepDims:i}=s,o=Ii(a,r.shape),l=yi(Ld(r.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=JN({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});u.push(h);const p=sA({inputs:{a:h,b:c},backend:n});u.push(p);const d=v$({inputs:{x:p},backend:n,attrs:{axis:a,keepDims:i}});return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),d}},_$={kernelName:Fl,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a,keepDims:i}=s;CN(r,"min");const o=Ii(a,r.shape);let l=o;const u=Vd(l,r.shape.length);let c=r;null!=u&&(c=xC({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Wd(l.length,r.shape.length)),Pd("min",l,c.shape.length);const[h,p]=Ld(c.shape,l),d=yi(p),f=Vi(yi(h),c.dtype),m=n.data.get(c.dataId).values;for(let t=0;t<f.length;++t){const e=t*d;let n=m[e];for(let t=0;t<d;++t){const s=m[e+t];s<n&&(n=s)}f[t]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const t=iC({inputs:{x:g},backend:n,attrs:{shape:zd(h,o)}});return n.disposeIntermediateTensorInfo(g),t}return g}},I$=zN(((t,e)=>Math.min(t,e))),T$=tC(Ml,I$),N$={kernelName:Ml,backendName:"cpu",kernelFunc:T$},C$={kernelName:Ll,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{paddings:a,mode:i}=s;CN(r,"mirrorPad");const o=a.map(((t,e)=>t[0]+r.shape[e]+t[1])),l=a.map((t=>t[0])),u=a.map(((t,e)=>t[0]+r.shape[e])),c="reflect"===i?0:1,h=n.data.get(r.dataId).values,p=r.shape.length,d=Mi(r.shape),f=yi(o),m=o.length,g=Mi(o),y=Ni(r.dtype,f);for(let t=0;t<f;t++){let e=Gi(t,m,g);for(let t=0;t<m;t++)e[t]<l[t]?e[t]=2*l[t]-e[t]-c:e[t]>=u[t]&&(e[t]=2*(u[t]-1)-e[t]+c);e=e.map(((t,e)=>t-l[e]));const n=Ui(e,p,d);y[t]=h[n]}return{dataId:n.write(y,o,r.dtype),shape:o,dtype:r.dtype}}},S$=zN(((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e})),A$=tC(zl,S$),$$={kernelName:zl,backendName:"cpu",kernelFunc:A$};var E$=n(2948);function R$(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{dim:a}=s,i=r.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=Ii([o],r.shape),u=c$({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=zd(u.shape,l),h=iC({inputs:{x:u},backend:n,attrs:{shape:c}}),p=oA({inputs:{a:r,b:h},backend:n}),d=jS({inputs:{x:p},backend:n}),f=v$({inputs:{x:d},backend:n,attrs:{axis:l,keepDims:!1}}),m=iC({inputs:{x:f},backend:n,attrs:{shape:c}}),g=sA({inputs:{a:d,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const O$={kernelName:Tu,backendName:"cpu",kernelFunc:R$},D$={kernelName:Pl,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{numSamples:a,seed:i,normalized:o}=s;CN(r,"multinomial");const l=o?r:R$({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,p=[u,a],d=Vi(yi(p),"int32");for(let t=0;t<u;++t){const e=t*c,n=new Float32Array(c-1);n[0]=h[e];for(let t=1;t<n.length;++t)n[t]=n[t-1]+h[e+t];const s=E$.alea(i.toString()),r=t*a;for(let t=0;t<a;++t){const e=s();d[r+t]=n.length;for(let s=0;s<n.length;s++)if(e<n[s]){d[r+t]=s;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",d)}};function F$(t,e,n){const s=ec(-1,n);return JS([],e,s,t,n)}const M$={kernelName:Bl,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s}=e;CN(s,"neg");const r=n.data.get(s.dataId).values,[a,i]=F$(r,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,a)}},L$=im,z$={kernelName:Ul,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:a}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s;CN(r,"NonMaxSuppression");const u=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=L$(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},P$=om,V$={kernelName:Gl,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:a}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s;CN(r,"NonMaxSuppressionPadded");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:p,validOutputs:d}=P$(c,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},B$=lm,W$={kernelName:jl,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:a}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s;CN(r,"NonMaxSuppressionWithScore");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,p=i,d=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=B$(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},U$=zN(((t,e)=>t!==e?1:0)),G$=tC(Wl,U$,null,"bool"),j$={kernelName:Wl,backendName:"cpu",kernelFunc:G$},H$={kernelName:ql,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{indices:r}=e,{depth:a,onValue:i,offValue:o}=s;CN(r,"oneHot");const l=yi(r.shape),u=new Float32Array(l*a);u.fill(o);const c=n.data.get(r.dataId).values;for(let t=0;t<l;++t)c[t]>=0&&c[t]<a&&(u[t*a+c[t]]=i);return n.makeTensorInfo([...r.shape,a],"int32",u)}};function q$(t){const{inputs:e,backend:n}=t,{x:s}=e;if("string"===s.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===s.dtype){const t=YN({inputs:{input:s},backend:n}),e=q$({inputs:{x:t},backend:n}),r=aS({inputs:{input:s},backend:n}),a=q$({inputs:{x:r},backend:n}),i=qN({inputs:{real:e,imag:a},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return dA({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const X$={kernelName:Vu,backendName:"cpu",kernelFunc:q$},K$={kernelName:Hl,backendName:"cpu",kernelFunc:function t(e){const{inputs:n,backend:s}=e,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const e=YN({inputs:{input:r},backend:s}),n=t({inputs:{x:e},backend:s}),a=aS({inputs:{input:r},backend:s}),i=q$({inputs:{x:a},backend:s}),o=qN({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(e),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return dA({backend:s,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function Y$(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s;if(1===e.length)return qS({inputs:{input:e[0]},backend:n,attrs:{dim:r}});const a=e[0].shape,i=e[0].dtype;e.forEach((t=>{fi(a,t.shape,"All tensors passed to stack must have matching shapes"),di(i===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=oS({inputs:e.map((t=>{const e=qS({inputs:{input:t},backend:n,attrs:{dim:r}});return o.push(e),e})),backend:n,attrs:{axis:r}});return o.forEach((t=>n.disposeIntermediateTensorInfo(t))),l}const Z$={kernelName:Xl,backendName:"cpu",kernelFunc:Y$},J$={kernelName:Kl,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{paddings:a,constantValue:i}=s;CN(r,"pad");const o=a.map(((t,e)=>t[0]+r.shape[e]+t[1])),l=a.map((t=>t[0])),u=n.data.get(r.dataId).values,c=yi(r.shape),h=r.shape.length,p=Mi(r.shape),d=yi(o),f=o.length,m=Mi(o),g=Ni(r.dtype,d);0!==i&&g.fill(i);for(let t=0;t<c;t++)g[Ui(Gi(t,h,p).map(((t,e)=>t+l[e])),f,m)]=u[t];return{dataId:n.write(g,o,r.dtype),shape:o,dtype:r.dtype}}},Q$=zN(((t,e)=>Math.pow(t,e))),tE=tC(Yl,Q$),eE={kernelName:Yl,backendName:"cpu",kernelFunc:tE};function nE(t,e,n,s){const[r,a]=Ld(t,s),i=$c(e,"int32"),o=Vi(yi(r),i),l=yi(a);for(let t=0;t<o.length;++t){const e=t*l;let s=1;for(let t=0;t<l;++t)s*=n[e+t];o[t]=s}return{outVals:o,outShape:r,outDtype:i}}const sE={kernelName:Jl,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a,keepDims:i}=s;CN(r,"prod");const o=r.shape.length,l=Ii(a,r.shape),u=Vd(l,o);let c=l,h=r;const p=[];null!=u&&(h=xC({inputs:{x:r},backend:n,attrs:{perm:u}}),p.push(h),c=Wd(c.length,o));const d=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=nE(h.shape,h.dtype,d,c);let y=m;return i&&(y=zd(m,l)),p.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(y,g,f)}};function rE(t,e,n,s){if(t===e||t<e&&n<0||e<t&&n>1)return Vi(0,s);const r=Vi(Math.abs(Math.ceil((e-t)/n)),s);e<t&&1===n&&(n=-1),r[0]=t;for(let t=1;t<r.length;t++)r[t]=r[t-1]+n;return r}const aE={kernelName:Ql,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:s,stop:r,dtype:a,step:i}=n,o=rE(s,r,i,a);return e.makeTensorInfo([o.length],a,o)}},iE=$N(eu,(t=>1/t)),oE={kernelName:eu,backendName:"cpu",kernelFunc:iE},lE={kernelName:iu,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:a,halfPixelCenters:i,size:o}=s;CN(r,"resizeBilinear");const l=Mi(r.shape),[u,c]=o,[h,p,d,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(yi([h,u,c,f])),y=[a&&u>1?p-1:p,a&&c>1?d-1:d],b=[a&&u>1?u-1:u,a&&c>1?c-1:c];let x=0;const v=y[0]/b[0],w=y[1]/b[1];for(let t=0;t<h;t++)for(let e=0;e<u;e++){let n;n=i?v*(e+.5)-.5:v*e;const s=Math.max(0,Math.floor(n)),r=n-s,a=Math.min(p-1,Math.ceil(n)),o=t*l[0]+s*l[1],u=t*l[0]+a*l[1];for(let t=0;t<c;t++){let e;e=i?w*(t+.5)-.5:w*t;const n=Math.max(0,Math.floor(e)),s=e-n,a=Math.min(d-1,Math.ceil(e)),c=o+n*l[2],h=u+n*l[2],p=o+a*l[2],y=u+a*l[2];for(let t=0;t<f;t++){const e=m[c+t],n=m[h+t],a=e+(m[p+t]-e)*s,i=a+(n+(m[y+t]-n)*s-a)*r;g[x++]=i}}}return n.makeTensorInfo([h,u,c,f],"float32",g)}},uE={kernelName:ou,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:a}=e,{alignCorners:i}=s;CN([a,r],"resizeBilinearGrad");const o=Mi(r.shape),[l,u,c,h]=r.shape,[,p,d]=a.shape,f=new Float32Array(l*u*c*h),m=[i&&p>1?u-1:u,i&&d>1?c-1:c],g=[i&&p>1?p-1:p,i&&d>1?d-1:d],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(a.dataId).values;let v=0;for(let t=0;t<l;t++){const e=t*o[0];for(let t=0;t<p;t++){const n=t*y,s=Math.floor(n),r=Math.min(Math.ceil(n),u-1),a=e+s*o[1],i=e+r*o[1],l=n-s,p=1-l;for(let t=0;t<d;t++){const e=t*b,n=Math.floor(e),s=Math.min(Math.ceil(e),c-1),r=e-n,u=1-r,d=a+n*o[2],m=a+s*o[2],g=i+n*o[2],y=i+s*o[2],w=p*u,k=p*r,_=l*u,I=l*r;for(let t=0;t<h;t++){const e=x[v++];f[d+t]+=e*w,f[m+t]+=e*k,f[g+t]+=e*_,f[y+t]+=e*I}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},cE={kernelName:ru,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:a,halfPixelCenters:i,size:o}=s;CN(r,"resizeNearestNeighbor");const l=Mi(r.shape),[u,c]=o,[h,p,d,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(h*u*c*f),y=[a&&u>1?p-1:p,a&&c>1?d-1:d],b=[a&&u>1?u-1:u,a&&c>1?c-1:c],x=y[0]/b[0],v=y[1]/b[1];let w=0;for(let t=0;t<h;t++){const e=t*l[0];for(let t=0;t<u;t++){const n=i?x*(t+.5):x*t;let s=Math.min(p-1,a?Math.round(n):Math.floor(n));i&&(s=Math.max(0,s));const r=e+s*l[1];for(let t=0;t<c;t++){const e=i?v*(t+.5):v*t;let n=Math.min(d-1,a?Math.round(e):Math.floor(e));i&&(n=Math.max(0,n));const s=r+n*l[2];for(let t=0;t<f;t++){const e=m[s+t];g[w++]=e}}}}return n.makeTensorInfo([h,u,c,f],r.dtype,g)}},hE={kernelName:au,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:a}=e,{alignCorners:i}=s;CN([a,r],"resizeNearestNeighborGrad");const o=Mi(r.shape),l=Mi(a.shape),[u,c,h,p]=r.shape,[,d,f]=a.shape,m=new Float32Array(u*c*h*p),g=n.data.get(a.dataId).values,y=[i&&d>1?c-1:c,i&&f>1?h-1:h],b=[i&&d>1?d-1:d,i&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,k=1/v,_=2*Math.ceil(w)+2,I=2*Math.ceil(k)+2;for(let t=0;t<u;t++){const e=t*o[0];for(let t=0;t<c;t++){const n=e+t*o[1],s=Math.floor(t*w),r=Math.floor(s-_/2);for(let s=0;s<h;s++){const a=n+s*o[2],u=Math.floor(s*k),y=Math.floor(u-I/2);for(let n=0;n<p;n++){let o=0;for(let a=0;a<_;a++){const u=a+r;if(u<0||u>=d)continue;const p=e+u*l[1],m=u*x;if(t===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let t=0;t<I;t++){const e=t+y;if(e<0||e>=f)continue;const r=p+e*l[2],a=e*v;s===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=g[r+n])}}m[a+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}},pE={kernelName:uu,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{dims:a}=s;CN(r,"reverse");const i=r.shape.length,o=Ii(a,r.shape);if(0===i)return DN({inputs:{x:r},backend:n});const l=new yc(r.shape,r.dtype),u=n.bufferSync(r);for(let t=0;t<l.size;t++){const e=l.indexToLoc(t),n=e.slice();o.forEach((t=>n[t]=r.shape[t]-1-n[t])),l.set(u.get(...n),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},dE={kernelName:Uu,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,{radians:r,fillValue:a,center:i}=e,o=n,l=Ni(s.dtype,yi(s.shape)),[u,c,h,p]=s.shape,[d,f]=Km(i,c,h),m=Math.sin(r),g=Math.cos(r),y=o.data.get(s.dataId).values;for(let t=0;t<u;t++){const e=t*h*c*p;for(let t=0;t<c;t++){const n=t*(h*p);for(let s=0;s<h;s++){const r=s*p;for(let i=0;i<p;i++){const o=[u,t,s,i],b=o[2],x=o[1];let v=(b-d)*g-(x-f)*m,w=(b-d)*m+(x-f)*g;v=Math.round(v+d),w=Math.round(w+f);let k=a;"number"!=typeof a&&(k=3===i?255:a[i]),v>=0&&v<h&&w>=0&&w<c&&(k=y[e+w*(h*p)+v*p+i]),l[e+n+r+i]=k}}}}return{dataId:o.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},fE=$N(cu,(t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2==0?e:e+1})),mE={kernelName:cu,backendName:"cpu",kernelFunc:fE},gE=ZC((t=>1/Math.sqrt(t))),yE=EN(hu,gE),bE={kernelName:hu,backendName:"cpu",kernelFunc:yE};function xE(t,e,n,s,r,a,i,o,l,u){const c=[s/r,r],h=t.values,p=e.values;if(0===s)return Oh(n,e.dtype);const d=Oh(c,e.dtype);d.values.fill(l);for(let t=0;t<a;t++){const a=[];let l=0;for(let e=0;e<i;e++){const n=h[t*i+e];a.push(n),l+=n*o[e]}if(l<0||l>=s/r)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<r;n++)u?d.values[l*r+n]+=p[t*r+n]:d.values[l*r+n]=0===e.rank?p[0]:p[t*r+n]}return d}const vE={kernelName:pu,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{indices:r,updates:a}=e,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=rg(0,r,i),p=xE(n.bufferSync(r),n.bufferSync(a),i,h,u,l,o,c,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}},wE={kernelName:du,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:s,t:r,e:a}=e;CN([s,r,a],"select");const i=s.shape.length,o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=$c(r.dtype,a.dtype),h=Vi(yi(r.shape),c);let p=0;const d=0===i||i>1||1===r.shape.length?1:yi(r.shape.slice(1));for(let t=0;t<o.length;t++)for(let e=0;e<d;e++)1===o[t]?h[p++]=l[t]:h[p++]=u[t];return n.makeTensorInfo(r.shape,c,h)}},kE=ag,_E=ig,IE=$N(fu,(t=>t>=0?_E*t:kE*(Math.exp(t)-1))),TE={kernelName:fu,backendName:"cpu",kernelFunc:IE},NE=$N(xu,(t=>1/(1+Math.exp(-t)))),CE={kernelName:xu,backendName:"cpu",kernelFunc:NE},SE=$N(bu,(t=>t<0?-1:t>0?1:0)),AE={kernelName:bu,backendName:"cpu",kernelFunc:SE},$E=$N(gu,(t=>Math.sin(t))),EE={kernelName:gu,backendName:"cpu",kernelFunc:$E},RE=$N(yu,(t=>Math.sinh(t))),OE={kernelName:yu,backendName:"cpu",kernelFunc:RE},DE=Math.log(1.1920928955078125e-7)+2,FE=$N(vu,(t=>{const e=t>-DE,n=t<DE,s=Math.exp(t);let r;return r=n?s:e?t:Math.log(1+s),r})),ME={kernelName:vu,backendName:"cpu",kernelFunc:FE},LE={kernelName:_u,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:a,paddings:i}=s;CN([r],"spaceToBatchND");const o=yi(a),l=[[0,0]];l.push(...i);for(let t=1+a.length;t<r.shape.length;++t)l.push([0,0]);const u=J$.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=Ym(u.shape,a,o,!1),h=Zm(c.length,a.length,!1),p=Jm(u.shape,a,o,!1),d=iC({inputs:{x:u},backend:n,attrs:{shape:c}}),f=xC({inputs:{x:d},backend:n,attrs:{perm:h}}),m=iC({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}},zE={kernelName:Au,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{sparseIndices:r,sparseValues:a,defaultValue:i}=e,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:p}=rg(0,r,o),d=xE(n.bufferSync(r),n.bufferSync(a),o,p,c,u,l,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,d.dtype,d.values)}},PE={kernelName:Iu,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{numOrSizeSplits:a,axis:i}=s,o=Ii(i,r.shape)[0],l=_g(r,a,o),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map((t=>{const e=[...c];e[o]=t;const s=jC({inputs:{x:r},backend:n,attrs:{begin:u,size:e}});return u[o]+=t,s}))}},VE=$N(wu,(t=>Math.sqrt(t))),BE={kernelName:wu,backendName:"cpu",kernelFunc:VE},WE={kernelName:Cu,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,s=e;CN(n,"square");const r=s.data.get(n.dataId).values,a=new Float32Array(r.length);for(let t=0;t<r.length;++t){const e=r[t];a[t]=e*e}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},UE=zN(((t,e)=>{const n=t-e;return n*n})),GE=tC(Nu,UE),jE={kernelName:Nu,backendName:"cpu",kernelFunc:GE},HE=$N(Bu,((t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha})),qE={kernelName:Bu,backendName:"cpu",kernelFunc:HE};function XE(t,e,n,s){const r=Oh(t,e.dtype);for(let t=0;t<r.size;t++){const a=r.indexToLoc(t),i=new Array(a.length);for(let t=0;t<i.length;t++)i[t]=a[t]*n[t]+s[t];r.set(e.get(...i),...a)}return r}const KE={kernelName:$u,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=s;CN(r,"stridedSlice");const{nonStrided:d,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=lp(r.shape,a,i,o,l,u,c,h,p),x=iC({inputs:{x:r},backend:n,attrs:{shape:y}});let v;if(d){const t=jC({inputs:{x},backend:n,attrs:{begin:f,size:g}});v=iC({inputs:{x:t},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(t)}else if(b.some((t=>0===t)))v=n.makeTensorInfo(b,r.dtype,[]);else{const t=XE(b,n.bufferSync(x),m,f);v=n.makeTensorInfo(t.shape,t.dtype,t.values)}const w=iC({inputs:{x:v},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),w}},YE=$N(Eu,(t=>Math.tan(t))),ZE={kernelName:Eu,backendName:"cpu",kernelFunc:YE},JE=$N(Ru,(t=>Math.tanh(t)));function QE(t,e){const n=new Array(t.rank);for(let s=0;s<n.length;s++)n[s]=t.shape[s]*e[s];const s=Oh(n,t.dtype);for(let e=0;e<s.values.length;++e){const n=s.indexToLoc(e),r=new Array(t.rank);for(let e=0;e<r.length;e++)r[e]=n[e]%t.shape[e];const a=t.locToIndex(r);s.values[e]=t.values[a]}return s}function tR(t,e,n,s,r){const a=e[e.length-1],[i,o]=[t.length/a,a],l=Ni(n,i*s),u=Ni("int32",i*s);for(let e=0;e<i;e++){const n=e*o,r=t.subarray(n,n+o),a=[];for(let t=0;t<r.length;t++)a.push({value:r[t],index:t});a.sort(((t,e)=>e.value-t.value));const i=e*s,c=l.subarray(i,i+s),h=u.subarray(i,i+s);for(let t=0;t<s;t++)c[t]=a[t].value,h[t]=a[t].index}const c=e.slice();return c[c.length-1]=s,[Oh(c,n,l),Oh(c,"int32",u)]}const eR={kernelName:Fu,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:s}=t,{image:r,transforms:a}=e,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,p,d]=r.shape,[f,m]=null!=u?u:[h,p],g=[c,f,m,d],y=Mi(r.shape),b=y[0],x=y[1],v=y[2],w=Ni(r.dtype,yi(g));w.fill(l);const k=s.data.get(r.dataId).values,_=s.data.get(a.dataId).values;for(let t=0;t<c;++t){const e=1===a.shape[0]?_:_.subarray(8*t,8*t+8);for(let n=0;n<f;++n)for(let s=0;s<m;++s)for(let r=0;r<d;++r){let a;const u=e[6]*s+e[7]*n+1;if(0===u)continue;const c=(e[0]*s+e[1]*n+e[2])/u,d=(e[3]*s+e[4]*n+e[5])/u,f=nR(c,p,o),m=nR(d,h,o);switch(i){case"nearest":a=rR(k,h,p,b,x,v,t,m,f,r,l);break;case"bilinear":a=aR(k,h,p,b,x,v,t,m,f,r,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}w[t*b+n*x+s*v+r]=a}return s.makeTensorInfo(g,r.dtype,w)}return{dataId:s.write(w,g,r.dtype),shape:r.shape,dtype:r.dtype}}};function nR(t,e,n){switch(n){case"reflect":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=2*e;n<t&&(n=t*Math.trunc(-n/t)+n),n=n<-e?n+t:-n-1}else if(n>e-1)if(e<=1)n=0;else{const t=2*e;n-=t*Math.trunc(n/t),n>=e&&(n=t-n-1)}return hi(0,n,e-1)}(t,e);case"wrap":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=e-1;n+=e*(Math.trunc(-n/t)+1)}else if(n>e-1)if(e<=1)n=0;else{const t=e-1;n-=e*Math.trunc(n/t)}return hi(0,n,e-1)}(t,e);case"nearest":return function(t,e){return hi(0,t,e-1)}(t,e);default:return function(t,e){return t}(t)}}function sR(t,e,n,s,r,a,i,o,l,u,c){return 0<=o&&o<e&&0<=l&&l<n?t[i*s+o*r+l*a+u]:c}function rR(t,e,n,s,r,a,i,o,l,u,c){return sR(t,e,n,s,r,a,i,Math.round(o),Math.round(l),u,c)}function aR(t,e,n,s,r,a,i,o,l,u,c){const h=Math.floor(o),p=Math.floor(l),d=h+1,f=p+1;return(d-o)*((f-l)*sR(t,e,n,s,r,a,i,h,p,u,c)+(l-p)*sR(t,e,n,s,r,a,i,h,f,u,c))+(o-h)*((f-l)*sR(t,e,n,s,r,a,i,d,p,u,c)+(l-p)*sR(t,e,n,s,r,a,i,d,f,u,c))}function iR(t,e,n,s){const r=Ii(e,n)[0],a=[1,n[0],1];for(let t=0;t<r;t++)a[0]*=n[t];a[1]=n[r];for(let t=r+1;t<n.length;t++)a[2]*=n[t];const i={},o=new Int32Array(n[r]),l=new yc(a,s,t),u=[],c=1===a[0]&&1===a[2];for(let e=0;e<n[r];e++){let n;if(c)n=t[e].toString();else{const t=[];for(let n=0;n<a[0];n++)for(let s=0;s<a[2];s++)t.push(l.get(n,e,s));n=t.join(",")}if(void 0!==i[n])o[e]=i[n];else{const t=Object.keys(i).length;i[n]=t,o[e]=t,u.push(e)}}const h=a.slice();h[1]=Object.keys(i).length;const p=new yc(h,s);u.forEach(((t,e)=>{for(let n=0;n<a[0];n++)for(let s=0;s<a[2];s++)p.set(l.get(n,t,s),n,e,s)}));const d=n.slice();return d[r]=h[1],{outputValues:p.values,outputShape:d,indices:o}}const oR={kernelName:Pu,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,segmentIds:a}=e,{numSegments:i}=s;CN(r,"unsortedSegmentSum");const o=[],l=[],u=r.shape.length-a.shape.length;let c=a;for(let t=0;t<u;++t){const e=qS({inputs:{input:c},backend:n,attrs:{dim:t+1}});c=e,l.push(e)}for(let t=0;t<i;++t){const e=ec(t,"int32"),s=n.makeTensorInfo([],"int32",e),a=DS({inputs:{a:s,b:c},backend:n}),i=JN({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),u=tA({inputs:{a:i,b:r},backend:n}),h=v$({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(s),l.push(a),l.push(i),l.push(u),l.push(h)}const h=Y$({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}},lR=[cC,pC,fC,gC,aC,yC,wC,kC,_C,IC,NC,SC,$C,OC,FC,PC,VC,BC,WC,uC,UC,qC,YC,QN,tS,nS,XN,sS,lS,hS,pS,cS,fS,mS,dS,yS,xS,vS,wS,kS,_S,TS,NS,CS,SS,AS,ES,$S,rA,ON,RS,FS,US,HS,XS,ZS,pA,fA,mA,bA,wA,kA,_A,IA,NA,AA,RA,FN,OA,iS,FA,LA,PA,LN,WA,jA,qA,YA,JA,e$,s$,i$,o$,l$,f$,m$,g$,y$,b$,x$,h$,k$,_$,N$,C$,$$,D$,eA,M$,z$,V$,W$,j$,H$,K$,Z$,J$,eE,BN,sE,aE,ZN,oE,UN,jN,oC,lE,uE,cE,hE,pE,dE,mE,bE,vE,wE,TE,CE,AE,EE,OE,HC,O$,ME,LE,zE,PE,BE,WE,jE,qE,KE,lA,w$,ZE,{kernelName:Ru,backendName:"cpu",kernelFunc:JE},{kernelName:Ou,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{reps:a}=s;CN(r,"tile");const i=QE(n.bufferSync(r),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:Du,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{k:a,sorted:i}=s;CN(r,"topk");const o=n.data.get(r.dataId).values,[l,u]=tR(o,r.shape,r.dtype,a);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},vC,eR,{kernelName:Lu,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:s}=t,{axis:r}=n,{x:a}=e;CN(a,"unique");const i=s.data.get(a.dataId).values,{outputValues:o,outputShape:l,indices:u}=iR(i,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}},{kernelName:zu,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{value:r}=e;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r.shape.length,o=r.shape[a],l=new Array(i-1);let u=0;for(let t=0;t<i;t++)t!==a&&(l[u++]=r.shape[t]);const c=new Array(i).fill(0),h=r.shape.slice();h[a]=1;const p=new Array(o);for(let t=0;t<p.length;t++){c[a]=t;const e=jC({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});p[t]=iC({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return p}},oR,X$];for(const t of lR)Ju(t);const uR={},cR={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function hR(t){if(!(t in uR)){const e=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=function(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);return e.addEventListener("webglcontextlost",(e=>{e.preventDefault(),delete uR[t]}),!1),1===t?e.getContext("webgl",cR)||e.getContext("experimental-webgl",cR):e.getContext("webgl2",cR)}(t);if(null===e)return console.log("Could not get context for WebGL version",t),null;uR[t]=e}const e=uR[t];return e.isContextLost()?(delete uR[t],hR(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),uR[t])}var pR,dR,fR;function mR(t,e){return[e,t]}function gR(t){const e=yi(t);return vi(Math.ceil(e/4))}function yR(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function bR(t,e){const n=t;let s,r,a,i,o,l,u,c,h,p;return 2===Xi().getNumber("WEBGL_VERSION")?(s=n.R32F,r=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,p=n.FLOAT):(s=t.RGBA,r=t.RGBA,a=t.RGBA,i=n.RGBA,o=t.RGBA,u=4,c=4,h=null!=e?e.HALF_FLOAT_OES:null,p=t.FLOAT),l=t.RGBA,{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:p}}function xR(t,e){const n=e();return Xi().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}(t,e))}(t),n}function vR(t){return!!(Xi().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function wR(t,e){return AR(t,(()=>t.getExtension(e)),'Extension "'+e+'" not supported on this browser.')}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(pR||(pR={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(dR||(dR={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(fR||(fR={}));const kR=/ERROR: [0-9]+:([0-9]+):/g;function _R(t,e){if(xR(t,(()=>t.validateProgram(e))),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function IR(t,e,n,s,r,a,i){const o=t.getAttribLocation(e,n);return-1!==o&&(xR(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,s))),xR(t,(()=>t.vertexAttribPointer(o,r,t.FLOAT,!1,a,i))),xR(t,(()=>t.enableVertexAttribArray(o))),!0)}function TR(t,e,n,s){xR(t,(()=>function(t,e,n){(function(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+t.TEXTURE0;if(s<t.TEXTURE0||s>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(t,n),xR(t,(()=>t.activeTexture(t.TEXTURE0+n))),xR(t,(()=>t.bindTexture(t.TEXTURE_2D,e)))}(t,e,s))),xR(t,(()=>t.uniform1i(n,s)))}function NR(t,e,n){xR(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,n))),xR(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)))}function CR(t,e){xR(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,e))),xR(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)))}function SR(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}(t,e))}function AR(t,e,n){const s=xR(t,(()=>e()));if(null==s)throw new Error(n);return s}function $R(t,e=2){return yi(t.slice(0,t.length-e))}function ER(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function RR(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[$R(t),...ER(t)]),e}function OR(t){return t%2==0}function DR(t,e){if(bi(t=t.slice(-2),e=e.slice(-2)))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],s=e.slice(-1)[0];if(n===s)return!0;if(OR(n)&&OR(s)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&OR(t[0])&&OR(e[0])}let FR,MR;function LR(t,e){return null!=t.getExtension(e)}function zR(t){try{if(null!=hR(t))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function PR(t){const e=bR(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const s=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,s),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const r=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(s),r}function VR(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&di("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the WebGL backend.`))}))}const BR=Xi();function WR(){let t,e,n,s,r,a,i,o,l,u;return 2===Xi().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",s="in",r="texture",a="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",s="varying",r="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:s,texture2D:r,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function UR(t,e,n="index"){const s=Mi(e);return s.map(((e,r)=>`int ${t[r]} = ${n} / ${e}; ${r===s.length-1?`int ${t[r+1]} = ${n} - ${t[r]} * ${e}`:`index -= ${t[r]} * ${e}`};`)).join("")}function GR(t){const e=Mi(t).map((t=>t.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}BR.registerFlag("HAS_WEBGL",(()=>BR.getNumber("WEBGL_VERSION")>0)),BR.registerFlag("WEBGL_VERSION",(()=>zR(2)?2:zR(1)?1:0)),BR.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),BR.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===BR.get("WEBGL_VERSION"))),BR.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),BR.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),BR.registerFlag("WEBGL_PACK",(()=>BR.getBool("HAS_WEBGL"))),BR.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>BR.getBool("WEBGL_PACK"))),BR.registerFlag("WEBGL_PACK_CLIP",(()=>BR.getBool("WEBGL_PACK"))),BR.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),BR.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>BR.getBool("WEBGL_PACK"))),BR.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>BR.getBool("WEBGL_PACK"))),BR.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>BR.getBool("WEBGL_PACK"))),BR.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>BR.getBool("WEBGL_PACK"))),BR.registerFlag("WEBGL_PACK_REDUCE",(()=>BR.getBool("WEBGL_PACK"))),BR.registerFlag("WEBGL_LAZILY_UNPACK",(()=>BR.getBool("WEBGL_PACK"))),BR.registerFlag("WEBGL_CONV_IM2COL",(()=>BR.getBool("WEBGL_PACK"))),BR.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(t){if(null==FR){const e=hR(t);FR=e.getParameter(e.MAX_TEXTURE_SIZE)}return FR}(BR.getNumber("WEBGL_VERSION")))),BR.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(t){if(null==MR){const e=hR(t);MR=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,MR)}(BR.getNumber("WEBGL_VERSION")))),BR.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const t=BR.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=hR(t);return e=LR(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:LR(n,"EXT_disjoint_timer_query")?1:0,e}(t)})),BR.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>BR.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Wc())),BR.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(t){if(0===t)return!1;const e=hR(t);if(1===t){if(!LR(e,"OES_texture_float"))return!1}else if(!LR(e,"EXT_color_buffer_float"))return!1;return PR(e)}(BR.getNumber("WEBGL_VERSION")))),BR.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!BR.getBool("WEBGL_FORCE_F16_TEXTURES")&&BR.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),BR.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(t){if(0===t)return!1;const e=hR(t);if(1!==t){if(LR(e,"EXT_color_buffer_float"))return PR(e);const t="EXT_color_buffer_half_float";if(LR(e,t)){const n=e.getExtension(t);return function(t,e){const n=bR(t,e),s=t.createTexture();t.bindTexture(t.TEXTURE_2D,s),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,s,0);const a=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(s),t.deleteFramebuffer(r),a}(e,n)}return!1}return!!LR(e,"OES_texture_float")&&!!LR(e,"WEBGL_color_buffer_float")&&PR(e)}(BR.getNumber("WEBGL_VERSION")))),BR.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(t=BR.getNumber("WEBGL_VERSION"))&&null!=hR(t).fenceSync;var t})),BR.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>BR.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),BR.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)})),BR.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Wc()&&BR.getBool("IS_CHROME")?1:-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${t}.`)}));const jR="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class HR{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=pR.DENSE;const e=gR(t),n=WR();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${UR(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class qR{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=pR.DENSE;const e=gR(t),n=WR();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${UR(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class XR{constructor(t){this.variableNames=["A"],this.outTexUsage=dR.DOWNLOAD;const e=WR();this.outputShape=t,this.userCode=`\n      ${jR}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class KR{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=dR.DOWNLOAD;const e=WR();this.outputShape=t,this.userCode=`\n      ${jR}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class YR{constructor(t,e,n=!1){this.variableNames=["A"];const s=WR(),[r,a]=e;this.outputShape=t;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${GR(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${a};\n        int c = imod(flatIndex, ${a});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${r}.0);\n        vec4 values = ${s.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${s.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class ZR{constructor(t,e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const s=WR(),[r,a]=e;this.outputShape=t;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let e=0;e<=1;e++)for(let n=0;n<=1;n++){const o=2*e+n;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${t[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${e} < ${t[1]}) {\n              localCoords[1] += ${e};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${a};\n              c = imod(flatIndex, ${a});\n              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${r}.0);\n              values = ${s.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${GR(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${s.output} = ${o};\n      }\n    `}}function JR(t,e,n,s,r,a){!function(t,e){const n=Xi().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(e,n);const i=function(t){return AR(t,(()=>t.createTexture()),"Unable to create WebGLTexture.")}(t),o=t.TEXTURE_2D;return xR(t,(()=>t.bindTexture(o,i))),xR(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE))),xR(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE))),xR(t,(()=>t.texParameteri(o,t.TEXTURE_MIN_FILTER,t.NEAREST))),xR(t,(()=>t.texParameteri(o,t.TEXTURE_MAG_FILTER,t.NEAREST))),xR(t,(()=>t.texImage2D(o,0,s,e,n,0,r,a,null))),xR(t,(()=>t.bindTexture(t.TEXTURE_2D,null))),i}function QR(t){return t.internalFormatFloat}function tO(t){return t.internalFormatHalfFloat}function eO(t){return t.downloadTextureFormat}function nO(t){return t.internalFormatPackedFloat}function sO(t){return t.internalFormatPackedHalfFloat}class rO{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=Xi().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){uR[t]=e}(e,t)):this.gl=hR(e);let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(1===Xi().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=wR(this.gl,t),LR(this.gl,e))this.textureHalfFloatExtension=wR(this.gl,e);else if(Xi().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),LR(this.gl,s))this.colorBufferHalfFloatExtension=wR(this.gl,s);else if(Xi().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",LR(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!LR(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=function(t){return function(t,e){const n=AR(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return xR(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),xR(t,(()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(t){return function(t,e){const n=AR(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return xR(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n))),xR(t,(()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(t){return AR(t,(()=>t.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=bR(this.gl,this.textureHalfFloatExtension)}get debug(){return Xi().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;xR(t,(()=>t.finish())),xR(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,null))),xR(t,(()=>t.deleteFramebuffer(this.framebuffer))),xR(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,null))),xR(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null))),xR(t,(()=>t.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,a]=mR(e,n);return JR(t,r,a,QR(s),s.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,a]=mR(e,n);return JR(t,r,a,tO(s),s.textureFormatFloat,s.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,a]=mR(e,n);return JR(t,r,a,eO(s),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){xR(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),n.data instanceof Uint8Array?xR(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data))):xR(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n))),xR(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,s){this.throwIfDisposed(),function(t,e,n,s,r,a){let i,o,l;xR(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),r instanceof Uint8Array?(i=new Uint8Array(n*s*4),o=t.UNSIGNED_BYTE,l=t.RGBA):(i=new Float32Array(n*s*4),o=t.FLOAT,l=a.internalFormatPackedFloat),i.set(r),xR(t,(()=>t.texImage2D(t.TEXTURE_2D,0,l,n,s,0,t.RGBA,o,i))),xR(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,a]=yR(e,n);return JR(t,r,a,sO(s),t.RGBA,s.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,a]=yR(e,n);return JR(t,r,a,nO(s),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(CR(this.gl,this.framebuffer),this.outputTexture=null),xR(this.gl,(()=>this.gl.deleteTexture(t)))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n,s){const[r,a]=mR(e,n),i=new Uint8Array(e*n*4);return xR(t,(()=>t.readPixels(0,0,r,a,s.downloadTextureFormat,t.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,e,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(t,e,n,s,r,a){return function(t,e,n,s,r,a,i,o){const l=t,u=new Float32Array(function(t,e){const[n,s]=yR(t,e);return n*s*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,t,0,0,0,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const s=t,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const s=function(t,e,n,s){const r=t.createBuffer();xR(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,r)));const a=16*e*n;return xR(t,(()=>t.bufferData(t.PIXEL_PACK_BUFFER,a,t.STREAM_READ))),xR(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0))),xR(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null))),r}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(Xi().getBool("WEBGL_FENCE_API_ENABLED")){const s=t,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=s.clientWaitSync(r,0,0);return t===s.ALREADY_SIGNALED||t===s.CONDITION_SATISFIED},e=r}else Xi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,Xi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n){const s=new Float32Array(e*n*4);return xR(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,s))),s}(this.gl,e,n)))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=function(t,e){const n=AR(t,(()=>t.createShader(t.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(xR(t,(()=>t.shaderSource(n,e))),xR(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){const n=kR.exec(e);if(null==n)return console.log(`Couldn't parse line number in error: ${e}`),void console.log(t);const s=+n[1],r=t.split("\n"),a=r.length.toString().length+2,i=r.map(((t,e)=>wi((e+1).toString(),a)+t));let o=0;for(let t=0;t<i.length;t++)o=Math.max(i[t].length,o);const l=i.slice(0,s-1),u=i.slice(s-1,s),c=i.slice(s);console.log(l.join("\n")),console.log(e.split("\n")[0]),console.log(`%c ${wi(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e,t),s=function(t){const e=WR();return function(t,e){const n=AR(t,(()=>t.createShader(t.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(xR(t,(()=>t.shaderSource(n,e))),xR(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(e),r=function(t){return AR(t,(()=>t.createProgram()),"Unable to create WebGLProgram.")}(e);return xR(e,(()=>e.attachShader(r,s))),xR(e,(()=>e.attachShader(r,n))),function(t,e){if(xR(t,(()=>t.linkProgram(e))),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,r),this.debug&&_R(e,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=function(t,e,n){return xR(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),IR(t,e,"clipSpacePos",n,3,20,0)&&IR(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),r}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&xR(this.gl,(()=>this.gl.deleteProgram(t)))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&_R(this.gl,this.program),xR(this.gl,(()=>this.gl.useProgram(t)))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return AR(t,(()=>t.getUniformLocation(e,n)),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),xR(this.gl,(()=>this.gl.getAttribLocation(t,e)))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),TR(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[s,r]=yR(e,n);this.setOutputMatrixTextureDriver(t,s,r)}setOutputMatrixWriteRegion(t,e,n,s){this.setOutputMatrixWriteRegionDriver(n,t,s,e)}setOutputPackedMatrixWriteRegion(t,e,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&_R(this.gl,this.program),SR(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),xR(t,(()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),xR(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=wR(this.gl,2===Xi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Xi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===Xi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await ki((()=>this.disposed||this.isQueryAvailable(t,Xi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(t,Xi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise((e=>{this.addItemToPoll((()=>t.isFencePassed()),(()=>e()))}))}pollItems(){const t=function(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}(this.itemsToPoll.map((t=>t.isDoneFn)));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||ki((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),NR(this.gl,t,this.framebuffer),this.debug&&SR(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(NR(this.gl,this.outputTexture,this.framebuffer),this.debug&&SR(this.gl)):CR(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const s=this.gl;NR(s,t,this.framebuffer),this.debug&&SR(s),this.outputTexture=t,xR(s,(()=>s.viewport(0,0,e,n))),xR(s,(()=>s.scissor(0,0,e,n)))}setOutputMatrixWriteRegionDriver(t,e,n,s){this.throwIfDisposed(),xR(this.gl,(()=>this.gl.scissor(t,e,n,s)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:aO}=s;function iO(t,e,n,s){const r=[];t.forEach((t=>{const e=yi(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?r.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(r.push(`uniform sampler2D ${t.name};`),r.push(`uniform int offset${t.name};`))}));const a=r.join("\n"),i=t.map((t=>function(t,e,n=!1){let s="";s+=n?lO(t):oO(t);const r=t.shapeInfo.logicalShape,a=e.logicalShape;return r.length<=a.length&&(s+=n?function(t,e){const n=t.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=t.shapeInfo.logicalShape.length,i=e.logicalShape.length,o=aO(t.shapeInfo.logicalShape,e.logicalShape),l=mO(i),u=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((t=>`coords.${h[t+u]} = 0;`)).join("\n");let p="";p=i<2&&a>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${h[e+u]}`)).join(", ");let d="return outputValue;";const f=1===yi(t.shapeInfo.logicalShape),m=1===yi(e.logicalShape);if(1!==a||f||m){if(f&&!m)d=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const t=a-2,e=a-1;o.indexOf(t)>-1&&o.indexOf(e)>-1?d="return vec4(outputValue.x);":o.indexOf(t)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(e)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${r}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${s}(${p});\n      ${d}\n    }\n  `}(t,e):function(t,e){const n=t.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=e.texShape,i=t.shapeInfo.texShape,o=t.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!t.shapeInfo.isUniform&&o===l&&null==t.shapeInfo.flatOffset&&bi(i,a))return`\n      float ${r}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=mO(l),c=aO(t.shapeInfo.logicalShape,e.logicalShape),h=l-o;let p;const d=["x","y","z","w","u","v"];p=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((t=>`coords.${d[t+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${d[e+h]}`)).join(", "),`\n    float ${r}() {\n      ${u} coords = getOutputCoords();\n      ${p}\n      return get${s}(${f});\n    }\n  `}(t,e)),s}(t,e,s))).join("\n"),o=e.texShape,l=WR(),u=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let c,h,p=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${uO}\n    ${cO}\n    ${hO}\n  `}(l);return e.isPacked?(c=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,e);case 2:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(bi(t,e))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const s=Math.ceil(t[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[2]/2),r=s*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${r};\n      index -= b * ${r};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e);default:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[t.length-1]/2),r=s*Math.ceil(t[t.length-2]/2);let a=r,i="",o="b, r, c";for(let e=2;e<t.length-1;e++)a*=t[t.length-e-1],i=`\n      int b${e} = index / ${a};\n      index -= b${e} * ${a};\n    `+i,o=`b${e}, `+o;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${r};\n      index -= b * ${r};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${t.length}(${o});\n    }\n  `}(t,e)}}(e.logicalShape,o),h=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(l)):(c=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=e)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(t,e){return bi(t,e)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `:1===t[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===t[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=UR(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(t,e);case 4:return function(t,e){const n=UR(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e);case 5:return function(t,e){const n=UR(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=UR(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}var n}(e.logicalShape,o),h=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),s&&(p+=pO),[p,u,h,a,c,i,n].join("\n")}function oO(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[s,r]=t.shapeInfo.texShape;if(1===s&&1===r)return`\n      float ${n}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const[a,i]=t.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${a}, ${i}, ${dO(e)});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${fO(t)}\n      }\n    `;const s=t.shapeInfo.texShape,r=s[0],a=s[1];if(1===a&&1===r)return`\n      float ${n}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const i=dO(e);return 1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${r}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `:1===r?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${r}, ${a}, index + ${i});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t.shapeInfo.texShape;if(null!=r&&bi(e,r)){const t=r[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${r[1]}.0, ${t}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:a,keptDims:i}=Ti(e),o=a;if(o.length<e.length){const e=["row","col"];return`\n      ${oO(gO(t,o))}\n      float ${s}(int row, int col) {\n        return ${s}(${yO(e,i)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${fO(t)}\n      }\n    `;const l=r[0],u=r[1],c=dO(n);return 1===u?`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===l?`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${l}, ${u}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[1]*e[2],a=e[2],{newShape:i,keptDims:o}=Ti(e),l=i;if(l.length<e.length){const e=["row","col","depth"];return`\n        ${oO(gO(t,l))}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${yO(e,o)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${r}, ${a}, 1)));\n        ${fO(t)}\n      }\n    `;const u=t.shapeInfo.texShape,c=u[0],h=u[1],p=t.shapeInfo.flatOffset;if(h===r&&null==p)return`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===a&&null==p)return`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r} + col * ${a} + depth + ${dO(n)};\n        vec2 uv = uvFromFlat(${c}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(t);case 4:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[3],a=e[2]*r,i=e[1]*a,{newShape:o,keptDims:l}=Ti(e);if(o.length<e.length){const e=["row","col","depth","depth2"];return`\n      ${oO(gO(t,o))}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${yO(e,l)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${a}, ${r}, 1)));\n        ${fO(t)}\n      }\n    `;const u=t.shapeInfo.flatOffset,c=t.shapeInfo.texShape,h=c[0],p=c[1];if(p===i&&null==u)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===r&&null==u)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${a} +\n          depth * ${r} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${p}, index + ${dO(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[4],a=e[3]*r,i=e[2]*a,o=e[1]*i,{newShape:l,keptDims:u}=Ti(e);if(l.length<e.length){const e=["row","col","depth","depth2","depth3"];return`\n      ${oO(gO(t,l))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${yO(e,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${r})) +\n          depth3;\n        ${fO(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,p=h[0],d=h[1];if(d===o&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===r&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${r} + depth3 + ${dO(n)};\n      vec2 uv = uvFromFlat(${p}, ${d}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:a}=Ti(e);if(r.length<e.length){const e=["row","col","depth","depth2","depth3","depth4"];return`\n      ${oO(gO(t,r))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${yO(e,a)});\n      }\n    `}const i=e[5],o=e[4]*i,l=e[3]*o,u=e[2]*l,c=e[1]*u;if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${fO(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,d=p[0],f=p[1];if(f===c&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${dO(n)};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function lO(t){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name;return`\n    vec4 ${"get"+e.charAt(0).toUpperCase()+e.slice(1)}() {\n      return ${WR().texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),s=t.shapeInfo.texShape,r=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],a=WR();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${r[0]}, ${r[1]}, index);\n      return ${a.texture2D}(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t.shapeInfo.texShape,a=r[0],i=r[1],o=WR();if(null!=r&&bi(e,r))return`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const l=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(e[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(1===e[0]){const n=[1,2],r=["b","row","col"];return`\n        ${lO(gO(t,e.slice(1)))}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${yO(r,n)});\n        }\n      `}const i=a[0],o=a[1],l=Math.ceil(e[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${l*Math.ceil(e[1]/2)}, ${l}, b, row, col);\n      return ${WR().texture2D}(${n}, uv);\n    }\n  `}(t);default:return function(t){const e=t.shapeInfo.logicalShape,n=e.length,s=t.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=t.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],o=i[0],l=i[1],u=Math.ceil(e[n-1]/2);let c=u*Math.ceil(e[n-2]/2),h="int b, int row, int col",p=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let t=2;t<n-1;t++)h=`int b${t}, `+h,c*=e[n-t-1],p=`b${t} * ${c} + `+p;return`\n    vec4 ${r}(${h}) {\n      int index = ${p};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${o});\n      return ${WR().texture2D}(${s}, uv);\n    }\n  `}(t)}}const uO="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",cO="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",hO="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",pO="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function dO(t){return`offset${t}`}function fO(t){const e=t.name,n=yi(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function mO(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function gO(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function yO(t,e){return e.map((e=>t[e])).join(", ")}function bO(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach(((t,n)=>{const s=t.logicalShape,r=e[n],a=r.shape;if(!bi(s,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${a} must match`);if(t.isUniform&&r.isUniform)return;const i=t.texShape,o=r.isUniform?null:r.texData.texShape;if(!bi(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}const{addImpl:xO,bincountImpl:vO,bincountReduceImpl:wO,ceilImpl:kO,concatImpl:_O,expImpl:IO,expm1Impl:TO,floorImpl:NO,gatherV2Impl:CO,greaterImpl:SO,lessImpl:AO,linSpaceImpl:$O,logImpl:EO,maxImpl:RO,maximumImpl:OO,minimumImpl:DO,multiplyImpl:FO,negImpl:MO,prodImpl:LO,rangeImpl:zO,rsqrtImpl:PO,simpleAbsImpl:VO,sliceImpl:BO,stridedSliceImpl:WO,subImpl:UO,tileImpl:GO,topKImpl:jO,transposeImpl:HO,uniqueImpl:qO}=w;function XO(t,e){return["x","y","z","w","u","v"].slice(0,e).map((e=>`${t}.${e}`))}function KO(t,e){return 1===e?[t]:XO(t,e)}class YO{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=KO("rc",e),s=mO(e),r=function(t,e,n){if(1===t)return`rc > ${e[0]}`;let s="";for(let r=t-2;r<t;r++)s+=`${n[r]} >= ${e[r]}`,r<t-1&&(s+="||");return s}(e,t,n),a=function(t,e,n,s){if(1===t)return"";const r=s.slice(-2);return`\n    int r = ${r[0]};\n    int c = ${r[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${e};\n    bool rEdge = rp1 >= ${n};\n  `}(e,t[t.length-1],t[t.length-2],n),i=function(t,e){const n=t.length,s=function(t,e){const n=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let a=`${0===s?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let n=2;n<t;n++)a=`${e[e.length-1-n]},`+a;n.push(a)}return n}(n,e);return 1===n?`getA(rc),\n            rc + 1 >= ${t[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${s[0]}),\n          cEdge ? 0. : getA(${s[1]}),\n          rEdge ? 0. : getA(${s[2]}),\n          rEdge || cEdge ? 0. : getA(${s[3]})`}(t,n);this.userCode=`\n        void main() {\n          ${s} rc = getOutputCoords();\n\n          if(${r}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class ZO{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let t=0;t<4;t++){let e="thisRC = rc;";t%2==1&&(e+="thisRC.z += 1;"),t>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${t>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${t}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${t>0?"}":""}\n      `}var s;this.userCode=`\n      ${s=e,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${UR(["r","c","d"],s)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${GR(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${t[1]};\n        int cols = ${t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class JO{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const s=tD(e,n),r=eD(t,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const a=QO(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const t=this.freeTextures[r].shift();return this.usedTextures[r].push(t),t}let i;return s===fR.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):s===fR.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):s===fR.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):s===fR.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):s===fR.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(t,e,n,s){if(null==this.freeTextures)return;const r=tD(n,s),a=eD(e,r,s);a in this.freeTextures||(this.freeTextures[a]=[]);const i=QO(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),o=Xi().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=i):(this.freeTextures[a].push(t),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],u=l.indexOf(t);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));for(const t in this.usedTextures)this.usedTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function QO(t,e,n,s,r){const a=function(t,e){switch(t){case fR.PACKED_2X2_FLOAT32:return nO(e);case fR.PACKED_2X2_FLOAT16:return sO(e);case fR.UNPACKED_FLOAT32:return QR(e);case fR.UNPACKED_FLOAT16:return tO(e);case fR.PACKED_4X1_UNSIGNED_BYTE:return eO(e);default:throw new Error(`Unknown physical texture type ${t}`)}}(e,s);let i;if(r){const[e,n]=yR(t[0],t[1]);i=e*n}else{const[e,n]=mR(t[0],t[1]);i=e*n}const o=function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${e}`)}(n,a);return i*o}function tD(t,e){if(t===dR.UPLOAD)return fR.PACKED_2X2_FLOAT32;if(t===dR.RENDER||null==t)return function(t){return Xi().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?fR.PACKED_2X2_FLOAT32:fR.UNPACKED_FLOAT32:t?fR.PACKED_2X2_FLOAT16:fR.UNPACKED_FLOAT16}(e);if(t===dR.DOWNLOAD||t===dR.PIXELS)return fR.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function eD(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class nD{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const sD="if (isnan(x)) return x;",rD="return x;",aD="return abs(x);",iD="return (x >= 0.0) ? x : (exp(x) - 1.0);",oD=sD+"\n  return (x < 0.0) ? 0.0 : x;\n",lD=sD+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",uD="return x;",cD="return x;",hD="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",pD="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",dD="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n";class fD{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class mD{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=KO("rc",e),s=mO(e),r=function(t,e){if(1===t)return"rc";let n="";for(let s=0;s<t;s++)n+=e[s],s<t-1&&(n+=",");return n}(e,n),a=n.slice(-2),i=e<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${s} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const gD=Ag,yD={};class bD extends li{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!Xi().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=hR(Xi().getNumber("WEBGL_VERSION"));this.binaryCache=((e=Xi().getNumber("WEBGL_VERSION"))in yD||(yD[e]={}),yD[e]),this.gpgpu=new rO(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var e;this.textureManager=new JO(this.gpgpu),this.numMBBeforeWarning=null==Xi().global.screen?1024:Xi().global.screen.height*Xi().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new oi(this,pp())}nextDataId(){return bD.nextDataId++}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,n){if((Xi().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Xi().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:e,dtype:n,values:t,usage:dR.UPLOAD,refCount:1}),s}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){this.texData.get(t).refCount++}decRef(t){this.texData.has(t)&&this.texData.get(t).refCount--}move(t,e,n,s,r){if(Xi().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===s)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:s,values:e,usage:dR.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:n,dtype:s,complexTensorInfos:r,slice:a,shape:i,isPacked:o}=e;if(null!=a){let e;e=o?new fD(i,uD):new nD(i,uD);const n=this.runWebGLProgram(e,[{dataId:t,shape:i,dtype:s}],s),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===s)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=sc()),c="complex64"===s?mg(this.readSync(r.real.dataId),this.readSync(r.imag.dataId)):this.getValuesFromTexture(t),l&&(this.downloadWaitMs+=sc()-u),this.convertAndCacheOnCPU(t,c)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise((t=>e.push(t)))}const e=this.texData.get(t),{values:n,shape:s,slice:r,dtype:a,complexTensorInfos:i,isPacked:o}=e;if(null!=r){let e;e=o?new fD(s,uD):new nD(s,uD);const n=this.runWebGLProgram(e,[{dataId:t,shape:s,dtype:a}],a),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(t);if(!Xi().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Xi().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==a&&Xi().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(t);const e=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(e.texture,...gR(s))}if(this.pendingRead.set(t,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const t=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);u=mg(t[0],t[1])}else if(null==c)u=this.getValuesFromTexture(t);else{const t=yi(s);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,t)}null!=l&&this.disposeIntermediateTensorInfo(l);const h=this.convertAndCacheOnCPU(t,u),p=this.pendingRead.get(t);return this.pendingRead.delete(t),p.forEach((t=>t(h))),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&pp().removeDataId(t,this),this.pendingDeletes--),h}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map((t=>ac(t)))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return Oh(t.shape,t.dtype,n)}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!vR(n)){if(Xi().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:s}=this.texData.get(t),r=yi(e);if(Xi().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),s=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(s.texture,...gR(e)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),a}const a=Xi().getBool("WEBGL_PACK")&&!0===s,i=a?RR(e):e,o=a?new KR(i):new XR(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:t}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return Xi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(t){const e=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,t();const r=gi(this.activeTimers.map((t=>t.query))).filter((t=>null!=t)),a=gi(this.activeTimers.map((t=>t.name))).filter((t=>null!=t));this.activeTimers=e,s&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Xi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(r);i.kernelMs=function(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}(t),i.getExtraProfileInfo=()=>t.map(((t,e)=>({name:a[e],ms:t}))).map((t=>`${t.name}: ${t.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Xi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:sc(),endMs:null}}endTimer(t){return Xi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=sc(),t)}async getQueryTime(t){if(Xi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:n}=this.texData.get(t);return null!=n&&(this.disposeData(n.real.dataId,e),this.disposeData(n.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:n,texShape:s,usage:r,isPacked:a,slice:i}=this.texData.get(t),o=i&&i.origDataId||t,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=e&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(e,s,r,a)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return Xi().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=pp().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t,e=128){const n=this.getCPUBackend();return Xi().getBool("IS_TEST")||this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&t.every((t=>null==this.texData.get(t.dataId).texture&&yi(t.shape)<e))}getGPGPUContext(){return this.gpgpu}where(t){dg("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return gD(t.shape,e)}packedUnaryOp(t,e,n){const s=new fD(t.shape,e),r=this.compileAndRun(s,[t],n);return pp().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=VO(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(Xi().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,aD,t.dtype);const e=new nD(t.shape,aD),n=this.compileAndRun(e,[t]);return pp().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(t,e,n){let s;if("string"===e&&null!=n&&n.length>0&&Ei(n[0])){const r=n.map((t=>rc(t)));s=this.write(r,t,e)}else s=this.write(n,t,e);return this.texData.get(s).usage=null,{dataId:s,shape:t,dtype:e}}makeOutput(t,e,n){const{dataId:s}=this.makeTensorInfo(t,e,n);return pp().makeTensorFromDataId(s,t,e,this)}unpackTensor(t){const e=new mD(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new YO(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[$R(t.shape),...ER(t.shape)],s={dtype:t.dtype,shape:n,dataId:t.dataId},r=[$R(e),...ER(e)],a=new ZO(r,n),i=this.runWebGLProgram(a,[s],t.dtype,null,!0);return{dataId:i.dataId,shape:e,dtype:i.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:s,dtype:r}=e,a=RR(s);let i;return i=n?new qR(a):new HR(a),{dtype:r,shape:s,dataId:this.runWebGLProgram(i,[{shape:a,dtype:r,dataId:t}],r,null,!0).dataId}}runWebGLProgram(t,e,n,s,r=!1){const a=this.makeTensorInfo(t.outputShape,n),i=this.texData.get(a.dataId);if(t.packedOutput&&(i.isPacked=!0),t.outPackingScheme===pR.DENSE){const e=gR(t.outputShape);i.texShape=e.map((t=>2*t))}if(null!=t.outTexUsage&&(i.usage=t.outTexUsage),0===yi(a.shape))return i.values=Ni(a.dtype,0),a;const o=[],l=e.map((e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&yi(e.shape)<=Xi().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),o.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!DR(n.shape,e.shape)){const t=e,s=e.shape;e.shape=n.shape,e=this.packedReshape(e,s),o.push(e),n=this.texData.get(e.dataId),t.shape=s}return this.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}}));this.uploadToGPU(a.dataId);const u={shape:a.shape,texData:i,isUniform:!1},c=function(t,e,n){let s="";e.concat(n).forEach((t=>{const e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?"uniform":t.texData.texShape;s+=`${t.shape}_${n}_${e}`}));const r=t.userCode;let a=t.constructor.name;return a+="_"+s+"_"+r,a}(t,l,u),h=this.getAndSaveBinary(c,(()=>function(t,e,n,s){const r=e.userCode,a=n.map(((t,n)=>{const s={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(s.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:s}})),i=a.map((t=>t.shapeInfo)),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},l=iO(a,o,r,e.packedInputs),u=t.createProgram(l);let c=null;const h=t.getUniformLocation(u,"NAN",!1);1===Xi().getNumber("WEBGL_VERSION")&&(c=t.getUniformLocation(u,"INFINITY",!1));const p={};for(let n=0;n<e.variableNames.length;n++){const s=e.variableNames[n],r=!1;p[s]=t.getUniformLocation(u,s,r),p[`offset${s}`]=t.getUniformLocation(u,`offset${s}`,r)}return{program:e,source:l,webGLProgram:u,uniformLocations:p,inShapeInfos:i,outShapeInfo:o,infLoc:c,nanLoc:h}}(this.gpgpu,t,l,u))),p=null!=this.activeTimers;let d;p&&(d=this.startTimer()),function(t,e,n,s,r){bO(e.inShapeInfos,n),bO([e.outShapeInfo],[s]);const a=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?t.setOutputPackedMatrixTexture(a,i[0],i[1]):t.setOutputMatrixTexture(a,i[0],i[1]),t.setProgram(e.webGLProgram),1===Xi().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach(((n,s)=>{const r=e.program.variableNames[s],a=e.uniformLocations[r],i=e.uniformLocations[`offset${r}`];if(null!=a)if(n.isUniform)if(yi(n.shape)<2)t.gl.uniform1f(a,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(a,e)}else null!=n.texData.slice&&null!=i&&t.gl.uniform1i(i,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,a,s)})),null!=r&&r(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,h,l,u,s),o.forEach((t=>this.disposeIntermediateTensorInfo(t))),p&&(d=this.endTimer(d),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(d)}));const f=Xi().get("WEBGL_FLUSH_THRESHOLD");if(f>0){const t=sc();t-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=t)}if(!Xi().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===r){const t=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),t}return a}compileAndRun(t,e,n,s,r=!1){return n=n||e[0].dtype,this.runWebGLProgram(t,e,n,s,r)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Xi().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=fp((()=>{if(!Xi().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=Xi().getBool("DEBUG");Xi().set("DEBUG",!1);const e=this.abs(vp(1e-8)).dataSync()[0];if(Xi().set("DEBUG",t),e>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:s,values:r,texture:a,usage:i,isPacked:o}=e;if(null!=a)return;const l=null!=this.activeTimers;let u;l&&(u=sc());let c=e.texShape;if(null==c&&(c=function(t,e=!1){let n=Xi().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map(((e,n)=>n>=t.length-2?pi(t[n]):t[n]))).length&&(t=[2,t[0]])),2!==t.length){const e=Ti(t);t=e.newShape}let s=yi(t);if(t.length<=1&&s<=n)return[1,s];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=$R(t);let n=2,r=2;return t.length&&([n,r]=ER(t)),s=e*(n/2)*(r/2),vi(s).map((t=>2*t))}return vi(s)}(n,o),e.texShape=c),null!=r){const t=RR(n);let a,i=c[1],h=c[0];const p=r instanceof Uint8Array;o?([i,h]=yR(c[0],c[1]),a=new ZR(t,[h,i],p)):a=new YR(t,[h,i],p);const d=this.makeTensorInfo([h,i],s);this.texData.get(d.dataId).usage=p?dR.PIXELS:dR.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(d.dataId),i,h,r);const f=!0,m=this.runWebGLProgram(a,[d],s,null,f),g=this.texData.get(m.dataId);e.texture=g.texture,e.texShape=g.texShape,e.isPacked=g.isPacked,e.usage=g.usage,this.disposeIntermediateTensorInfo(d),this.texData.delete(m.dataId),e.values=null,l&&(this.uploadWaitMs+=sc()-u)}else{const t=this.acquireTexture(c,i,s,o);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:s}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error(`Unknown dtype ${e}`)}(e,s)),n.values}acquireTexture(t,e,n,s){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,s)}computeBytes(t,e){return t[0]*t[1]*$i(e)}}bD.nextDataId=0,Uc()&&bp("webgl",(()=>new bD),2);const xD="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class vD{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=cd(e,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const wD="\n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n";class kD{constructor(t,e,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=cd(e,n);const r=this.outputShape.length;let a="";if(s)if(0===r||1===yi(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${mO(r)} coords = getOutputCoords();\n        `,1===r)a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=KO("coords",r);a+=`\n            bool nextRowOutOfBounds =\n              (${t[r-2]} + 1) >= ${this.outputShape[r-2]};\n            bool nextColOutOfBounds =\n              (${t[r-1]} + 1) >= ${this.outputShape[r-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function _D(t){const{inputs:e,backend:n}=t,{x:s}=e;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const ID={kernelName:cl,backendName:"webgl",kernelFunc:_D};function TD(t){const{inputs:e,backend:n}=t,{real:s,imag:r}=e,a=n.makeTensorInfo(s.shape,"complex64"),i=n.texData.get(a.dataId),o=_D({inputs:{x:s},backend:n}),l=_D({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:l},a}const ND={kernelName:Io,backendName:"webgl",kernelFunc:TD},CD="return (a < 0.) ? b * a : a;",SD="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",AD={kernelName:gl,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{alpha:a}=s,i=n.makeTensorInfo([],"float32",ec(a,"float32")),o=Xi().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new kD(SD,r.shape,i.shape):new vD(CD,r.shape,i.shape),l=n.runWebGLProgram(o,[r,i],r.dtype);return n.disposeIntermediateTensorInfo(i),l}},$D="return (a < 0.) ? b * a : a;",ED="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",RD={kernelName:Zl,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s,alpha:r}=e,a=Xi().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new kD(ED,s.shape,r.shape):new vD($D,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)}},OD="if (isnan(x)) return x;";function DD({opSnippet:t,packedOpSnippet:e,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:a})=>{const{x:i}=r,o=a,l=s||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const t=o.texData.get(i.dataId),e=n(t.values,l);return o.makeTensorInfo(i.shape,l,e)}let u;return u=Xi().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=e?new fD(i.shape,e):new nD(i.shape,t),o.runWebGLProgram(u,[i],l)}}function FD({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(s&&"complex64"===l.dtype){const e=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[s,r]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,s]=e,r={dataId:n.dataId,dtype:n.dtype,shape:l.shape},a={dataId:s.dataId,dtype:s.dtype,shape:u.shape},i=new vD(t,l.shape,u.shape);return c.runWebGLProgram(i,[r,a],$c(n.dtype,s.dtype))})),a=TD({inputs:{real:s,imag:r},backend:c});return c.disposeIntermediateTensorInfo(s),c.disposeIntermediateTensorInfo(r),a}const h=a||$c(l.dtype,u.dtype);if(c.shouldExecuteOnCPU([l,u])&&null!=r){const t=c.texData.get(l.dataId),e=c.texData.get(u.dataId),[n,s]=r(l.shape,u.shape,t.values,e.values,h),a=c.makeTensorInfo(s,h);return c.texData.get(a.dataId).values=n,a}let p;return p=Xi().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=e?new kD(e,l.shape,u.shape,n):new vD(t,l.shape,u.shape),c.runWebGLProgram(p,[l,u],h)}}function MD(t,e=!1){if("linear"===t)return e?cD:rD;if("relu"===t)return e?pD:oD;if("elu"===t)return e?hD:iD;if("relu6"===t)return e?dD:lD;if("prelu"===t)return e?ED:$D;if("leakyrelu"===t)return e?SD:CD;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class LD{constructor(t,e,n,s=!1,r=!1,a=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=s?t[1]:t[2],c=Math.ceil(u/2),h=s?"i * 2, rc.y":"rc.y, i * 2",p=r?"rc.z, i * 2":"i * 2, rc.z",d=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";t[0]<e[0]?b=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(x=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${f[0]});\n          result += (${d[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}const zD={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class PD{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=cd(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const VD="return a * b;";function BD(t){const{inputs:e,backend:n}=t,{a:s,b:r}=e,a=$c(s.dtype,r.dtype);if("complex64"===s.dtype){const t=n.texData.get(s.dataId),e=n.texData.get(r.dataId),a=new PD(zD.REAL,s.shape,r.shape),i=new PD(zD.IMAG,s.shape,r.shape),o=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape}],l=n.runWebGLProgram(a,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=TD({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([s,r])){const t=n.texData.get(s.dataId),e=n.texData.get(r.dataId),[i,o]=FO(s.shape,r.shape,t.values,e.values,a),l=n.makeTensorInfo(o,a);return n.texData.get(l.dataId).values=i,l}let i;return i=Xi().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new kD(VD,s.shape,r.shape):new vD(VD,s.shape,r.shape),n.runWebGLProgram(i,[s,r],a)}const WD={kernelName:Vl,backendName:"webgl",kernelFunc:BD};function UD(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{shape:a}=s,i=n,o=yi(r.shape),l=_i(a,o),u=yi(l);di(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(r.dataId);return!c.isPacked||DR(r.shape,l)||null!==c.texture&&DR(c.shape,l)?(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function(t,e,n){const s=[$R(t.shape),...ER(t.shape)],r={dtype:t.dtype,shape:s,dataId:t.dataId},a=[$R(e),...ER(e)],i=new ZO(a,s),o=n.runWebGLProgram(i,[r],t.dtype,null,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}(r,l,i)}const GD={kernelName:su,backendName:"webgl",kernelFunc:UD};class jD{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=t;this.outputShape=[s,a];const i=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=e){const t=1/e;l=`sumValue += dot(values * ${xi(t)?t.toPrecision(2):t}, ones);`}let u="";r%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class HD{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=t;this.outputShape=[s,a];let i="0.0",o="";"prod"===e?i="1.0":"min"===e?(i="1.0 / 1e-20",o="min"):"max"===e&&(i="-1.0 / 1e-20",o="max");let l=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?l="sumValue":"prod"===e?l="prodValue":"all"===e?l="allValue":"any"===e&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,p="vec4";"all"===e?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===e&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";r%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function qD(t,e,n,s){const r=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],s=Xm(n);e.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return e}(t.shape);let a=t;for(let i=0;i<r.length;i++){const{inSize:o,windowSize:l,outSize:u}=r[i];let c,h;c="mean"===n?0===i?new jD({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},o):new jD({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u}):new HD({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},n),h=a,a=s.runWebGLProgram(c,[a],e),h.dataId!==t.dataId&&s.disposeIntermediateTensorInfo(h)}return a}class XD{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[e[s]];this.outputShape=n,this.rank=n.length;const s=mO(this.rank),r=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let e=0;e<t.length;e++)s[t[e]]=n[e];return s.join()}(e);this.userCode=`\n    void main() {\n      ${s} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}}class KD{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[e[s]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=mO(this.rank),r=XO("rc",this.rank),a=new Array(this.rank);for(let t=0;t<e.length;t++)a[e[t]]=r[t];const i=`vec2(${a.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${s} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function YD(t,e,n){const s=Xi().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new KD(t.shape,e):new XD(t.shape,e);return n.runWebGLProgram(s,[t],t.dtype)}function ZD(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a,keepDims:i}=s;return function(t,e,n,s){const r=e,a=t.shape.length,i=Ii(r,t.shape);let o=i;const l=Vd(o,a),u=null!=l;let c=t;u&&(c=YD(t,l,s),o=Wd(o.length,a)),Pd("sum",o,a);const[h,p]=Ld(c.shape,o);let d=h;n&&(d=zd(h,i));const f=yi(p),m=UD({inputs:{x:c},attrs:{shape:[yi(t.shape)/f,f]},backend:s}),g=qD(m,Ec(t.dtype),"sum",s),y=UD({inputs:{x:g},attrs:{shape:d},backend:s});return s.disposeIntermediateTensorInfo(m),s.disposeIntermediateTensorInfo(g),u&&s.disposeIntermediateTensorInfo(c),y}(r,a,i,n)}const JD={kernelName:ku,backendName:"webgl",kernelFunc:ZD};function QD(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{perm:a}=s,i=n,o=r.shape.length,l=new Array(o);for(let t=0;t<l.length;t++)l[t]=r.shape[a[t]];let u;if(i.shouldExecuteOnCPU([r])){const t=i.texData.get(r.dataId).values,e=HO(t,r.shape,r.dtype,a,l);u=i.makeTensorInfo(l,r.dtype),i.texData.get(u.dataId).values=e}else u=YD(r,a,i);return u}const tF={kernelName:Mu,backendName:"webgl",kernelFunc:QD},eF=1e3;function nF({a:t,b:e,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=t.shape.length,c=e.shape.length,h=n?t.shape[u-2]:t.shape[u-1],p=s?e.shape[c-1]:e.shape[c-2],d=n?t.shape[u-1]:t.shape[u-2],f=s?e.shape[c-2]:e.shape[c-1],m=t.shape.slice(0,-2),g=e.shape.slice(0,-2),y=yi(m),b=yi(g);di(u>=2&&c>=2&&(y===b||1===y||1===b),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`));const x=(y>b?t.shape.slice(0,-2):e.shape.slice(0,-2)).concat([d,f]);di(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${s} must match.`));const v=n?[y,h,d]:[y,d,h],w=s?[b,f,p]:[b,p,f],k=UD({inputs:{x:t},backend:r,attrs:{shape:v}}),_=UD({inputs:{x:e},backend:r,attrs:{shape:w}}),I=[k,_],T=Math.max(y,b),N=n?k.shape[1]:k.shape[2],C=null!=a,S=null!=i,A="leakyrelu"===l,$=null!=l?MD(l,!0):null;let E;if((1===d||1===f)&&N>eF&&!1===(C||S||A||null!=$)){let t=k,e=_;n&&(t=QD({inputs:{x:k},backend:r,attrs:{perm:[0,2,1]}}),I.push(t)),s&&(e=QD({inputs:{x:_},backend:r,attrs:{perm:[0,2,1]}}),I.push(e));const a=1===f;let i=t;1!==f&&(i=UD({inputs:{x:t},backend:r,attrs:{shape:[T,N,1]}}),I.push(i));const o=1===f?2:1;let l=e;a&&(l=UD({inputs:{x:e},backend:r,attrs:{shape:[T,1,N]}}),I.push(l));const u=BD({inputs:{a:i,b:l},backend:r});E=ZD({inputs:{x:u},backend:r,attrs:{axis:o,keepDims:!0}}),I.push(u)}else{const l=$c(t.dtype,e.dtype),u=new LD(v,w,[T,d,f],n,s,C,$,S,A),c=[k,_];if(null!=a&&c.push(a),S&&c.push(i),A){const t=r.makeTensorInfo([],"float32",ec(o,"float32"));c.push(t),I.push(t)}E=r.runWebGLProgram(u,c,l)}const R=UD({inputs:{x:E},backend:r,attrs:{shape:x}});I.push(E);for(const t of I)r.disposeIntermediateTensorInfo(t);return R}const sF={kernelName:Gu,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:a,bias:i,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return nF({a:r,b:a,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},rF="return abs(x);",aF={kernelName:Qi,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s}=e;if(n.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const t=n.texData.get(s.dataId),e=VO(t.values);return n.makeTensorInfo(s.shape,s.dtype,e)}let r;return r=Xi().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new fD(s.shape,rF):new nD(s.shape,rF),n.runWebGLProgram(r,[s],s.dtype)}},iF=DD({opSnippet:sD+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),oF={kernelName:to,backendName:"webgl",kernelFunc:iF},lF=DD({opSnippet:sD+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),uF={kernelName:eo,backendName:"webgl",kernelFunc:lF},cF="return a + b;",hF=FD({opSnippet:cF,packedOpSnippet:cF,supportsComplex:!0,cpuKernelImpl:xO}),pF={kernelName:no,backendName:"webgl",kernelFunc:hF};class dF{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`float v${t} = get${t}AtOutCoords();`)}));const s=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${s};\n        setOutput(result);\n      }\n    `}}class fF{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)}));const s=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${s};\n        setOutput(result);\n      }\n    `}}const mF={kernelName:so,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:s}=e,r=n;if(1===r.length)return _D({inputs:{x:r[0]},backend:s});if(r.length>Xi().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(r.length/2),n=t({inputs:r.slice(0,e),backend:s}),a=t({inputs:r.slice(e),backend:s});return t({inputs:[n,a],backend:s})}const a=r.map((t=>t.dtype)).reduce(((t,e)=>$c(t,e))),i=r.map((t=>t.shape)),o=Xi().getBool("WEBGL_PACK")?new fF(r[0].shape,i):new dF(r[0].shape,i);return s.runWebGLProgram(o,r,a)}},gF={kernelName:ro,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a,keepDims:i}=s,o=r.shape.length,l=Ii(a,r.shape);let u=l;const c=Vd(u,o);let h=r;null!=c&&(h=QD({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Wd(u.length,o)),Pd("all",u,o);const[p,d]=Ld(h.shape,u),f=UD({inputs:{x:h},backend:n,attrs:{shape:[-1,yi(d)]}}),m=qD(f,f.dtype,"all",n);let g;return g=UD(i?{inputs:{x:m},backend:n,attrs:{shape:zd(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},yF={kernelName:ao,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a,keepDims:i}=s,o=r.shape.length,l=Ii(a,r.shape);let u=l;const c=Vd(u,o);let h=r;null!=c&&(h=QD({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Wd(u.length,o)),Pd("any",u,o);const[p,d]=Ld(h.shape,u),f=UD({inputs:{x:h},backend:n,attrs:{shape:[-1,yi(d)]}}),m=qD(f,f.dtype,"any",n);let g;return g=UD(i?{inputs:{x:m},backend:n,attrs:{shape:zd(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class bF{constructor(t,e,n){this.variableNames=["A"];const{windowSize:s,batchSize:r,outSize:a}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];const i="max"===e?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${s}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class xF{constructor(t,e,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,di(t.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const r=t[t.length-1],a=Math.ceil(r/e);this.outputShape=t.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=mO(o),u=KO("coords",o);let c,h;if(1===a){h=o+1;const t=mO(h);c=`\n        ${t} sourceLocR = ${t}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${t} sourceLocG = ${t}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${t} sourceLocA = ${t}(${u.join()}, 0);\n        --${u[o-1]};\n        ${t} sourceLocB = ${t}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),d="."+p[h-1],f=p.map((t=>"int "+t)),m=KO("sourceLocR",h-1).concat("inIdx.r"),g=KO("sourceLocG",h-1).concat("inIdx.g"),y=KO("sourceLocB",h-1).concat("inIdx.b"),b=KO("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=s?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},\n          sourceLocB${d}, sourceLocA${d}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function vF(t,e,n,s=null){let r=e.shape[0],a=e.shape[1];null!=s&&(r=s.shape[0],a=s.shape[1]);const i=Xm(a),o={windowSize:i,inSize:a,batchSize:r,outSize:Math.ceil(a/i)},l=new bF(o,n,null==s),u=[e];null!=s&&u.push(s);const c=t.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=vF(t,e,n,c);return t.disposeIntermediateTensorInfo(c),h}function wF(t,e,n,s=null){const r=null!=s?s.shape:e.shape,a=Xm(r[r.length-1]),i=new xF(r,a,n,null==s),o=null==s?[e]:[e,s],l=t.runWebGLProgram(i,o,"int32");if(l.shape.length===e.shape.length){const s=wF(t,e,n,l);return t.disposeIntermediateTensorInfo(l),s}return l}function kF(t,e,n,s){const r=[n];if(Pd("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,e.shape.length),!Xi().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const n=[],[a,i]=Ld(e.shape,r),o=yi(i),l=UD({inputs:{x:e},backend:t,attrs:{shape:[-1,o]}});n.push(l);const u=vF(t,l,s);n.push(u);const c=UD({inputs:{x:u},backend:t,attrs:{shape:a}});return n.forEach((e=>t.disposeIntermediateTensorInfo(e))),c}return wF(t,e,s)}const _F={kernelName:io,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a}=s;let i=Ii(a,r.shape);const o=Vd(i,r.shape.length);let l=r;const u=[];null!=o&&(l=QD({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Wd(i.length,l.shape.length)),Pd("argMax",[i[0]],l.shape.length);const c=kF(n,l,i[0],"max");return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}},IF={kernelName:oo,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a}=s;let i=Ii(a,r.shape);const o=Vd(i,r.shape.length);let l=r;const u=[];null!=o&&(l=QD({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Wd(i.length,l.shape.length)),Pd("argMin",[i[0]],l.shape.length);const c=kF(n,l,i[0],"min");return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}},TF=DD({opSnippet:sD+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),NF={kernelName:lo,backendName:"webgl",kernelFunc:TF},CF=DD({opSnippet:sD+"return log(x + sqrt(x * x + 1.0));"}),SF={kernelName:uo,backendName:"webgl",kernelFunc:CF},AF=DD({opSnippet:sD+"\n  return atan(x);\n"}),$F={kernelName:co,backendName:"webgl",kernelFunc:AF},EF=FD({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),RF={kernelName:po,backendName:"webgl",kernelFunc:EF},OF=DD({opSnippet:sD+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),DF={kernelName:ho,backendName:"webgl",kernelFunc:OF};class FF{constructor(t,e,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const a=t.filterWidth,i=t.strideHeight,o=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.top,d=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,g=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${s?r?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(b="avgValue / count");const x=4*Math.floor(a/4),v=a%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class MF{constructor(t,e,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const a=t.filterWidth,i=t.strideDepth,o=t.strideHeight,l=t.strideWidth,u=t.dilationDepth,c=t.dilationHeight,h=t.dilationWidth,p=t.effectiveFilterDepth,d=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,g=t.padInfo.top,y=t.padInfo.left;this.outputShape=t.outShape;const b="avg"===e;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${s?r?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(v="avgValue / count");const w=4*Math.floor(a/4),k=a%4,_=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${_}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${_}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${_}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${_}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}const LF={kernelName:fo,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;VR(r,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;di(zp(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Sp(r.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&bi(u.inShape,u.outShape))return _D({inputs:{x:r},backend:n});const c=new FF(u,"avg",!1);return n.runWebGLProgram(c,[r],"float32")}},zF={kernelName:go,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s,c=Ap(r.shape,a,i,[1,1,1],o,l,u),h=new MF(c,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};class PF{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,s=t.strideHeight,r=t.strideWidth,a=t.dilationHeight,i=t.dilationWidth,o=t.effectiveFilterHeight,l=t.effectiveFilterWidth,u=o-1-t.padInfo.top,c=l-1-t.padInfo.left,h=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class VF{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,s=t.filterWidth,r=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,h=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=c-1-t.padInfo.front,f=h-1-t.padInfo.top,m=p-1-t.padInfo.left,g=1/(e*n*s);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const BF={kernelName:yo,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:a}=e,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=Ap(i.shape,o,l,[1,1,1],u,c),p=new VF(h);return n.runWebGLProgram(p,[r],i.dtype)}},WF={kernelName:mo,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:a}=e,i=a;VR([r,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=Sp(i.shape,o,l,1,u),h=new PF(c);return n.runWebGLProgram(h,[r],i.dtype)}},UF={kernelName:bo,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:a}=e,{transposeA:i,transposeB:o}=s;return nF({a:r,b:a,transposeA:i,transposeB:o,backend:n})}};class GF{constructor(t,e,n,s,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],cd(t,e),cd(t,n);let i="0.0";null!=s&&(cd(t,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=r&&(cd(t,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class jF{constructor(t,e,n,s,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],cd(t,e),cd(t,n);let i="vec4(0.0)";null!=s&&(cd(t,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=r&&(cd(t,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const HF={kernelName:al,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,mean:r,variance:a,offset:i,scale:o}=t;di(r.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),di(null==i||r.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),di(null==o||r.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[s,r,a];let c=null;null!=i&&(c=i.shape,u.push(i));let h=null;null!=o&&(h=o.shape,u.push(o));const p=Xi().getBool("WEBGL_PACK_NORMALIZATION")?new jF(s.shape,r.shape,a.shape,c,h,l):new GF(s.shape,r.shape,a.shape,c,h,l);return e.runWebGLProgram(p,u,u[0].dtype)}};class qF{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=mO(this.rank),n=`uniform int start[${this.rank}];`,s=function(t){if(1===t)return"sourceLoc";if(t<=6)return XF.slice(0,t).map((t=>"sourceLoc."+t)).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let r;r=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map(((t,e)=>`sourceLoc.${XF[e]} = start[${e}] + coords.${XF[e]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${r}\n        setOutput(getSource(${s}));\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const XF=["x","y","z","w","u","v"];class KF{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=mO(this.rank),n=KO("coords",this.rank),s=KO("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${s[this.rank-1]};\n        result.y = ${a};\n        --${s[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${s[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${s[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map(((t,e)=>`start[${e}]`)).join()});`:t.map(((t,e)=>`${s[e]} = ${n[e]} + start[${e}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}function YF(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:a,size:i}=s,[o,l]=op(r,a,i);if(qh(r,o,l),0===yi(l))return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const t=n.texData.get(r.dataId),e=BO(t.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,e)}const{isPacked:u}=n.texData.get(r.dataId),c=ap(r.shape,o,l);if(u||!c){const t=Xi().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new KF(l):new qF(l),e=t.getCustomSetupFunc(o);return n.runWebGLProgram(t,[r],r.dtype,e)}return n.uploadToGPU(r.dataId),function(t,e,n,s){const r=s.texData.get(t.dataId),a=s.makeTensorInfo(n,t.dtype),i=s.texData.get(a.dataId);Object.assign(i,r),i.refCount=1,i.shape=n,i.dtype=t.dtype;let o=ip(e,Mi(t.shape));r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||t.dataId};const l=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,l+1),a}(r,o,l,n)}const ZF={kernelName:mu,backendName:"webgl",kernelFunc:YF},JF={kernelName:xo,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:a,crops:i}=s;di(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((t,e)=>t*e)),l=Ym(r.shape,a,o),u=Zm(l.length,a.length),c=Jm(r.shape,a,o),h=Qm(i,a.length),p=tg(c,i,a.length),d=[],f=UD({inputs:{x:r},backend:n,attrs:{shape:l}}),m=QD({inputs:{x:f},backend:n,attrs:{perm:u}}),g=UD({inputs:{x:m},backend:n,attrs:{shape:c}}),y=YF({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return d.push(f),d.push(m),d.push(g),d.forEach((t=>n.disposeIntermediateTensorInfo(t))),y}},QF={kernelName:vo,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,weights:a}=e,{size:i}=s,o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=vO(o,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}},tM=FD({opSnippet:"return float(a != b);",dtype:"bool"}),eM={kernelName:Wl,backendName:"webgl",kernelFunc:tM};function nM(t){const{inputs:e,backend:n}=t,{input:s}=e;return _D({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.real},backend:n})}const sM={kernelName:tu,backendName:"webgl",kernelFunc:nM},rM={kernelName:wo,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:s,attrs:r}=e,{x:a}=n,{dtype:i}=r;if("complex64"===i){if("complex64"===a.dtype)return _D({inputs:{x:a},backend:s});const e=Xd(a.shape),n=t({inputs:{x:a},backend:s,attrs:{dtype:"float32"}}),r=TD({inputs:{real:n,imag:e},backend:s});return e.dispose(),s.disposeIntermediateTensorInfo(n),r}if("complex64"===a.dtype){const e=nM({inputs:{input:a},backend:s}),n=t({inputs:{x:e},backend:s,attrs:{dtype:i}});return s.disposeIntermediateTensorInfo(e),n}if(!Si(a.dtype,i)){const t=_D({inputs:{x:a},backend:s});return{dataId:t.dataId,shape:t.shape,dtype:i}}if("int32"===i)return function(t,e){const n=new nD(t.shape,"return float(int(x));"),s=e.runWebGLProgram(n,[t],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}(a,s);if("bool"===i){const t=s.makeTensorInfo([],"bool",Ni("bool",1)),e=tM({inputs:{a,b:t},backend:s});return s.disposeIntermediateTensorInfo(t),e}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},aM="return ceil(x);",iM=DD({opSnippet:aM,packedOpSnippet:aM,cpuKernelImpl:kO}),oM={kernelName:ko,backendName:"webgl",kernelFunc:iM};class lM{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,s)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(s,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(s,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class uM{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,s)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(s,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(s,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}const cM={kernelName:_o,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{clipValueMin:a,clipValueMax:i}=s;let o;o=Xi().getBool("WEBGL_PACK_CLIP")?new uM(r.shape):new lM(r.shape);const l=o.getCustomSetupFunc(a,i);return n.runWebGLProgram(o,[r],r.dtype,l)}};class hM{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function pM(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}const dM={kernelName:To,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s}=e,r=n.texData.get(s.dataId),a=new hM(s.shape),i=[pM(s,r.complexTensorInfos.real),pM(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class fM{constructor(t){this.outputShape=[],this.outputShape=Hm(t,1),this.variableNames=t.map(((t,e)=>`T${e}`));const e=new Array(t.length-1);e[0]=t[0][1];for(let n=1;n<e.length;n++)e[n]=e[n-1]+t[n][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let t=1;t<e.length;t++){const s=e[t-1];n.push(`else if (yC < ${e[t]}) setOutput(getT${t}(yR, yC-${s}));`)}const s=e.length,r=e[e.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class mM{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Hm(t,e);const n=this.outputShape,s=n.length,r=mO(s),a=KO("coords",s),i=["x","y","z","w","u","v"].slice(0,s);this.variableNames=t.map(((t,e)=>`T${e}`));const o=new Array(t.length-1);o[0]=t[0][e];for(let n=1;n<o.length;n++)o[n]=o[n-1]+t[n][e];const l=i[e],u=i.slice(-2),c=i.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let t=1;t<o.length;t++){const e=o[t-1];h+=`\n        if (${l} < ${o[t]}  && ${l} >= ${o[t-1]}) {\n          return getChannel(\n            getT${t}(${gM(i,l,e)}),\n            vec2(${gM(u,l,e)}));\n        }`}const p=o.length,d=o[o.length-1];h+=`\n        return getChannel(\n          getT${p}(${gM(i,l,d)}),\n          vec2(${gM(u,l,d)}));`,this.userCode=`\n      float getValue(${i.map((t=>"int "+t))}) {\n        ${h}\n      }\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[s-1]} = ${a[s-1]} + 1;\n        if (${a[s-1]} < ${n[s-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[s-2]} = ${a[s-2]} + 1;\n        if (${a[s-2]} < ${n[s-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[s-1]} = ${a[s-1]} - 1;\n        if (${a[s-2]} < ${n[s-2]} &&\n            ${a[s-1]} < ${n[s-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function gM(t,e,n){const s=t.indexOf(e);return t.map(((t,e)=>e===s?`${t} - ${n}`:t)).join()}function yM(t){const{inputs:e,backend:n}=t,{input:s}=e;return _D({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.imag},backend:n})}const bM={kernelName:pl,backendName:"webgl",kernelFunc:yM};function xM(t,e,n){const s=t[0].dtype;if("complex64"===s){const s=t.map((t=>nM({inputs:{input:t},backend:n}))),r=t.map((t=>yM({inputs:{input:t},backend:n}))),a=xM(s,e,n),i=xM(r,e,n),o=TD({inputs:{real:a,imag:i},backend:n});return s.forEach((t=>n.disposeIntermediateTensorInfo(t))),r.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}if("string"===s){const{tensors2D:r,outShape:a}=vM(t,e,n),i=r.map((t=>({vals:n.readSync(t.dataId),shape:t.shape}))),o=1===r[0].shape[0],l=_O(i,a,s,o),u=Hm(t.map((t=>t.shape)),e),c=n.makeTensorInfo(u,s,l);return r.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}if(t.length>Xi().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const s=Math.floor(t.length/2),r=xM(t.slice(0,s),e,n),a=xM(t.slice(s),e,n),i=xM([r,a],e,n);return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}if(Xi().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].shape.length>1){const r=new mM(t.map((t=>t.shape)),e);return n.runWebGLProgram(r,t,s)}const{tensors2D:r,outShape:a}=vM(t,e,n),i=new fM(r.map((t=>t.shape))),o=n.runWebGLProgram(i,r,s);r.forEach((t=>n.disposeIntermediateTensorInfo(t)));const l=UD({inputs:{x:o},attrs:{shape:a},backend:n});return n.disposeIntermediateTensorInfo(o),l}function vM(t,e,n){const s=Hm(t.map((t=>t.shape)),e);return{tensors2D:t.map((t=>UD({inputs:{x:t},attrs:{shape:[-1,yi(t.shape.slice(e))]},backend:n}))),outShape:s}}function wM(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s,a=Ii(r,e[0].shape)[0],i=Hm(e.map((t=>t.shape)),a);if(0===yi(i))return n.makeTensorInfo(i,e[0].dtype,[]);const o=e.filter((t=>yi(t.shape)>0));return 1===o.length?_D({inputs:{x:o[0]},backend:n}):(jm(o.map((t=>t.shape)),a),xM(o,a,n))}const kM={kernelName:No,backendName:"webgl",kernelFunc:wM};class _M{constructor(t,e=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const a=t.padInfo.top,i=t.padInfo.left,o=t.strideHeight,l=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,h=t.filterHeight,p=t.filterWidth,d=4*Math.floor(t.inChannels/4),f=t.inChannels%4,m="channelsLast"===t.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class IM{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,s=t.padInfo.left,r=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.filterDepth,h=t.filterHeight,p=t.filterWidth,d=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${a}, ${i});\n      const ivec3 pads = ivec3(${e}, ${n}, ${s});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class TM{constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:s,inChannels:r,strideWidth:a,strideHeight:i,padInfo:o,outWidth:l,dilationWidth:u,dilationHeight:c,dataFormat:h}=n,{left:p,top:d}=o,f=r*s,m=WR(),g="channelsLast"===h,y=g?0:1,b=g?1:2;let x="";for(let n=0;n<=1;n++)for(let s=0;s<=1;s++)x+=`\n          blockIndex = rc.y + ${s};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${t[1]} && pos < ${t[0]}) {\n            offsetY = int(blockIndex / (${l})) * ${i} - ${d};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${e[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${l}.) * ${a}. - ${p}.);\n              d1 = offsetX + ${u} * (int(mod(float(pos), ${f}.) / ${r}.));\n\n              if(d1 < ${e[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${r}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+s}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+s}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}function NM({x:t,filter:e,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const l=t.shape,u=s.texData.get(t.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],p=n.outChannels,d="channelsLast"===n.dataFormat;let f;const m=[],g=(1===h||1===p)&&c>eF,y=l[2]%2!=0&&!!u.isPacked;if(!g&&Xi().getBool("WEBGL_LAZILY_UNPACK")&&Xi().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&y){const c=d?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),h={dataId:t.dataId,shape:[1,c,n.inChannels],dtype:t.dtype},p=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,di(DR(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const g=UD({inputs:{x:e},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(g);const y=nF({a:h,b:g,backend:s,transposeA:!1,transposeB:!1,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),b=s.texData.get(y.dataId);di(b.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=p,b.shape=n.outShape,f=_D({inputs:{x:y},backend:s}),f.shape=n.outShape,m.push(y)}else{const u=UD({inputs:{x:t},backend:s,attrs:{shape:[1,d?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],n.inChannels]}}),c=UD({inputs:{x:e},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=nF({a:u,b:c,transposeA:!1,transposeB:!1,backend:s,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i});f=UD({inputs:{x:h},backend:s,attrs:{shape:n.outShape}}),m.push(u),m.push(c),m.push(h)}for(const t of m)s.disposeIntermediateTensorInfo(t);return f}function CM({x:t,filter:e,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:p,dataFormat:d}=n,f="channelsLast"===d,m=l*u*c,g=p*h,y=[m,g],b=[],x=UD({inputs:{x:t},backend:s,attrs:{shape:t.shape.slice(1)}}),v=UD({inputs:{x:e},backend:s,attrs:{shape:[1,m,yi(e.shape)/m]}});b.push(x),b.push(v);const w=new TM(y,x.shape,n),k=s.runWebGLProgram(w,[x],"float32"),_=UD({inputs:{x:k},backend:s,attrs:{shape:[1,y[0],y[1]]}});b.push(k),b.push(_);const I=null!=r,T=null!=a,N="leakyrelu"===o,C=o?MD(o,!0):null,S=new LD(_.shape,v.shape,[1,g,n.outChannels],!0,!1,I,C,T,N),A=[_,v];if(r&&A.push(r),T&&A.push(a),N){const t=s.makeTensorInfo([],"float32",ec(i,"float32"));A.push(t),b.push(t)}const $=s.runWebGLProgram(S,A,"float32"),E=UD({inputs:{x:$},backend:s,attrs:{shape:f?[1,p,h,n.outChannels]:[1,n.outChannels,p,h]}});b.push($);for(const t of b)s.disposeIntermediateTensorInfo(t);return E}const SM={kernelName:Co,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:a}=e,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=Pp(l),p=$p(r.shape,a.shape,i,u,o,c,!1,h);let d;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(Xi().getBool("WEBGL_CONV_IM2COL")&&1===r.shape[0])d=CM({x:r,filter:a,convInfo:p,backend:n});else{const t=new _M(p);d=n.runWebGLProgram(t,[r,a],"float32")}else d=NM({x:r,filter:a,convInfo:p,backend:n});const f=UD({inputs:{x:d},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(d),f}};class AM{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,s=t.padInfo.top,r=t.padInfo.left,a="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${s};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class $M{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,s=t.strideHeight,r=t.strideWidth,a="channelsLast"===t.dataFormat,i=e-1-t.padInfo.top,o=n-1-t.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class EM{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,s=t.strideWidth,r=t.padInfo.front,a=t.padInfo.top,i=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${r};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${s} - ${i};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class RM{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,s=t.filterWidth,r=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=e-1-t.padInfo.front,l=n-1-t.padInfo.top,u=s-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${s}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${s} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const OM={kernelName:So,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:a}=e,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=Pp(l),p=$p(r.shape,c,i,1,o,u,!1,h),d=new AM(p);return n.runWebGLProgram(d,[r,a],"float32")}},DM={kernelName:Ao,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:a}=e,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=Pp(u),p=$p(i,a.shape,o,1,l,c,!1,h),d=new $M(p);return n.runWebGLProgram(d,[r,a],"float32")}},FM={kernelName:$o,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:a}=e,{strides:i,pad:o,dilations:l}=s,u=Ep(r.shape,a.shape,i,l,o),c=new IM(u);return n.runWebGLProgram(c,[r,a],"float32")}},MM={kernelName:Eo,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:a}=e,{strides:i,pad:o,filterShape:l}=s,u=Ep(r.shape,l,i,1,o),c=new EM(u);return n.runWebGLProgram(c,[r,a],"float32")}},LM={kernelName:Ro,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:a}=e,{pad:i,strides:o,inputShape:l}=s,u=Ep(l,a.shape,o,1,i),c=new RM(u);return n.runWebGLProgram(c,[r,a],"float32")}},zM=DD({opSnippet:OD+"\n  return cos(x);\n"}),PM={kernelName:Oo,backendName:"webgl",kernelFunc:zM},VM=DD({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),BM={kernelName:Do,backendName:"webgl",kernelFunc:VM};class WM{constructor(t,e,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=t,[u]=e,[c,h]=n;this.outputShape=[u,c,h,l];const p="bilinear"===s?1:0,[d,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[b,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const UM={kernelName:Mo,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:s}=t,{image:r,boxes:a,boxInd:i}=e,{cropSize:o,method:l,extrapolationValue:u}=s,c=new WM(r.shape,a.shape,o,l,u);return n.runWebGLProgram(c,[r,a,i],"float32")}};class GM{constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const s=t.length,r=e?"0.0":`getX(${jM(s,"coords")})`,a=t[t.length-1];let i="",o="";e?(i=n?"end != "+(a-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${a}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${mO(s)} coords = getOutputCoords();\n        int end = ${HM(s,"coords")};\n        float val = ${r};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${HM(s,"coords")} = idx;\n          val += getX(${jM(s,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.index&&(this.index=e.getUniformLocation(n,"index")),e.gl.uniform1f(this.index,t)}}}function jM(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}function HM(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.y`;if(3===t)return`${e}.z`;if(4===t)return`${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}const qM={kernelName:Fo,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a,exclusive:i,reverse:o}=s,l=r.shape.length,u=Vd([a],l);let c=r;null!=u&&(c=QD({inputs:{x:r},backend:n,attrs:{perm:u}}));const h=Wd(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${r.shape.length-1} but got axis=${a}`);const p=c.shape[h];let d=_D({inputs:{x:c},backend:n});for(let t=0;t<=Math.ceil(Math.log2(p))-1;t++){const e=new GM(c.shape,!1,o),s=e.getCustomSetupFunc(t),r=d;d=n.runWebGLProgram(e,[d],d.dtype,s),n.disposeIntermediateTensorInfo(r)}if(i){const t=new GM(c.shape,i,o),e=d;d=n.runWebGLProgram(t,[d],d.dtype),n.disposeIntermediateTensorInfo(e)}if(null!=u){const t=QD({inputs:{x:d},backend:n,attrs:{perm:Bd(u)}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),t}return d}},XM={kernelName:Lo,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,weights:a}=e,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const t=n.readSync(r.dataId),e=n.readSync(a.dataId),s=vO(t,e,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,s)}if(2===r.shape.length){const t=n.bufferSync(r),e=n.bufferSync(a),s=wO(t,e,i,o);return n.makeTensorInfo(s.shape,a.dtype,s.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};class KM{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const YM={kernelName:zo,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockSize:a,dataFormat:i}=s;di(a>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${a}`));const o=r.shape[0],l="NHWC"===i?r.shape[1]:r.shape[2],u="NHWC"===i?r.shape[2]:r.shape[3],c="NHWC"===i?r.shape[3]:r.shape[1],h=l*a,p=u*a,d=c/(a*a),f=new KM("NHWC"===i?[o,h,p,d]:[o,d,h,p],a,i);return n.runWebGLProgram(f,[r],r.dtype)}};class ZM{constructor(t,e=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const a=t.inHeight,i=t.inWidth,o=t.padInfo.top,l=t.padInfo.left,u=t.strideHeight,c=t.strideWidth,h=t.dilationHeight,p=t.dilationWidth,d=t.filterHeight,f=t.filterWidth,m=t.outChannels/t.inChannels;let g="",y="";n&&(g=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,y="result = activation(result);");const b=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${h};\n\n          if (xR < 0 || xR >= ${a}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${p};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${b}\n        ${y}\n        setOutput(result);\n      }\n    `}}class JM{constructor(t,e=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const a=t.inHeight,i=t.inWidth,o=t.padInfo.top,l=t.padInfo.left,u=t.strideHeight,c=t.strideWidth,h=t.dilationHeight,p=t.dilationWidth,d=t.filterHeight,f=t.filterWidth,m=f;let g="int xR; int xC; int xCOffset;";for(let t=0;t<d;t++)for(let e=0;e<f;e++)g+=`\n          vec4 xTexelR${t}C${2*e} = vec4(0.);\n          vec4 wR${t}C${e} = vec4(0.);\n          vec4 xR${t}C${e} = vec4(0.);`;for(let t=0;t<d;t++)for(let e=0;e<m;e++){const n=2*e;if(g+=`\n          xR = xRCorner + ${t*h};\n          xC = xCCorner + ${n*p};\n        `,1===c){if(n<f&&(g+=l%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    xTexelR${t}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${t}C${n} = vec4(previous.zw, xTexelR${t}C${n}.xy);\n                } else {\n                  xR${t}C${n} = vec4(0, 0, xTexelR${t}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${a} && xC >= 0 && xC < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xR${t}C${n} = xTexelR${t}C${n};\n              `,n+1<f)){const e=l%2==0?pi(p):p;p%2==0&&l%2==1||p%2!=0&&l%2!=1?(g+=`\n                  xCOffset = xC + ${l%2} + ${e};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,p>1&&(g+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${a} &&\n                      xCOffset >= 0 && xCOffset < ${i}) {\n                      xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${t}C${n} = vec4(0.);\n                    }\n                  `),g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.xy);\n                `):g+=`\n                  xCOffset = xC + ${e};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${t}C${n+1} = xTexelR${t}C${n+2};\n                `}}else n<f&&(g+=`\n              if(xR >= 0 && xR < ${a}) {\n            `,l%2==1?(g+=`\n                xCOffset = xC + 1 - ${c};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${i}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n              `,n+1<f&&(g+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${c};\n                  if(xCOffset >= 0 && xCOffset < ${i}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${t}C${n+1} = vec4(xTexelR${t}C${n+2}.xy, final.xy);\n                `)):(g+=`\n                if(xC >= 0 && xC < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${c};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.xy, xTexelR${t}C${n+2}.xy);\n              `,n+1<f&&(g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n                `)),g+="}");n<f&&(g+=`\n            vec4 wTexelR${t}C${n} = getW(${t}, ${n}, d1, q);\n            wR${t}C${n} = vec4(wTexelR${t}C${n}.xz, wTexelR${t}C${n}.xz);\n          `,n+1<f&&(g+=`\n              vec4 wTexelR${t}C${n+1} = getW(${t}, ${n+1}, d1, q);\n              wR${t}C${n+1} =\n                vec4(wTexelR${t}C${n+1}.xz, wTexelR${t}C${n+1}.xz);`))}for(let t=0;t<d;t++)for(let e=0;e<f;e++)g+=`dotProd += xR${t}C${e} * wR${t}C${e};`;let y="",b="";n&&(y=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,b="result = activation(result);");const x=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${g}\n\n        vec4 result = dotProd;\n        ${x}\n        ${b}\n        setOutput(result);\n      }\n    `}}const QM={kernelName:Po,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:a}=e,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=s;let c=l;null==c&&(c=[1,1]),di(zp(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=$p(r.shape,a.shape,i,c,o,u,!0);let p;return p=Xi().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new JM(h):new ZM(h),n.runWebGLProgram(p,[r,a],"float32")}};class tL{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,s=t.padInfo.top,r=t.padInfo.left,a=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${s};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class eL{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,s=t.strideHeight,r=t.strideWidth,a=e-1-t.padInfo.top,i=n-1-t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const nL={kernelName:Vo,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:a}=e,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s,h=$p(r.shape,c,i,o,l,u,!0),p=new tL(h);return n.runWebGLProgram(p,[r,a],"float32")}},sL={kernelName:Bo,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:a}=e,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s,h=$p(c,a.shape,i,o,l,u,!0),p=new eL(h);return n.runWebGLProgram(p,[r,a],"float32")}};class rL{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const aL={kernelName:Wo,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s}=e,r=[...s.shape,...s.shape],a=yi(s.shape),i=UD({inputs:{x:s},backend:n,attrs:{shape:[a]}}),o=new rL(a),l=n.runWebGLProgram(o,[i],i.dtype),u=UD({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class iL{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=t,{top:c,left:h}=s;this.userCode=`\n      const ivec2 strides = ivec2(${r}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${e}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const oL={kernelName:Uo,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:a}=e,{strides:i,pad:o,dilations:l}=s,u=Cp(r.shape,a.shape,i,o,"NHWC",l);let c;const h=new iL(u);c=n.runWebGLProgram(h,[r,a],"float32");const p=UD({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),p}},lL=DD({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),uL={kernelName:qo,backendName:"webgl",kernelFunc:lL},cL={kernelName:Xo,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n}=t,{dy:s,y:r}=e,a=Xi().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new kD("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",s.shape,r.shape):new vD("return (b >= 1.0) ? a : a * (b + 1.0);",s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)}},hL=FD({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),pL={kernelName:Yo,backendName:"webgl",kernelFunc:hL},dL=DD({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${og};\n  float a1 = ${lg};\n  float a2 = ${ug};\n  float a3 = ${cg};\n  float a4 = ${hg};\n  float a5 = ${pg};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),fL={kernelName:Ko,backendName:"webgl",kernelFunc:dL},mL="return exp(x);",gL=DD({opSnippet:mL,packedOpSnippet:mL,cpuKernelImpl:IO}),yL={kernelName:Zo,backendName:"webgl",kernelFunc:gL};function bL(t){const{inputs:e,attrs:n,backend:s}=t,{dim:r}=n,{input:a}=e,i=a.shape.length,o=a.shape.slice();let l=r;return r<0&&(di(-(i+1)<=r,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+r+1),o.splice(l,0,1),UD({inputs:{x:a},backend:s,attrs:{shape:o}})}const xL={kernelName:Jo,backendName:"webgl",kernelFunc:bL},vL="return exp(x) - 1.0;",wL=DD({opSnippet:vL,packedOpSnippet:vL,cpuKernelImpl:TO}),kL={kernelName:Qo,backendName:"webgl",kernelFunc:wL};class _L{constructor(t,e,n){this.variableNames=["real","imag"];const s=e[1];this.outputShape=e;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0";let i;if("real"===t)i="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${r};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${s});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${s}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function IL(t,e,n){const s=n.texData.get(t.dataId),r=yi(t.shape),a=t.shape[t.shape.length-1],i=UD({inputs:{x:t},backend:n,attrs:{shape:[r/a,a]}}),o=i.shape,l=new _L("real",o,e),u=new _L("imag",o,e),c=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:o},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),p=n.runWebGLProgram(u,c,"float32"),d=TD({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const f=UD({inputs:{x:d},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(d),f}const TL={kernelName:tl,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:s}=e;return IL(s,!1,n)}};class NL{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}function CL(t){const{backend:e,attrs:n}=t,{shape:s,value:r}=n;let{dtype:a}=n;if(a=a||Oi(r),"string"===a){const t=Ci(a,yi(s));return t.fill(r),e.makeTensorInfo(s,a,t)}{const t=new NL(s,r),n=t.getCustomSetupFunc(r);return e.runWebGLProgram(t,[],a,n)}}const SL={kernelName:el,backendName:"webgl",kernelFunc:CL};class AL{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const $L={kernelName:nl,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,s=e,r=new AL(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},EL="return floor(x);",RL=DD({opSnippet:EL,packedOpSnippet:EL,cpuKernelImpl:NO}),OL={kernelName:sl,backendName:"webgl",kernelFunc:RL},DL=FD({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),FL={kernelName:rl,backendName:"webgl",kernelFunc:DL};class ML{constructor(t){this.variableNames=["A"];const e=WR(),[n,s]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class LL{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=WR(),[n,s]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${s}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const zL={kernelName:Wu,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t;let{pixels:r}=e;const{numChannels:a}=s,i="undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,[l,u]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,l],h=[u,l,a];(o||i)&&(null==PL&&(PL=document.createElement("canvas").getContext("2d")),PL.canvas.width=l,PL.canvas.height=u,PL.drawImage(r,0,0,l,u),r=PL.canvas);const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=dR.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),r);const d=Xi().getBool("WEBGL_PACK")?new LL(h):new ML(h),f=n.runWebGLProgram(d,[p],"int32");return n.disposeData(p.dataId),f}};let PL;const VL={kernelName:ju,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:a,bias:i,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s,m=Pp(c),g=$p(r.shape,a.shape,l,h,u,p,!1,m);let y;const b=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(Xi().getBool("WEBGL_CONV_IM2COL")&&1===r.shape[0])y=CM({x:r,filter:a,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});else{const t=null!=i,e=null!=o,s="leakyrelu"===d,l=d?MD(d,!1):null,u=new _M(g,t,l,e,s),c=[r,a];if(i&&c.push(i),o&&c.push(o),s){const t=n.makeTensorInfo([],"float32",ec(f,"float32"));c.push(t),b.push(t)}y=n.runWebGLProgram(u,c,"float32")}else y=NM({x:r,filter:a,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});const x=UD({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((t=>n.disposeIntermediateTensorInfo(t))),x}},BL={kernelName:Hu,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:a,bias:i,preluActivationWeights:o}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:p,leakyreluAlpha:d}=s,f=[];let m=c;null==m&&(m=[1,1]),di(zp(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const g=$p(r.shape,a.shape,l,m,u,h,!0),y=Xi().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=p?MD(p,y):null,x=[r,a],v=null!=i,w=null!=o,k="leakyrelu"===p;if(v&&x.push(i),w&&x.push(o),k){const t=n.makeTensorInfo([],"float32",ec(d,"float32"));x.push(t),f.push(t)}let _;_=y?new JM(g,v,b,w,k):new ZM(g,v,b,w,k);const I=n.runWebGLProgram(_,x,"float32");return f.forEach((t=>n.disposeIntermediateTensorInfo(t))),I}};class WL{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const s=mO(e.length),r=mO(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${s} strides = ${s}(${this.strides});\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const UL={kernelName:ol,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:s,indices:r}=e,a=r.shape,i=a[a.length-1],[o,l,u,c]=eg(s,r),h=UD({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),p=UD({inputs:{x:s},backend:n,attrs:{shape:[yi(s.shape)/u,u]}}),d=new WL(i,c,[l,u]),f=n.runWebGLProgram(d,[p,h],p.dtype),m=UD({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};class GL{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const n=mO(this.rank),s=function(t,e){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let e=0;e<t.length;e++)2===e?s.push("int(getIndices(resRC.x, resRC.z))"):s.push(`${n[e]}`);return s.join()}(t);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}const jL={kernelName:il,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,indices:a}=e,{axis:i,batchDims:o}=s,l=Ng(r,a,Ii(i,r.shape)[0],o),u=yi(a.shape),c=[],h=UD({inputs:{x:r},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=UD({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,u/l.batchSize]}});c.push(h),c.push(p);const d=[l.batchSize,l.outerSize,u/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const t=n.bufferSync(p),e=n.bufferSync(h),s=CO(e,t,d);return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(l.outputShape,s.dtype,s.values)}const f=new GL(h.shape,d),m=n.runWebGLProgram(f,[h,p],h.dtype);c.push(m);const g=UD({inputs:{x:m},backend:n,attrs:{shape:l.outputShape}});return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),g}},HL=FD({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:SO,dtype:"bool"}),qL={kernelName:ll,backendName:"webgl",kernelFunc:HL},XL=FD({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),KL={kernelName:ul,backendName:"webgl",kernelFunc:XL},YL={kernelName:hl,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:s}=e;return IL(s,!0,n)}},ZL=DD({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),JL={kernelName:dl,backendName:"webgl",kernelFunc:ZL},QL=DD({opSnippet:"return float(isinf(x));",dtype:"bool"}),tz={kernelName:fl,backendName:"webgl",kernelFunc:QL},ez=DD({opSnippet:"return float(isnan(x));",dtype:"bool"}),nz={kernelName:ml,backendName:"webgl",kernelFunc:ez},sz=FD({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:AO,dtype:"bool"}),rz={kernelName:yl,backendName:"webgl",kernelFunc:sz},az=FD({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),iz={kernelName:bl,backendName:"webgl",kernelFunc:az},oz={kernelName:xl,backendName:"webgl",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:s,stop:r,num:a}=n,i=$O(s,r,a);return e.makeTensorInfo([i.length],"float32",i)}},lz=DD({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:EO}),uz={kernelName:vl,backendName:"webgl",kernelFunc:lz},cz=DD({opSnippet:"return log(1.0 + x);"}),hz={kernelName:wl,backendName:"webgl",kernelFunc:cz},pz=FD({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),dz={kernelName:kl,backendName:"webgl",kernelFunc:pz},fz=DD({opSnippet:"return float(!(x >= 1.0));"}),mz={kernelName:_l,backendName:"webgl",kernelFunc:fz},gz=FD({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),yz={kernelName:Il,backendName:"webgl",kernelFunc:gz};class bz{constructor(t,e,n,s,r){this.variableNames=["x"],this.outputShape=[];const a=e,i=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class xz{constructor(t,e,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=e,i=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const vz={kernelName:Tl,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{depthRadius:a,bias:i,alpha:o,beta:l}=s,u=Xi().getBool("WEBGL_PACK_NORMALIZATION")?new xz(r.shape,a,i,o,l):new bz(r.shape,a,i,o,l);return n.runWebGLProgram(u,[r],r.dtype)}};class wz{constructor(t,e,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${s}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${s})\n                * float(${r})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const kz={kernelName:Nl,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r,y:a,dy:i}=e,{depthRadius:o,bias:l,alpha:u,beta:c}=s,h=new wz(r.shape,o,l,u,c);return n.runWebGLProgram(h,[r,a,i],r.dtype)}};function _z(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{reductionIndices:a,keepDims:i}=s,o=r.shape.length,l=Ii(a,r.shape);let u=l;const c=Vd(u,o),h=null!=c,p=n.shouldExecuteOnCPU([r]);let d=r;if(h){if(p){const t=n.texData.get(d.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=r.shape[c[t]];const s=HO(t,r.shape,r.dtype,c,e);d=n.makeTensorInfo(e,r.dtype),n.texData.get(d.dataId).values=s}else d=YD(r,c,n);u=Wd(u.length,o)}Pd("max",u,o);const[f,m]=Ld(d.shape,u);let g,y=f;if(i&&(y=zd(f,l)),p){const t=n.texData.get(d.dataId).values,e=RO(t,yi(m),y,r.dtype);g=n.makeTensorInfo(y,r.dtype),n.texData.get(g.dataId).values=e}else g=function(t,e,n,s){const r=yi(e),a=UD({inputs:{x:t},attrs:{shape:[yi(t.shape)/r,r]},backend:s}),i=qD(a,t.dtype,"max",s),o=UD({inputs:{x:i},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}(d,m,y,n);return h&&n.disposeIntermediateTensorInfo(d),g}const Iz={kernelName:Cl,backendName:"webgl",kernelFunc:_z},Tz=FD({opSnippet:xD+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+wD+"\n  return result;\n",cpuKernelImpl:OO}),Nz={kernelName:Sl,backendName:"webgl",kernelFunc:Tz},Cz={kernelName:Al,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;VR(r,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;di(zp(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Sp(r.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&bi(u.inShape,u.outShape))return _D({inputs:{x:r},backend:n});const c=new FF(u,"max",!1);return n.runWebGLProgram(c,[r],r.dtype)}},Sz={kernelName:El,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:a,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=s,c=Ap(r.shape,a,i,[1,1,1],o,u,l),h=new MF(c,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};class Az{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,s=t.dilationHeight,r=t.effectiveFilterHeight,a=t.effectiveFilterWidth,i=r-1-t.padInfo.top,o=a-1-t.padInfo.left,l=r*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class $z{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,s=t.strideWidth,r=t.dilationDepth,a=t.dilationHeight,i=t.dilationWidth,o=t.effectiveFilterDepth,l=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=o-1-t.padInfo.front,h=l-1-t.padInfo.top,p=u-1-t.padInfo.left,d=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Ez={kernelName:Rl,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:a}=e,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=Ap(i.shape,o,l,[1,1,1],u,c),p=new MF(h,"max",!0),d=n.runWebGLProgram(p,[i],i.dtype),f=new $z(h),m=n.runWebGLProgram(f,[r,d],i.dtype);return n.disposeIntermediateTensorInfo(d),m}},Rz={kernelName:$l,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:a,output:i}=e,o=a;VR([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,p=Sp(o.shape,l,u,1,c,h),d=new FF(p,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),m=new Az(p),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},Oz={kernelName:Ol,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=e,l=n;di(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const u=[1,1];di(zp(a,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=Sp(s.shape,r,a,u,i),[h,p]=function(t,e,n,s){let r=new FF(n,"max",!1);const a=s.runWebGLProgram(r,[t],"float32");return r=new FF(n,"max",!0,!0,e),[a,s.runWebGLProgram(r,[t],"float32")]}(s,o,c,l);return[h,p]}},Dz={kernelName:Dl,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{keepDims:r,axis:a}=e,i=n,o=s.shape.length,l=Ii(a,s.shape);let u=l;const c=Vd(u,o),h=null!=c,p=i.shouldExecuteOnCPU([s]),d=[];let f=s;if(h){if(p){const t=i.texData.get(f.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=s.shape[c[t]];const n=HO(t,s.shape,s.dtype,c,e);f=i.makeTensorInfo(e,s.dtype),i.texData.get(f.dataId).values=n}else f=YD(s,c,i);d.push(f),u=Wd(u.length,o)}Pd("sum",u,o);const[m,g]=Ld(f.shape,u);let y=m;r&&(y=zd(m,l));const b=function(t,e,n,s){const r=yi(e),a=UD({inputs:{x:t},attrs:{shape:[yi(t.shape)/r,r]},backend:s}),i=qD(a,"float32","mean",s),o=UD({inputs:{x:i},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(const t of d)i.disposeIntermediateTensorInfo(t);return b}},Fz={kernelName:Fl,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a,keepDims:i}=s,o=r.shape.length,l=Ii(a,r.shape);let u=l;const c=Vd(u,o);let h=r;null!=c&&(h=QD({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Wd(u.length,r.shape.length)),Pd("min",u,o);const[p,d]=Ld(h.shape,u),f=UD({inputs:{x:h},backend:n,attrs:{shape:[-1,yi(d)]}}),m=qD(f,f.dtype,"min",n);let g;return g=UD(i?{inputs:{x:m},backend:n,attrs:{shape:zd(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},Mz=FD({opSnippet:xD+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+wD+"\n  return result;\n",cpuKernelImpl:DO}),Lz={kernelName:Ml,backendName:"webgl",kernelFunc:Mz};class zz{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const s=t.length,r=mO(s),a=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l="reflect"===n?0:1;this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        for (int i = 0; i < ${s}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${r} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class Pz{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const s=t.length,r=mO(s),a=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=KO("rc",s),l=KO("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===s){const t=`\n        ${r} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${r} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${t}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const t=`\n        ${r} source = rc;\n        ${r} lt = ${r}(lessThan(source, start));\n        ${r} gte = ${r}(greaterThanEqual(source, end));\n        ${r} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${r} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${t}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[s-2]} += 1;\n        if(${o[s-2]} < ${this.outputShape[s-2]}) {\n          ${t}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[s-1]} += 1;\n          if(${u}) {\n            ${t}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const Vz={kernelName:Ll,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s}=t,{paddings:r,mode:a}=n,i=Xi().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Pz(s.shape,r,a):new zz(s.shape,r,a);return e.runWebGLProgram(i,[s],s.dtype)}},Bz=FD({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  "+wD+"\n  return result;\n"}),Wz={kernelName:zl,backendName:"webgl",kernelFunc:Bz};class Uz{constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}const Gz=FD({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),jz={kernelName:Ho,backendName:"webgl",kernelFunc:Gz},Hz="return a - b;",qz=FD({opSnippet:Hz,packedOpSnippet:Hz,supportsComplex:!0,cpuKernelImpl:UO}),Xz={kernelName:Su,backendName:"webgl",kernelFunc:qz};function Kz(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{dim:a}=s,i=Ii([a],r.shape),o=_z({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=zd(o.shape,i),u=UD({inputs:{x:o},backend:n,attrs:{shape:l}}),c=qz({inputs:{a:r,b:u},backend:n}),h=gL({inputs:{x:c},backend:n}),p=ZD({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),d=UD({inputs:{x:p},backend:n,attrs:{shape:l}}),f=Gz({inputs:{a:h,b:d},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),f}const Yz={kernelName:Tu,backendName:"webgl",kernelFunc:Kz},Zz={kernelName:Pl,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{numSamples:a,seed:i,normalized:o}=s,l=o?r:Kz({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new Uz(u,c,a),p=h.getCustomSetupFunc(i),d=n.runWebGLProgram(h,[l],"int32",p);return o||n.disposeIntermediateTensorInfo(l),d}},Jz="return -x;",Qz={kernelName:Bl,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s}=e;if(n.shouldExecuteOnCPU([s])){const t=n.texData.get(s.dataId),[e,r]=MO(t.values,s.shape,s.dtype);return n.makeTensorInfo(r,s.dtype,e)}let r;return r=Xi().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new fD(s.shape,Jz):new nD(s.shape,Jz),n.runWebGLProgram(r,[s],s.dtype)}},tP=im,eP={kernelName:Ul,backendName:"webgl",kernelFunc:function(t){dg("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:a}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s,u=n.readSync(r.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=tP(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},nP=om,sP={kernelName:Gl,backendName:"webgl",kernelFunc:function(t){dg("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:a}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),{selectedIndices:p,validOutputs:d}=nP(c,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},rP=lm,aP={kernelName:jl,backendName:"webgl",kernelFunc:function(t){dg("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:a}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),p=i,d=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=rP(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class iP{constructor(t,e,n,s){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${s}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const oP={kernelName:ql,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:s}=t,{indices:r}=e,{depth:a,onValue:i,offValue:o}=s,l=yi(r.shape),u=new iP(l,a,i,o),c=UD({inputs:{x:r},backend:n,attrs:{shape:[l]}}),h=n.runWebGLProgram(u,[c],r.dtype);n.disposeIntermediateTensorInfo(c);const p=UD({inputs:{x:h},backend:n,attrs:{shape:[...r.shape,a]}});return n.disposeIntermediateTensorInfo(h),p}};function lP(t){const{inputs:e,backend:n}=t,{x:s}=e;if("complex64"===s.dtype){const t=nM({inputs:{input:s},backend:n}),e=lP({inputs:{x:t},backend:n}),r=yM({inputs:{input:s},backend:n}),a=lP({inputs:{x:r},backend:n}),i=TD({inputs:{real:e,imag:a},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return CL({attrs:{shape:s.shape,dtype:s.dtype,value:"string"===s.dtype?"":0},backend:n})}const uP={kernelName:Vu,backendName:"webgl",kernelFunc:lP},cP={kernelName:Hl,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:s}=e,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const e=nM({inputs:{input:r},backend:s}),n=t({inputs:{x:e},backend:s}),a=yM({inputs:{input:r},backend:s}),i=lP({inputs:{x:a},backend:s}),o=TD({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(e),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return CL({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:s})}},hP={kernelName:Xl,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s;if(1===e.length)return bL({inputs:{input:e[0]},backend:n,attrs:{dim:r}});const a=e[0].shape,i=e[0].dtype;e.forEach((t=>{fi(a,t.shape,"All tensors passed to stack must have matching shapes"),di(i===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=wM({inputs:e.map((t=>{const e=bL({inputs:{input:t},backend:n,attrs:{dim:r}});return o.push(e),e})),backend:n,attrs:{axis:r}});return o.forEach((t=>n.disposeIntermediateTensorInfo(t))),l}};class pP{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const s=t.length,r=mO(s),a=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n      uniform float value;\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n        uniform float value;\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}class dP{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const s=t.length,r=mO(s),a=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=KO("rc",s),l=KO("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h=[`${r} rc = outputLoc;`,`${o[s-1]} += 1;\n       if(${u}) {\n      `,1===s?"":`}\n       rc = outputLoc;\n       ${o[s-2]} += 1;\n       if(${o[s-2]} < ${this.outputShape[s-2]}) {`,1===s?"":`  ${o[s-1]} += 1;\n         if(${u}) {`],p=1===s?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let t=0,e=1===s?2:4;t<e;t++)d+=`\n        ${h[t]}\n        if (${p}) {\n          result[${t}] = float(value);\n        } else {\n          ${r} source = rc - start;\n          result[${t}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;d+=1===s?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n      uniform float value;\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}const fP=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{paddings:a,constantValue:i}=s,o=Xi().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new dP(r.shape,a,i):new pP(r.shape,a,i),l=o.getCustomSetupFunc(i);return n.runWebGLProgram(o,[r],r.dtype,l)},mP={kernelName:Kl,backendName:"webgl",kernelFunc:fP},gP=FD({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  "+wD+"\n  return result;\n"}),yP={kernelName:Yl,backendName:"webgl",kernelFunc:gP},bP={kernelName:Jl,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a,keepDims:i}=s,o=r.shape.length,l=[],u=Ii(a,r.shape);let c=u;const h=Vd(c,o);let p,d=r;if(null!=h&&(d=QD({inputs:{x:r},backend:n,attrs:{perm:h}}),c=Wd(c.length,o),l.push(d)),Pd("prod",c,o),n.shouldExecuteOnCPU([d])){const t=n.texData.get(d.dataId).values,{outVals:e,outShape:s,outDtype:r}=LO(d.shape,d.dtype,t,c);p=n.makeTensorInfo(s,r,e)}else{const[t,e]=Ld(d.shape,c),s=yi(e),a=UD({inputs:{x:d},backend:n,attrs:{shape:[-1,s]}}),i=qD(a,Ec(r.dtype),"prod",n);p=UD({inputs:{x:i},backend:n,attrs:{shape:t}}),l.push(a),l.push(i)}if(i){l.push(p);const t=zd(p.shape,u);p=UD({inputs:{x:p},backend:n,attrs:{shape:t}})}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),p}},xP=t=>{const{backend:e,attrs:n}=t,{start:s,stop:r,step:a,dtype:i}=n,o=zO(s,r,a,i);return e.makeTensorInfo([o.length],i,o)},vP={kernelName:Ql,backendName:"webgl",kernelFunc:xP},wP=DD({opSnippet:"return 1.0 / x;"}),kP={kernelName:eu,backendName:"webgl",kernelFunc:wP},_P=DD({opSnippet:sD+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),IP={kernelName:nu,backendName:"webgl",kernelFunc:_P},TP=DD({opSnippet:sD+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),NP={kernelName:lu,backendName:"webgl",kernelFunc:TP};class CP{constructor(t,e,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=t;this.outputShape=[a,e,n,l];const u=[s&&e>1?i-1:i,s&&n>1?o-1:o],c=[s&&e>1?e-1:e,s&&n>1?n-1:n];let h;h=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class SP{constructor(t,e,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=t;this.outputShape=[a,e,n,l];const u=[s&&e>1?i-1:i,s&&n>1?o-1:o],c=[s&&e>1?e-1:e,s&&n>1?n-1:n];let h;h=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const AP={kernelName:iu,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:a,halfPixelCenters:i,size:o}=s,[l,u]=o,c=Xi().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new SP(r.shape,l,u,a,i):new CP(r.shape,l,u,a,i);return n.runWebGLProgram(c,[r],"float32")}};class $P{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,s,r]=e,[,a,i]=t,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const EP={kernelName:ou,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:a}=e,{alignCorners:i}=s,o=new $P(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class RP{constructor(t,e,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=t;this.outputShape=[a,e,n,l];const u=[s&&e>1?i-1:i,s&&n>1?o-1:o],c=[s&&e>1?e-1:e,s&&n>1?n-1:n],h=s?"0.5":"0.0";let p;p=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}const OP={kernelName:ru,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:a,halfPixelCenters:i,size:o}=s,[l,u]=o,c=new RP(r.shape,l,u,a,i);return n.runWebGLProgram(c,[r],r.dtype)}};class DP{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,s,r]=e,[,a,i]=t,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const FP={kernelName:au,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:a}=e,{alignCorners:i}=s,o=new DP(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class MP{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const s=t.map(((n,s)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(s))).join(","),r=mO(n);this.userCode=`\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}class LP{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const s=KO("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,i=mO(n);function o(n){const s=t.map(((s,r)=>function(n,s){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${s[n]} - 1`:`${s[n]}`}(r,n)));return`getChannel(getX(${s.join(",")}), vec2(${s.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return o(t)}(s.slice())};\n          if(${r}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",o(t)}(s.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",o(t)}(s.slice())};\n            if(${r}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",o(t)}(s.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const zP={kernelName:uu,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{dims:a}=s,i=r.shape.length,o=Ii(a,r.shape);if(0===i)return _D({inputs:{x:r},backend:n});const l=Xi().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new LP(r.shape,o):new MP(r.shape,o);return n.runWebGLProgram(l,[r],r.dtype)}};class PP{constructor(t,e){this.variableNames=["Image"],this.outputShape=[];const n=t[1],s=t[2];this.outputShape=t;let r="";r="number"==typeof e?`float outputValue = ${e.toFixed(2)};`:`\n        vec3 fill = vec3(${e.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        uniform vec4 params;\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${r}\n          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}getCustomSetupFunc(t,e,n,s){return(r,a)=>{null==this.paramsLoc&&(this.paramsLoc=r.getUniformLocationNoThrow(a,"params")),r.gl.uniform4f(this.paramsLoc,t,e,n,s)}}}const VP={kernelName:Uu,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,{radians:r,fillValue:a,center:i}=e,o=n,l=new PP(s.shape,a),[u,c]=Km(i,s.shape[1],s.shape[2]),h=l.getCustomSetupFunc(u,c,Math.sin(r),Math.cos(r));return o.runWebGLProgram(l,[s],s.dtype,h)}},BP=DD({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),WP={kernelName:cu,backendName:"webgl",kernelFunc:BP},UP=DD({opSnippet:"return inversesqrt(x);",cpuKernelImpl:PO}),GP={kernelName:hu,backendName:"webgl",kernelFunc:UP};class jP{constructor(t,e,n,s,r,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=mO(r.length),l=mO(a.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===s?h="i":2===s&&(h="i, coords[1]");const p=`getUpdates(${h})`,d=e>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${r});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const HP={kernelName:pu,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{indices:r,updates:a}=e,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=rg(0,r,i),p=[h/u,u];if(0===h)return n.makeTensorInfo(i,r.dtype);const d=UD({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),f=UD({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new jP(l,o,d.shape.length,f.shape.length,c,p),y=n.runWebGLProgram(g,[f,d,m],f.dtype),b=UD({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class qP{constructor(t,e,n){let s,r;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",s="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let s=0;s<e.length;s++)i.push(`${n[s]}`),s<t&&a.push(`${n[s]}`);s=a.join(),r=i.join()}const a=mO(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${s});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}}const XP={kernelName:du,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:s,t:r,e:a}=e,i=new qP(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[s,r,a],$c(r.dtype,a.dtype))}},KP=DD({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${ag};\n  float scale = ${ig};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),YP={kernelName:fu,backendName:"webgl",kernelFunc:KP},ZP=DD({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),JP={kernelName:xu,backendName:"webgl",kernelFunc:ZP},QP=DD({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),tV={kernelName:bu,backendName:"webgl",kernelFunc:QP},eV=DD({opSnippet:OD+"\n  return sin(x);\n"}),nV={kernelName:gu,backendName:"webgl",kernelFunc:eV},sV=DD({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),rV={kernelName:yu,backendName:"webgl",kernelFunc:sV},aV=DD({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),iV={kernelName:vu,backendName:"webgl",kernelFunc:aV},oV={kernelName:_u,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:a,paddings:i}=s;di(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((t,e)=>t*e)),l=[[0,0]];l.push(...i);for(let t=1+a.length;t<r.shape.length;++t)l.push([0,0]);const u=[],c=fP({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),h=Ym(c.shape,a,o,!1),p=Zm(h.length,a.length,!1),d=Jm(c.shape,a,o,!1),f=UD({inputs:{x:c},backend:n,attrs:{shape:h}}),m=QD({inputs:{x:f},backend:n,attrs:{perm:p}}),g=UD({inputs:{x:m},backend:n,attrs:{shape:d}});return u.push(c),u.push(f),u.push(m),u.forEach((t=>n.disposeIntermediateTensorInfo(t))),g}},lV={kernelName:Au,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{sparseIndices:r,sparseValues:a,defaultValue:i}=e,{outputShape:o}=s,{sliceRank:l,numUpdates:u,strides:c,outputSize:h}=rg(0,r,o),p=new jP(u,l,r.shape.length,a.shape.length,c,[h,1],!1),d=n.runWebGLProgram(p,[a,r,i],a.dtype),f=UD({inputs:{x:d},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(d),f}},uV={kernelName:Iu,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{numOrSizeSplits:a,axis:i}=s,o=Ii(i,r.shape)[0],l=_g(r,a,o),u=r.shape.length,c=new Array(u).fill(0),h=r.shape.slice();return l.map((t=>{const e=[...h];e[o]=t;const s=YF({inputs:{x:r},backend:n,attrs:{begin:c,size:e}});return c[o]+=t,s}))}},cV=DD({opSnippet:"return sqrt(x);"}),hV={kernelName:wu,backendName:"webgl",kernelFunc:cV},pV={kernelName:Cu,backendName:"webgl",kernelFunc:DD({opSnippet:"return x * x;"})},dV="return (a - b) * (a - b);",fV=FD({opSnippet:dV,packedOpSnippet:dV}),mV={kernelName:Nu,backendName:"webgl",kernelFunc:fV},gV={kernelName:Bu,backendName:"webgl",kernelFunc:function({inputs:t,attrs:e,backend:n}){const{x:s}=t,r=sD+`\n    return x > 0.0 ? 1.0 : float(${e.alpha});\n  `,a=new nD(s.shape,r);return n.runWebGLProgram(a,[s],s.dtype)}};class yV{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const s=n.length,r=mO(n.length),a=mO(n.length);let i="";if(1===s)i="coords * strides + begin";else{let t=0;i=n.map(((e,s)=>(t++,1===n.length?`coords * strides[${s}] + begin[${s}]`:`coords[${t-1}] * strides[${s}] + begin[${s}]`))).join(",")}this.userCode=`\n      ${r} begin = ${r}(${t});\n      ${r} strides = ${r}(${e});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const bV={kernelName:$u,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=s,{nonStrided:d,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=lp(r.shape,a,i,o,l,u,c,h,p),x=UD({inputs:{x:r},backend:n,attrs:{shape:y}});let v;if(d){const t=YF({inputs:{x},backend:n,attrs:{begin:f,size:g}});v=UD({inputs:{x:t},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(t)}else if(b.some((t=>0===t)))v=n.makeTensorInfo(b,r.dtype,[]);else if(n.shouldExecuteOnCPU([x])){const t=n.texData.get(x.dataId).values,e=Oh(x.shape,x.dtype,t),s=WO(b,e,m,f);v=n.makeTensorInfo(b,x.dtype,s.values)}else{const t=new yV(f,m,b);v=n.runWebGLProgram(t,[x],x.dtype)}const w=UD({inputs:{x:v},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),w}},xV=DD({opSnippet:"return tan(x);"}),vV={kernelName:Eu,backendName:"webgl",kernelFunc:xV},wV=DD({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),kV={kernelName:Ru,backendName:"webgl",kernelFunc:wV};class _V{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[s]*e[s];this.outputShape=n,this.rank=n.length;const s=mO(this.rank),r=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let e=0;e<t.length;e++)s.push(`imod(${n[e]}, ${t[e]})`);return s.join()}(t);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function IV(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{reps:a}=s;if("string"===r.dtype){const t=n.readSync(r.dataId).map((t=>ac(t))),e=Oh(r.shape,r.dtype,t),s=GO(e,a);return n.makeTensorInfo(s.shape,s.dtype,s.values)}const i=new _V(r.shape,a);return n.runWebGLProgram(i,[r],r.dtype)}const TV={kernelName:Ou,backendName:"webgl",kernelFunc:IV},NV={kernelName:Du,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{k:a,sorted:i}=s,o=n.readSync(r.dataId),[l,u]=jO(o,r.shape,r.dtype,a,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};class CV{constructor(t,e,n,s,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(s){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${r});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${r});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${e}));\n                float mapY = mapCoord(inY, float(${t}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const SV={kernelName:Fu,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{image:r,transforms:a}=e,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=s,[c,h,p,d]=r.shape,[f,m]=null!=u?u:[h,p],g=new CV(h,p,i,o,l,[c,f,m,d]);return n.runWebGLProgram(g,[r,a],"float32")}},AV={kernelName:Lu,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:s}=t,{axis:r}=n,{x:a}=e;VR(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=qO(i,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}},$V={kernelName:zu,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{value:r}=e;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r,o=i.shape.length,l=r.shape[a],u=new Array(o-1);let c=0;for(let t=0;t<o;t++)t!==a&&(u[c++]=i.shape[t]);const h=[],p=new Array(o).fill(0),d=i.shape.slice();d[a]=1;const f=new Array(l);for(let t=0;t<f.length;t++){p[a]=t;const e=YF({inputs:{x:i},backend:n,attrs:{begin:p,size:d}}),s=UD({inputs:{x:e},backend:n,attrs:{shape:u}});f[t]=s,h.push(e)}return h.forEach((t=>n.disposeIntermediateTensorInfo(t))),f}};class EV{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,s=t.batchSize,r=t.inSize,a=t.numSegments,i=a*Math.ceil(r/n);this.outputShape=[s,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";r%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let h="";r%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const RV=[vz,kz,sF,aF,oF,uF,pF,mF,gF,yF,_F,IF,NF,SF,RF,$F,DF,zF,LF,BF,WF,UF,HF,JF,QF,rM,oM,cM,dM,ND,kM,OM,DM,SM,MM,LM,FM,PM,BM,UM,qM,XM,YM,nL,sL,QM,aL,oL,uL,cL,pL,fL,yL,xL,kL,TL,SL,$L,OL,FL,zL,VL,BL,UL,jL,qL,KL,ID,YL,bM,JL,tz,nz,AD,rz,iz,oz,hz,uz,dz,mz,yz,Iz,Sz,Cz,Ez,Rz,Oz,Nz,Dz,Fz,Lz,Vz,Wz,Zz,WD,Qz,eP,sP,aP,eM,oP,cP,hP,mP,yP,RD,bP,vP,sM,jz,kP,NP,IP,GD,AP,EP,OP,FP,zP,VP,WP,GP,HP,XP,YP,JP,tV,nV,rV,ZF,Yz,iV,oV,lV,uV,hV,pV,mV,gV,bV,Xz,JD,vV,kV,TV,NV,SV,tF,AV,$V,{kernelName:Pu,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,segmentIds:a}=e,{numSegments:i}=s,o=r.shape.length,l=[];let u=0;const c=Vd([u],o);let h=r;null!=c&&(h=QD({inputs:{x:r},backend:n,attrs:{perm:c}}),l.push(h),u=Wd(1,o)[0]);const p=Tg(h.shape,u,i),d=yi([h.shape[u]]),f=UD({inputs:{x:h},backend:n,attrs:{shape:[-1,d]}});l.push(f);const m=Ec(r.dtype),g=(t,e,s,r,a)=>{const i=t.shape[0],o=t.shape[1],u=Ig(o,a),c=new EV({windowSize:u,inSize:o,batchSize:i,numSegments:a},e),h=n.compileAndRun(c,[t,s],r);if(l.push(h),h.shape[1]===a)return h;const p=xP({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),d=IV({inputs:{x:p},backend:n,attrs:{reps:[o/u]}});return l.push(p),l.push(d),g(h,e,d,r,a)},y=UD({inputs:{x:g(f,"unsortedSegmentSum",a,m,i)},backend:n,attrs:{shape:p}});let b=y;if(null!=c){l.push(y);const t=Bd(c);b=QD({inputs:{x:b},backend:n,attrs:{perm:t}})}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),b}},uP];for(const t of RV)Ju(t);const OV={flipHorizontal:!1,outputStride:16,imageScaleFactor:1,maxNumBoxes:20,iouThreshold:.2,scoreThreshold:.6,modelType:"ssd320fpnlite",modelSize:"small",bboxLineWidth:"2",fontSize:17,basePath:"https://cdn.jsdelivr.net/npm/handtrackjs@latest/models/webmodel/",labelMap:{1:"open",2:"closed",3:"pinch",4:"point",5:"face",6:"pointtip",7:"pinchtip"},renderThresholds:null},DV={large:"base",medium:"fp16",small:"int8"},FV={open:"#374151",closed:"#B91C1C",pinch:"#F59E0B",point:"#10B981",face:"#3B82F6",pointtip:"#6366F1",pinchtip:"#EC4899"},MV={ssd320fpnlite:["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],ssd640fpnlite:["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],centernet512fpn:["Identity_4:0","Identity:0","Identity_2:0"]};class LV{constructor(t){this.modelPath=t.basePath+t.modelType+"/"+(DV[t.modelSize]||"base")+"/model.json ",this.modelParams=t}async load(){this.fps=0,this.model=await async function(t,e={}){if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==e&&(e={}),e.fromTFHub&&null==t.load&&(t.endsWith("/")||(t+="/"),t=`${t}model.json?tfjs-format=file`);const n=new KT(t,e);return await n.load(),n}(this.modelPath);const t=Xd([1,300,300,3],"int32"),e=await this.model.executeAsync(t,MV[this.modelParams.modelType]);e.map((async t=>await t.data())),e.map((async t=>t.dispose())),mp(t)}async detect(t){let e=Date.now();const[n,s]=function(t){return t instanceof wc?[t.shape[0],t.shape[1]]:[t.height,t.width]}(t),r=zV(this.modelParams.imageScaleFactor,n,this.modelParams.outputStride),a=zV(this.modelParams.imageScaleFactor,s,this.modelParams.outputStride),i=fp((()=>{const e=Hh(t);return this.modelParams.flipHorizontal?e.reverse(1).resizeBilinear([r,a]).expandDims(0).toInt():e.resizeBilinear([r,a]).expandDims(0).toInt()})),o=this;return this.model.executeAsync(i,MV[this.modelParams.modelType]).then((function(t){i.dispose();let r=[];if("centernet512fpn"===o.modelParams.modelType){const e=t[0].dataSync(),a=t[1].arraySync(),i=t[2].dataSync();mp(t),r=o.buildDetectObjectsCenternet(s,n,a[0],e,i),console.log(r)}else{const e=t[0].dataSync(),a=t[1].dataSync();mp(t);const[i,l]=function(t,e,n){const s=[],r=[];for(let a=0;a<e;a++){let e=Number.MIN_VALUE,i=-1;for(let s=0;s<n;s++)t[a*n+s]>e&&(e=t[a*n+s],i=s);s[a]=e,r[a]=i}return[s,r]}(e,t[0].shape[1],t[0].shape[2]),u=Vc.backendName;yp("cpu");const c=fp((()=>{const e=_f(a,[t[1].shape[1],t[1].shape[3]]);return Rm.nonMaxSuppression(e,i,o.modelParams.maxNumBoxes,o.modelParams.iouThreshold,o.modelParams.scoreThreshold)})),h=c.dataSync();c.dispose(),yp(u),r=o.buildDetectedObjects(s,n,a,i,h,l)}let a=Date.now();return o.fps=Math.round(1e3/(a-e)),r}))}buildDetectedObjects(t,e,n,s,r,a){const i=r.length,o=[];for(let l=0;l<i;l++){const i=[];for(let t=0;t<4;t++)i[t]=n[4*r[l]+t];const u=i[0]*e,c=i[1]*t,h=i[2]*e,p=i[3]*t;i[0]=c,i[1]=u,i[2]=p-c,i[3]=h-u;const d=Math.round(a[r[l]])+1;o.push({bbox:i,class:d,label:this.modelParams.labelMap[d],score:s[r[l]].toFixed(2)})}return o}buildDetectObjectsCenternet(t,e,n,s,r){const a=[];for(let i=0;i<s.length;i++){const o=n[i],l=o[0]*e,u=o[1]*t,c=o[2]*e,h=o[3]*t;o[0]=u,o[1]=l,o[2]=h-u,o[3]=c-l;const p=Math.round(r[i])+1;a.push({bbox:o,class:p,label:this.modelParams.labelMap[p],score:s[i].toFixed(2)})}return a.slice(0,10)}getFPS(){return this.fps}setModelParameters(t){this.modelParams=Object.assign({},this.modelParams,t)}getModelParameters(){return this.modelParams}roundRect(t,e,n,s,r,a,i,o){if(void 0===o&&(o=!0),void 0===a&&(a=5),"number"==typeof a)a={tl:a,tr:a,br:a,bl:a};else{var l={tl:0,tr:0,br:0,bl:0};for(var u in l)a[u]=a[u]||l[u]}t.beginPath(),t.moveTo(e+a.tl,n),t.lineTo(e+s-a.tr,n),t.quadraticCurveTo(e+s,n,e+s,n+a.tr),t.lineTo(e+s,n+r-a.br),t.quadraticCurveTo(e+s,n+r,e+s-a.br,n+r),t.lineTo(e+a.bl,n+r),t.quadraticCurveTo(e,n+r,e,n+r-a.bl),t.lineTo(e,n+a.tl),t.quadraticCurveTo(e,n,e+a.tl,n),t.closePath(),i&&t.fill(),o&&t.stroke()}renderPredictions(t,e,n,s){n.clearRect(0,0,e.width,e.height),e.width=s.width,e.height=s.height,e.style.height=parseInt(e.style.width)*(s.height/s.width).toFixed(2)+"px",n.save(),this.modelParams.flipHorizontal&&(n.scale(-1,1),n.translate(-s.width,0)),n.drawImage(s,0,0,s.width,s.height),n.restore(),n.font="bold "+this.modelParams.fontSize+"px Arial";const r=this.modelParams.renderThresholds;for(let e=0;e<t.length;e++){const s=t[e];(!r||s.score>r[s.label])&&(n.beginPath(),n.fillStyle="rgba(255, 255, 255, 0.6)",n.fillRect(s.bbox[0]+1,s.bbox[1]+1,s.bbox[2]-1,1.5*this.modelParams.fontSize),n.lineWidth=this.modelParams.bboxLineWidth,this.roundRect(n,s.bbox[0],s.bbox[1],s.bbox[2],s.bbox[3],5,!1,!0),n.strokeStyle=FV[s.label],n.fillStyle=FV[s.label],n.stroke(),n.beginPath(),n.arc(s.bbox[0]+s.bbox[2]/2,s.bbox[1]+s.bbox[3]/2,2,0,2*Math.PI),n.fill(),n.stroke(),n.fillText(s.score+" | "+s.label,s.bbox[0]+5,s.bbox[1]+1.1*this.modelParams.fontSize))}n.fillStyle="rgba(255, 255, 255, 0.6)",this.roundRect(n,10,10,4.6*this.modelParams.fontSize,this.modelParams.fontSize+8,5,!0,!1),n.strokeStyle="#374151",n.fillStyle="#374151",n.font="bold "+this.modelParams.fontSize+"px Arial",n.fillText("FPS: "+this.fps,18,this.modelParams.fontSize+12)}dispose(){this.model&&this.model.dispose()}}function zV(t,e,n){const s=e*t-1;return s-s%n+1}var PV=n(3379),VV=n.n(PV),BV=n(7795),WV=n.n(BV),UV=n(569),GV=n.n(UV),jV=n(3565),HV=n.n(jV),qV=n(9216),XV=n.n(qV),KV=n(4589),YV=n.n(KV),ZV=n(8772),JV={};JV.styleTagTransform=YV(),JV.setAttributes=HV(),JV.insert=GV().bind(null,"head"),JV.domAPI=WV(),JV.insertStyleElement=XV(),VV()(ZV.Z,JV),ZV.Z&&ZV.Z.locals&&ZV.Z.locals;var QV=n(3121),tB={};tB.styleTagTransform=YV(),tB.setAttributes=HV(),tB.insert=GV().bind(null,"head"),tB.domAPI=WV(),tB.insertStyleElement=XV(),VV()(QV.Z,tB),QV.Z&&QV.Z.locals&&QV.Z.locals;const eB=(new Ya).toDestination(),nB=document.getElementById("myvideo"),sB=document.getElementById("canvas"),rB=sB.getContext("2d");let aB=document.getElementById("trackbutton"),iB=document.getElementById("updatenote"),oB=!1,lB=null,uB="";function cB(){oB?(iB.innerText="",async function(){if(!window.localStream)return!1;window.localStream.getTracks().forEach((t=>(t.stop(),!0)))}(),oB=!1,iB.innerText=""):(iB.innerText="",function(t){return new Promise((function(e,n){t||e({status:!1,msg:"please provide a valid video element"}),t.width=t.width||640,t.height=t.width*(t.videoHeight/t.videoWidth),t.style.height="20px",navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"user"}}).then((n=>{window.localStream=n,t.srcObject=n,t.onloadedmetadata=()=>{t.height=t.width*(t.videoHeight/t.videoWidth),t.style.height=parseInt(t.style.width)*(t.videoHeight/t.videoWidth).toFixed(2)+"px",t.play(),e({status:!0,msg:"webcam successfully initiated."})}})).catch((function(t){e({status:!1,msg:t})}))}))}(nB).then((function(t){t?(iB.innerText="You may now move your open hand to play. And close it to stop playing.",oB=!0,hB()):iB.innerText="Please enable video"})))}function hB(){lB.detect(nB).then((t=>{let e=0;var n;t[0]&&(e=function(t){const e=t.bbox[2],n=t.bbox[3];return Math.sqrt(e*e+n*n)}(t[0])),e&&"open"===t[0].label&&(document.getElementById("current-note").innerHTML="&#9833 "+((n=e.toFixed(0))>=200&&n<215&&"C"!==uB?(uB="C",eB.triggerAttackRelease("C4","8n"),"C"):n>=215&&n<230&&"B"!==uB?(uB="B",eB.triggerAttackRelease("B3","8n"),"B"):n>=230&&n<245&&"Bb"!==uB?(uB="Bb",eB.triggerAttackRelease("Bb3","8n"),"Bb"):n>=245&&n<260&&"A"!==uB?(uB="A",eB.triggerAttackRelease("A3","8n"),"A"):n>=260&&n<275&&"Ab"!==uB?(uB="Ab",eB.triggerAttackRelease("Ab3","8n"),"Ab"):n>=275&&n<300&&"G"!==uB?(uB="G",eB.triggerAttackRelease("G3","8n"),"G"):n>=300&&n<315&&"Gb"!==uB?(uB="Gb",eB.triggerAttackRelease("Gb3","8n"),"Gb"):n>=315&&n<330&&"F"!==uB?(uB="F",eB.triggerAttackRelease("F3","8n"),"F"):n>=330&&n<345&&"E"!==uB?(uB="E",eB.triggerAttackRelease("E3","8n"),"E"):n>=345&&n<360&&"Eb"!==uB?(uB="Eb",eB.triggerAttackRelease("Eb3","8n"),"Eb"):n>=360&&n<375&&"D"!==uB?(uB="D",eB.triggerAttackRelease("D3","8n"),"D"):n>=375&&n<400&&"Db"!==uB?(uB="Db",eB.triggerAttackRelease("Db3","8n"),"Db"):n>=400&&n<415&&"C"!==uB?(uB="C",eB.triggerAttackRelease("C3","8n"),"C"):"-")+" &#9833"),lB.renderPredictions(t,sB,rB,nB),oB&&requestAnimationFrame(hB)}))}eB.legato=!0,async function(t){let e=Object.assign({},OV,{flipHorizontal:!0,maxNumBoxes:20,iouThreshold:.5,scoreThreshold:.6});const n=new LV(e);return await n.load(),n}().then((t=>{lB=t,iB.innerText="",aB.disabled=!1})),window.addEventListener("load",(()=>{document.getElementById("trackbutton").addEventListener("click",(()=>{cB()}))}))})()})();